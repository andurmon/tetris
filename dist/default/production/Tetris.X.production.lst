

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat May 02 13:17:25 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.10
    41                           ; Generated 31/07/2019 GMT
    42                           ; 
    43                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F877A Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  000E                     	;# 
    90  000F                     	;# 
    91  0010                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0015                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  001D                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  0081                     	;# 
   110  0085                     	;# 
   111  0086                     	;# 
   112  0087                     	;# 
   113  0088                     	;# 
   114  0089                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0094                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009C                     	;# 
   185  009D                     	;# 
   186  009E                     	;# 
   187  009F                     	;# 
   188  010C                     	;# 
   189  010D                     	;# 
   190  010E                     	;# 
   191  010F                     	;# 
   192  018C                     	;# 
   193  018D                     	;# 
   194  0000                     	;# 
   195  0001                     	;# 
   196  0002                     	;# 
   197  0003                     	;# 
   198  0004                     	;# 
   199  0005                     	;# 
   200  0006                     	;# 
   201  0007                     	;# 
   202  0008                     	;# 
   203  0009                     	;# 
   204  000A                     	;# 
   205  000B                     	;# 
   206  000C                     	;# 
   207  000D                     	;# 
   208  000E                     	;# 
   209  000E                     	;# 
   210  000F                     	;# 
   211  0010                     	;# 
   212  0011                     	;# 
   213  0012                     	;# 
   214  0013                     	;# 
   215  0014                     	;# 
   216  0015                     	;# 
   217  0015                     	;# 
   218  0016                     	;# 
   219  0017                     	;# 
   220  0018                     	;# 
   221  0019                     	;# 
   222  001A                     	;# 
   223  001B                     	;# 
   224  001B                     	;# 
   225  001C                     	;# 
   226  001D                     	;# 
   227  001E                     	;# 
   228  001F                     	;# 
   229  0081                     	;# 
   230  0085                     	;# 
   231  0086                     	;# 
   232  0087                     	;# 
   233  0088                     	;# 
   234  0089                     	;# 
   235  008C                     	;# 
   236  008D                     	;# 
   237  008E                     	;# 
   238  0091                     	;# 
   239  0092                     	;# 
   240  0093                     	;# 
   241  0094                     	;# 
   242  0098                     	;# 
   243  0099                     	;# 
   244  009C                     	;# 
   245  009D                     	;# 
   246  009E                     	;# 
   247  009F                     	;# 
   248  010C                     	;# 
   249  010D                     	;# 
   250  010E                     	;# 
   251  010F                     	;# 
   252  018C                     	;# 
   253  018D                     	;# 
   254  0000                     	;# 
   255  0001                     	;# 
   256  0002                     	;# 
   257  0003                     	;# 
   258  0004                     	;# 
   259  0005                     	;# 
   260  0006                     	;# 
   261  0007                     	;# 
   262  0008                     	;# 
   263  0009                     	;# 
   264  000A                     	;# 
   265  000B                     	;# 
   266  000C                     	;# 
   267  000D                     	;# 
   268  000E                     	;# 
   269  000E                     	;# 
   270  000F                     	;# 
   271  0010                     	;# 
   272  0011                     	;# 
   273  0012                     	;# 
   274  0013                     	;# 
   275  0014                     	;# 
   276  0015                     	;# 
   277  0015                     	;# 
   278  0016                     	;# 
   279  0017                     	;# 
   280  0018                     	;# 
   281  0019                     	;# 
   282  001A                     	;# 
   283  001B                     	;# 
   284  001B                     	;# 
   285  001C                     	;# 
   286  001D                     	;# 
   287  001E                     	;# 
   288  001F                     	;# 
   289  0081                     	;# 
   290  0085                     	;# 
   291  0086                     	;# 
   292  0087                     	;# 
   293  0088                     	;# 
   294  0089                     	;# 
   295  008C                     	;# 
   296  008D                     	;# 
   297  008E                     	;# 
   298  0091                     	;# 
   299  0092                     	;# 
   300  0093                     	;# 
   301  0094                     	;# 
   302  0098                     	;# 
   303  0099                     	;# 
   304  009C                     	;# 
   305  009D                     	;# 
   306  009E                     	;# 
   307  009F                     	;# 
   308  010C                     	;# 
   309  010D                     	;# 
   310  010E                     	;# 
   311  010F                     	;# 
   312  018C                     	;# 
   313  018D                     	;# 
   314  0000                     	;# 
   315  0001                     	;# 
   316  0002                     	;# 
   317  0003                     	;# 
   318  0004                     	;# 
   319  0005                     	;# 
   320  0006                     	;# 
   321  0007                     	;# 
   322  0008                     	;# 
   323  0009                     	;# 
   324  000A                     	;# 
   325  000B                     	;# 
   326  000C                     	;# 
   327  000D                     	;# 
   328  000E                     	;# 
   329  000E                     	;# 
   330  000F                     	;# 
   331  0010                     	;# 
   332  0011                     	;# 
   333  0012                     	;# 
   334  0013                     	;# 
   335  0014                     	;# 
   336  0015                     	;# 
   337  0015                     	;# 
   338  0016                     	;# 
   339  0017                     	;# 
   340  0018                     	;# 
   341  0019                     	;# 
   342  001A                     	;# 
   343  001B                     	;# 
   344  001B                     	;# 
   345  001C                     	;# 
   346  001D                     	;# 
   347  001E                     	;# 
   348  001F                     	;# 
   349  0081                     	;# 
   350  0085                     	;# 
   351  0086                     	;# 
   352  0087                     	;# 
   353  0088                     	;# 
   354  0089                     	;# 
   355  008C                     	;# 
   356  008D                     	;# 
   357  008E                     	;# 
   358  0091                     	;# 
   359  0092                     	;# 
   360  0093                     	;# 
   361  0094                     	;# 
   362  0098                     	;# 
   363  0099                     	;# 
   364  009C                     	;# 
   365  009D                     	;# 
   366  009E                     	;# 
   367  009F                     	;# 
   368  010C                     	;# 
   369  010D                     	;# 
   370  010E                     	;# 
   371  010F                     	;# 
   372  018C                     	;# 
   373  018D                     	;# 
   374  0000                     	;# 
   375  0001                     	;# 
   376  0002                     	;# 
   377  0003                     	;# 
   378  0004                     	;# 
   379  0005                     	;# 
   380  0006                     	;# 
   381  0007                     	;# 
   382  0008                     	;# 
   383  0009                     	;# 
   384  000A                     	;# 
   385  000B                     	;# 
   386  000C                     	;# 
   387  000D                     	;# 
   388  000E                     	;# 
   389  000E                     	;# 
   390  000F                     	;# 
   391  0010                     	;# 
   392  0011                     	;# 
   393  0012                     	;# 
   394  0013                     	;# 
   395  0014                     	;# 
   396  0015                     	;# 
   397  0015                     	;# 
   398  0016                     	;# 
   399  0017                     	;# 
   400  0018                     	;# 
   401  0019                     	;# 
   402  001A                     	;# 
   403  001B                     	;# 
   404  001B                     	;# 
   405  001C                     	;# 
   406  001D                     	;# 
   407  001E                     	;# 
   408  001F                     	;# 
   409  0081                     	;# 
   410  0085                     	;# 
   411  0086                     	;# 
   412  0087                     	;# 
   413  0088                     	;# 
   414  0089                     	;# 
   415  008C                     	;# 
   416  008D                     	;# 
   417  008E                     	;# 
   418  0091                     	;# 
   419  0092                     	;# 
   420  0093                     	;# 
   421  0094                     	;# 
   422  0098                     	;# 
   423  0099                     	;# 
   424  009C                     	;# 
   425  009D                     	;# 
   426  009E                     	;# 
   427  009F                     	;# 
   428  010C                     	;# 
   429  010D                     	;# 
   430  010E                     	;# 
   431  010F                     	;# 
   432  018C                     	;# 
   433  018D                     	;# 
   434  0000                     	;# 
   435  0001                     	;# 
   436  0002                     	;# 
   437  0003                     	;# 
   438  0004                     	;# 
   439  0005                     	;# 
   440  0006                     	;# 
   441  0007                     	;# 
   442  0008                     	;# 
   443  0009                     	;# 
   444  000A                     	;# 
   445  000B                     	;# 
   446  000C                     	;# 
   447  000D                     	;# 
   448  000E                     	;# 
   449  000E                     	;# 
   450  000F                     	;# 
   451  0010                     	;# 
   452  0011                     	;# 
   453  0012                     	;# 
   454  0013                     	;# 
   455  0014                     	;# 
   456  0015                     	;# 
   457  0015                     	;# 
   458  0016                     	;# 
   459  0017                     	;# 
   460  0018                     	;# 
   461  0019                     	;# 
   462  001A                     	;# 
   463  001B                     	;# 
   464  001B                     	;# 
   465  001C                     	;# 
   466  001D                     	;# 
   467  001E                     	;# 
   468  001F                     	;# 
   469  0081                     	;# 
   470  0085                     	;# 
   471  0086                     	;# 
   472  0087                     	;# 
   473  0088                     	;# 
   474  0089                     	;# 
   475  008C                     	;# 
   476  008D                     	;# 
   477  008E                     	;# 
   478  0091                     	;# 
   479  0092                     	;# 
   480  0093                     	;# 
   481  0094                     	;# 
   482  0098                     	;# 
   483  0099                     	;# 
   484  009C                     	;# 
   485  009D                     	;# 
   486  009E                     	;# 
   487  009F                     	;# 
   488  010C                     	;# 
   489  010D                     	;# 
   490  010E                     	;# 
   491  010F                     	;# 
   492  018C                     	;# 
   493  018D                     	;# 
   494                           
   495                           	psect	idataBANK0
   496  0471                     __pidataBANK0:	
   497                           
   498                           ;initializer for _randx
   499  0471  3401               	retlw	1
   500  0472  3400               	retlw	0
   501  0473  3400               	retlw	0
   502  0474  3400               	retlw	0
   503                           
   504                           	psect	idataBANK1
   505  035F                     __pidataBANK1:	
   506                           
   507                           ;initializer for _figuras
   508  035F  3402               	retlw	2
   509  0360  3400               	retlw	0
   510  0361  3402               	retlw	2
   511  0362  3400               	retlw	0
   512  0363  3403               	retlw	3
   513  0364  3400               	retlw	0
   514  0365  3400               	retlw	0
   515  0366  3400               	retlw	0
   516  0367  3400               	retlw	0
   517  0368  3400               	retlw	0
   518  0369  3403               	retlw	3
   519  036A  3400               	retlw	0
   520  036B  3402               	retlw	2
   521  036C  3400               	retlw	0
   522  036D  3402               	retlw	2
   523  036E  3400               	retlw	0
   524  036F  3401               	retlw	1
   525  0370  3400               	retlw	0
   526  0371  3403               	retlw	3
   527  0372  3400               	retlw	0
   528  0373  3402               	retlw	2
   529  0374  3400               	retlw	0
   530  0375  3400               	retlw	0
   531  0376  3400               	retlw	0
   532  0377  3400               	retlw	0
   533  0378  3400               	retlw	0
   534  0379  3402               	retlw	2
   535  037A  3400               	retlw	0
   536  037B  3403               	retlw	3
   537  037C  3400               	retlw	0
   538  037D  3401               	retlw	1
   539  037E  3400               	retlw	0
   540  037F  3401               	retlw	1
   541  0380  3400               	retlw	0
   542  0381  3401               	retlw	1
   543  0382  3400               	retlw	0
   544  0383  3401               	retlw	1
   545  0384  3400               	retlw	0
   546  0385  3401               	retlw	1
   547  0386  3400               	retlw	0
   548  0387  3400               	retlw	0
   549  0388  3400               	retlw	0
   550  0389  3403               	retlw	3
   551  038A  3400               	retlw	0
   552  038B  3403               	retlw	3
   553  038C  3400               	retlw	0
   554  038D  3400               	retlw	0
   555  038E  3400               	retlw	0
   556  0001                     _TMR0	set	1
   557  000B                     _INTCONbits	set	11
   558  0008                     _PORTDbits	set	8
   559  0007                     _PORTCbits	set	7
   560  0006                     _PORTBbits	set	6
   561  0081                     _OPTION_REGbits	set	129
   562  0088                     _TRISDbits	set	136
   563  0087                     _TRISCbits	set	135
   564  0086                     _TRISBbits	set	134
   565                           
   566                           ; #config settings
   567  0000                     
   568                           	psect	cinit
   569  0011                     start_initialization:	
   570  0011                     __initialization:	
   571                           
   572                           ; Initialize objects allocated to BANK1
   573  0011  1383               	bcf	3,7	;select IRP bank0
   574  0012  30D0               	movlw	low (__pdataBANK1+48)
   575  0013  00FD               	movwf	btemp+-1
   576  0014  3003               	movlw	high __pidataBANK1
   577  0015  00FE               	movwf	btemp
   578  0016  305F               	movlw	low __pidataBANK1
   579  0017  00FF               	movwf	btemp+1
   580  0018  30A0               	movlw	low __pdataBANK1
   581  0019  0084               	movwf	4
   582  001A  120A  118A  23F2  120A  118A  	fcall	init_ram0
   583                           
   584                           ; Initialize objects allocated to BANK0
   585  001F  305F               	movlw	low (__pdataBANK0+4)
   586  0020  00FD               	movwf	btemp+-1
   587  0021  3004               	movlw	high __pidataBANK0
   588  0022  00FE               	movwf	btemp
   589  0023  3071               	movlw	low __pidataBANK0
   590  0024  00FF               	movwf	btemp+1
   591  0025  305B               	movlw	low __pdataBANK0
   592  0026  0084               	movwf	4
   593  0027  120A  118A  23F2  120A  118A  	fcall	init_ram0
   594                           
   595                           ; Clear objects allocated to BANK1
   596  002C  30D0               	movlw	low __pbssBANK1
   597  002D  0084               	movwf	4
   598  002E  30F0               	movlw	low (__pbssBANK1+32)
   599  002F  120A  118A  244A  120A  118A  	fcall	clear_ram0
   600                           
   601                           ; Clear objects allocated to BANK0
   602  0034  3041               	movlw	low __pbssBANK0
   603  0035  0084               	movwf	4
   604  0036  305B               	movlw	low (__pbssBANK0+26)
   605  0037  120A  118A  244A  120A  118A  	fcall	clear_ram0
   606  003C                     end_of_initialization:	
   607                           ;End of C runtime variable initialization code
   608                           
   609  003C                     __end_of__initialization:	
   610  003C  0183               	clrf	3
   611  003D  120A  118A  2905   	ljmp	_main	;jump to C main() function
   612                           
   613                           	psect	bssBANK0
   614  0041                     __pbssBANK0:	
   615  0041                     _fondo:	
   616  0041                     	ds	16
   617  0051                     _con:	
   618  0051                     	ds	8
   619  0059                     _timerCount:	
   620  0059                     	ds	2
   621                           
   622                           	psect	dataBANK0
   623  005B                     __pdataBANK0:	
   624  005B                     _randx:	
   625  005B                     	ds	4
   626                           
   627                           	psect	bssBANK1
   628  00D0                     __pbssBANK1:	
   629  00D0                     _ficha:	
   630  00D0                     	ds	16
   631  00E0                     _pantalla:	
   632  00E0                     	ds	16
   633                           
   634                           	psect	dataBANK1
   635  00A0                     __pdataBANK1:	
   636  00A0                     _figuras:	
   637  00A0                     	ds	48
   638                           
   639                           	psect	inittext
   640  03EE                     init_fetch0:	
   641                           ;	Called with low address in FSR and high address in W
   642                           
   643  03EE  087E               	movf	btemp,w
   644  03EF  008A               	movwf	10
   645  03F0  087F               	movf	btemp+1,w
   646  03F1  0082               	movwf	2
   647  03F2                     init_ram0:	
   648                           ;Called with:
   649                           ;	high address of idata address in btemp 
   650                           ;	low address of idata address in btemp+1 
   651                           ;	low address of data in FSR
   652                           ;	high address + 1 of data in btemp-1
   653                           
   654  03F2  120A  118A  23EE  120A  118A  	fcall	init_fetch0
   655  03F7  0080               	movwf	0
   656  03F8  0A84               	incf	4,f
   657  03F9  0804               	movf	4,w
   658  03FA  067D               	xorwf	btemp+-1,w
   659  03FB  1903               	btfsc	3,2
   660  03FC  3400               	retlw	0
   661  03FD  0AFF               	incf	btemp+1,f
   662  03FE  1903               	btfsc	3,2
   663  03FF  0AFE               	incf	btemp,f
   664  0400  2BF2               	goto	init_ram0
   665                           
   666                           	psect	clrtext
   667  044A                     clear_ram0:	
   668                           ;	Called with FSR containing the base address, and
   669                           ;	W with the last address+1
   670                           
   671  044A  0064               	clrwdt	;clear the watchdog before getting into this loop
   672  044B                     clrloop0:	
   673  044B  0180               	clrf	0	;clear RAM location pointed to by FSR
   674  044C  0A84               	incf	4,f	;increment pointer
   675  044D  0604               	xorwf	4,w	;XOR with final address
   676  044E  1903               	btfsc	3,2	;have we reached the end yet?
   677  044F  3400               	retlw	0	;all done for this memory range, return
   678  0450  0604               	xorwf	4,w	;XOR again to restore value
   679  0451  2C4B               	goto	clrloop0	;do the next byte
   680                           
   681                           	psect	cstackBANK3
   682  0190                     __pcstackBANK3:	
   683  0190                     ?_main:	
   684  0190                     main@argc:	
   685                           ; 2 bytes @ 0x0
   686                           
   687                           
   688                           ; 2 bytes @ 0x0
   689  0190                     	ds	2
   690  0192                     main@argv:	
   691                           
   692                           ; 2 bytes @ 0x2
   693  0192                     	ds	2
   694  0194                     ??_main:	
   695                           
   696                           ; 1 bytes @ 0x4
   697  0194                     	ds	9
   698                           
   699                           	psect	cstackCOMMON
   700  0070                     __pcstackCOMMON:	
   701  0070                     ?_drawBground:	
   702  0070                     ?_drawFigure:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0070                     ?_updateScreen:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0070                     ?_init_pines_in:	
   709                           ; 1 bytes @ 0x0
   710                           
   711  0070                     ?_init_pines_fil:	
   712                           ; 1 bytes @ 0x0
   713                           
   714  0070                     ?_init_pines_col:	
   715                           ; 1 bytes @ 0x0
   716                           
   717  0070                     ?_init_pines:	
   718                           ; 1 bytes @ 0x0
   719                           
   720  0070                     ?_init_interrupt:	
   721                           ; 1 bytes @ 0x0
   722                           
   723  0070                     ?_init_timer:	
   724                           ; 1 bytes @ 0x0
   725                           
   726  0070                     ?_Timer0_ISR:	
   727                           ; 1 bytes @ 0x0
   728                           
   729  0070                     ?_latchClock_Fil:	
   730                           ; 1 bytes @ 0x0
   731                           
   732  0070                     ?_shiftClock_Fil:	
   733                           ; 1 bytes @ 0x0
   734                           
   735  0070                     ?_latchClock_Col:	
   736                           ; 1 bytes @ 0x0
   737                           
   738  0070                     ?_shiftClock_Col:	
   739                           ; 1 bytes @ 0x0
   740                           
   741  0070                     ?_shiftBitColumna:	
   742                           ; 1 bytes @ 0x0
   743                           
   744  0070                     ?___lmul:	
   745                           ; 1 bytes @ 0x0
   746                           
   747  0070                     ___lmul@multiplier:	
   748                           ; 4 bytes @ 0x0
   749                           
   750                           
   751                           ; 4 bytes @ 0x0
   752  0070                     	ds	4
   753  0074                     ___lmul@multiplicand:	
   754                           
   755                           ; 4 bytes @ 0x4
   756  0074                     	ds	4
   757  0078                     ??___lmul:	
   758                           
   759                           ; 1 bytes @ 0x8
   760  0078                     	ds	1
   761  0079                     ___lmul@product:	
   762                           
   763                           ; 4 bytes @ 0x9
   764  0079                     	ds	4
   765  007D                     ??___awmod:	
   766                           
   767                           ; 1 bytes @ 0xD
   768  007D                     	ds	1
   769                           
   770                           	psect	cstackBANK0
   771  0020                     __pcstackBANK0:	
   772  0020                     ?_rand:	
   773                           
   774                           ; 2 bytes @ 0x0
   775  0020                     	ds	2
   776  0022                     ??_rand:	
   777                           
   778                           ; 1 bytes @ 0x2
   779  0022                     	ds	5
   780  0027                     ?___awmod:	
   781  0027                     ___awmod@divisor:	
   782                           ; 2 bytes @ 0x7
   783                           
   784                           
   785                           ; 2 bytes @ 0x7
   786  0027                     	ds	2
   787  0029                     ___awmod@dividend:	
   788                           
   789                           ; 2 bytes @ 0x9
   790  0029                     	ds	2
   791  002B                     ___awmod@counter:	
   792                           
   793                           ; 1 bytes @ 0xB
   794  002B                     	ds	1
   795  002C                     ___awmod@sign:	
   796                           
   797                           ; 1 bytes @ 0xC
   798  002C                     	ds	1
   799  002D                     ??_Timer0_ISR:	
   800                           
   801                           ; 1 bytes @ 0xD
   802  002D                     	ds	3
   803  0030                     ??_drawBground:	
   804  0030                     ?_memset:	
   805                           ; 1 bytes @ 0x10
   806                           
   807  0030                     ??_init_pines_in:	
   808                           ; 1 bytes @ 0x10
   809                           
   810  0030                     ??_init_pines_fil:	
   811                           ; 1 bytes @ 0x10
   812                           
   813  0030                     ??_init_pines_col:	
   814                           ; 1 bytes @ 0x10
   815                           
   816  0030                     ??_init_pines:	
   817                           ; 1 bytes @ 0x10
   818                           
   819  0030                     ??_init_interrupt:	
   820                           ; 1 bytes @ 0x10
   821                           
   822  0030                     ??_init_timer:	
   823                           ; 1 bytes @ 0x10
   824                           
   825  0030                     ??_latchClock_Fil:	
   826                           ; 1 bytes @ 0x10
   827                           
   828  0030                     ??_shiftClock_Fil:	
   829                           ; 1 bytes @ 0x10
   830                           
   831  0030                     ?_setFilas:	
   832                           ; 1 bytes @ 0x10
   833                           
   834  0030                     ??_latchClock_Col:	
   835                           ; 1 bytes @ 0x10
   836                           
   837  0030                     ??_shiftClock_Col:	
   838                           ; 1 bytes @ 0x10
   839                           
   840  0030                     ??_shiftBitColumna:	
   841                           ; 1 bytes @ 0x10
   842                           
   843  0030                     setFilas@reg_value:	
   844                           ; 1 bytes @ 0x10
   845                           
   846  0030                     memset@c:	
   847                           ; 2 bytes @ 0x10
   848                           
   849                           
   850                           ; 2 bytes @ 0x10
   851  0030                     	ds	1
   852  0031                     shiftBitColumna@bit:	
   853                           
   854                           ; 1 bytes @ 0x11
   855  0031                     	ds	1
   856  0032                     ??_setFilas:	
   857  0032                     memset@n:	
   858                           ; 1 bytes @ 0x12
   859                           
   860                           
   861                           ; 2 bytes @ 0x12
   862  0032                     	ds	2
   863  0034                     ??_memset:	
   864                           
   865                           ; 1 bytes @ 0x14
   866  0034                     	ds	1
   867  0035                     memset@p1:	
   868                           
   869                           ; 1 bytes @ 0x15
   870  0035                     	ds	1
   871  0036                     memset@p:	
   872                           
   873                           ; 1 bytes @ 0x16
   874  0036                     	ds	1
   875  0037                     ??_drawFigure:	
   876                           
   877                           ; 1 bytes @ 0x17
   878  0037                     	ds	1
   879  0038                     setFilas@i:	
   880                           
   881                           ; 2 bytes @ 0x18
   882  0038                     	ds	2
   883  003A                     ??_updateScreen:	
   884                           
   885                           ; 1 bytes @ 0x1A
   886  003A                     	ds	4
   887  003E                     updateScreen@screen:	
   888                           
   889                           ; 1 bytes @ 0x1E
   890  003E                     	ds	1
   891  003F                     main@i:	
   892                           
   893                           ; 2 bytes @ 0x1F
   894  003F                     	ds	2
   895                           
   896                           	psect	maintext
   897  0105                     __pmaintext:	
   898 ;;
   899 ;;Main: autosize = 0, tempsize = 9, incstack = 0, save=0
   900 ;;
   901 ;; *************** function _main *****************
   902 ;; Defined at:
   903 ;;		line 69 in file "mainsource.c"
   904 ;; Parameters:    Size  Location     Type
   905 ;;  argc            2    0[BANK3 ] int 
   906 ;;  argv            2    2[BANK3 ] PTR PTR unsigned char 
   907 ;; Auto vars:     Size  Location     Type
   908 ;;  i               2   31[BANK0 ] int 
   909 ;; Return value:  Size  Location     Type
   910 ;;                  2    0[BANK3 ] int 
   911 ;; Registers used:
   912 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   913 ;; Tracked objects:
   914 ;;		On entry : B00/0
   915 ;;		On exit  : 0/0
   916 ;;		Unchanged: 0/0
   917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   918 ;;      Params:         0       0       0       4       0
   919 ;;      Locals:         0       2       0       0       0
   920 ;;      Temps:          0       0       0       9       0
   921 ;;      Totals:         0       2       0      13       0
   922 ;;Total ram usage:       15 bytes
   923 ;; Hardware stack levels required when called:    6
   924 ;; This function calls:
   925 ;;		_drawBground
   926 ;;		_drawFigure
   927 ;;		_init_interrupt
   928 ;;		_init_pines
   929 ;;		_init_timer
   930 ;;		_updateScreen
   931 ;; This function is called by:
   932 ;;		Startup code after reset
   933 ;; This function uses a non-reentrant model
   934 ;;
   935                           
   936                           
   937                           ;psect for function _main
   938  0105                     _main:	
   939  0105                     l1273:	
   940                           ;incstack = 0
   941                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   942                           
   943                           
   944                           ;mainsource.c: 74:     init_pines();
   945  0105  120A  118A  2414  120A  118A  	fcall	_init_pines
   946                           
   947                           ;mainsource.c: 75:     init_interrupt();
   948  010A  120A  118A  2452  120A  118A  	fcall	_init_interrupt
   949                           
   950                           ;mainsource.c: 76:     init_timer();
   951  010F  120A  118A  2424  120A  118A  	fcall	_init_timer
   952  0114                     l1275:	
   953  0114                     l1277:	
   954                           
   955                           ;mainsource.c: 78:     con.columna = 1;
   956  0114  1283               	bcf	3,5	;RP0=0, select bank0
   957  0115  1303               	bcf	3,6	;RP1=0, select bank0
   958  0116  01D1               	clrf	_con
   959  0117  0AD1               	incf	_con,f
   960  0118                     l1279:	
   961                           
   962                           ;mainsource.c: 79:     con.ficha_Vpos = 16;
   963  0118  3010               	movlw	16
   964  0119  1683               	bsf	3,5	;RP0=1, select bank3
   965  011A  1703               	bsf	3,6	;RP1=1, select bank3
   966  011B  0094               	movwf	??_main^(0+384)
   967  011C  0814               	movf	??_main^(0+384),w
   968  011D  1283               	bcf	3,5	;RP0=0, select bank0
   969  011E  1303               	bcf	3,6	;RP1=0, select bank0
   970  011F  00D4               	movwf	_con+3
   971  0120                     l1281:	
   972                           
   973                           ;mainsource.c: 80:     con.ficha_Hpos = 2;
   974  0120  3002               	movlw	2
   975  0121  1683               	bsf	3,5	;RP0=1, select bank3
   976  0122  1703               	bsf	3,6	;RP1=1, select bank3
   977  0123  0094               	movwf	??_main^(0+384)
   978  0124  0814               	movf	??_main^(0+384),w
   979  0125  1283               	bcf	3,5	;RP0=0, select bank0
   980  0126  1303               	bcf	3,6	;RP1=0, select bank0
   981  0127  00D5               	movwf	_con+4
   982  0128                     l1283:	
   983                           
   984                           ;mainsource.c: 82:     drawBground();
   985  0128  120A  118A  23B1  120A  118A  	fcall	_drawBground
   986  012D                     l1285:	
   987                           
   988                           ;mainsource.c: 85:         drawFigure();
   989  012D  120A  118A  2040  120A  118A  	fcall	_drawFigure
   990  0132                     l1287:	
   991                           
   992                           ;mainsource.c: 86:         for(i=0; i<8; i++){
   993  0132  1283               	bcf	3,5	;RP0=0, select bank0
   994  0133  1303               	bcf	3,6	;RP1=0, select bank0
   995  0134  01BF               	clrf	main@i
   996  0135  01C0               	clrf	main@i+1
   997  0136                     l1293:	
   998                           
   999                           ;mainsource.c: 87:             pantalla[i] = ficha[i] | fondo[i];
  1000  0136  1283               	bcf	3,5	;RP0=0, select bank0
  1001  0137  1303               	bcf	3,6	;RP1=0, select bank0
  1002  0138  083F               	movf	main@i,w
  1003  0139  1683               	bsf	3,5	;RP0=1, select bank3
  1004  013A  1703               	bsf	3,6	;RP1=1, select bank3
  1005  013B  0094               	movwf	??_main^(0+384)
  1006  013C  0714               	addwf	??_main^(0+384),w
  1007  013D  3E41               	addlw	(low (_fondo| 0))& (0+255)
  1008  013E  0084               	movwf	4
  1009  013F  1383               	bcf	3,7	;select IRP bank0
  1010  0140  0800               	movf	0,w
  1011  0141  0095               	movwf	(??_main+1)^(0+384)
  1012  0142  0A84               	incf	4,f
  1013  0143  0800               	movf	0,w
  1014  0144  0096               	movwf	((??_main+1)^(0+384)+1)
  1015  0145  1283               	bcf	3,5	;RP0=0, select bank0
  1016  0146  1303               	bcf	3,6	;RP1=0, select bank0
  1017  0147  083F               	movf	main@i,w
  1018  0148  1683               	bsf	3,5	;RP0=1, select bank3
  1019  0149  1703               	bsf	3,6	;RP1=1, select bank3
  1020  014A  0097               	movwf	(??_main+3)^(0+384)
  1021  014B  0717               	addwf	(??_main+3)^(0+384),w
  1022  014C  3ED0               	addlw	(low (_ficha| 0))& (0+255)
  1023  014D  0084               	movwf	4
  1024  014E  0800               	movf	0,w
  1025  014F  0098               	movwf	(??_main+4)^(0+384)
  1026  0150  0A84               	incf	4,f
  1027  0151  0800               	movf	0,w
  1028  0152  0099               	movwf	((??_main+4)^(0+384)+1)
  1029  0153  0815               	movf	(??_main+1)^(0+384),w
  1030  0154  0418               	iorwf	(??_main+4)^(0+384),w
  1031  0155  009A               	movwf	(??_main+6)^(0+384)
  1032  0156  0816               	movf	(??_main+2)^(0+384),w
  1033  0157  0419               	iorwf	(??_main+5)^(0+384),w
  1034  0158  009B               	movwf	(??_main+7)^(0+384)
  1035  0159  1283               	bcf	3,5	;RP0=0, select bank0
  1036  015A  1303               	bcf	3,6	;RP1=0, select bank0
  1037  015B  083F               	movf	main@i,w
  1038  015C  1683               	bsf	3,5	;RP0=1, select bank3
  1039  015D  1703               	bsf	3,6	;RP1=1, select bank3
  1040  015E  009C               	movwf	(??_main+8)^(0+384)
  1041  015F  071C               	addwf	(??_main+8)^(0+384),w
  1042  0160  3EE0               	addlw	(low (_pantalla| 0))& (0+255)
  1043  0161  0084               	movwf	4
  1044  0162  081A               	movf	(??_main+6)^(0+384),w
  1045  0163  0080               	movwf	0
  1046  0164  0A84               	incf	4,f
  1047  0165  081B               	movf	(??_main+7)^(0+384),w
  1048  0166  0080               	movwf	0
  1049  0167                     l1295:	
  1050                           
  1051                           ;mainsource.c: 88:         }
  1052  0167  3001               	movlw	1
  1053  0168  1283               	bcf	3,5	;RP0=0, select bank0
  1054  0169  1303               	bcf	3,6	;RP1=0, select bank0
  1055  016A  07BF               	addwf	main@i,f
  1056  016B  1803               	skipnc
  1057  016C  0AC0               	incf	main@i+1,f
  1058  016D  3000               	movlw	0
  1059  016E  07C0               	addwf	main@i+1,f
  1060  016F                     l1297:	
  1061  016F  0840               	movf	main@i+1,w
  1062  0170  3A80               	xorlw	128
  1063  0171  00FF               	movwf	btemp+1
  1064  0172  3080               	movlw	128
  1065  0173  027F               	subwf	btemp+1,w
  1066  0174  1D03               	skipz
  1067  0175  2978               	goto	u855
  1068  0176  3008               	movlw	8
  1069  0177  023F               	subwf	main@i,w
  1070  0178                     u855:	
  1071  0178  1C03               	skipc
  1072  0179  297B               	goto	u851
  1073  017A  297C               	goto	u850
  1074  017B                     u851:	
  1075  017B  2936               	goto	l1293
  1076  017C                     u850:	
  1077  017C                     l1299:	
  1078                           
  1079                           ;mainsource.c: 90:         updateScreen(pantalla);
  1080  017C  30E0               	movlw	(low (_pantalla| 0))& (0+255)
  1081  017D  120A  118A  2240  120A  118A  	fcall	_updateScreen
  1082  0182  292D               	goto	l1285
  1083  0183  120A  118A  280E   	ljmp	start
  1084  0186                     __end_of_main:	
  1085                           
  1086                           	psect	text1
  1087  0240                     __ptext1:	
  1088 ;; *************** function _updateScreen *****************
  1089 ;; Defined at:
  1090 ;;		line 12 in file "screen.c"
  1091 ;; Parameters:    Size  Location     Type
  1092 ;;  screen          1    wreg     PTR unsigned int 
  1093 ;;		 -> pantalla(16), 
  1094 ;; Auto vars:     Size  Location     Type
  1095 ;;  screen          1   30[BANK0 ] PTR unsigned int 
  1096 ;;		 -> pantalla(16), 
  1097 ;; Return value:  Size  Location     Type
  1098 ;;                  1    wreg      void 
  1099 ;; Registers used:
  1100 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1101 ;; Tracked objects:
  1102 ;;		On entry : 0/0
  1103 ;;		On exit  : 0/0
  1104 ;;		Unchanged: 0/0
  1105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1106 ;;      Params:         0       0       0       0       0
  1107 ;;      Locals:         0       1       0       0       0
  1108 ;;      Temps:          0       4       0       0       0
  1109 ;;      Totals:         0       5       0       0       0
  1110 ;;Total ram usage:        5 bytes
  1111 ;; Hardware stack levels used:    1
  1112 ;; Hardware stack levels required when called:    5
  1113 ;; This function calls:
  1114 ;;		_setFilas
  1115 ;;		_shiftBitColumna
  1116 ;; This function is called by:
  1117 ;;		_main
  1118 ;; This function uses a non-reentrant model
  1119 ;;
  1120                           
  1121                           
  1122                           ;psect for function _updateScreen
  1123  0240                     _updateScreen:	
  1124                           
  1125                           ;incstack = 0
  1126                           ; Regs used in _updateScreen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1127                           ;updateScreen@screen stored from wreg
  1128  0240  1283               	bcf	3,5	;RP0=0, select bank0
  1129  0241  1303               	bcf	3,6	;RP1=0, select bank0
  1130  0242  00BE               	movwf	updateScreen@screen
  1131  0243                     l1125:	
  1132                           
  1133                           ;screen.c: 13:     if(con.columna == 9){
  1134  0243  3009               	movlw	9
  1135  0244  0651               	xorwf	_con,w
  1136  0245  1D03               	btfss	3,2
  1137  0246  2A48               	goto	u641
  1138  0247  2A49               	goto	u640
  1139  0248                     u641:	
  1140  0248  2A69               	goto	l1133
  1141  0249                     u640:	
  1142  0249                     l1127:	
  1143                           
  1144                           ;screen.c: 14:         con.columna = 1;
  1145  0249  01D1               	clrf	_con
  1146  024A  0AD1               	incf	_con,f
  1147  024B                     l1129:	
  1148                           
  1149                           ;screen.c: 15:         setFilas(~screen[con.columna-1]);
  1150  024B  0851               	movf	_con,w
  1151  024C  00BA               	movwf	??_updateScreen
  1152  024D  073A               	addwf	??_updateScreen,w
  1153  024E  073E               	addwf	updateScreen@screen,w
  1154  024F  00BB               	movwf	??_updateScreen+1
  1155  0250  083B               	movf	??_updateScreen+1,w
  1156  0251  3EFE               	addlw	-2
  1157  0252  0084               	movwf	4
  1158  0253  1383               	bcf	3,7	;select IRP bank0
  1159  0254  0800               	movf	0,w
  1160  0255  00BC               	movwf	??_updateScreen+2
  1161  0256  0A84               	incf	4,f
  1162  0257  0800               	movf	0,w
  1163  0258  00BD               	movwf	??_updateScreen+3
  1164  0259  093C               	comf	??_updateScreen+2,w
  1165  025A  00B0               	movwf	setFilas@reg_value
  1166  025B  093D               	comf	??_updateScreen+3,w
  1167  025C  00B1               	movwf	setFilas@reg_value+1
  1168  025D  120A  118A  228B  120A  118A  	fcall	_setFilas
  1169  0262                     l1131:	
  1170                           
  1171                           ;screen.c: 16:         shiftBitColumna(1);
  1172  0262  3001               	movlw	1
  1173  0263  120A  118A  23D2  120A  118A  	fcall	_shiftBitColumna
  1174                           
  1175                           ;screen.c: 17:     }
  1176  0268  2A8A               	goto	l142
  1177  0269                     l1133:	
  1178                           
  1179                           ;screen.c: 19:         con.columna++;
  1180  0269  3001               	movlw	1
  1181  026A  00BA               	movwf	??_updateScreen
  1182  026B  083A               	movf	??_updateScreen,w
  1183  026C  07D1               	addwf	_con,f
  1184  026D                     l1135:	
  1185                           
  1186                           ;screen.c: 20:         setFilas(~screen[con.columna-1]);
  1187  026D  0851               	movf	_con,w
  1188  026E  00BA               	movwf	??_updateScreen
  1189  026F  073A               	addwf	??_updateScreen,w
  1190  0270  073E               	addwf	updateScreen@screen,w
  1191  0271  00BB               	movwf	??_updateScreen+1
  1192  0272  083B               	movf	??_updateScreen+1,w
  1193  0273  3EFE               	addlw	-2
  1194  0274  0084               	movwf	4
  1195  0275  1383               	bcf	3,7	;select IRP bank0
  1196  0276  0800               	movf	0,w
  1197  0277  00BC               	movwf	??_updateScreen+2
  1198  0278  0A84               	incf	4,f
  1199  0279  0800               	movf	0,w
  1200  027A  00BD               	movwf	??_updateScreen+3
  1201  027B  093C               	comf	??_updateScreen+2,w
  1202  027C  00B0               	movwf	setFilas@reg_value
  1203  027D  093D               	comf	??_updateScreen+3,w
  1204  027E  00B1               	movwf	setFilas@reg_value+1
  1205  027F  120A  118A  228B  120A  118A  	fcall	_setFilas
  1206  0284                     l1137:	
  1207                           
  1208                           ;screen.c: 21:         shiftBitColumna(0);
  1209  0284  3000               	movlw	0
  1210  0285  120A  118A  23D2  120A  118A  	fcall	_shiftBitColumna
  1211  028A                     l142:	
  1212  028A  0008               	return
  1213  028B                     __end_of_updateScreen:	
  1214                           
  1215                           	psect	text2
  1216  03D2                     __ptext2:	
  1217 ;; *************** function _shiftBitColumna *****************
  1218 ;; Defined at:
  1219 ;;		line 32 in file "columnas.c"
  1220 ;; Parameters:    Size  Location     Type
  1221 ;;  bit             1    wreg     unsigned char 
  1222 ;; Auto vars:     Size  Location     Type
  1223 ;;  bit             1   17[BANK0 ] unsigned char 
  1224 ;; Return value:  Size  Location     Type
  1225 ;;                  1    wreg      void 
  1226 ;; Registers used:
  1227 ;;		wreg, status,2, status,0, pclath, cstack
  1228 ;; Tracked objects:
  1229 ;;		On entry : 0/0
  1230 ;;		On exit  : 0/0
  1231 ;;		Unchanged: 0/0
  1232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1233 ;;      Params:         0       0       0       0       0
  1234 ;;      Locals:         0       1       0       0       0
  1235 ;;      Temps:          0       1       0       0       0
  1236 ;;      Totals:         0       2       0       0       0
  1237 ;;Total ram usage:        2 bytes
  1238 ;; Hardware stack levels used:    1
  1239 ;; Hardware stack levels required when called:    4
  1240 ;; This function calls:
  1241 ;;		_latchClock_Col
  1242 ;;		_latchClock_Fil
  1243 ;;		_shiftClock_Col
  1244 ;; This function is called by:
  1245 ;;		_updateScreen
  1246 ;; This function uses a non-reentrant model
  1247 ;;
  1248                           
  1249                           
  1250                           ;psect for function _shiftBitColumna
  1251  03D2                     _shiftBitColumna:	
  1252                           
  1253                           ;incstack = 0
  1254                           ; Regs used in _shiftBitColumna: [wreg+status,2+status,0+pclath+cstack]
  1255                           ;shiftBitColumna@bit stored from wreg
  1256  03D2  1283               	bcf	3,5	;RP0=0, select bank0
  1257  03D3  1303               	bcf	3,6	;RP1=0, select bank0
  1258  03D4  00B1               	movwf	shiftBitColumna@bit
  1259  03D5                     l1043:	
  1260                           
  1261                           ;columnas.c: 33:     PORTDbits.RD4= bit & 0x01;
  1262  03D5  0831               	movf	shiftBitColumna@bit,w
  1263  03D6  3901               	andlw	1
  1264  03D7  00B0               	movwf	??_shiftBitColumna
  1265  03D8  0EB0               	swapf	??_shiftBitColumna,f
  1266  03D9  0808               	movf	8,w	;volatile
  1267  03DA  0630               	xorwf	??_shiftBitColumna,w
  1268  03DB  39EF               	andlw	-17
  1269  03DC  0630               	xorwf	??_shiftBitColumna,w
  1270  03DD  0088               	movwf	8	;volatile
  1271  03DE                     l1045:	
  1272                           
  1273                           ;columnas.c: 34:     shiftClock_Col();
  1274  03DE  120A  118A  245A  120A  118A  	fcall	_shiftClock_Col
  1275  03E3                     l1047:	
  1276                           
  1277                           ;columnas.c: 35:     latchClock_Col();
  1278  03E3  120A  118A  246C  120A  118A  	fcall	_latchClock_Col
  1279  03E8                     l1049:	
  1280                           
  1281                           ;columnas.c: 36:     latchClock_Fil();
  1282  03E8  120A  118A  2460  120A  118A  	fcall	_latchClock_Fil
  1283  03ED                     l119:	
  1284  03ED  0008               	return
  1285  03EE                     __end_of_shiftBitColumna:	
  1286                           
  1287                           	psect	text3
  1288  045A                     __ptext3:	
  1289 ;; *************** function _shiftClock_Col *****************
  1290 ;; Defined at:
  1291 ;;		line 12 in file "columnas.c"
  1292 ;; Parameters:    Size  Location     Type
  1293 ;;		None
  1294 ;; Auto vars:     Size  Location     Type
  1295 ;;		None
  1296 ;; Return value:  Size  Location     Type
  1297 ;;                  1    wreg      void 
  1298 ;; Registers used:
  1299 ;;		None
  1300 ;; Tracked objects:
  1301 ;;		On entry : 0/0
  1302 ;;		On exit  : 0/0
  1303 ;;		Unchanged: 0/0
  1304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1305 ;;      Params:         0       0       0       0       0
  1306 ;;      Locals:         0       0       0       0       0
  1307 ;;      Temps:          0       0       0       0       0
  1308 ;;      Totals:         0       0       0       0       0
  1309 ;;Total ram usage:        0 bytes
  1310 ;; Hardware stack levels used:    1
  1311 ;; Hardware stack levels required when called:    3
  1312 ;; This function calls:
  1313 ;;		Nothing
  1314 ;; This function is called by:
  1315 ;;		_shiftBitColumna
  1316 ;;		_setColumnas
  1317 ;; This function uses a non-reentrant model
  1318 ;;
  1319                           
  1320                           
  1321                           ;psect for function _shiftClock_Col
  1322  045A                     _shiftClock_Col:	
  1323  045A                     l1021:	
  1324                           ;incstack = 0
  1325                           ; Regs used in _shiftClock_Col: []
  1326                           
  1327                           
  1328                           ;columnas.c: 13:     PORTDbits.RD7 = 0;
  1329  045A  1283               	bcf	3,5	;RP0=0, select bank0
  1330  045B  1303               	bcf	3,6	;RP1=0, select bank0
  1331  045C  1388               	bcf	8,7	;volatile
  1332                           
  1333                           ;columnas.c: 14:     PORTDbits.RD7 = 1;
  1334  045D  1788               	bsf	8,7	;volatile
  1335                           
  1336                           ;columnas.c: 15:     PORTDbits.RD7 = 0;
  1337  045E  1388               	bcf	8,7	;volatile
  1338  045F                     l111:	
  1339  045F  0008               	return
  1340  0460                     __end_of_shiftClock_Col:	
  1341                           
  1342                           	psect	text4
  1343  0460                     __ptext4:	
  1344 ;; *************** function _latchClock_Fil *****************
  1345 ;; Defined at:
  1346 ;;		line 7 in file "filas.c"
  1347 ;; Parameters:    Size  Location     Type
  1348 ;;		None
  1349 ;; Auto vars:     Size  Location     Type
  1350 ;;		None
  1351 ;; Return value:  Size  Location     Type
  1352 ;;                  1    wreg      void 
  1353 ;; Registers used:
  1354 ;;		None
  1355 ;; Tracked objects:
  1356 ;;		On entry : 0/0
  1357 ;;		On exit  : 0/0
  1358 ;;		Unchanged: 0/0
  1359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1360 ;;      Params:         0       0       0       0       0
  1361 ;;      Locals:         0       0       0       0       0
  1362 ;;      Temps:          0       0       0       0       0
  1363 ;;      Totals:         0       0       0       0       0
  1364 ;;Total ram usage:        0 bytes
  1365 ;; Hardware stack levels used:    1
  1366 ;; Hardware stack levels required when called:    3
  1367 ;; This function calls:
  1368 ;;		Nothing
  1369 ;; This function is called by:
  1370 ;;		_shiftBitColumna
  1371 ;; This function uses a non-reentrant model
  1372 ;;
  1373                           
  1374                           
  1375                           ;psect for function _latchClock_Fil
  1376  0460                     _latchClock_Fil:	
  1377  0460                     l1015:	
  1378                           ;incstack = 0
  1379                           ; Regs used in _latchClock_Fil: []
  1380                           
  1381                           
  1382                           ;filas.c: 8:     PORTCbits.RC6 = 0;
  1383  0460  1283               	bcf	3,5	;RP0=0, select bank0
  1384  0461  1303               	bcf	3,6	;RP1=0, select bank0
  1385  0462  1307               	bcf	7,6	;volatile
  1386                           
  1387                           ;filas.c: 9:     PORTCbits.RC6 = 1;
  1388  0463  1707               	bsf	7,6	;volatile
  1389                           
  1390                           ;filas.c: 10:     PORTCbits.RC6 = 0;
  1391  0464  1307               	bcf	7,6	;volatile
  1392  0465                     l93:	
  1393  0465  0008               	return
  1394  0466                     __end_of_latchClock_Fil:	
  1395                           
  1396                           	psect	text5
  1397  046C                     __ptext5:	
  1398 ;; *************** function _latchClock_Col *****************
  1399 ;; Defined at:
  1400 ;;		line 7 in file "columnas.c"
  1401 ;; Parameters:    Size  Location     Type
  1402 ;;		None
  1403 ;; Auto vars:     Size  Location     Type
  1404 ;;		None
  1405 ;; Return value:  Size  Location     Type
  1406 ;;                  1    wreg      void 
  1407 ;; Registers used:
  1408 ;;		None
  1409 ;; Tracked objects:
  1410 ;;		On entry : 0/0
  1411 ;;		On exit  : 0/0
  1412 ;;		Unchanged: 0/0
  1413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1414 ;;      Params:         0       0       0       0       0
  1415 ;;      Locals:         0       0       0       0       0
  1416 ;;      Temps:          0       0       0       0       0
  1417 ;;      Totals:         0       0       0       0       0
  1418 ;;Total ram usage:        0 bytes
  1419 ;; Hardware stack levels used:    1
  1420 ;; Hardware stack levels required when called:    3
  1421 ;; This function calls:
  1422 ;;		Nothing
  1423 ;; This function is called by:
  1424 ;;		_shiftBitColumna
  1425 ;;		_setColumnas
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           
  1429                           
  1430                           ;psect for function _latchClock_Col
  1431  046C                     _latchClock_Col:	
  1432  046C                     l1019:	
  1433                           ;incstack = 0
  1434                           ; Regs used in _latchClock_Col: []
  1435                           
  1436                           
  1437                           ;columnas.c: 8:     PORTDbits.RD6 = 1;
  1438  046C  1283               	bcf	3,5	;RP0=0, select bank0
  1439  046D  1303               	bcf	3,6	;RP1=0, select bank0
  1440  046E  1708               	bsf	8,6	;volatile
  1441                           
  1442                           ;columnas.c: 9:     PORTDbits.RD6 = 0;
  1443  046F  1308               	bcf	8,6	;volatile
  1444  0470                     l108:	
  1445  0470  0008               	return
  1446  0471                     __end_of_latchClock_Col:	
  1447                           
  1448                           	psect	text6
  1449  028B                     __ptext6:	
  1450 ;; *************** function _setFilas *****************
  1451 ;; Defined at:
  1452 ;;		line 19 in file "filas.c"
  1453 ;; Parameters:    Size  Location     Type
  1454 ;;  reg_value       2   16[BANK0 ] unsigned int 
  1455 ;; Auto vars:     Size  Location     Type
  1456 ;;  i               2   24[BANK0 ] int 
  1457 ;; Return value:  Size  Location     Type
  1458 ;;                  1    wreg      void 
  1459 ;; Registers used:
  1460 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1461 ;; Tracked objects:
  1462 ;;		On entry : 0/0
  1463 ;;		On exit  : 0/0
  1464 ;;		Unchanged: 0/0
  1465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1466 ;;      Params:         0       2       0       0       0
  1467 ;;      Locals:         0       2       0       0       0
  1468 ;;      Temps:          0       6       0       0       0
  1469 ;;      Totals:         0      10       0       0       0
  1470 ;;Total ram usage:       10 bytes
  1471 ;; Hardware stack levels used:    1
  1472 ;; Hardware stack levels required when called:    4
  1473 ;; This function calls:
  1474 ;;		_shiftClock_Fil
  1475 ;; This function is called by:
  1476 ;;		_updateScreen
  1477 ;; This function uses a non-reentrant model
  1478 ;;
  1479                           
  1480                           
  1481                           ;psect for function _setFilas
  1482  028B                     _setFilas:	
  1483  028B                     l1029:	
  1484                           ;incstack = 0
  1485                           ; Regs used in _setFilas: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1486                           
  1487                           
  1488                           ;filas.c: 20:     int i = 0;
  1489  028B  1283               	bcf	3,5	;RP0=0, select bank0
  1490  028C  1303               	bcf	3,6	;RP1=0, select bank0
  1491  028D  01B8               	clrf	setFilas@i
  1492  028E  01B9               	clrf	setFilas@i+1
  1493                           
  1494                           ;filas.c: 21:     for(i=0;i<16;i++){
  1495  028F  01B8               	clrf	setFilas@i
  1496  0290  01B9               	clrf	setFilas@i+1
  1497  0291                     l1031:	
  1498  0291  0839               	movf	setFilas@i+1,w
  1499  0292  3A80               	xorlw	128
  1500  0293  00FF               	movwf	btemp+1
  1501  0294  3080               	movlw	128
  1502  0295  027F               	subwf	btemp+1,w
  1503  0296  1D03               	skipz
  1504  0297  2A9A               	goto	u435
  1505  0298  3010               	movlw	16
  1506  0299  0238               	subwf	setFilas@i,w
  1507  029A                     u435:	
  1508  029A  1C03               	skipc
  1509  029B  2A9D               	goto	u431
  1510  029C  2A9E               	goto	u430
  1511  029D                     u431:	
  1512  029D  2A9F               	goto	l1035
  1513  029E                     u430:	
  1514  029E  2AD1               	goto	l101
  1515  029F                     l1035:	
  1516                           
  1517                           ;filas.c: 22:         PORTCbits.RC4 = (reg_value & (1<<i) )>>i;
  1518  029F  1283               	bcf	3,5	;RP0=0, select bank0
  1519  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  1520  02A1  0A38               	incf	setFilas@i,w
  1521  02A2  00B2               	movwf	??_setFilas
  1522  02A3  3001               	movlw	1
  1523  02A4  00B3               	movwf	??_setFilas+1
  1524  02A5  3000               	movlw	0
  1525  02A6  00B4               	movwf	??_setFilas+2
  1526  02A7  2AAB               	goto	u444
  1527  02A8                     u445:	
  1528  02A8  1003               	clrc
  1529  02A9  0DB3               	rlf	??_setFilas+1,f
  1530  02AA  0DB4               	rlf	??_setFilas+2,f
  1531  02AB                     u444:	
  1532  02AB  0BB2               	decfsz	??_setFilas,f
  1533  02AC  2AA8               	goto	u445
  1534  02AD  0830               	movf	setFilas@reg_value,w
  1535  02AE  0533               	andwf	??_setFilas+1,w
  1536  02AF  00B5               	movwf	??_setFilas+3
  1537  02B0  0831               	movf	setFilas@reg_value+1,w
  1538  02B1  0534               	andwf	??_setFilas+2,w
  1539  02B2  00B6               	movwf	??_setFilas+4
  1540  02B3  0A38               	incf	setFilas@i,w
  1541  02B4  2AB8               	goto	u454
  1542  02B5                     u455:	
  1543  02B5  1003               	clrc
  1544  02B6  0CB6               	rrf	??_setFilas+4,f
  1545  02B7  0CB5               	rrf	??_setFilas+3,f
  1546  02B8                     u454:	
  1547  02B8  3EFF               	addlw	-1
  1548  02B9  1D03               	skipz
  1549  02BA  2AB5               	goto	u455
  1550  02BB  0835               	movf	??_setFilas+3,w
  1551  02BC  00B7               	movwf	??_setFilas+5
  1552  02BD  0EB7               	swapf	??_setFilas+5,f
  1553  02BE  0807               	movf	7,w	;volatile
  1554  02BF  0637               	xorwf	??_setFilas+5,w
  1555  02C0  39EF               	andlw	-17
  1556  02C1  0637               	xorwf	??_setFilas+5,w
  1557  02C2  0087               	movwf	7	;volatile
  1558  02C3                     l1037:	
  1559                           
  1560                           ;filas.c: 23:         shiftClock_Fil();
  1561  02C3  120A  118A  2466  120A  118A  	fcall	_shiftClock_Fil
  1562  02C8                     l1039:	
  1563                           
  1564                           ;filas.c: 24:     }
  1565  02C8  3001               	movlw	1
  1566  02C9  1283               	bcf	3,5	;RP0=0, select bank0
  1567  02CA  1303               	bcf	3,6	;RP1=0, select bank0
  1568  02CB  07B8               	addwf	setFilas@i,f
  1569  02CC  1803               	skipnc
  1570  02CD  0AB9               	incf	setFilas@i+1,f
  1571  02CE  3000               	movlw	0
  1572  02CF  07B9               	addwf	setFilas@i+1,f
  1573  02D0  2A91               	goto	l1031
  1574  02D1                     l101:	
  1575  02D1  0008               	return
  1576  02D2                     __end_of_setFilas:	
  1577                           
  1578                           	psect	text7
  1579  0466                     __ptext7:	
  1580 ;; *************** function _shiftClock_Fil *****************
  1581 ;; Defined at:
  1582 ;;		line 13 in file "filas.c"
  1583 ;; Parameters:    Size  Location     Type
  1584 ;;		None
  1585 ;; Auto vars:     Size  Location     Type
  1586 ;;		None
  1587 ;; Return value:  Size  Location     Type
  1588 ;;                  1    wreg      void 
  1589 ;; Registers used:
  1590 ;;		None
  1591 ;; Tracked objects:
  1592 ;;		On entry : 0/0
  1593 ;;		On exit  : 0/0
  1594 ;;		Unchanged: 0/0
  1595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1596 ;;      Params:         0       0       0       0       0
  1597 ;;      Locals:         0       0       0       0       0
  1598 ;;      Temps:          0       0       0       0       0
  1599 ;;      Totals:         0       0       0       0       0
  1600 ;;Total ram usage:        0 bytes
  1601 ;; Hardware stack levels used:    1
  1602 ;; Hardware stack levels required when called:    3
  1603 ;; This function calls:
  1604 ;;		Nothing
  1605 ;; This function is called by:
  1606 ;;		_setFilas
  1607 ;; This function uses a non-reentrant model
  1608 ;;
  1609                           
  1610                           
  1611                           ;psect for function _shiftClock_Fil
  1612  0466                     _shiftClock_Fil:	
  1613  0466                     l1017:	
  1614                           ;incstack = 0
  1615                           ; Regs used in _shiftClock_Fil: []
  1616                           
  1617                           
  1618                           ;filas.c: 14:     PORTCbits.RC7 = 0;
  1619  0466  1283               	bcf	3,5	;RP0=0, select bank0
  1620  0467  1303               	bcf	3,6	;RP1=0, select bank0
  1621  0468  1387               	bcf	7,7	;volatile
  1622                           
  1623                           ;filas.c: 15:     PORTCbits.RC7 = 1;
  1624  0469  1787               	bsf	7,7	;volatile
  1625                           
  1626                           ;filas.c: 16:     PORTCbits.RC7 = 0;
  1627  046A  1387               	bcf	7,7	;volatile
  1628  046B                     l96:	
  1629  046B  0008               	return
  1630  046C                     __end_of_shiftClock_Fil:	
  1631                           
  1632                           	psect	text8
  1633  0424                     __ptext8:	
  1634 ;; *************** function _init_timer *****************
  1635 ;; Defined at:
  1636 ;;		line 59 in file "init.c"
  1637 ;; Parameters:    Size  Location     Type
  1638 ;;		None
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;		None
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  1    wreg      void 
  1643 ;; Registers used:
  1644 ;;		status,2
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1650 ;;      Params:         0       0       0       0       0
  1651 ;;      Locals:         0       0       0       0       0
  1652 ;;      Temps:          0       0       0       0       0
  1653 ;;      Totals:         0       0       0       0       0
  1654 ;;Total ram usage:        0 bytes
  1655 ;; Hardware stack levels used:    1
  1656 ;; Hardware stack levels required when called:    3
  1657 ;; This function calls:
  1658 ;;		Nothing
  1659 ;; This function is called by:
  1660 ;;		_main
  1661 ;; This function uses a non-reentrant model
  1662 ;;
  1663                           
  1664                           
  1665                           ;psect for function _init_timer
  1666  0424                     _init_timer:	
  1667  0424                     l1077:	
  1668                           ;incstack = 0
  1669                           ; Regs used in _init_timer: [status,2]
  1670                           
  1671                           
  1672                           ;init.c: 61:     TMR0=0;
  1673  0424  1283               	bcf	3,5	;RP0=0, select bank0
  1674  0425  1303               	bcf	3,6	;RP1=0, select bank0
  1675  0426  0181               	clrf	1	;volatile
  1676  0427                     l1079:	
  1677                           
  1678                           ;init.c: 69:     INTCONbits.GIE = 1;
  1679  0427  178B               	bsf	11,7	;volatile
  1680  0428                     l1081:	
  1681                           
  1682                           ;init.c: 70:     INTCONbits.TMR0IE = 1;
  1683  0428  168B               	bsf	11,5	;volatile
  1684  0429                     l1083:	
  1685                           
  1686                           ;init.c: 71:     INTCONbits.TMR0IF = 0;
  1687  0429  110B               	bcf	11,2	;volatile
  1688  042A                     l1085:	
  1689                           
  1690                           ;init.c: 80:     OPTION_REGbits.PSA = 1;
  1691  042A  1683               	bsf	3,5	;RP0=1, select bank1
  1692  042B  1303               	bcf	3,6	;RP1=0, select bank1
  1693  042C  1581               	bsf	1,3	;volatile
  1694  042D                     l1087:	
  1695                           
  1696                           ;init.c: 81:     OPTION_REGbits.PS0 = 1;
  1697  042D  1401               	bsf	1,0	;volatile
  1698  042E                     l1089:	
  1699                           
  1700                           ;init.c: 82:     OPTION_REGbits.PS1 = 1;
  1701  042E  1481               	bsf	1,1	;volatile
  1702  042F                     l1091:	
  1703                           
  1704                           ;init.c: 83:     OPTION_REGbits.PS2 = 1;
  1705  042F  1501               	bsf	1,2	;volatile
  1706  0430                     l1093:	
  1707                           
  1708                           ;init.c: 84:     OPTION_REGbits.T0CS = 0;
  1709  0430  1281               	bcf	1,5	;volatile
  1710  0431                     l36:	
  1711  0431  0008               	return
  1712  0432                     __end_of_init_timer:	
  1713                           
  1714                           	psect	text9
  1715  0414                     __ptext9:	
  1716 ;; *************** function _init_pines *****************
  1717 ;; Defined at:
  1718 ;;		line 43 in file "init.c"
  1719 ;; Parameters:    Size  Location     Type
  1720 ;;		None
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;		None
  1723 ;; Return value:  Size  Location     Type
  1724 ;;                  1    wreg      void 
  1725 ;; Registers used:
  1726 ;;		status,2, status,0, pclath, cstack
  1727 ;; Tracked objects:
  1728 ;;		On entry : 0/0
  1729 ;;		On exit  : 0/0
  1730 ;;		Unchanged: 0/0
  1731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1732 ;;      Params:         0       0       0       0       0
  1733 ;;      Locals:         0       0       0       0       0
  1734 ;;      Temps:          0       0       0       0       0
  1735 ;;      Totals:         0       0       0       0       0
  1736 ;;Total ram usage:        0 bytes
  1737 ;; Hardware stack levels used:    1
  1738 ;; Hardware stack levels required when called:    4
  1739 ;; This function calls:
  1740 ;;		_init_pines_col
  1741 ;;		_init_pines_fil
  1742 ;;		_init_pines_in
  1743 ;; This function is called by:
  1744 ;;		_main
  1745 ;; This function uses a non-reentrant model
  1746 ;;
  1747                           
  1748                           
  1749                           ;psect for function _init_pines
  1750  0414                     _init_pines:	
  1751  0414                     l1073:	
  1752                           ;incstack = 0
  1753                           ; Regs used in _init_pines: [status,2+status,0+pclath+cstack]
  1754                           
  1755                           
  1756                           ;init.c: 45:     init_pines_fil();
  1757  0414  120A  118A  2432  120A  118A  	fcall	_init_pines_fil
  1758                           
  1759                           ;init.c: 46:     init_pines_col();
  1760  0419  120A  118A  2401  120A  118A  	fcall	_init_pines_col
  1761                           
  1762                           ;init.c: 47:     init_pines_in();
  1763  041E  120A  118A  243F  120A  118A  	fcall	_init_pines_in
  1764  0423                     l30:	
  1765  0423  0008               	return
  1766  0424                     __end_of_init_pines:	
  1767                           
  1768                           	psect	text10
  1769  043F                     __ptext10:	
  1770 ;; *************** function _init_pines_in *****************
  1771 ;; Defined at:
  1772 ;;		line 4 in file "init.c"
  1773 ;; Parameters:    Size  Location     Type
  1774 ;;		None
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;		None
  1777 ;; Return value:  Size  Location     Type
  1778 ;;                  1    wreg      void 
  1779 ;; Registers used:
  1780 ;;		None
  1781 ;; Tracked objects:
  1782 ;;		On entry : 0/0
  1783 ;;		On exit  : 0/0
  1784 ;;		Unchanged: 0/0
  1785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1786 ;;      Params:         0       0       0       0       0
  1787 ;;      Locals:         0       0       0       0       0
  1788 ;;      Temps:          0       0       0       0       0
  1789 ;;      Totals:         0       0       0       0       0
  1790 ;;Total ram usage:        0 bytes
  1791 ;; Hardware stack levels used:    1
  1792 ;; Hardware stack levels required when called:    3
  1793 ;; This function calls:
  1794 ;;		Nothing
  1795 ;; This function is called by:
  1796 ;;		_init_pines
  1797 ;; This function uses a non-reentrant model
  1798 ;;
  1799                           
  1800                           
  1801                           ;psect for function _init_pines_in
  1802  043F                     _init_pines_in:	
  1803  043F                     l1023:	
  1804                           ;incstack = 0
  1805                           ; Regs used in _init_pines_in: []
  1806                           
  1807                           
  1808                           ;init.c: 6:     TRISBbits.TRISB5 = 1;
  1809  043F  1683               	bsf	3,5	;RP0=1, select bank1
  1810  0440  1303               	bcf	3,6	;RP1=0, select bank1
  1811  0441  1686               	bsf	6,5	;volatile
  1812                           
  1813                           ;init.c: 7:     TRISBbits.TRISB4 = 1;
  1814  0442  1606               	bsf	6,4	;volatile
  1815                           
  1816                           ;init.c: 9:     TRISBbits.TRISB6 = 0;
  1817  0443  1306               	bcf	6,6	;volatile
  1818                           
  1819                           ;init.c: 10:     TRISBbits.TRISB7 = 0;
  1820  0444  1386               	bcf	6,7	;volatile
  1821                           
  1822                           ;init.c: 12:     PORTBbits.RB6 = 0;
  1823  0445  1283               	bcf	3,5	;RP0=0, select bank0
  1824  0446  1303               	bcf	3,6	;RP1=0, select bank0
  1825  0447  1306               	bcf	6,6	;volatile
  1826                           
  1827                           ;init.c: 13:     PORTBbits.RB7 = 0;
  1828  0448  1386               	bcf	6,7	;volatile
  1829  0449                     l21:	
  1830  0449  0008               	return
  1831  044A                     __end_of_init_pines_in:	
  1832                           
  1833                           	psect	text11
  1834  0432                     __ptext11:	
  1835 ;; *************** function _init_pines_fil *****************
  1836 ;; Defined at:
  1837 ;;		line 16 in file "init.c"
  1838 ;; Parameters:    Size  Location     Type
  1839 ;;		None
  1840 ;; Auto vars:     Size  Location     Type
  1841 ;;		None
  1842 ;; Return value:  Size  Location     Type
  1843 ;;                  1    wreg      void 
  1844 ;; Registers used:
  1845 ;;		None
  1846 ;; Tracked objects:
  1847 ;;		On entry : 0/0
  1848 ;;		On exit  : 0/0
  1849 ;;		Unchanged: 0/0
  1850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1851 ;;      Params:         0       0       0       0       0
  1852 ;;      Locals:         0       0       0       0       0
  1853 ;;      Temps:          0       0       0       0       0
  1854 ;;      Totals:         0       0       0       0       0
  1855 ;;Total ram usage:        0 bytes
  1856 ;; Hardware stack levels used:    1
  1857 ;; Hardware stack levels required when called:    3
  1858 ;; This function calls:
  1859 ;;		Nothing
  1860 ;; This function is called by:
  1861 ;;		_init_pines
  1862 ;; This function uses a non-reentrant model
  1863 ;;
  1864                           
  1865                           
  1866                           ;psect for function _init_pines_fil
  1867  0432                     _init_pines_fil:	
  1868  0432                     l1025:	
  1869                           ;incstack = 0
  1870                           ; Regs used in _init_pines_fil: []
  1871                           
  1872                           
  1873                           ;init.c: 18:     TRISCbits.TRISC4 = 0;
  1874  0432  1683               	bsf	3,5	;RP0=1, select bank1
  1875  0433  1303               	bcf	3,6	;RP1=0, select bank1
  1876  0434  1207               	bcf	7,4	;volatile
  1877                           
  1878                           ;init.c: 19:     TRISCbits.TRISC5 = 0;
  1879  0435  1287               	bcf	7,5	;volatile
  1880                           
  1881                           ;init.c: 20:     TRISCbits.TRISC6 = 0;
  1882  0436  1307               	bcf	7,6	;volatile
  1883                           
  1884                           ;init.c: 21:     TRISCbits.TRISC7 = 0;
  1885  0437  1387               	bcf	7,7	;volatile
  1886                           
  1887                           ;init.c: 23:     PORTCbits.RC4 = 0;
  1888  0438  1283               	bcf	3,5	;RP0=0, select bank0
  1889  0439  1303               	bcf	3,6	;RP1=0, select bank0
  1890  043A  1207               	bcf	7,4	;volatile
  1891                           
  1892                           ;init.c: 24:     PORTCbits.RC5 = 0;
  1893  043B  1287               	bcf	7,5	;volatile
  1894                           
  1895                           ;init.c: 25:     PORTCbits.RC6 = 0;
  1896  043C  1307               	bcf	7,6	;volatile
  1897                           
  1898                           ;init.c: 26:     PORTCbits.RC7 = 0;
  1899  043D  1387               	bcf	7,7	;volatile
  1900  043E                     l24:	
  1901  043E  0008               	return
  1902  043F                     __end_of_init_pines_fil:	
  1903                           
  1904                           	psect	text12
  1905  0401                     __ptext12:	
  1906 ;; *************** function _init_pines_col *****************
  1907 ;; Defined at:
  1908 ;;		line 29 in file "init.c"
  1909 ;; Parameters:    Size  Location     Type
  1910 ;;		None
  1911 ;; Auto vars:     Size  Location     Type
  1912 ;;		None
  1913 ;; Return value:  Size  Location     Type
  1914 ;;                  1    wreg      void 
  1915 ;; Registers used:
  1916 ;;		None
  1917 ;; Tracked objects:
  1918 ;;		On entry : 0/0
  1919 ;;		On exit  : 0/0
  1920 ;;		Unchanged: 0/0
  1921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1922 ;;      Params:         0       0       0       0       0
  1923 ;;      Locals:         0       0       0       0       0
  1924 ;;      Temps:          0       0       0       0       0
  1925 ;;      Totals:         0       0       0       0       0
  1926 ;;Total ram usage:        0 bytes
  1927 ;; Hardware stack levels used:    1
  1928 ;; Hardware stack levels required when called:    3
  1929 ;; This function calls:
  1930 ;;		Nothing
  1931 ;; This function is called by:
  1932 ;;		_init_pines
  1933 ;; This function uses a non-reentrant model
  1934 ;;
  1935                           
  1936                           
  1937                           ;psect for function _init_pines_col
  1938  0401                     _init_pines_col:	
  1939  0401                     l1027:	
  1940                           ;incstack = 0
  1941                           ; Regs used in _init_pines_col: []
  1942                           
  1943                           
  1944                           ;init.c: 30:     TRISBbits.TRISB0 = 0;
  1945  0401  1683               	bsf	3,5	;RP0=1, select bank1
  1946  0402  1303               	bcf	3,6	;RP1=0, select bank1
  1947  0403  1006               	bcf	6,0	;volatile
  1948                           
  1949                           ;init.c: 31:     PORTBbits.RB0 = 0;
  1950  0404  1283               	bcf	3,5	;RP0=0, select bank0
  1951  0405  1303               	bcf	3,6	;RP1=0, select bank0
  1952  0406  1006               	bcf	6,0	;volatile
  1953                           
  1954                           ;init.c: 33:     TRISDbits.TRISD4 = 0;
  1955  0407  1683               	bsf	3,5	;RP0=1, select bank1
  1956  0408  1303               	bcf	3,6	;RP1=0, select bank1
  1957  0409  1208               	bcf	8,4	;volatile
  1958                           
  1959                           ;init.c: 34:     TRISDbits.TRISD5 = 0;
  1960  040A  1288               	bcf	8,5	;volatile
  1961                           
  1962                           ;init.c: 35:     TRISDbits.TRISD6 = 0;
  1963  040B  1308               	bcf	8,6	;volatile
  1964                           
  1965                           ;init.c: 36:     TRISDbits.TRISD7 = 0;
  1966  040C  1388               	bcf	8,7	;volatile
  1967                           
  1968                           ;init.c: 38:     PORTDbits.RD4 = 0;
  1969  040D  1283               	bcf	3,5	;RP0=0, select bank0
  1970  040E  1303               	bcf	3,6	;RP1=0, select bank0
  1971  040F  1208               	bcf	8,4	;volatile
  1972                           
  1973                           ;init.c: 39:     PORTDbits.RD5 = 0;
  1974  0410  1288               	bcf	8,5	;volatile
  1975                           
  1976                           ;init.c: 40:     PORTDbits.RD6 = 0;
  1977  0411  1308               	bcf	8,6	;volatile
  1978                           
  1979                           ;init.c: 41:     PORTDbits.RD7 = 0;
  1980  0412  1388               	bcf	8,7	;volatile
  1981  0413                     l27:	
  1982  0413  0008               	return
  1983  0414                     __end_of_init_pines_col:	
  1984                           
  1985                           	psect	text13
  1986  0452                     __ptext13:	
  1987 ;; *************** function _init_interrupt *****************
  1988 ;; Defined at:
  1989 ;;		line 50 in file "init.c"
  1990 ;; Parameters:    Size  Location     Type
  1991 ;;		None
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;		None
  1994 ;; Return value:  Size  Location     Type
  1995 ;;                  1    wreg      void 
  1996 ;; Registers used:
  1997 ;;		None
  1998 ;; Tracked objects:
  1999 ;;		On entry : 0/0
  2000 ;;		On exit  : 0/0
  2001 ;;		Unchanged: 0/0
  2002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2003 ;;      Params:         0       0       0       0       0
  2004 ;;      Locals:         0       0       0       0       0
  2005 ;;      Temps:          0       0       0       0       0
  2006 ;;      Totals:         0       0       0       0       0
  2007 ;;Total ram usage:        0 bytes
  2008 ;; Hardware stack levels used:    1
  2009 ;; Hardware stack levels required when called:    3
  2010 ;; This function calls:
  2011 ;;		Nothing
  2012 ;; This function is called by:
  2013 ;;		_main
  2014 ;; This function uses a non-reentrant model
  2015 ;;
  2016                           
  2017                           
  2018                           ;psect for function _init_interrupt
  2019  0452                     _init_interrupt:	
  2020  0452                     l1075:	
  2021                           ;incstack = 0
  2022                           ; Regs used in _init_interrupt: []
  2023                           
  2024                           
  2025                           ;init.c: 51:     INTCONbits.GIE = 1;
  2026  0452  178B               	bsf	11,7	;volatile
  2027                           
  2028                           ;init.c: 52:     INTCONbits.PEIE = 1;
  2029  0453  170B               	bsf	11,6	;volatile
  2030                           
  2031                           ;init.c: 53:     INTCONbits.RBIE = 1;
  2032  0454  158B               	bsf	11,3	;volatile
  2033                           
  2034                           ;init.c: 54:     INTCONbits.RBIF = 0;
  2035  0455  100B               	bcf	11,0	;volatile
  2036                           
  2037                           ;init.c: 56:     OPTION_REGbits.nRBPU = 0;
  2038  0456  1683               	bsf	3,5	;RP0=1, select bank1
  2039  0457  1303               	bcf	3,6	;RP1=0, select bank1
  2040  0458  1381               	bcf	1,7	;volatile
  2041  0459                     l33:	
  2042  0459  0008               	return
  2043  045A                     __end_of_init_interrupt:	
  2044                           
  2045                           	psect	text14
  2046  0040                     __ptext14:	
  2047 ;; *************** function _drawFigure *****************
  2048 ;; Defined at:
  2049 ;;		line 37 in file "screen.c"
  2050 ;; Parameters:    Size  Location     Type
  2051 ;;		None
  2052 ;; Auto vars:     Size  Location     Type
  2053 ;;		None
  2054 ;; Return value:  Size  Location     Type
  2055 ;;                  1    wreg      void 
  2056 ;; Registers used:
  2057 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2058 ;; Tracked objects:
  2059 ;;		On entry : 0/0
  2060 ;;		On exit  : 0/0
  2061 ;;		Unchanged: 0/0
  2062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2063 ;;      Params:         0       0       0       0       0
  2064 ;;      Locals:         0       0       0       0       0
  2065 ;;      Temps:          0       5       0       0       0
  2066 ;;      Totals:         0       5       0       0       0
  2067 ;;Total ram usage:        5 bytes
  2068 ;; Hardware stack levels used:    1
  2069 ;; Hardware stack levels required when called:    4
  2070 ;; This function calls:
  2071 ;;		_memset
  2072 ;; This function is called by:
  2073 ;;		_main
  2074 ;; This function uses a non-reentrant model
  2075 ;;
  2076                           
  2077                           
  2078                           ;psect for function _drawFigure
  2079  0040                     _drawFigure:	
  2080  0040                     l1099:	
  2081                           ;incstack = 0
  2082                           ; Regs used in _drawFigure: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2083                           
  2084                           
  2085                           ;screen.c: 38:     memset(ficha, 0, sizeof(ficha));
  2086  0040  3000               	movlw	0
  2087  0041  1283               	bcf	3,5	;RP0=0, select bank0
  2088  0042  1303               	bcf	3,6	;RP1=0, select bank0
  2089  0043  00B0               	movwf	memset@c
  2090  0044  00B1               	movwf	memset@c+1
  2091  0045  3010               	movlw	16
  2092  0046  00B2               	movwf	memset@n
  2093  0047  3000               	movlw	0
  2094  0048  00B3               	movwf	memset@n+1
  2095  0049  30D0               	movlw	(low (_ficha| 0))& (0+255)
  2096  004A  120A  118A  238F  120A  118A  	fcall	_memset
  2097  004F                     l1101:	
  2098                           
  2099                           ;screen.c: 39:     if(con.derecha == 1 && con.ficha_Hpos<4){
  2100  004F  1283               	bcf	3,5	;RP0=0, select bank0
  2101  0050  1303               	bcf	3,6	;RP1=0, select bank0
  2102  0051  0357               	decf	_con+6,w
  2103  0052  1D03               	btfss	3,2
  2104  0053  2855               	goto	u521
  2105  0054  2856               	goto	u520
  2106  0055                     u521:	
  2107  0055  2862               	goto	l1109
  2108  0056                     u520:	
  2109  0056                     l1103:	
  2110  0056  3004               	movlw	4
  2111  0057  0255               	subwf	_con+4,w
  2112  0058  1803               	skipnc
  2113  0059  285B               	goto	u531
  2114  005A  285C               	goto	u530
  2115  005B                     u531:	
  2116  005B  2862               	goto	l1109
  2117  005C                     u530:	
  2118  005C                     l1105:	
  2119                           
  2120                           ;screen.c: 40:         con.ficha_Hpos++;
  2121  005C  3001               	movlw	1
  2122  005D  00B7               	movwf	??_drawFigure
  2123  005E  0837               	movf	??_drawFigure,w
  2124  005F  07D5               	addwf	_con+4,f
  2125  0060                     l1107:	
  2126                           
  2127                           ;screen.c: 41:         con.derecha = 0;
  2128  0060  01D7               	clrf	_con+6
  2129                           
  2130                           ;screen.c: 42:     }else if (con.izquierda == 1 && con.ficha_Hpos>0){
  2131  0061  286F               	goto	l1117
  2132  0062                     l1109:	
  2133  0062  0358               	decf	_con+7,w
  2134  0063  1D03               	btfss	3,2
  2135  0064  2866               	goto	u541
  2136  0065  2867               	goto	u540
  2137  0066                     u541:	
  2138  0066  286F               	goto	l1117
  2139  0067                     u540:	
  2140  0067                     l1111:	
  2141  0067  0855               	movf	_con+4,w
  2142  0068  1903               	btfsc	3,2
  2143  0069  286B               	goto	u551
  2144  006A  286C               	goto	u550
  2145  006B                     u551:	
  2146  006B  286F               	goto	l1117
  2147  006C                     u550:	
  2148  006C                     l1113:	
  2149                           
  2150                           ;screen.c: 43:         con.ficha_Hpos--;
  2151  006C  3001               	movlw	1
  2152  006D  02D5               	subwf	_con+4,f
  2153  006E                     l1115:	
  2154                           
  2155                           ;screen.c: 44:         con.izquierda = 0;
  2156  006E  01D8               	clrf	_con+7
  2157  006F                     l1117:	
  2158                           
  2159                           ;screen.c: 46:     ficha[con.ficha_Hpos ] = figuras[con.ficha_actual][0] << (con.ficha_V
      +                          pos -1);
  2160  006F  0854               	movf	_con+3,w
  2161  0070  3EFF               	addlw	-1
  2162  0071  00B7               	movwf	??_drawFigure
  2163  0072  0AB7               	incf	??_drawFigure,f
  2164  0073  0856               	movf	_con+5,w
  2165  0074  00B8               	movwf	??_drawFigure+1
  2166  0075  3002               	movlw	2
  2167  0076                     u565:	
  2168  0076  1003               	clrc
  2169  0077  0DB8               	rlf	??_drawFigure+1,f
  2170  0078  3EFF               	addlw	-1
  2171  0079  1D03               	skipz
  2172  007A  2876               	goto	u565
  2173  007B  1003               	clrc
  2174  007C  0D38               	rlf	??_drawFigure+1,w
  2175  007D  3EA0               	addlw	(low (_figuras| 0))& (0+255)
  2176  007E  0084               	movwf	4
  2177  007F  1383               	bcf	3,7	;select IRP bank1
  2178  0080  0800               	movf	0,w
  2179  0081  00B9               	movwf	??_drawFigure+2
  2180  0082  0A84               	incf	4,f
  2181  0083  0800               	movf	0,w
  2182  0084  00BA               	movwf	??_drawFigure+3
  2183  0085  2889               	goto	u574
  2184  0086                     u575:	
  2185  0086  1003               	clrc
  2186  0087  0DB9               	rlf	??_drawFigure+2,f
  2187  0088  0DBA               	rlf	??_drawFigure+3,f
  2188  0089                     u574:	
  2189  0089  0BB7               	decfsz	??_drawFigure,f
  2190  008A  2886               	goto	u575
  2191  008B  0855               	movf	_con+4,w
  2192  008C  00BB               	movwf	??_drawFigure+4
  2193  008D  073B               	addwf	??_drawFigure+4,w
  2194  008E  3ED0               	addlw	(low (_ficha| 0))& (0+255)
  2195  008F  0084               	movwf	4
  2196  0090  0839               	movf	??_drawFigure+2,w
  2197  0091  0080               	movwf	0
  2198  0092  0A84               	incf	4,f
  2199  0093  083A               	movf	??_drawFigure+3,w
  2200  0094  0080               	movwf	0
  2201  0095                     l1119:	
  2202                           
  2203                           ;screen.c: 47:     ficha[con.ficha_Hpos +1] = figuras[con.ficha_actual][1] << (con.ficha
      +                          _Vpos -1);
  2204  0095  0854               	movf	_con+3,w
  2205  0096  3EFF               	addlw	-1
  2206  0097  00B7               	movwf	??_drawFigure
  2207  0098  0AB7               	incf	??_drawFigure,f
  2208  0099  0856               	movf	_con+5,w
  2209  009A  00B8               	movwf	??_drawFigure+1
  2210  009B  3002               	movlw	2
  2211  009C                     u585:	
  2212  009C  1003               	clrc
  2213  009D  0DB8               	rlf	??_drawFigure+1,f
  2214  009E  3EFF               	addlw	-1
  2215  009F  1D03               	skipz
  2216  00A0  289C               	goto	u585
  2217  00A1  1003               	clrc
  2218  00A2  0D38               	rlf	??_drawFigure+1,w
  2219  00A3  3EA2               	addlw	(low ((_figuras| 0+2)))& (0+255)
  2220  00A4  0084               	movwf	4
  2221  00A5  0800               	movf	0,w
  2222  00A6  00B9               	movwf	??_drawFigure+2
  2223  00A7  0A84               	incf	4,f
  2224  00A8  0800               	movf	0,w
  2225  00A9  00BA               	movwf	??_drawFigure+3
  2226  00AA  28AE               	goto	u594
  2227  00AB                     u595:	
  2228  00AB  1003               	clrc
  2229  00AC  0DB9               	rlf	??_drawFigure+2,f
  2230  00AD  0DBA               	rlf	??_drawFigure+3,f
  2231  00AE                     u594:	
  2232  00AE  0BB7               	decfsz	??_drawFigure,f
  2233  00AF  28AB               	goto	u595
  2234  00B0  0855               	movf	_con+4,w
  2235  00B1  00BB               	movwf	??_drawFigure+4
  2236  00B2  073B               	addwf	??_drawFigure+4,w
  2237  00B3  3ED2               	addlw	(low ((_ficha| 0+2)))& (0+255)
  2238  00B4  0084               	movwf	4
  2239  00B5  0839               	movf	??_drawFigure+2,w
  2240  00B6  0080               	movwf	0
  2241  00B7  0A84               	incf	4,f
  2242  00B8  083A               	movf	??_drawFigure+3,w
  2243  00B9  0080               	movwf	0
  2244  00BA                     l1121:	
  2245                           
  2246                           ;screen.c: 48:     ficha[con.ficha_Hpos +2] = figuras[con.ficha_actual][2] << (con.ficha
      +                          _Vpos -1);
  2247  00BA  0854               	movf	_con+3,w
  2248  00BB  3EFF               	addlw	-1
  2249  00BC  00B7               	movwf	??_drawFigure
  2250  00BD  0AB7               	incf	??_drawFigure,f
  2251  00BE  0856               	movf	_con+5,w
  2252  00BF  00B8               	movwf	??_drawFigure+1
  2253  00C0  3002               	movlw	2
  2254  00C1                     u605:	
  2255  00C1  1003               	clrc
  2256  00C2  0DB8               	rlf	??_drawFigure+1,f
  2257  00C3  3EFF               	addlw	-1
  2258  00C4  1D03               	skipz
  2259  00C5  28C1               	goto	u605
  2260  00C6  1003               	clrc
  2261  00C7  0D38               	rlf	??_drawFigure+1,w
  2262  00C8  3EA4               	addlw	(low ((_figuras| 0+4)))& (0+255)
  2263  00C9  0084               	movwf	4
  2264  00CA  0800               	movf	0,w
  2265  00CB  00B9               	movwf	??_drawFigure+2
  2266  00CC  0A84               	incf	4,f
  2267  00CD  0800               	movf	0,w
  2268  00CE  00BA               	movwf	??_drawFigure+3
  2269  00CF  28D3               	goto	u614
  2270  00D0                     u615:	
  2271  00D0  1003               	clrc
  2272  00D1  0DB9               	rlf	??_drawFigure+2,f
  2273  00D2  0DBA               	rlf	??_drawFigure+3,f
  2274  00D3                     u614:	
  2275  00D3  0BB7               	decfsz	??_drawFigure,f
  2276  00D4  28D0               	goto	u615
  2277  00D5  0855               	movf	_con+4,w
  2278  00D6  00BB               	movwf	??_drawFigure+4
  2279  00D7  073B               	addwf	??_drawFigure+4,w
  2280  00D8  3ED4               	addlw	(low ((_ficha| 0+4)))& (0+255)
  2281  00D9  0084               	movwf	4
  2282  00DA  0839               	movf	??_drawFigure+2,w
  2283  00DB  0080               	movwf	0
  2284  00DC  0A84               	incf	4,f
  2285  00DD  083A               	movf	??_drawFigure+3,w
  2286  00DE  0080               	movwf	0
  2287  00DF                     l1123:	
  2288                           
  2289                           ;screen.c: 49:     ficha[con.ficha_Hpos +3] = figuras[con.ficha_actual][3] << (con.ficha
      +                          _Vpos -1);
  2290  00DF  0854               	movf	_con+3,w
  2291  00E0  3EFF               	addlw	-1
  2292  00E1  00B7               	movwf	??_drawFigure
  2293  00E2  0AB7               	incf	??_drawFigure,f
  2294  00E3  0856               	movf	_con+5,w
  2295  00E4  00B8               	movwf	??_drawFigure+1
  2296  00E5  3002               	movlw	2
  2297  00E6                     u625:	
  2298  00E6  1003               	clrc
  2299  00E7  0DB8               	rlf	??_drawFigure+1,f
  2300  00E8  3EFF               	addlw	-1
  2301  00E9  1D03               	skipz
  2302  00EA  28E6               	goto	u625
  2303  00EB  1003               	clrc
  2304  00EC  0D38               	rlf	??_drawFigure+1,w
  2305  00ED  3EA6               	addlw	(low ((_figuras| 0+6)))& (0+255)
  2306  00EE  0084               	movwf	4
  2307  00EF  0800               	movf	0,w
  2308  00F0  00B9               	movwf	??_drawFigure+2
  2309  00F1  0A84               	incf	4,f
  2310  00F2  0800               	movf	0,w
  2311  00F3  00BA               	movwf	??_drawFigure+3
  2312  00F4  28F8               	goto	u634
  2313  00F5                     u635:	
  2314  00F5  1003               	clrc
  2315  00F6  0DB9               	rlf	??_drawFigure+2,f
  2316  00F7  0DBA               	rlf	??_drawFigure+3,f
  2317  00F8                     u634:	
  2318  00F8  0BB7               	decfsz	??_drawFigure,f
  2319  00F9  28F5               	goto	u635
  2320  00FA  0855               	movf	_con+4,w
  2321  00FB  00BB               	movwf	??_drawFigure+4
  2322  00FC  073B               	addwf	??_drawFigure+4,w
  2323  00FD  3ED6               	addlw	(low ((_ficha| 0+6)))& (0+255)
  2324  00FE  0084               	movwf	4
  2325  00FF  0839               	movf	??_drawFigure+2,w
  2326  0100  0080               	movwf	0
  2327  0101  0A84               	incf	4,f
  2328  0102  083A               	movf	??_drawFigure+3,w
  2329  0103  0080               	movwf	0
  2330  0104                     l151:	
  2331  0104  0008               	return
  2332  0105                     __end_of_drawFigure:	
  2333                           
  2334                           	psect	text15
  2335  038F                     __ptext15:	
  2336 ;; *************** function _memset *****************
  2337 ;; Defined at:
  2338 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\memset.c"
  2339 ;; Parameters:    Size  Location     Type
  2340 ;;  p1              1    wreg     PTR void 
  2341 ;;		 -> ficha(16), 
  2342 ;;  c               2   16[BANK0 ] int 
  2343 ;;  n               2   18[BANK0 ] unsigned int 
  2344 ;; Auto vars:     Size  Location     Type
  2345 ;;  p1              1   21[BANK0 ] PTR void 
  2346 ;;		 -> ficha(16), 
  2347 ;;  p               1   22[BANK0 ] PTR unsigned char 
  2348 ;;		 -> ficha(16), 
  2349 ;; Return value:  Size  Location     Type
  2350 ;;                  1    wreg      PTR void 
  2351 ;; Registers used:
  2352 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2353 ;; Tracked objects:
  2354 ;;		On entry : 0/0
  2355 ;;		On exit  : 0/0
  2356 ;;		Unchanged: 0/0
  2357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2358 ;;      Params:         0       4       0       0       0
  2359 ;;      Locals:         0       2       0       0       0
  2360 ;;      Temps:          0       1       0       0       0
  2361 ;;      Totals:         0       7       0       0       0
  2362 ;;Total ram usage:        7 bytes
  2363 ;; Hardware stack levels used:    1
  2364 ;; Hardware stack levels required when called:    3
  2365 ;; This function calls:
  2366 ;;		Nothing
  2367 ;; This function is called by:
  2368 ;;		_drawFigure
  2369 ;; This function uses a non-reentrant model
  2370 ;;
  2371                           
  2372                           
  2373                           ;psect for function _memset
  2374  038F                     _memset:	
  2375                           
  2376                           ;incstack = 0
  2377                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0]
  2378                           ;memset@p1 stored from wreg
  2379  038F  1283               	bcf	3,5	;RP0=0, select bank0
  2380  0390  1303               	bcf	3,6	;RP1=0, select bank0
  2381  0391  00B5               	movwf	memset@p1
  2382  0392                     l1051:	
  2383  0392  0835               	movf	memset@p1,w
  2384  0393  00B4               	movwf	??_memset
  2385  0394  0834               	movf	??_memset,w
  2386  0395  00B6               	movwf	memset@p
  2387  0396  2BA2               	goto	l1057
  2388  0397                     l1053:	
  2389  0397  0830               	movf	memset@c,w
  2390  0398  00B4               	movwf	??_memset
  2391  0399  0836               	movf	memset@p,w
  2392  039A  0084               	movwf	4
  2393  039B  0834               	movf	??_memset,w
  2394  039C  1383               	bcf	3,7	;select IRP bank0
  2395  039D  0080               	movwf	0
  2396  039E                     l1055:	
  2397  039E  3001               	movlw	1
  2398  039F  00B4               	movwf	??_memset
  2399  03A0  0834               	movf	??_memset,w
  2400  03A1  07B6               	addwf	memset@p,f
  2401  03A2                     l1057:	
  2402  03A2  3001               	movlw	1
  2403  03A3  02B2               	subwf	memset@n,f
  2404  03A4  3000               	movlw	0
  2405  03A5  1C03               	skipc
  2406  03A6  03B3               	decf	memset@n+1,f
  2407  03A7  02B3               	subwf	memset@n+1,f
  2408  03A8  0A32               	incf	memset@n,w
  2409  03A9  1D03               	skipz
  2410  03AA  2BAF               	goto	u461
  2411  03AB  0A33               	incf	memset@n+1,w
  2412  03AC  1D03               	btfss	3,2
  2413  03AD  2BAF               	goto	u461
  2414  03AE  2BB0               	goto	u460
  2415  03AF                     u461:	
  2416  03AF  2B97               	goto	l1053
  2417  03B0                     u460:	
  2418  03B0                     l685:	
  2419  03B0  0008               	return
  2420  03B1                     __end_of_memset:	
  2421                           
  2422                           	psect	text16
  2423  03B1                     __ptext16:	
  2424 ;; *************** function _drawBground *****************
  2425 ;; Defined at:
  2426 ;;		line 25 in file "screen.c"
  2427 ;; Parameters:    Size  Location     Type
  2428 ;;		None
  2429 ;; Auto vars:     Size  Location     Type
  2430 ;;		None
  2431 ;; Return value:  Size  Location     Type
  2432 ;;                  1    wreg      void 
  2433 ;; Registers used:
  2434 ;;		wreg, status,2
  2435 ;; Tracked objects:
  2436 ;;		On entry : 0/0
  2437 ;;		On exit  : 0/0
  2438 ;;		Unchanged: 0/0
  2439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2440 ;;      Params:         0       0       0       0       0
  2441 ;;      Locals:         0       0       0       0       0
  2442 ;;      Temps:          0       0       0       0       0
  2443 ;;      Totals:         0       0       0       0       0
  2444 ;;Total ram usage:        0 bytes
  2445 ;; Hardware stack levels used:    1
  2446 ;; Hardware stack levels required when called:    3
  2447 ;; This function calls:
  2448 ;;		Nothing
  2449 ;; This function is called by:
  2450 ;;		_main
  2451 ;; This function uses a non-reentrant model
  2452 ;;
  2453                           
  2454                           
  2455                           ;psect for function _drawBground
  2456  03B1                     _drawBground:	
  2457  03B1                     l1095:	
  2458                           ;incstack = 0
  2459                           ; Regs used in _drawBground: [wreg+status,2]
  2460                           
  2461                           
  2462                           ;screen.c: 27:     fondo[0] = 0x0030;
  2463  03B1  3030               	movlw	48
  2464  03B2  1283               	bcf	3,5	;RP0=0, select bank0
  2465  03B3  1303               	bcf	3,6	;RP1=0, select bank0
  2466  03B4  00C1               	movwf	_fondo
  2467  03B5  3000               	movlw	0
  2468  03B6  00C2               	movwf	_fondo+1
  2469                           
  2470                           ;screen.c: 28:     fondo[1] = 0x0048;
  2471  03B7  3048               	movlw	72
  2472  03B8  00C3               	movwf	_fondo+2
  2473  03B9  3000               	movlw	0
  2474  03BA  00C4               	movwf	_fondo+3
  2475                           
  2476                           ;screen.c: 29:     fondo[2] = 0x0044;
  2477  03BB  3044               	movlw	68
  2478  03BC  00C5               	movwf	_fondo+4
  2479  03BD  3000               	movlw	0
  2480  03BE  00C6               	movwf	_fondo+5
  2481                           
  2482                           ;screen.c: 30:     fondo[3] = 0x0022;
  2483  03BF  3022               	movlw	34
  2484  03C0  00C7               	movwf	_fondo+6
  2485  03C1  3000               	movlw	0
  2486  03C2  00C8               	movwf	_fondo+7
  2487                           
  2488                           ;screen.c: 31:     fondo[4] = 0x0044;
  2489  03C3  3044               	movlw	68
  2490  03C4  00C9               	movwf	_fondo+8
  2491  03C5  3000               	movlw	0
  2492  03C6  00CA               	movwf	_fondo+9
  2493                           
  2494                           ;screen.c: 32:     fondo[5] = 0x0048;
  2495  03C7  3048               	movlw	72
  2496  03C8  00CB               	movwf	_fondo+10
  2497  03C9  3000               	movlw	0
  2498  03CA  00CC               	movwf	_fondo+11
  2499                           
  2500                           ;screen.c: 33:     fondo[6] = 0x0030;
  2501  03CB  3030               	movlw	48
  2502  03CC  00CD               	movwf	_fondo+12
  2503  03CD  3000               	movlw	0
  2504  03CE  00CE               	movwf	_fondo+13
  2505  03CF                     l1097:	
  2506                           
  2507                           ;screen.c: 34:     fondo[7] = 0x0000;
  2508  03CF  01CF               	clrf	_fondo+14
  2509  03D0  01D0               	clrf	_fondo+15
  2510  03D1                     l145:	
  2511  03D1  0008               	return
  2512  03D2                     __end_of_drawBground:	
  2513                           
  2514                           	psect	text17
  2515  0186                     __ptext17:	
  2516 ;; *************** function _Timer0_ISR *****************
  2517 ;; Defined at:
  2518 ;;		line 96 in file "mainsource.c"
  2519 ;; Parameters:    Size  Location     Type
  2520 ;;		None
  2521 ;; Auto vars:     Size  Location     Type
  2522 ;;		None
  2523 ;; Return value:  Size  Location     Type
  2524 ;;                  1    wreg      void 
  2525 ;; Registers used:
  2526 ;;		wreg, status,2, status,0, pclath, cstack
  2527 ;; Tracked objects:
  2528 ;;		On entry : 0/0
  2529 ;;		On exit  : 0/0
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2532 ;;      Params:         0       0       0       0       0
  2533 ;;      Locals:         0       0       0       0       0
  2534 ;;      Temps:          0       3       0       0       0
  2535 ;;      Totals:         0       3       0       0       0
  2536 ;;Total ram usage:        3 bytes
  2537 ;; Hardware stack levels used:    1
  2538 ;; Hardware stack levels required when called:    2
  2539 ;; This function calls:
  2540 ;;		___awmod
  2541 ;;		_rand
  2542 ;; This function is called by:
  2543 ;;		Interrupt level 1
  2544 ;; This function uses a non-reentrant model
  2545 ;;
  2546                           
  2547                           
  2548                           ;psect for function _Timer0_ISR
  2549  0186                     _Timer0_ISR:	
  2550  0186                     i1l1213:	
  2551                           
  2552                           ;mainsource.c: 98:     if(INTCONbits.TMR0IF){
  2553  0186  1D0B               	btfss	11,2	;volatile
  2554  0187  2989               	goto	u76_21
  2555  0188  298A               	goto	u76_20
  2556  0189                     u76_21:	
  2557  0189  29CB               	goto	i1l81
  2558  018A                     u76_20:	
  2559  018A                     i1l1215:	
  2560                           
  2561                           ;mainsource.c: 100:         INTCONbits.TMR0IF=0;
  2562  018A  110B               	bcf	11,2	;volatile
  2563  018B                     i1l1217:	
  2564                           
  2565                           ;mainsource.c: 101:         timerCount ++;
  2566  018B  3001               	movlw	1
  2567  018C  07D9               	addwf	_timerCount,f
  2568  018D  1803               	skipnc
  2569  018E  0ADA               	incf	_timerCount+1,f
  2570  018F  3000               	movlw	0
  2571  0190  07DA               	addwf	_timerCount+1,f
  2572                           
  2573                           ;mainsource.c: 102:         if(timerCount >= 3906){
  2574  0191  300F               	movlw	15
  2575  0192  025A               	subwf	_timerCount+1,w
  2576  0193  3042               	movlw	66
  2577  0194  1903               	skipnz
  2578  0195  0259               	subwf	_timerCount,w
  2579  0196  1C03               	skipc
  2580  0197  2999               	goto	u77_21
  2581  0198  299A               	goto	u77_20
  2582  0199                     u77_21:	
  2583  0199  29DE               	goto	i1l88
  2584  019A                     u77_20:	
  2585  019A                     i1l1219:	
  2586                           
  2587                           ;mainsource.c: 103:             PORTBbits.RB0 = con.led;
  2588  019A  0C53               	rrf	_con+2,w
  2589  019B  1C03               	skipc
  2590  019C  1006               	bcf	6,0	;volatile
  2591  019D  1803               	skipnc
  2592  019E  1406               	bsf	6,0	;volatile
  2593  019F                     i1l1221:	
  2594                           
  2595                           ;mainsource.c: 104:             con.led= ~con.led;
  2596  019F  0953               	comf	_con+2,w
  2597  01A0  00AD               	movwf	??_Timer0_ISR
  2598  01A1  082D               	movf	??_Timer0_ISR,w
  2599  01A2  00D3               	movwf	_con+2
  2600  01A3                     i1l1223:	
  2601                           
  2602                           ;mainsource.c: 105:             con.ficha_Vpos--;
  2603  01A3  3001               	movlw	1
  2604  01A4  02D4               	subwf	_con+3,f
  2605  01A5                     i1l1225:	
  2606                           
  2607                           ;mainsource.c: 106:             timerCount = 0;
  2608  01A5  01D9               	clrf	_timerCount
  2609  01A6  01DA               	clrf	_timerCount+1
  2610  01A7                     i1l1227:	
  2611                           
  2612                           ;mainsource.c: 107:             if(con.ficha_Vpos==0){
  2613  01A7  0854               	movf	_con+3,w
  2614  01A8  1D03               	btfss	3,2
  2615  01A9  29AB               	goto	u78_21
  2616  01AA  29AC               	goto	u78_20
  2617  01AB                     u78_21:	
  2618  01AB  29DE               	goto	i1l88
  2619  01AC                     u78_20:	
  2620  01AC                     i1l1229:	
  2621                           
  2622                           ;mainsource.c: 108:                 con.ficha_Vpos = 16;
  2623  01AC  3010               	movlw	16
  2624  01AD  00AD               	movwf	??_Timer0_ISR
  2625  01AE  082D               	movf	??_Timer0_ISR,w
  2626  01AF  00D4               	movwf	_con+3
  2627  01B0                     i1l1231:	
  2628                           
  2629                           ;mainsource.c: 109:                 con.ficha_actual = rand() % 5;
  2630  01B0  3005               	movlw	5
  2631  01B1  00A7               	movwf	___awmod@divisor
  2632  01B2  3000               	movlw	0
  2633  01B3  00A8               	movwf	___awmod@divisor+1
  2634  01B4  120A  118A  22D2  120A  118A  	fcall	_rand
  2635  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  2636  01BA  1303               	bcf	3,6	;RP1=0, select bank0
  2637  01BB  0821               	movf	?_rand+1,w
  2638  01BC  00AA               	movwf	___awmod@dividend+1
  2639  01BD  0820               	movf	?_rand,w
  2640  01BE  00A9               	movwf	___awmod@dividend
  2641  01BF  120A  118A  21E5  120A  118A  	fcall	___awmod
  2642  01C4  1283               	bcf	3,5	;RP0=0, select bank0
  2643  01C5  1303               	bcf	3,6	;RP1=0, select bank0
  2644  01C6  0827               	movf	?___awmod,w
  2645  01C7  00AD               	movwf	??_Timer0_ISR
  2646  01C8  082D               	movf	??_Timer0_ISR,w
  2647  01C9  00D6               	movwf	_con+5
  2648  01CA  29DE               	goto	i1l88
  2649  01CB                     i1l81:	
  2650                           ;mainsource.c: 113:     else if(INTCONbits.RBIF){
  2651                           
  2652  01CB  1C0B               	btfss	11,0	;volatile
  2653  01CC  29CE               	goto	u79_21
  2654  01CD  29CF               	goto	u79_20
  2655  01CE                     u79_21:	
  2656  01CE  29DE               	goto	i1l88
  2657  01CF                     u79_20:	
  2658  01CF                     i1l1233:	
  2659                           
  2660                           ;mainsource.c: 114:         if(PORTBbits.RB5 == 0){
  2661  01CF  1A86               	btfsc	6,5	;volatile
  2662  01D0  29D2               	goto	u80_21
  2663  01D1  29D3               	goto	u80_20
  2664  01D2                     u80_21:	
  2665  01D2  29D6               	goto	i1l1239
  2666  01D3                     u80_20:	
  2667  01D3                     i1l1235:	
  2668                           
  2669                           ;mainsource.c: 115:             con.derecha = 1;
  2670  01D3  01D7               	clrf	_con+6
  2671  01D4  0AD7               	incf	_con+6,f
  2672  01D5                     i1l1237:	
  2673                           
  2674                           ;mainsource.c: 116:             con.izquierda = 0;
  2675  01D5  01D8               	clrf	_con+7
  2676  01D6                     i1l1239:	
  2677                           
  2678                           ;mainsource.c: 118:         if(PORTBbits.RB4 == 0){
  2679  01D6  1A06               	btfsc	6,4	;volatile
  2680  01D7  29D9               	goto	u81_21
  2681  01D8  29DA               	goto	u81_20
  2682  01D9                     u81_21:	
  2683  01D9  29DD               	goto	i1l1245
  2684  01DA                     u81_20:	
  2685  01DA                     i1l1241:	
  2686                           
  2687                           ;mainsource.c: 119:             con.derecha = 0;
  2688  01DA  01D7               	clrf	_con+6
  2689  01DB                     i1l1243:	
  2690                           
  2691                           ;mainsource.c: 120:             con.izquierda = 1;
  2692  01DB  01D8               	clrf	_con+7
  2693  01DC  0AD8               	incf	_con+7,f
  2694  01DD                     i1l1245:	
  2695                           
  2696                           ;mainsource.c: 122:         INTCONbits.RBIF=0;
  2697  01DD  100B               	bcf	11,0	;volatile
  2698  01DE                     i1l88:	
  2699  01DE  082F               	movf	??_Timer0_ISR+2,w
  2700  01DF  008A               	movwf	10
  2701  01E0  0E2E               	swapf	(??_Timer0_ISR+1)^0,w
  2702  01E1  0083               	movwf	3
  2703  01E2  0EFE               	swapf	btemp,f
  2704  01E3  0E7E               	swapf	btemp,w
  2705  01E4  0009               	retfie
  2706  01E5                     __end_of_Timer0_ISR:	
  2707                           
  2708                           	psect	intentry
  2709  0004                     __pintentry:	
  2710                           ;incstack = 0
  2711                           ; Regs used in _Timer0_ISR: [wreg+status,2+status,0+pclath+cstack]
  2712                           
  2713  0004                     interrupt_function:	
  2714  007E                     saved_w	set	btemp
  2715  0004  00FE               	movwf	btemp
  2716  0005  0E03               	swapf	3,w
  2717  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2718  0007  1303               	bcf	3,6	;RP1=0, select bank0
  2719  0008  00AE               	movwf	??_Timer0_ISR+1
  2720  0009  080A               	movf	10,w
  2721  000A  00AF               	movwf	??_Timer0_ISR+2
  2722  000B  120A  118A  2986   	ljmp	_Timer0_ISR
  2723                           
  2724                           	psect	text18
  2725  02D2                     __ptext18:	
  2726 ;; *************** function _rand *****************
  2727 ;; Defined at:
  2728 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  2729 ;; Parameters:    Size  Location     Type
  2730 ;;		None
  2731 ;; Auto vars:     Size  Location     Type
  2732 ;;		None
  2733 ;; Return value:  Size  Location     Type
  2734 ;;                  2    0[BANK0 ] int 
  2735 ;; Registers used:
  2736 ;;		wreg, status,2, status,0, pclath, cstack
  2737 ;; Tracked objects:
  2738 ;;		On entry : 0/0
  2739 ;;		On exit  : 0/0
  2740 ;;		Unchanged: 0/0
  2741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2742 ;;      Params:         0       2       0       0       0
  2743 ;;      Locals:         0       0       0       0       0
  2744 ;;      Temps:          0       5       0       0       0
  2745 ;;      Totals:         0       7       0       0       0
  2746 ;;Total ram usage:        7 bytes
  2747 ;; Hardware stack levels used:    1
  2748 ;; Hardware stack levels required when called:    1
  2749 ;; This function calls:
  2750 ;;		___lmul
  2751 ;; This function is called by:
  2752 ;;		_Timer0_ISR
  2753 ;; This function uses a non-reentrant model
  2754 ;;
  2755                           
  2756                           
  2757                           ;psect for function _rand
  2758  02D2                     _rand:	
  2759  02D2                     i1l1139:	
  2760                           ;incstack = 0
  2761                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  2762                           
  2763  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  2764  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  2765  02D4  085E               	movf	_randx+3,w
  2766  02D5  00F3               	movwf	___lmul@multiplier+3
  2767  02D6  085D               	movf	_randx+2,w
  2768  02D7  00F2               	movwf	___lmul@multiplier+2
  2769  02D8  085C               	movf	_randx+1,w
  2770  02D9  00F1               	movwf	___lmul@multiplier+1
  2771  02DA  085B               	movf	_randx,w
  2772  02DB  00F0               	movwf	___lmul@multiplier
  2773  02DC  3041               	movlw	65
  2774  02DD  00F7               	movwf	___lmul@multiplicand+3
  2775  02DE  30C6               	movlw	198
  2776  02DF  00F6               	movwf	___lmul@multiplicand+2
  2777  02E0  304E               	movlw	78
  2778  02E1  00F5               	movwf	___lmul@multiplicand+1
  2779  02E2  306D               	movlw	109
  2780  02E3  00F4               	movwf	___lmul@multiplicand
  2781  02E4  120A  118A  2319  120A  118A  	fcall	___lmul
  2782  02E9  0873               	movf	?___lmul+3,w
  2783  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  2784  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  2785  02EC  00DE               	movwf	_randx+3
  2786  02ED  0872               	movf	?___lmul+2,w
  2787  02EE  00DD               	movwf	_randx+2
  2788  02EF  0871               	movf	?___lmul+1,w
  2789  02F0  00DC               	movwf	_randx+1
  2790  02F1  0870               	movf	?___lmul,w
  2791  02F2  00DB               	movwf	_randx
  2792  02F3                     i1l1141:	
  2793  02F3  3039               	movlw	57
  2794  02F4  07DB               	addwf	_randx,f
  2795  02F5  3030               	movlw	48
  2796  02F6  1803               	skipnc
  2797  02F7  3031               	movlw	49
  2798  02F8  07DC               	addwf	_randx+1,f
  2799  02F9  3000               	movlw	0
  2800  02FA  1803               	skipnc
  2801  02FB  3001               	movlw	1
  2802  02FC  07DD               	addwf	_randx+2,f
  2803  02FD  3000               	movlw	0
  2804  02FE  1803               	skipnc
  2805  02FF  3001               	movlw	1
  2806  0300  07DE               	addwf	_randx+3,f
  2807  0301                     i1l1143:	
  2808  0301  085B               	movf	_randx,w
  2809  0302  00A2               	movwf	??_rand
  2810  0303  085C               	movf	_randx+1,w
  2811  0304  00A3               	movwf	??_rand+1
  2812  0305  085D               	movf	_randx+2,w
  2813  0306  00A4               	movwf	??_rand+2
  2814  0307  085E               	movf	_randx+3,w
  2815  0308  00A5               	movwf	??_rand+3
  2816  0309  3010               	movlw	16
  2817  030A  00A6               	movwf	??_rand+4
  2818  030B                     u65_25:	
  2819  030B  0D25               	rlf	??_rand+3,w
  2820  030C  0CA5               	rrf	??_rand+3,f
  2821  030D  0CA4               	rrf	??_rand+2,f
  2822  030E  0CA3               	rrf	??_rand+1,f
  2823  030F  0CA2               	rrf	??_rand,f
  2824  0310                     u65_20:	
  2825  0310  0BA6               	decfsz	??_rand+4,f
  2826  0311  2B0B               	goto	u65_25
  2827  0312  30FF               	movlw	255
  2828  0313  0522               	andwf	??_rand,w
  2829  0314  00A0               	movwf	?_rand
  2830  0315  307F               	movlw	127
  2831  0316  0523               	andwf	??_rand+1,w
  2832  0317  00A1               	movwf	?_rand+1
  2833  0318                     i1l693:	
  2834  0318  0008               	return
  2835  0319                     __end_of_rand:	
  2836                           
  2837                           	psect	text19
  2838  0319                     __ptext19:	
  2839 ;; *************** function ___lmul *****************
  2840 ;; Defined at:
  2841 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  2842 ;; Parameters:    Size  Location     Type
  2843 ;;  multiplier      4    0[COMMON] unsigned long 
  2844 ;;  multiplicand    4    4[COMMON] unsigned long 
  2845 ;; Auto vars:     Size  Location     Type
  2846 ;;  product         4    9[COMMON] unsigned long 
  2847 ;; Return value:  Size  Location     Type
  2848 ;;                  4    0[COMMON] unsigned long 
  2849 ;; Registers used:
  2850 ;;		wreg, status,2, status,0
  2851 ;; Tracked objects:
  2852 ;;		On entry : 0/0
  2853 ;;		On exit  : 0/0
  2854 ;;		Unchanged: 0/0
  2855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2856 ;;      Params:         8       0       0       0       0
  2857 ;;      Locals:         4       0       0       0       0
  2858 ;;      Temps:          1       0       0       0       0
  2859 ;;      Totals:        13       0       0       0       0
  2860 ;;Total ram usage:       13 bytes
  2861 ;; Hardware stack levels used:    1
  2862 ;; This function calls:
  2863 ;;		Nothing
  2864 ;; This function is called by:
  2865 ;;		_rand
  2866 ;; This function uses a non-reentrant model
  2867 ;;
  2868                           
  2869                           
  2870                           ;psect for function ___lmul
  2871  0319                     ___lmul:	
  2872  0319                     i1l1059:	
  2873                           ;incstack = 0
  2874                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2875                           
  2876  0319  3000               	movlw	0
  2877  031A  00FC               	movwf	___lmul@product+3
  2878  031B  3000               	movlw	0
  2879  031C  00FB               	movwf	___lmul@product+2
  2880  031D  3000               	movlw	0
  2881  031E  00FA               	movwf	___lmul@product+1
  2882  031F  3000               	movlw	0
  2883  0320  00F9               	movwf	___lmul@product
  2884  0321                     i1l1061:	
  2885  0321  1C70               	btfss	___lmul@multiplier,0
  2886  0322  2B24               	goto	u47_21
  2887  0323  2B25               	goto	u47_20
  2888  0324                     u47_21:	
  2889  0324  2B3C               	goto	i1l1065
  2890  0325                     u47_20:	
  2891  0325                     i1l1063:	
  2892  0325  0874               	movf	___lmul@multiplicand,w
  2893  0326  07F9               	addwf	___lmul@product,f
  2894  0327  0875               	movf	___lmul@multiplicand+1,w
  2895  0328  1103               	clrz
  2896  0329  1803               	skipnc
  2897  032A  3E01               	addlw	1
  2898  032B  1903               	skipnz
  2899  032C  2B2E               	goto	u48_21
  2900  032D  07FA               	addwf	___lmul@product+1,f
  2901  032E                     u48_21:	
  2902  032E  0876               	movf	___lmul@multiplicand+2,w
  2903  032F  1103               	clrz
  2904  0330  1803               	skipnc
  2905  0331  3E01               	addlw	1
  2906  0332  1903               	skipnz
  2907  0333  2B35               	goto	u48_22
  2908  0334  07FB               	addwf	___lmul@product+2,f
  2909  0335                     u48_22:	
  2910  0335  0877               	movf	___lmul@multiplicand+3,w
  2911  0336  1103               	clrz
  2912  0337  1803               	skipnc
  2913  0338  3E01               	addlw	1
  2914  0339  1903               	skipnz
  2915  033A  2B3C               	goto	u48_23
  2916  033B  07FC               	addwf	___lmul@product+3,f
  2917  033C                     u48_23:	
  2918  033C                     i1l1065:	
  2919  033C  3001               	movlw	1
  2920  033D  00F8               	movwf	??___lmul
  2921  033E                     u49_25:	
  2922  033E  1003               	clrc
  2923  033F  0DF4               	rlf	___lmul@multiplicand,f
  2924  0340  0DF5               	rlf	___lmul@multiplicand+1,f
  2925  0341  0DF6               	rlf	___lmul@multiplicand+2,f
  2926  0342  0DF7               	rlf	___lmul@multiplicand+3,f
  2927  0343  0BF8               	decfsz	??___lmul,f
  2928  0344  2B3E               	goto	u49_25
  2929  0345                     i1l1067:	
  2930  0345  3001               	movlw	1
  2931  0346                     u50_25:	
  2932  0346  1003               	clrc
  2933  0347  0CF3               	rrf	___lmul@multiplier+3,f
  2934  0348  0CF2               	rrf	___lmul@multiplier+2,f
  2935  0349  0CF1               	rrf	___lmul@multiplier+1,f
  2936  034A  0CF0               	rrf	___lmul@multiplier,f
  2937  034B  3EFF               	addlw	-1
  2938  034C  1D03               	skipz
  2939  034D  2B46               	goto	u50_25
  2940  034E  0873               	movf	___lmul@multiplier+3,w
  2941  034F  0472               	iorwf	___lmul@multiplier+2,w
  2942  0350  0471               	iorwf	___lmul@multiplier+1,w
  2943  0351  0470               	iorwf	___lmul@multiplier,w
  2944  0352  1D03               	skipz
  2945  0353  2B55               	goto	u51_21
  2946  0354  2B56               	goto	u51_20
  2947  0355                     u51_21:	
  2948  0355  2B21               	goto	i1l1061
  2949  0356                     u51_20:	
  2950  0356                     i1l1069:	
  2951  0356  087C               	movf	___lmul@product+3,w
  2952  0357  00F3               	movwf	?___lmul+3
  2953  0358  087B               	movf	___lmul@product+2,w
  2954  0359  00F2               	movwf	?___lmul+2
  2955  035A  087A               	movf	___lmul@product+1,w
  2956  035B  00F1               	movwf	?___lmul+1
  2957  035C  0879               	movf	___lmul@product,w
  2958  035D  00F0               	movwf	?___lmul
  2959  035E                     i1l251:	
  2960  035E  0008               	return
  2961  035F                     __end_of___lmul:	
  2962                           
  2963                           	psect	text20
  2964  01E5                     __ptext20:	
  2965 ;; *************** function ___awmod *****************
  2966 ;; Defined at:
  2967 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  2968 ;; Parameters:    Size  Location     Type
  2969 ;;  divisor         2    7[BANK0 ] int 
  2970 ;;  dividend        2    9[BANK0 ] int 
  2971 ;; Auto vars:     Size  Location     Type
  2972 ;;  sign            1   12[BANK0 ] unsigned char 
  2973 ;;  counter         1   11[BANK0 ] unsigned char 
  2974 ;; Return value:  Size  Location     Type
  2975 ;;                  2    7[BANK0 ] int 
  2976 ;; Registers used:
  2977 ;;		wreg, status,2, status,0
  2978 ;; Tracked objects:
  2979 ;;		On entry : 0/0
  2980 ;;		On exit  : 0/0
  2981 ;;		Unchanged: 0/0
  2982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2983 ;;      Params:         0       4       0       0       0
  2984 ;;      Locals:         0       2       0       0       0
  2985 ;;      Temps:          1       0       0       0       0
  2986 ;;      Totals:         1       6       0       0       0
  2987 ;;Total ram usage:        7 bytes
  2988 ;; Hardware stack levels used:    1
  2989 ;; This function calls:
  2990 ;;		Nothing
  2991 ;; This function is called by:
  2992 ;;		_Timer0_ISR
  2993 ;; This function uses a non-reentrant model
  2994 ;;
  2995                           
  2996                           
  2997                           ;psect for function ___awmod
  2998  01E5                     ___awmod:	
  2999  01E5                     i1l1147:	
  3000                           ;incstack = 0
  3001                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3002                           
  3003  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  3004  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  3005  01E7  01AC               	clrf	___awmod@sign
  3006  01E8                     i1l1149:	
  3007  01E8  1FAA               	btfss	___awmod@dividend+1,7
  3008  01E9  29EB               	goto	u66_21
  3009  01EA  29EC               	goto	u66_20
  3010  01EB                     u66_21:	
  3011  01EB  29F3               	goto	i1l1155
  3012  01EC                     u66_20:	
  3013  01EC                     i1l1151:	
  3014  01EC  09A9               	comf	___awmod@dividend,f
  3015  01ED  09AA               	comf	___awmod@dividend+1,f
  3016  01EE  0AA9               	incf	___awmod@dividend,f
  3017  01EF  1903               	skipnz
  3018  01F0  0AAA               	incf	___awmod@dividend+1,f
  3019  01F1                     i1l1153:	
  3020  01F1  01AC               	clrf	___awmod@sign
  3021  01F2  0AAC               	incf	___awmod@sign,f
  3022  01F3                     i1l1155:	
  3023  01F3  1FA8               	btfss	___awmod@divisor+1,7
  3024  01F4  29F6               	goto	u67_21
  3025  01F5  29F7               	goto	u67_20
  3026  01F6                     u67_21:	
  3027  01F6  29FC               	goto	i1l1159
  3028  01F7                     u67_20:	
  3029  01F7                     i1l1157:	
  3030  01F7  09A7               	comf	___awmod@divisor,f
  3031  01F8  09A8               	comf	___awmod@divisor+1,f
  3032  01F9  0AA7               	incf	___awmod@divisor,f
  3033  01FA  1903               	skipnz
  3034  01FB  0AA8               	incf	___awmod@divisor+1,f
  3035  01FC                     i1l1159:	
  3036  01FC  0827               	movf	___awmod@divisor,w
  3037  01FD  0428               	iorwf	___awmod@divisor+1,w
  3038  01FE  1903               	btfsc	3,2
  3039  01FF  2A01               	goto	u68_21
  3040  0200  2A02               	goto	u68_20
  3041  0201                     u68_21:	
  3042  0201  2A31               	goto	i1l1177
  3043  0202                     u68_20:	
  3044  0202                     i1l1161:	
  3045  0202  01AB               	clrf	___awmod@counter
  3046  0203  0AAB               	incf	___awmod@counter,f
  3047  0204  2A10               	goto	i1l1167
  3048  0205                     i1l1163:	
  3049  0205  3001               	movlw	1
  3050  0206                     u69_25:	
  3051  0206  1003               	clrc
  3052  0207  0DA7               	rlf	___awmod@divisor,f
  3053  0208  0DA8               	rlf	___awmod@divisor+1,f
  3054  0209  3EFF               	addlw	-1
  3055  020A  1D03               	skipz
  3056  020B  2A06               	goto	u69_25
  3057  020C                     i1l1165:	
  3058  020C  3001               	movlw	1
  3059  020D  00FD               	movwf	??___awmod
  3060  020E  087D               	movf	??___awmod,w
  3061  020F  07AB               	addwf	___awmod@counter,f
  3062  0210                     i1l1167:	
  3063  0210  1FA8               	btfss	___awmod@divisor+1,7
  3064  0211  2A13               	goto	u70_21
  3065  0212  2A14               	goto	u70_20
  3066  0213                     u70_21:	
  3067  0213  2A05               	goto	i1l1163
  3068  0214                     u70_20:	
  3069  0214                     i1l1169:	
  3070  0214  0828               	movf	___awmod@divisor+1,w
  3071  0215  022A               	subwf	___awmod@dividend+1,w
  3072  0216  1D03               	skipz
  3073  0217  2A1A               	goto	u71_25
  3074  0218  0827               	movf	___awmod@divisor,w
  3075  0219  0229               	subwf	___awmod@dividend,w
  3076  021A                     u71_25:	
  3077  021A  1C03               	skipc
  3078  021B  2A1D               	goto	u71_21
  3079  021C  2A1E               	goto	u71_20
  3080  021D                     u71_21:	
  3081  021D  2A24               	goto	i1l1173
  3082  021E                     u71_20:	
  3083  021E                     i1l1171:	
  3084  021E  0827               	movf	___awmod@divisor,w
  3085  021F  02A9               	subwf	___awmod@dividend,f
  3086  0220  0828               	movf	___awmod@divisor+1,w
  3087  0221  1C03               	skipc
  3088  0222  03AA               	decf	___awmod@dividend+1,f
  3089  0223  02AA               	subwf	___awmod@dividend+1,f
  3090  0224                     i1l1173:	
  3091  0224  3001               	movlw	1
  3092  0225                     u72_25:	
  3093  0225  1003               	clrc
  3094  0226  0CA8               	rrf	___awmod@divisor+1,f
  3095  0227  0CA7               	rrf	___awmod@divisor,f
  3096  0228  3EFF               	addlw	-1
  3097  0229  1D03               	skipz
  3098  022A  2A25               	goto	u72_25
  3099  022B                     i1l1175:	
  3100  022B  3001               	movlw	1
  3101  022C  02AB               	subwf	___awmod@counter,f
  3102  022D  1D03               	btfss	3,2
  3103  022E  2A30               	goto	u73_21
  3104  022F  2A31               	goto	u73_20
  3105  0230                     u73_21:	
  3106  0230  2A14               	goto	i1l1169
  3107  0231                     u73_20:	
  3108  0231                     i1l1177:	
  3109  0231  082C               	movf	___awmod@sign,w
  3110  0232  1903               	btfsc	3,2
  3111  0233  2A35               	goto	u74_21
  3112  0234  2A36               	goto	u74_20
  3113  0235                     u74_21:	
  3114  0235  2A3B               	goto	i1l1181
  3115  0236                     u74_20:	
  3116  0236                     i1l1179:	
  3117  0236  09A9               	comf	___awmod@dividend,f
  3118  0237  09AA               	comf	___awmod@dividend+1,f
  3119  0238  0AA9               	incf	___awmod@dividend,f
  3120  0239  1903               	skipnz
  3121  023A  0AAA               	incf	___awmod@dividend+1,f
  3122  023B                     i1l1181:	
  3123  023B  082A               	movf	___awmod@dividend+1,w
  3124  023C  00A8               	movwf	?___awmod+1
  3125  023D  0829               	movf	___awmod@dividend,w
  3126  023E  00A7               	movwf	?___awmod
  3127  023F                     i1l403:	
  3128  023F  0008               	return
  3129  0240                     __end_of___awmod:	
  3130  007E                     btemp	set	126	;btemp
  3131  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        52
    BSS         58
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     33      63
    BANK1            80      0      80
    BANK3            96     13      13
    BANK2            96      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(1) Largest target is 16
		 -> ficha(BANK1[16]), 

    memset@p	PTR unsigned char  size(1) Largest target is 16
		 -> ficha(BANK1[16]), 

    sp__memset	PTR void  size(1) Largest target is 16
		 -> ficha(BANK1[16]), 

    updateScreen@screen	PTR unsigned int  size(1) Largest target is 16
		 -> pantalla(BANK1[16]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _Timer0_ISR in COMMON

    _Timer0_ISR->___awmod
    _rand->___lmul

Critical Paths under _main in BANK0

    _main->_updateScreen
    _updateScreen->_setFilas
    _drawFigure->_memset

Critical Paths under _Timer0_ISR in BANK0

    _Timer0_ISR->___awmod
    ___awmod->_rand

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer0_ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    11      4     809
                                             31 BANK0      2     2      0
                                              0 BANK3     13     9      4
                        _drawBground
                         _drawFigure
                     _init_interrupt
                         _init_pines
                         _init_timer
                       _updateScreen
 ---------------------------------------------------------------------------------
 (1) _updateScreen                                         5     5      0     364
                                             26 BANK0      5     5      0
                           _setFilas
                    _shiftBitColumna
 ---------------------------------------------------------------------------------
 (2) _shiftBitColumna                                      2     2      0      22
                                             16 BANK0      2     2      0
                     _latchClock_Col
                     _latchClock_Fil
                     _shiftClock_Col
 ---------------------------------------------------------------------------------
 (3) _shiftClock_Col                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _latchClock_Fil                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _latchClock_Col                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setFilas                                            10     8      2     265
                                             16 BANK0     10     8      2
                     _shiftClock_Fil
 ---------------------------------------------------------------------------------
 (3) _shiftClock_Fil                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_timer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_pines                                           0     0      0       0
                     _init_pines_col
                     _init_pines_fil
                      _init_pines_in
 ---------------------------------------------------------------------------------
 (2) _init_pines_in                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_pines_fil                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_pines_col                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_interrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _drawFigure                                           5     5      0     281
                                             23 BANK0      5     5      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               7     3      4     281
                                             16 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _drawBground                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Timer0_ISR                                           3     3      0     692
                                             13 BANK0      3     3      0
                            ___awmod
                               _rand
 ---------------------------------------------------------------------------------
 (5) _rand                                                 7     5      2     244
                                              0 BANK0      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     448
                                             13 COMMON     1     1      0
                                              7 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _drawBground
   _drawFigure
     _memset
   _init_interrupt
   _init_pines
     _init_pines_col
     _init_pines_fil
     _init_pines_in
   _init_timer
   _updateScreen
     _setFilas
       _shiftClock_Fil
     _shiftBitColumna
       _latchClock_Col
       _latchClock_Fil
       _shiftClock_Col

 _Timer0_ISR (ROOT)
   ___awmod
     _rand (ARG)
       ___lmul
   _rand
     ___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      D       D       9       13.5%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      50       7      100.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     21      3F       5       78.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      AA      12        0.0%
ABS                  0      0      AA       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat May 02 13:17:25 2020

                       pc 0002               __CFG_CP$OFF 0000          ??_init_interrupt 0030  
                      l21 0449                        l30 0423                        l24 043E  
                      l33 0459                        l27 0413                        l36 0431  
                      l93 0465                        l96 046B                        fsr 0004  
        ??_init_pines_col 0030          ??_init_pines_fil 0030                       l101 02D1  
                     l111 045F                       l108 0470                       l142 028A  
                     l151 0104                       l119 03ED                       l145 03D1  
                     l685 03B0                       u430 029E                       u431 029D  
                     u520 0056                       u521 0055                       u530 005C  
            __CFG_CPD$OFF 0000                       u531 005B                       u435 029A  
                     u460 03B0                       u540 0067                       u444 02AB  
                     u461 03AF                       u605 00C1                       u541 0066  
                     u445 02A8                       u614 00D3                       u550 006C  
                     u454 02B8                       u615 00D0                       u551 006B  
                     u455 02B5                       u640 0249                       u625 00E6  
                     u641 0248                       u634 00F8                       u635 00F5  
                     u565 0076                       u574 0089                       u575 0086  
                     u585 009C                       u594 00AE                       u850 017C  
                     u595 00AB                       u851 017B                       u855 0178  
                     _con 0051                       fsr0 0004                       indf 0000  
            ___awmod@sign 002C              __CFG_FOSC$XT 0000              __CFG_LVP$OFF 0000  
                    l1101 004F                      l1021 045A                      l1111 0067  
                    l1103 0056                      l1023 043F                      l1031 0291  
                    l1015 0460                      l1121 00BA                      l1113 006C  
                    l1105 005C                      l1025 0432                      l1017 0466  
                    l1051 0392                      l1123 00DF                      l1115 006E  
                    l1107 0060                      l1027 0401                      l1035 029F  
                    l1019 046C                      l1043 03D5                      l1131 0262  
                    l1053 0397                      l1117 006F                      l1109 0062  
                    l1037 02C3                      l1029 028B                      l1045 03DE  
                    l1133 0269                      l1125 0243                      l1055 039E  
                    l1119 0095                      l1039 02C8                      l1047 03E3  
                    l1135 026D                      l1127 0249                      l1057 03A2  
                    l1073 0414                      l1081 0428                      l1049 03E8  
                    l1137 0284                      l1129 024B                      l1075 0452  
                    l1091 042F                      l1083 0429                      l1093 0430  
                    l1085 042A                      l1077 0424                      l1095 03B1  
                    l1087 042D                      l1079 0427                      l1097 03CF  
                    l1089 042E                      l1281 0120                      l1273 0105  
                    l1099 0040                      l1283 0128                      l1275 0114  
                    l1293 0136                      l1285 012D                      l1277 0114  
                    l1295 0167                      l1287 0132                      l1279 0118  
                    l1297 016F                      l1299 017C                      i1l81 01CB  
                    i1l88 01DE                      _TMR0 0001              __CFG_WRT$OFF 0000  
                    _main 0105                      _rand 02D2                      btemp 007E  
           __CFG_BOREN$ON 0000                      start 000E        shiftBitColumna@bit 0031  
                   ?_main 0190                     ?_rand 0020             __CFG_WDTE$OFF 0000  
         __end_of___awmod 0240                     i1l403 023F                     i1l251 035E  
                   i1l693 0318                     u50_25 0346                     u51_20 0356  
                   u51_21 0355                     u70_20 0214                     u70_21 0213  
                   u71_20 021E                     u47_20 0325                     u71_21 021D  
                   u47_21 0324                     u71_25 021A                     u80_20 01D3  
                   u48_21 032E                     u80_21 01D2                     u48_22 0335  
                   u48_23 033C                     u72_25 0225                     u73_20 0231  
                   u65_20 0310                     u81_20 01DA                     u73_21 0230  
                   u81_21 01D9                     u49_25 033E                     u65_25 030B  
                   u74_20 0236                     u66_20 01EC                     u74_21 0235  
                   u66_21 01EB                     u67_20 01F7                     u67_21 01F6  
                   u68_20 0202                     u76_20 018A                     u68_21 0201  
                   u76_21 0189                     u77_20 019A                     u77_21 0199  
                   u69_25 0206                     u78_20 01AC                     u78_21 01AB  
                   u79_20 01CF                     u79_21 01CE       ___lmul@multiplicand 0074  
                   _ficha 00D0                     _fondo 0041                     _randx 005B  
                   main@i 003F                     pclath 000A                     status 0003  
                   wtemp0 007E           __initialization 0011              __end_of_main 0186  
            __end_of_rand 0319            _latchClock_Fil 0460            _latchClock_Col 046C  
 __size_of_shiftClock_Fil 0006   __size_of_shiftClock_Col 0006                    ??_main 0194  
                  ??_rand 0022                    i1l1061 0321                    i1l1141 02F3  
                  i1l1221 019F                    i1l1213 0186                    i1l1151 01EC  
                  i1l1063 0325                    i1l1143 0301                    i1l1231 01B0  
                  i1l1223 01A3                    i1l1215 018A                    i1l1161 0202  
                  i1l1153 01F1                    i1l1065 033C                    i1l1241 01DA  
                  i1l1233 01CF                    i1l1225 01A5                    i1l1217 018B  
                  i1l1171 021E                    i1l1163 0205                    i1l1155 01F3  
                  i1l1147 01E5                    i1l1067 0345                    i1l1059 0319  
                  i1l1139 02D2                    i1l1243 01DB                    i1l1235 01D3  
                  i1l1227 01A7                    i1l1219 019A                    i1l1181 023B  
                  i1l1173 0224                    i1l1165 020C                    i1l1157 01F7  
                  i1l1149 01E8                    i1l1069 0356                    i1l1245 01DD  
                  i1l1237 01D5                    i1l1229 01AC                    i1l1175 022B  
                  i1l1167 0210                    i1l1159 01FC                    i1l1239 01D6  
                  i1l1169 0214                    i1l1177 0231                    i1l1179 0236  
          __CFG_PWRTE$OFF 0000      __size_of_drawBground 0021                _Timer0_ISR 0186  
  __end_of_latchClock_Col 0471    __end_of_latchClock_Fil 0466                    ___lmul 0319  
               ??___awmod 007D                    _memset 038F           ___awmod@divisor 0027  
         ___awmod@counter 002B          __end_of_setFilas 02D2    __size_of_init_pines_in 000B  
                  saved_w 007E   __end_of__initialization 003C  __size_of_shiftBitColumna 001C  
      updateScreen@screen 003E           ?_latchClock_Col 0070           ?_latchClock_Fil 0070  
          __pcstackCOMMON 0070              __pidataBANK0 0471              __pidataBANK1 035F  
          _OPTION_REGbits 0081                __pbssBANK0 0041                __pbssBANK1 00D0  
           _init_pines_in 043F               ?_Timer0_ISR 0070                __pmaintext 0105  
                 ?___lmul 0070                __pintentry 0004            _shiftClock_Fil 0466  
          _shiftClock_Col 045A                   ?_memset 0030            ___lmul@product 0079  
              _drawFigure 0040            ?_init_pines_in 0070                 ?_setFilas 0030  
  __end_of_shiftClock_Fil 046C    __end_of_shiftClock_Col 0460           __size_of___lmul 0046  
                 ___awmod 01E5         ??_shiftBitColumna 0030                _init_pines 0414  
              _init_timer 0424           __size_of_memset 0022                   __ptext1 0240  
                 __ptext2 03D2                   __ptext3 045A                   __ptext4 0460  
                 __ptext5 046C                   __ptext6 028B                   __ptext7 0466  
                 __ptext8 0424                   __ptext9 0414                   _figuras 00A0  
        ___awmod@dividend 0029       __size_of_Timer0_ISR 005F   __size_of_init_interrupt 0008  
                 clrloop0 044B      end_of_initialization 003C   __size_of_init_pines_col 0013  
 __size_of_init_pines_fil 000D                   memset@c 0030                   memset@n 0032  
                 memset@p 0036                ??_setFilas 0032           ?_shiftClock_Col 0070  
         ?_shiftClock_Fil 0070                _timerCount 0059                 _PORTBbits 0006  
               _PORTCbits 0007                 _PORTDbits 0008               ?_drawFigure 0070  
               _TRISBbits 0086                 _TRISCbits 0087                 _TRISDbits 0088  
         ??_init_pines_in 0030             ??_drawBground 0030          ??_latchClock_Col 0030  
        ??_latchClock_Fil 0030             ?_updateScreen 0070            __end_of___lmul 035F  
             ?_init_pines 0070               ?_init_timer 0070            __end_of_memset 03B1  
     start_initialization 0011            ??_updateScreen 003A              ??_Timer0_ISR 002D  
     __size_of_drawFigure 00C5       __end_of_drawBground 03D2                  ??___lmul 0078  
       setFilas@reg_value 0030                init_fetch0 03EE               __pdataBANK0 005B  
             __pdataBANK1 00A0                  ??_memset 0034                 ___latbits 0002  
           __pcstackBANK0 0020             __pcstackBANK3 0190            _init_interrupt 0452  
      __end_of_Timer0_ISR 01E5            _init_pines_fil 0432            _init_pines_col 0401  
     __size_of_init_pines 0010           _shiftBitColumna 03D2       __size_of_init_timer 000E  
       __size_of_setFilas 0047                  ?___awmod 0027    __end_of_init_interrupt 045A  
  __end_of_init_pines_col 0414    __end_of_init_pines_fil 043F         interrupt_function 0004  
             _drawBground 03B1          ??_shiftClock_Col 0030          ??_shiftClock_Fil 0030  
               clear_ram0 044A           ?_init_interrupt 0070              ??_drawFigure 0037  
    __end_of_updateScreen 028B           ?_init_pines_col 0070           ?_init_pines_fil 0070  
 __end_of_shiftBitColumna 03EE         ___lmul@multiplier 0070        __end_of_drawFigure 0105  
        __size_of___awmod 005B              ??_init_pines 0030              ??_init_timer 0030  
               setFilas@i 0038                  __ptext10 043F                  __ptext11 0432  
                __ptext20 01E5                  __ptext12 0401                  __ptext13 0452  
                __ptext14 0040                  __ptext15 038F                  __ptext16 03B1  
                __ptext17 0186                  __ptext18 02D2                  __ptext19 0319  
   __end_of_init_pines_in 044A             __size_of_main 0081             __size_of_rand 0047  
      __end_of_init_pines 0424        __end_of_init_timer 0432                  _pantalla 00E0  
                _setFilas 028B                  main@argc 0190                  main@argv 0192  
              _INTCONbits 000B                  init_ram0 03F2                  memset@p1 0035  
        ?_shiftBitColumna 0070                  intlevel1 0000   __size_of_latchClock_Col 0005  
 __size_of_latchClock_Fil 0006     __size_of_updateScreen 004B              ?_drawBground 0070  
            _updateScreen 0240  
