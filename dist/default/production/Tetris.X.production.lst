

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun May 03 14:54:17 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK3,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.10
    41                           ; Generated 31/07/2019 GMT
    42                           ; 
    43                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F877A Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  000E                     	;# 
    90  000F                     	;# 
    91  0010                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0015                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  001D                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  0081                     	;# 
   110  0085                     	;# 
   111  0086                     	;# 
   112  0087                     	;# 
   113  0088                     	;# 
   114  0089                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0094                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009C                     	;# 
   185  009D                     	;# 
   186  009E                     	;# 
   187  009F                     	;# 
   188  010C                     	;# 
   189  010D                     	;# 
   190  010E                     	;# 
   191  010F                     	;# 
   192  018C                     	;# 
   193  018D                     	;# 
   194  0000                     	;# 
   195  0001                     	;# 
   196  0002                     	;# 
   197  0003                     	;# 
   198  0004                     	;# 
   199  0005                     	;# 
   200  0006                     	;# 
   201  0007                     	;# 
   202  0008                     	;# 
   203  0009                     	;# 
   204  000A                     	;# 
   205  000B                     	;# 
   206  000C                     	;# 
   207  000D                     	;# 
   208  000E                     	;# 
   209  000E                     	;# 
   210  000F                     	;# 
   211  0010                     	;# 
   212  0011                     	;# 
   213  0012                     	;# 
   214  0013                     	;# 
   215  0014                     	;# 
   216  0015                     	;# 
   217  0015                     	;# 
   218  0016                     	;# 
   219  0017                     	;# 
   220  0018                     	;# 
   221  0019                     	;# 
   222  001A                     	;# 
   223  001B                     	;# 
   224  001B                     	;# 
   225  001C                     	;# 
   226  001D                     	;# 
   227  001E                     	;# 
   228  001F                     	;# 
   229  0081                     	;# 
   230  0085                     	;# 
   231  0086                     	;# 
   232  0087                     	;# 
   233  0088                     	;# 
   234  0089                     	;# 
   235  008C                     	;# 
   236  008D                     	;# 
   237  008E                     	;# 
   238  0091                     	;# 
   239  0092                     	;# 
   240  0093                     	;# 
   241  0094                     	;# 
   242  0098                     	;# 
   243  0099                     	;# 
   244  009C                     	;# 
   245  009D                     	;# 
   246  009E                     	;# 
   247  009F                     	;# 
   248  010C                     	;# 
   249  010D                     	;# 
   250  010E                     	;# 
   251  010F                     	;# 
   252  018C                     	;# 
   253  018D                     	;# 
   254  0000                     	;# 
   255  0001                     	;# 
   256  0002                     	;# 
   257  0003                     	;# 
   258  0004                     	;# 
   259  0005                     	;# 
   260  0006                     	;# 
   261  0007                     	;# 
   262  0008                     	;# 
   263  0009                     	;# 
   264  000A                     	;# 
   265  000B                     	;# 
   266  000C                     	;# 
   267  000D                     	;# 
   268  000E                     	;# 
   269  000E                     	;# 
   270  000F                     	;# 
   271  0010                     	;# 
   272  0011                     	;# 
   273  0012                     	;# 
   274  0013                     	;# 
   275  0014                     	;# 
   276  0015                     	;# 
   277  0015                     	;# 
   278  0016                     	;# 
   279  0017                     	;# 
   280  0018                     	;# 
   281  0019                     	;# 
   282  001A                     	;# 
   283  001B                     	;# 
   284  001B                     	;# 
   285  001C                     	;# 
   286  001D                     	;# 
   287  001E                     	;# 
   288  001F                     	;# 
   289  0081                     	;# 
   290  0085                     	;# 
   291  0086                     	;# 
   292  0087                     	;# 
   293  0088                     	;# 
   294  0089                     	;# 
   295  008C                     	;# 
   296  008D                     	;# 
   297  008E                     	;# 
   298  0091                     	;# 
   299  0092                     	;# 
   300  0093                     	;# 
   301  0094                     	;# 
   302  0098                     	;# 
   303  0099                     	;# 
   304  009C                     	;# 
   305  009D                     	;# 
   306  009E                     	;# 
   307  009F                     	;# 
   308  010C                     	;# 
   309  010D                     	;# 
   310  010E                     	;# 
   311  010F                     	;# 
   312  018C                     	;# 
   313  018D                     	;# 
   314  0000                     	;# 
   315  0001                     	;# 
   316  0002                     	;# 
   317  0003                     	;# 
   318  0004                     	;# 
   319  0005                     	;# 
   320  0006                     	;# 
   321  0007                     	;# 
   322  0008                     	;# 
   323  0009                     	;# 
   324  000A                     	;# 
   325  000B                     	;# 
   326  000C                     	;# 
   327  000D                     	;# 
   328  000E                     	;# 
   329  000E                     	;# 
   330  000F                     	;# 
   331  0010                     	;# 
   332  0011                     	;# 
   333  0012                     	;# 
   334  0013                     	;# 
   335  0014                     	;# 
   336  0015                     	;# 
   337  0015                     	;# 
   338  0016                     	;# 
   339  0017                     	;# 
   340  0018                     	;# 
   341  0019                     	;# 
   342  001A                     	;# 
   343  001B                     	;# 
   344  001B                     	;# 
   345  001C                     	;# 
   346  001D                     	;# 
   347  001E                     	;# 
   348  001F                     	;# 
   349  0081                     	;# 
   350  0085                     	;# 
   351  0086                     	;# 
   352  0087                     	;# 
   353  0088                     	;# 
   354  0089                     	;# 
   355  008C                     	;# 
   356  008D                     	;# 
   357  008E                     	;# 
   358  0091                     	;# 
   359  0092                     	;# 
   360  0093                     	;# 
   361  0094                     	;# 
   362  0098                     	;# 
   363  0099                     	;# 
   364  009C                     	;# 
   365  009D                     	;# 
   366  009E                     	;# 
   367  009F                     	;# 
   368  010C                     	;# 
   369  010D                     	;# 
   370  010E                     	;# 
   371  010F                     	;# 
   372  018C                     	;# 
   373  018D                     	;# 
   374  0000                     	;# 
   375  0001                     	;# 
   376  0002                     	;# 
   377  0003                     	;# 
   378  0004                     	;# 
   379  0005                     	;# 
   380  0006                     	;# 
   381  0007                     	;# 
   382  0008                     	;# 
   383  0009                     	;# 
   384  000A                     	;# 
   385  000B                     	;# 
   386  000C                     	;# 
   387  000D                     	;# 
   388  000E                     	;# 
   389  000E                     	;# 
   390  000F                     	;# 
   391  0010                     	;# 
   392  0011                     	;# 
   393  0012                     	;# 
   394  0013                     	;# 
   395  0014                     	;# 
   396  0015                     	;# 
   397  0015                     	;# 
   398  0016                     	;# 
   399  0017                     	;# 
   400  0018                     	;# 
   401  0019                     	;# 
   402  001A                     	;# 
   403  001B                     	;# 
   404  001B                     	;# 
   405  001C                     	;# 
   406  001D                     	;# 
   407  001E                     	;# 
   408  001F                     	;# 
   409  0081                     	;# 
   410  0085                     	;# 
   411  0086                     	;# 
   412  0087                     	;# 
   413  0088                     	;# 
   414  0089                     	;# 
   415  008C                     	;# 
   416  008D                     	;# 
   417  008E                     	;# 
   418  0091                     	;# 
   419  0092                     	;# 
   420  0093                     	;# 
   421  0094                     	;# 
   422  0098                     	;# 
   423  0099                     	;# 
   424  009C                     	;# 
   425  009D                     	;# 
   426  009E                     	;# 
   427  009F                     	;# 
   428  010C                     	;# 
   429  010D                     	;# 
   430  010E                     	;# 
   431  010F                     	;# 
   432  018C                     	;# 
   433  018D                     	;# 
   434  0000                     	;# 
   435  0001                     	;# 
   436  0002                     	;# 
   437  0003                     	;# 
   438  0004                     	;# 
   439  0005                     	;# 
   440  0006                     	;# 
   441  0007                     	;# 
   442  0008                     	;# 
   443  0009                     	;# 
   444  000A                     	;# 
   445  000B                     	;# 
   446  000C                     	;# 
   447  000D                     	;# 
   448  000E                     	;# 
   449  000E                     	;# 
   450  000F                     	;# 
   451  0010                     	;# 
   452  0011                     	;# 
   453  0012                     	;# 
   454  0013                     	;# 
   455  0014                     	;# 
   456  0015                     	;# 
   457  0015                     	;# 
   458  0016                     	;# 
   459  0017                     	;# 
   460  0018                     	;# 
   461  0019                     	;# 
   462  001A                     	;# 
   463  001B                     	;# 
   464  001B                     	;# 
   465  001C                     	;# 
   466  001D                     	;# 
   467  001E                     	;# 
   468  001F                     	;# 
   469  0081                     	;# 
   470  0085                     	;# 
   471  0086                     	;# 
   472  0087                     	;# 
   473  0088                     	;# 
   474  0089                     	;# 
   475  008C                     	;# 
   476  008D                     	;# 
   477  008E                     	;# 
   478  0091                     	;# 
   479  0092                     	;# 
   480  0093                     	;# 
   481  0094                     	;# 
   482  0098                     	;# 
   483  0099                     	;# 
   484  009C                     	;# 
   485  009D                     	;# 
   486  009E                     	;# 
   487  009F                     	;# 
   488  010C                     	;# 
   489  010D                     	;# 
   490  010E                     	;# 
   491  010F                     	;# 
   492  018C                     	;# 
   493  018D                     	;# 
   494                           
   495                           	psect	idataBANK0
   496  0637                     __pidataBANK0:	
   497                           
   498                           ;initializer for _randx
   499  0637  3401               	retlw	1
   500  0638  3400               	retlw	0
   501  0639  3400               	retlw	0
   502  063A  3400               	retlw	0
   503                           
   504                           	psect	idataBANK3
   505  050B                     __pidataBANK3:	
   506                           
   507                           ;initializer for _figuras
   508  050B  3402               	retlw	2
   509  050C  3400               	retlw	0
   510  050D  3402               	retlw	2
   511  050E  3400               	retlw	0
   512  050F  3403               	retlw	3
   513  0510  3400               	retlw	0
   514  0511  3400               	retlw	0
   515  0512  3400               	retlw	0
   516  0513  3403               	retlw	3
   517  0514  3400               	retlw	0
   518  0515  3402               	retlw	2
   519  0516  3400               	retlw	0
   520  0517  3402               	retlw	2
   521  0518  3400               	retlw	0
   522  0519  3400               	retlw	0
   523  051A  3400               	retlw	0
   524  051B  3401               	retlw	1
   525  051C  3400               	retlw	0
   526  051D  3403               	retlw	3
   527  051E  3400               	retlw	0
   528  051F  3402               	retlw	2
   529  0520  3400               	retlw	0
   530  0521  3400               	retlw	0
   531  0522  3400               	retlw	0
   532  0523  3402               	retlw	2
   533  0524  3400               	retlw	0
   534  0525  3403               	retlw	3
   535  0526  3400               	retlw	0
   536  0527  3401               	retlw	1
   537  0528  3400               	retlw	0
   538  0529  3400               	retlw	0
   539  052A  3400               	retlw	0
   540  052B  3401               	retlw	1
   541  052C  3400               	retlw	0
   542  052D  3401               	retlw	1
   543  052E  3400               	retlw	0
   544  052F  3401               	retlw	1
   545  0530  3400               	retlw	0
   546  0531  3401               	retlw	1
   547  0532  3400               	retlw	0
   548  0533  3403               	retlw	3
   549  0534  3400               	retlw	0
   550  0535  3403               	retlw	3
   551  0536  3400               	retlw	0
   552  0537  3400               	retlw	0
   553  0538  3400               	retlw	0
   554  0539  3400               	retlw	0
   555  053A  3400               	retlw	0
   556  053B  3401               	retlw	1
   557  053C  3400               	retlw	0
   558  053D  3403               	retlw	3
   559  053E  3400               	retlw	0
   560  053F  3401               	retlw	1
   561  0540  3400               	retlw	0
   562  0541  3400               	retlw	0
   563  0542  3400               	retlw	0
   564  0001                     _TMR0	set	1
   565  000B                     _INTCONbits	set	11
   566  0008                     _PORTDbits	set	8
   567  0007                     _PORTCbits	set	7
   568  0006                     _PORTBbits	set	6
   569  0081                     _OPTION_REGbits	set	129
   570  0088                     _TRISDbits	set	136
   571  0087                     _TRISCbits	set	135
   572  0086                     _TRISBbits	set	134
   573                           
   574                           ; #config settings
   575  0000                     
   576                           	psect	cinit
   577  000F                     start_initialization:	
   578  000F                     __initialization:	
   579                           
   580                           ; Initialize objects allocated to BANK3
   581  000F  1783               	bsf	3,7	;select IRP bank2
   582  0010  30C8               	movlw	low (__pdataBANK3+56)
   583  0011  00FD               	movwf	btemp+-1
   584  0012  3005               	movlw	high __pidataBANK3
   585  0013  00FE               	movwf	btemp
   586  0014  300B               	movlw	low __pidataBANK3
   587  0015  00FF               	movwf	btemp+1
   588  0016  3090               	movlw	low __pdataBANK3
   589  0017  0084               	movwf	4
   590  0018  120A  118A  25AF  120A  118A  	fcall	init_ram0
   591                           
   592                           ; Initialize objects allocated to BANK0
   593  001D  1383               	bcf	3,7	;select IRP bank0
   594  001E  3063               	movlw	low (__pdataBANK0+4)
   595  001F  00FD               	movwf	btemp+-1
   596  0020  3006               	movlw	high __pidataBANK0
   597  0021  00FE               	movwf	btemp
   598  0022  3037               	movlw	low __pidataBANK0
   599  0023  00FF               	movwf	btemp+1
   600  0024  305F               	movlw	low __pdataBANK0
   601  0025  0084               	movwf	4
   602  0026  120A  118A  25AF  120A  118A  	fcall	init_ram0
   603                           
   604                           ; Clear objects allocated to BANK1
   605  002B  30A0               	movlw	low __pbssBANK1
   606  002C  0084               	movwf	4
   607  002D  30C0               	movlw	low (__pbssBANK1+32)
   608  002E  120A  118A  2610  120A  118A  	fcall	clear_ram0
   609                           
   610                           ; Clear objects allocated to BANK0
   611  0033  3044               	movlw	low __pbssBANK0
   612  0034  0084               	movwf	4
   613  0035  305F               	movlw	low (__pbssBANK0+27)
   614  0036  120A  118A  2610  120A  118A  	fcall	clear_ram0
   615  003B                     end_of_initialization:	
   616                           ;End of C runtime variable initialization code
   617                           
   618  003B                     __end_of__initialization:	
   619  003B  0183               	clrf	3
   620  003C  120A  118A  2B2F   	ljmp	_main	;jump to C main() function
   621                           
   622                           	psect	bssBANK0
   623  0044                     __pbssBANK0:	
   624  0044                     _con:	
   625  0044                     	ds	9
   626  004D                     _timerCount:	
   627  004D                     	ds	2
   628  004F                     _fondo:	
   629  004F                     	ds	16
   630                           
   631                           	psect	dataBANK0
   632  005F                     __pdataBANK0:	
   633  005F                     _randx:	
   634  005F                     	ds	4
   635                           
   636                           	psect	bssBANK1
   637  00A0                     __pbssBANK1:	
   638  00A0                     _ficha:	
   639  00A0                     	ds	16
   640  00B0                     _pantalla:	
   641  00B0                     	ds	16
   642                           
   643                           	psect	dataBANK3
   644  0190                     __pdataBANK3:	
   645  0190                     _figuras:	
   646  0190                     	ds	56
   647                           
   648                           	psect	inittext
   649  05AB                     init_fetch0:	
   650                           ;	Called with low address in FSR and high address in W
   651                           
   652  05AB  087E               	movf	btemp,w
   653  05AC  008A               	movwf	10
   654  05AD  087F               	movf	btemp+1,w
   655  05AE  0082               	movwf	2
   656  05AF                     init_ram0:	
   657                           ;Called with:
   658                           ;	high address of idata address in btemp 
   659                           ;	low address of idata address in btemp+1 
   660                           ;	low address of data in FSR
   661                           ;	high address + 1 of data in btemp-1
   662                           
   663  05AF  120A  118A  25AB  120A  118A  	fcall	init_fetch0
   664  05B4  0080               	movwf	0
   665  05B5  0A84               	incf	4,f
   666  05B6  0804               	movf	4,w
   667  05B7  067D               	xorwf	btemp+-1,w
   668  05B8  1903               	btfsc	3,2
   669  05B9  3400               	retlw	0
   670  05BA  0AFF               	incf	btemp+1,f
   671  05BB  1903               	btfsc	3,2
   672  05BC  0AFE               	incf	btemp,f
   673  05BD  2DAF               	goto	init_ram0
   674                           
   675                           	psect	clrtext
   676  0610                     clear_ram0:	
   677                           ;	Called with FSR containing the base address, and
   678                           ;	W with the last address+1
   679                           
   680  0610  0064               	clrwdt	;clear the watchdog before getting into this loop
   681  0611                     clrloop0:	
   682  0611  0180               	clrf	0	;clear RAM location pointed to by FSR
   683  0612  0A84               	incf	4,f	;increment pointer
   684  0613  0604               	xorwf	4,w	;XOR with final address
   685  0614  1903               	btfsc	3,2	;have we reached the end yet?
   686  0615  3400               	retlw	0	;all done for this memory range, return
   687  0616  0604               	xorwf	4,w	;XOR again to restore value
   688  0617  2E11               	goto	clrloop0	;do the next byte
   689                           
   690                           	psect	cstackCOMMON
   691  0070                     __pcstackCOMMON:	
   692  0070                     ?_checkCount:	
   693  0070                     ?_updateScreen:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0070                     ?_drawFigure:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0070                     ?_init_pines_in:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0070                     ?_init_pines_fil:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0070                     ?_init_pines_col:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0070                     ?_init_pines:	
   709                           ; 1 bytes @ 0x0
   710                           
   711  0070                     ?_init_interrupt:	
   712                           ; 1 bytes @ 0x0
   713                           
   714  0070                     ?_init_timer:	
   715                           ; 1 bytes @ 0x0
   716                           
   717  0070                     ?_Timer0_ISR:	
   718                           ; 1 bytes @ 0x0
   719                           
   720  0070                     ??_Timer0_ISR:	
   721                           ; 1 bytes @ 0x0
   722                           
   723  0070                     ?_latchClock_Fil:	
   724                           ; 1 bytes @ 0x0
   725                           
   726  0070                     ?_shiftClock_Fil:	
   727                           ; 1 bytes @ 0x0
   728                           
   729  0070                     ?_latchClock_Col:	
   730                           ; 1 bytes @ 0x0
   731                           
   732  0070                     ?_shiftClock_Col:	
   733                           ; 1 bytes @ 0x0
   734                           
   735  0070                     ?_shiftBitColumna:	
   736                           ; 1 bytes @ 0x0
   737                           
   738                           
   739                           ; 1 bytes @ 0x0
   740  0070                     	ds	2
   741  0072                     ?_srand:	
   742  0072                     ?_memset:	
   743                           ; 1 bytes @ 0x2
   744                           
   745  0072                     ??_init_pines_in:	
   746                           ; 1 bytes @ 0x2
   747                           
   748  0072                     ??_init_pines_fil:	
   749                           ; 1 bytes @ 0x2
   750                           
   751  0072                     ??_init_pines_col:	
   752                           ; 1 bytes @ 0x2
   753                           
   754  0072                     ??_init_pines:	
   755                           ; 1 bytes @ 0x2
   756                           
   757  0072                     ??_init_interrupt:	
   758                           ; 1 bytes @ 0x2
   759                           
   760  0072                     ??_init_timer:	
   761                           ; 1 bytes @ 0x2
   762                           
   763  0072                     ??_latchClock_Fil:	
   764                           ; 1 bytes @ 0x2
   765                           
   766  0072                     ??_shiftClock_Fil:	
   767                           ; 1 bytes @ 0x2
   768                           
   769  0072                     ?_setFilas:	
   770                           ; 1 bytes @ 0x2
   771                           
   772  0072                     ??_latchClock_Col:	
   773                           ; 1 bytes @ 0x2
   774                           
   775  0072                     ??_shiftClock_Col:	
   776                           ; 1 bytes @ 0x2
   777                           
   778  0072                     ??_shiftBitColumna:	
   779                           ; 1 bytes @ 0x2
   780                           
   781  0072                     ?___lmul:	
   782                           ; 1 bytes @ 0x2
   783                           
   784  0072                     setFilas@reg_value:	
   785                           ; 4 bytes @ 0x2
   786                           
   787  0072                     memset@c:	
   788                           ; 2 bytes @ 0x2
   789                           
   790  0072                     srand@x:	
   791                           ; 2 bytes @ 0x2
   792                           
   793  0072                     ___lmul@multiplier:	
   794                           ; 2 bytes @ 0x2
   795                           
   796                           
   797                           ; 4 bytes @ 0x2
   798  0072                     	ds	1
   799  0073                     shiftBitColumna@bit:	
   800                           
   801                           ; 1 bytes @ 0x3
   802  0073                     	ds	1
   803  0074                     ??_srand:	
   804  0074                     ??_setFilas:	
   805                           ; 1 bytes @ 0x4
   806                           
   807  0074                     memset@n:	
   808                           ; 1 bytes @ 0x4
   809                           
   810                           
   811                           ; 2 bytes @ 0x4
   812  0074                     	ds	2
   813  0076                     ??_memset:	
   814  0076                     ___lmul@multiplicand:	
   815                           ; 1 bytes @ 0x6
   816                           
   817                           
   818                           ; 4 bytes @ 0x6
   819  0076                     	ds	1
   820  0077                     memset@p:	
   821                           
   822                           ; 1 bytes @ 0x7
   823  0077                     	ds	1
   824  0078                     memset@p1:	
   825                           
   826                           ; 1 bytes @ 0x8
   827  0078                     	ds	2
   828  007A                     ??___lmul:	
   829  007A                     setFilas@i:	
   830                           ; 1 bytes @ 0xA
   831                           
   832                           
   833                           ; 2 bytes @ 0xA
   834  007A                     	ds	1
   835  007B                     ??___awmod:	
   836                           
   837                           ; 1 bytes @ 0xB
   838  007B                     	ds	1
   839                           
   840                           	psect	cstackBANK0
   841  0020                     __pcstackBANK0:	
   842  0020                     ??_updateScreen:	
   843  0020                     ??_drawFigure:	
   844                           ; 1 bytes @ 0x0
   845                           
   846  0020                     ___lmul@product:	
   847                           ; 1 bytes @ 0x0
   848                           
   849                           
   850                           ; 4 bytes @ 0x0
   851  0020                     	ds	4
   852  0024                     ?_rand:	
   853  0024                     updateScreen@screen:	
   854                           ; 2 bytes @ 0x4
   855                           
   856                           
   857                           ; 1 bytes @ 0x4
   858  0024                     	ds	2
   859  0026                     ??_rand:	
   860                           
   861                           ; 1 bytes @ 0x6
   862  0026                     	ds	5
   863  002B                     ?___awmod:	
   864  002B                     ___awmod@divisor:	
   865                           ; 2 bytes @ 0xB
   866                           
   867                           
   868                           ; 2 bytes @ 0xB
   869  002B                     	ds	2
   870  002D                     ___awmod@dividend:	
   871                           
   872                           ; 2 bytes @ 0xD
   873  002D                     	ds	2
   874  002F                     ___awmod@counter:	
   875                           
   876                           ; 1 bytes @ 0xF
   877  002F                     	ds	1
   878  0030                     ___awmod@sign:	
   879                           
   880                           ; 1 bytes @ 0x10
   881  0030                     	ds	1
   882  0031                     ??_checkCount:	
   883                           
   884                           ; 1 bytes @ 0x11
   885  0031                     	ds	9
   886  003A                     checkCount@j:	
   887                           
   888                           ; 2 bytes @ 0x1A
   889  003A                     	ds	2
   890  003C                     checkCount@i:	
   891                           
   892                           ; 2 bytes @ 0x1C
   893  003C                     	ds	2
   894  003E                     ?_main:	
   895  003E                     main@argc:	
   896                           ; 2 bytes @ 0x1E
   897                           
   898                           
   899                           ; 2 bytes @ 0x1E
   900  003E                     	ds	2
   901  0040                     main@argv:	
   902                           
   903                           ; 2 bytes @ 0x20
   904  0040                     	ds	2
   905  0042                     ??_main:	
   906                           
   907                           ; 1 bytes @ 0x22
   908  0042                     	ds	2
   909                           
   910                           	psect	maintext
   911  032F                     __pmaintext:	
   912 ;;
   913 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   914 ;;
   915 ;; *************** function _main *****************
   916 ;; Defined at:
   917 ;;		line 41 in file "mainsource.c"
   918 ;; Parameters:    Size  Location     Type
   919 ;;  argc            2   30[BANK0 ] int 
   920 ;;  argv            2   32[BANK0 ] PTR PTR unsigned char 
   921 ;; Auto vars:     Size  Location     Type
   922 ;;  j               2    0        int 
   923 ;;  i               2    0        int 
   924 ;; Return value:  Size  Location     Type
   925 ;;                  2   30[BANK0 ] int 
   926 ;; Registers used:
   927 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   928 ;; Tracked objects:
   929 ;;		On entry : B00/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   933 ;;      Params:         0       4       0       0       0
   934 ;;      Locals:         0       4       0       0       0
   935 ;;      Temps:          0       2       0       0       0
   936 ;;      Totals:         0      10       0       0       0
   937 ;;Total ram usage:       10 bytes
   938 ;; Hardware stack levels required when called:    4
   939 ;; This function calls:
   940 ;;		___awmod
   941 ;;		_checkCount
   942 ;;		_init_interrupt
   943 ;;		_init_pines
   944 ;;		_init_timer
   945 ;;		_rand
   946 ;;		_srand
   947 ;;		_updateScreen
   948 ;; This function is called by:
   949 ;;		Startup code after reset
   950 ;; This function uses a non-reentrant model
   951 ;;
   952                           
   953                           
   954                           ;psect for function _main
   955  032F                     _main:	
   956  032F                     l1415:	
   957                           ;incstack = 0
   958                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   959                           
   960                           
   961                           ;mainsource.c: 45:     init_timer();
   962  032F  120A  118A  25E1  120A  118A  	fcall	_init_timer
   963                           
   964                           ;mainsource.c: 46:     init_pines();
   965  0334  120A  118A  25D1  120A  118A  	fcall	_init_pines
   966                           
   967                           ;mainsource.c: 47:     init_interrupt();
   968  0339  120A  118A  2618  120A  118A  	fcall	_init_interrupt
   969  033E                     l1417:	
   970  033E                     l1419:	
   971  033E                     l1421:	
   972                           
   973                           ;mainsource.c: 50:     con.columna = 1;
   974  033E  1283               	bcf	3,5	;RP0=0, select bank0
   975  033F  1303               	bcf	3,6	;RP1=0, select bank0
   976  0340  01C4               	clrf	_con
   977  0341  0AC4               	incf	_con,f
   978  0342                     l1423:	
   979                           
   980                           ;mainsource.c: 51:     con.ficha_Vpos = 16;
   981  0342  3010               	movlw	16
   982  0343  00C2               	movwf	??_main
   983  0344  0842               	movf	??_main,w
   984  0345  00C7               	movwf	_con+3
   985  0346                     l1425:	
   986                           
   987                           ;mainsource.c: 52:     con.ficha_Hpos = 2;
   988  0346  3002               	movlw	2
   989  0347  00C2               	movwf	??_main
   990  0348  0842               	movf	??_main,w
   991  0349  00C8               	movwf	_con+4
   992  034A                     l1427:	
   993                           
   994                           ;mainsource.c: 53:     srand(TMR0);
   995  034A  0801               	movf	1,w	;volatile
   996  034B  00C2               	movwf	??_main
   997  034C  01C3               	clrf	??_main+1
   998  034D  0842               	movf	??_main,w
   999  034E  00F2               	movwf	srand@x
  1000  034F  0843               	movf	??_main+1,w
  1001  0350  00F3               	movwf	srand@x+1
  1002  0351  120A  118A  2607  120A  118A  	fcall	_srand
  1003  0356                     l1429:	
  1004                           
  1005                           ;mainsource.c: 54:     con.ficha_actual = rand() % 7;
  1006  0356  3007               	movlw	7
  1007  0357  1283               	bcf	3,5	;RP0=0, select bank0
  1008  0358  1303               	bcf	3,6	;RP1=0, select bank0
  1009  0359  00AB               	movwf	___awmod@divisor
  1010  035A  3000               	movlw	0
  1011  035B  00AC               	movwf	___awmod@divisor+1
  1012  035C  120A  118A  2481  120A  118A  	fcall	_rand
  1013  0361  1283               	bcf	3,5	;RP0=0, select bank0
  1014  0362  1303               	bcf	3,6	;RP1=0, select bank0
  1015  0363  0825               	movf	?_rand+1,w
  1016  0364  00AE               	movwf	___awmod@dividend+1
  1017  0365  0824               	movf	?_rand,w
  1018  0366  00AD               	movwf	___awmod@dividend
  1019  0367  120A  118A  238F  120A  118A  	fcall	___awmod
  1020  036C  1283               	bcf	3,5	;RP0=0, select bank0
  1021  036D  1303               	bcf	3,6	;RP1=0, select bank0
  1022  036E  082B               	movf	?___awmod,w
  1023  036F  00C2               	movwf	??_main
  1024  0370  0842               	movf	??_main,w
  1025  0371  00C9               	movwf	_con+5
  1026  0372                     l1431:	
  1027                           
  1028                           ;mainsource.c: 58:         srand(TMR0);
  1029  0372  1283               	bcf	3,5	;RP0=0, select bank0
  1030  0373  1303               	bcf	3,6	;RP1=0, select bank0
  1031  0374  0801               	movf	1,w	;volatile
  1032  0375  00C2               	movwf	??_main
  1033  0376  01C3               	clrf	??_main+1
  1034  0377  0842               	movf	??_main,w
  1035  0378  00F2               	movwf	srand@x
  1036  0379  0843               	movf	??_main+1,w
  1037  037A  00F3               	movwf	srand@x+1
  1038  037B  120A  118A  2607  120A  118A  	fcall	_srand
  1039  0380                     l1433:	
  1040                           
  1041                           ;mainsource.c: 59:         checkCount();
  1042  0380  120A  118A  203F  120A  118A  	fcall	_checkCount
  1043  0385                     l1435:	
  1044                           
  1045                           ;mainsource.c: 61:         updateScreen(pantalla);
  1046  0385  30B0               	movlw	(low (_pantalla| 0))& (0+255)
  1047  0386  120A  118A  2436  120A  118A  	fcall	_updateScreen
  1048  038B  2B72               	goto	l1431
  1049  038C  120A  118A  280C   	ljmp	start
  1050  038F                     __end_of_main:	
  1051                           
  1052                           	psect	text1
  1053  0436                     __ptext1:	
  1054 ;; *************** function _updateScreen *****************
  1055 ;; Defined at:
  1056 ;;		line 12 in file "screen.c"
  1057 ;; Parameters:    Size  Location     Type
  1058 ;;  screen          1    wreg     PTR unsigned int 
  1059 ;;		 -> pantalla(16), 
  1060 ;; Auto vars:     Size  Location     Type
  1061 ;;  screen          1    4[BANK0 ] PTR unsigned int 
  1062 ;;		 -> pantalla(16), 
  1063 ;; Return value:  Size  Location     Type
  1064 ;;                  1    wreg      void 
  1065 ;; Registers used:
  1066 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1067 ;; Tracked objects:
  1068 ;;		On entry : 0/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1072 ;;      Params:         0       0       0       0       0
  1073 ;;      Locals:         0       1       0       0       0
  1074 ;;      Temps:          0       4       0       0       0
  1075 ;;      Totals:         0       5       0       0       0
  1076 ;;Total ram usage:        5 bytes
  1077 ;; Hardware stack levels used:    1
  1078 ;; Hardware stack levels required when called:    3
  1079 ;; This function calls:
  1080 ;;		_setFilas
  1081 ;;		_shiftBitColumna
  1082 ;; This function is called by:
  1083 ;;		_main
  1084 ;; This function uses a non-reentrant model
  1085 ;;
  1086                           
  1087                           
  1088                           ;psect for function _updateScreen
  1089  0436                     _updateScreen:	
  1090                           
  1091                           ;incstack = 0
  1092                           ; Regs used in _updateScreen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1093                           ;updateScreen@screen stored from wreg
  1094  0436  1283               	bcf	3,5	;RP0=0, select bank0
  1095  0437  1303               	bcf	3,6	;RP1=0, select bank0
  1096  0438  00A4               	movwf	updateScreen@screen
  1097  0439                     l1401:	
  1098                           
  1099                           ;screen.c: 13:     if(con.columna == 9){
  1100  0439  3009               	movlw	9
  1101  043A  0644               	xorwf	_con,w
  1102  043B  1D03               	btfss	3,2
  1103  043C  2C3E               	goto	u991
  1104  043D  2C3F               	goto	u990
  1105  043E                     u991:	
  1106  043E  2C5F               	goto	l1409
  1107  043F                     u990:	
  1108  043F                     l1403:	
  1109                           
  1110                           ;screen.c: 14:         con.columna = 1;
  1111  043F  01C4               	clrf	_con
  1112  0440  0AC4               	incf	_con,f
  1113  0441                     l1405:	
  1114                           
  1115                           ;screen.c: 15:         setFilas(~screen[con.columna-1]);
  1116  0441  0844               	movf	_con,w
  1117  0442  00A0               	movwf	??_updateScreen
  1118  0443  0720               	addwf	??_updateScreen,w
  1119  0444  0724               	addwf	updateScreen@screen,w
  1120  0445  00A1               	movwf	??_updateScreen+1
  1121  0446  0821               	movf	??_updateScreen+1,w
  1122  0447  3EFE               	addlw	-2
  1123  0448  0084               	movwf	4
  1124  0449  1383               	bcf	3,7	;select IRP bank0
  1125  044A  0800               	movf	0,w
  1126  044B  00A2               	movwf	??_updateScreen+2
  1127  044C  0A84               	incf	4,f
  1128  044D  0800               	movf	0,w
  1129  044E  00A3               	movwf	??_updateScreen+3
  1130  044F  0922               	comf	??_updateScreen+2,w
  1131  0450  00F2               	movwf	setFilas@reg_value
  1132  0451  0923               	comf	??_updateScreen+3,w
  1133  0452  00F3               	movwf	setFilas@reg_value+1
  1134  0453  120A  118A  24C8  120A  118A  	fcall	_setFilas
  1135  0458                     l1407:	
  1136                           
  1137                           ;screen.c: 16:         shiftBitColumna(1);
  1138  0458  3001               	movlw	1
  1139  0459  120A  118A  258F  120A  118A  	fcall	_shiftBitColumna
  1140                           
  1141                           ;screen.c: 17:     }
  1142  045E  2C80               	goto	l168
  1143  045F                     l1409:	
  1144                           
  1145                           ;screen.c: 19:         con.columna++;
  1146  045F  3001               	movlw	1
  1147  0460  00A0               	movwf	??_updateScreen
  1148  0461  0820               	movf	??_updateScreen,w
  1149  0462  07C4               	addwf	_con,f
  1150  0463                     l1411:	
  1151                           
  1152                           ;screen.c: 20:         setFilas(~screen[con.columna-1]);
  1153  0463  0844               	movf	_con,w
  1154  0464  00A0               	movwf	??_updateScreen
  1155  0465  0720               	addwf	??_updateScreen,w
  1156  0466  0724               	addwf	updateScreen@screen,w
  1157  0467  00A1               	movwf	??_updateScreen+1
  1158  0468  0821               	movf	??_updateScreen+1,w
  1159  0469  3EFE               	addlw	-2
  1160  046A  0084               	movwf	4
  1161  046B  1383               	bcf	3,7	;select IRP bank0
  1162  046C  0800               	movf	0,w
  1163  046D  00A2               	movwf	??_updateScreen+2
  1164  046E  0A84               	incf	4,f
  1165  046F  0800               	movf	0,w
  1166  0470  00A3               	movwf	??_updateScreen+3
  1167  0471  0922               	comf	??_updateScreen+2,w
  1168  0472  00F2               	movwf	setFilas@reg_value
  1169  0473  0923               	comf	??_updateScreen+3,w
  1170  0474  00F3               	movwf	setFilas@reg_value+1
  1171  0475  120A  118A  24C8  120A  118A  	fcall	_setFilas
  1172  047A                     l1413:	
  1173                           
  1174                           ;screen.c: 21:         shiftBitColumna(0);
  1175  047A  3000               	movlw	0
  1176  047B  120A  118A  258F  120A  118A  	fcall	_shiftBitColumna
  1177  0480                     l168:	
  1178  0480  0008               	return
  1179  0481                     __end_of_updateScreen:	
  1180                           
  1181                           	psect	text2
  1182  058F                     __ptext2:	
  1183 ;; *************** function _shiftBitColumna *****************
  1184 ;; Defined at:
  1185 ;;		line 32 in file "columnas.c"
  1186 ;; Parameters:    Size  Location     Type
  1187 ;;  bit             1    wreg     unsigned char 
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;  bit             1    3[COMMON] unsigned char 
  1190 ;; Return value:  Size  Location     Type
  1191 ;;                  1    wreg      void 
  1192 ;; Registers used:
  1193 ;;		wreg, status,2, status,0, pclath, cstack
  1194 ;; Tracked objects:
  1195 ;;		On entry : 0/0
  1196 ;;		On exit  : 0/0
  1197 ;;		Unchanged: 0/0
  1198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1199 ;;      Params:         0       0       0       0       0
  1200 ;;      Locals:         1       0       0       0       0
  1201 ;;      Temps:          1       0       0       0       0
  1202 ;;      Totals:         2       0       0       0       0
  1203 ;;Total ram usage:        2 bytes
  1204 ;; Hardware stack levels used:    1
  1205 ;; Hardware stack levels required when called:    2
  1206 ;; This function calls:
  1207 ;;		_latchClock_Col
  1208 ;;		_latchClock_Fil
  1209 ;;		_shiftClock_Col
  1210 ;; This function is called by:
  1211 ;;		_updateScreen
  1212 ;; This function uses a non-reentrant model
  1213 ;;
  1214                           
  1215                           
  1216                           ;psect for function _shiftBitColumna
  1217  058F                     _shiftBitColumna:	
  1218                           
  1219                           ;incstack = 0
  1220                           ; Regs used in _shiftBitColumna: [wreg+status,2+status,0+pclath+cstack]
  1221                           ;shiftBitColumna@bit stored from wreg
  1222  058F  00F3               	movwf	shiftBitColumna@bit
  1223  0590                     l1219:	
  1224                           
  1225                           ;columnas.c: 33:     PORTDbits.RD4= bit & 0x01;
  1226  0590  0873               	movf	shiftBitColumna@bit,w
  1227  0591  3901               	andlw	1
  1228  0592  00F2               	movwf	??_shiftBitColumna
  1229  0593  0EF2               	swapf	??_shiftBitColumna,f
  1230  0594  1283               	bcf	3,5	;RP0=0, select bank0
  1231  0595  1303               	bcf	3,6	;RP1=0, select bank0
  1232  0596  0808               	movf	8,w	;volatile
  1233  0597  0672               	xorwf	??_shiftBitColumna,w
  1234  0598  39EF               	andlw	-17
  1235  0599  0672               	xorwf	??_shiftBitColumna,w
  1236  059A  0088               	movwf	8	;volatile
  1237  059B                     l1221:	
  1238                           
  1239                           ;columnas.c: 34:     shiftClock_Col();
  1240  059B  120A  118A  2620  120A  118A  	fcall	_shiftClock_Col
  1241  05A0                     l1223:	
  1242                           
  1243                           ;columnas.c: 35:     latchClock_Col();
  1244  05A0  120A  118A  2632  120A  118A  	fcall	_latchClock_Col
  1245  05A5                     l1225:	
  1246                           
  1247                           ;columnas.c: 36:     latchClock_Fil();
  1248  05A5  120A  118A  2626  120A  118A  	fcall	_latchClock_Fil
  1249  05AA                     l145:	
  1250  05AA  0008               	return
  1251  05AB                     __end_of_shiftBitColumna:	
  1252                           
  1253                           	psect	text3
  1254  0620                     __ptext3:	
  1255 ;; *************** function _shiftClock_Col *****************
  1256 ;; Defined at:
  1257 ;;		line 12 in file "columnas.c"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;		None
  1260 ;; Auto vars:     Size  Location     Type
  1261 ;;		None
  1262 ;; Return value:  Size  Location     Type
  1263 ;;                  1    wreg      void 
  1264 ;; Registers used:
  1265 ;;		None
  1266 ;; Tracked objects:
  1267 ;;		On entry : 0/0
  1268 ;;		On exit  : 0/0
  1269 ;;		Unchanged: 0/0
  1270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1271 ;;      Params:         0       0       0       0       0
  1272 ;;      Locals:         0       0       0       0       0
  1273 ;;      Temps:          0       0       0       0       0
  1274 ;;      Totals:         0       0       0       0       0
  1275 ;;Total ram usage:        0 bytes
  1276 ;; Hardware stack levels used:    1
  1277 ;; Hardware stack levels required when called:    1
  1278 ;; This function calls:
  1279 ;;		Nothing
  1280 ;; This function is called by:
  1281 ;;		_shiftBitColumna
  1282 ;;		_setColumnas
  1283 ;; This function uses a non-reentrant model
  1284 ;;
  1285                           
  1286                           
  1287                           ;psect for function _shiftClock_Col
  1288  0620                     _shiftClock_Col:	
  1289  0620                     l1149:	
  1290                           ;incstack = 0
  1291                           ; Regs used in _shiftClock_Col: []
  1292                           
  1293                           
  1294                           ;columnas.c: 13:     PORTDbits.RD7 = 0;
  1295  0620  1283               	bcf	3,5	;RP0=0, select bank0
  1296  0621  1303               	bcf	3,6	;RP1=0, select bank0
  1297  0622  1388               	bcf	8,7	;volatile
  1298                           
  1299                           ;columnas.c: 14:     PORTDbits.RD7 = 1;
  1300  0623  1788               	bsf	8,7	;volatile
  1301                           
  1302                           ;columnas.c: 15:     PORTDbits.RD7 = 0;
  1303  0624  1388               	bcf	8,7	;volatile
  1304  0625                     l137:	
  1305  0625  0008               	return
  1306  0626                     __end_of_shiftClock_Col:	
  1307                           
  1308                           	psect	text4
  1309  0626                     __ptext4:	
  1310 ;; *************** function _latchClock_Fil *****************
  1311 ;; Defined at:
  1312 ;;		line 7 in file "filas.c"
  1313 ;; Parameters:    Size  Location     Type
  1314 ;;		None
  1315 ;; Auto vars:     Size  Location     Type
  1316 ;;		None
  1317 ;; Return value:  Size  Location     Type
  1318 ;;                  1    wreg      void 
  1319 ;; Registers used:
  1320 ;;		None
  1321 ;; Tracked objects:
  1322 ;;		On entry : 0/0
  1323 ;;		On exit  : 0/0
  1324 ;;		Unchanged: 0/0
  1325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1326 ;;      Params:         0       0       0       0       0
  1327 ;;      Locals:         0       0       0       0       0
  1328 ;;      Temps:          0       0       0       0       0
  1329 ;;      Totals:         0       0       0       0       0
  1330 ;;Total ram usage:        0 bytes
  1331 ;; Hardware stack levels used:    1
  1332 ;; Hardware stack levels required when called:    1
  1333 ;; This function calls:
  1334 ;;		Nothing
  1335 ;; This function is called by:
  1336 ;;		_shiftBitColumna
  1337 ;; This function uses a non-reentrant model
  1338 ;;
  1339                           
  1340                           
  1341                           ;psect for function _latchClock_Fil
  1342  0626                     _latchClock_Fil:	
  1343  0626                     l1143:	
  1344                           ;incstack = 0
  1345                           ; Regs used in _latchClock_Fil: []
  1346                           
  1347                           
  1348                           ;filas.c: 8:     PORTCbits.RC6 = 0;
  1349  0626  1283               	bcf	3,5	;RP0=0, select bank0
  1350  0627  1303               	bcf	3,6	;RP1=0, select bank0
  1351  0628  1307               	bcf	7,6	;volatile
  1352                           
  1353                           ;filas.c: 9:     PORTCbits.RC6 = 1;
  1354  0629  1707               	bsf	7,6	;volatile
  1355                           
  1356                           ;filas.c: 10:     PORTCbits.RC6 = 0;
  1357  062A  1307               	bcf	7,6	;volatile
  1358  062B                     l119:	
  1359  062B  0008               	return
  1360  062C                     __end_of_latchClock_Fil:	
  1361                           
  1362                           	psect	text5
  1363  0632                     __ptext5:	
  1364 ;; *************** function _latchClock_Col *****************
  1365 ;; Defined at:
  1366 ;;		line 7 in file "columnas.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;		None
  1369 ;; Auto vars:     Size  Location     Type
  1370 ;;		None
  1371 ;; Return value:  Size  Location     Type
  1372 ;;                  1    wreg      void 
  1373 ;; Registers used:
  1374 ;;		None
  1375 ;; Tracked objects:
  1376 ;;		On entry : 0/0
  1377 ;;		On exit  : 0/0
  1378 ;;		Unchanged: 0/0
  1379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1380 ;;      Params:         0       0       0       0       0
  1381 ;;      Locals:         0       0       0       0       0
  1382 ;;      Temps:          0       0       0       0       0
  1383 ;;      Totals:         0       0       0       0       0
  1384 ;;Total ram usage:        0 bytes
  1385 ;; Hardware stack levels used:    1
  1386 ;; Hardware stack levels required when called:    1
  1387 ;; This function calls:
  1388 ;;		Nothing
  1389 ;; This function is called by:
  1390 ;;		_shiftBitColumna
  1391 ;;		_setColumnas
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394                           
  1395                           
  1396                           ;psect for function _latchClock_Col
  1397  0632                     _latchClock_Col:	
  1398  0632                     l1147:	
  1399                           ;incstack = 0
  1400                           ; Regs used in _latchClock_Col: []
  1401                           
  1402                           
  1403                           ;columnas.c: 8:     PORTDbits.RD6 = 1;
  1404  0632  1283               	bcf	3,5	;RP0=0, select bank0
  1405  0633  1303               	bcf	3,6	;RP1=0, select bank0
  1406  0634  1708               	bsf	8,6	;volatile
  1407                           
  1408                           ;columnas.c: 9:     PORTDbits.RD6 = 0;
  1409  0635  1308               	bcf	8,6	;volatile
  1410  0636                     l134:	
  1411  0636  0008               	return
  1412  0637                     __end_of_latchClock_Col:	
  1413                           
  1414                           	psect	text6
  1415  04C8                     __ptext6:	
  1416 ;; *************** function _setFilas *****************
  1417 ;; Defined at:
  1418 ;;		line 19 in file "filas.c"
  1419 ;; Parameters:    Size  Location     Type
  1420 ;;  reg_value       2    2[COMMON] unsigned int 
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;  i               2   10[COMMON] int 
  1423 ;; Return value:  Size  Location     Type
  1424 ;;                  1    wreg      void 
  1425 ;; Registers used:
  1426 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1427 ;; Tracked objects:
  1428 ;;		On entry : 0/0
  1429 ;;		On exit  : 0/0
  1430 ;;		Unchanged: 0/0
  1431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1432 ;;      Params:         2       0       0       0       0
  1433 ;;      Locals:         2       0       0       0       0
  1434 ;;      Temps:          6       0       0       0       0
  1435 ;;      Totals:        10       0       0       0       0
  1436 ;;Total ram usage:       10 bytes
  1437 ;; Hardware stack levels used:    1
  1438 ;; Hardware stack levels required when called:    2
  1439 ;; This function calls:
  1440 ;;		_shiftClock_Fil
  1441 ;; This function is called by:
  1442 ;;		_updateScreen
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446                           
  1447                           ;psect for function _setFilas
  1448  04C8                     _setFilas:	
  1449  04C8                     l1205:	
  1450                           ;incstack = 0
  1451                           ; Regs used in _setFilas: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1452                           
  1453                           
  1454                           ;filas.c: 20:     int i = 0;
  1455  04C8  01FA               	clrf	setFilas@i
  1456  04C9  01FB               	clrf	setFilas@i+1
  1457                           
  1458                           ;filas.c: 21:     for(i=0;i<16;i++){
  1459  04CA  01FA               	clrf	setFilas@i
  1460  04CB  01FB               	clrf	setFilas@i+1
  1461  04CC                     l1207:	
  1462  04CC  087B               	movf	setFilas@i+1,w
  1463  04CD  3A80               	xorlw	128
  1464  04CE  00FF               	movwf	btemp+1
  1465  04CF  3080               	movlw	128
  1466  04D0  027F               	subwf	btemp+1,w
  1467  04D1  1D03               	skipz
  1468  04D2  2CD5               	goto	u735
  1469  04D3  3010               	movlw	16
  1470  04D4  027A               	subwf	setFilas@i,w
  1471  04D5                     u735:	
  1472  04D5  1C03               	skipc
  1473  04D6  2CD8               	goto	u731
  1474  04D7  2CD9               	goto	u730
  1475  04D8                     u731:	
  1476  04D8  2CDA               	goto	l1211
  1477  04D9                     u730:	
  1478  04D9  2D0A               	goto	l127
  1479  04DA                     l1211:	
  1480                           
  1481                           ;filas.c: 22:         PORTCbits.RC4 = (reg_value & (1<<i) )>>i;
  1482  04DA  0A7A               	incf	setFilas@i,w
  1483  04DB  00F4               	movwf	??_setFilas
  1484  04DC  3001               	movlw	1
  1485  04DD  00F5               	movwf	??_setFilas+1
  1486  04DE  3000               	movlw	0
  1487  04DF  00F6               	movwf	??_setFilas+2
  1488  04E0  2CE4               	goto	u744
  1489  04E1                     u745:	
  1490  04E1  1003               	clrc
  1491  04E2  0DF5               	rlf	??_setFilas+1,f
  1492  04E3  0DF6               	rlf	??_setFilas+2,f
  1493  04E4                     u744:	
  1494  04E4  0BF4               	decfsz	??_setFilas,f
  1495  04E5  2CE1               	goto	u745
  1496  04E6  0872               	movf	setFilas@reg_value,w
  1497  04E7  0575               	andwf	??_setFilas+1,w
  1498  04E8  00F7               	movwf	??_setFilas+3
  1499  04E9  0873               	movf	setFilas@reg_value+1,w
  1500  04EA  0576               	andwf	??_setFilas+2,w
  1501  04EB  00F8               	movwf	??_setFilas+4
  1502  04EC  0A7A               	incf	setFilas@i,w
  1503  04ED  2CF1               	goto	u754
  1504  04EE                     u755:	
  1505  04EE  1003               	clrc
  1506  04EF  0CF8               	rrf	??_setFilas+4,f
  1507  04F0  0CF7               	rrf	??_setFilas+3,f
  1508  04F1                     u754:	
  1509  04F1  3EFF               	addlw	-1
  1510  04F2  1D03               	skipz
  1511  04F3  2CEE               	goto	u755
  1512  04F4  0877               	movf	??_setFilas+3,w
  1513  04F5  00F9               	movwf	??_setFilas+5
  1514  04F6  0EF9               	swapf	??_setFilas+5,f
  1515  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  1516  04F8  1303               	bcf	3,6	;RP1=0, select bank0
  1517  04F9  0807               	movf	7,w	;volatile
  1518  04FA  0679               	xorwf	??_setFilas+5,w
  1519  04FB  39EF               	andlw	-17
  1520  04FC  0679               	xorwf	??_setFilas+5,w
  1521  04FD  0087               	movwf	7	;volatile
  1522  04FE                     l1213:	
  1523                           
  1524                           ;filas.c: 23:         shiftClock_Fil();
  1525  04FE  120A  118A  262C  120A  118A  	fcall	_shiftClock_Fil
  1526  0503                     l1215:	
  1527                           
  1528                           ;filas.c: 24:     }
  1529  0503  3001               	movlw	1
  1530  0504  07FA               	addwf	setFilas@i,f
  1531  0505  1803               	skipnc
  1532  0506  0AFB               	incf	setFilas@i+1,f
  1533  0507  3000               	movlw	0
  1534  0508  07FB               	addwf	setFilas@i+1,f
  1535  0509  2CCC               	goto	l1207
  1536  050A                     l127:	
  1537  050A  0008               	return
  1538  050B                     __end_of_setFilas:	
  1539                           
  1540                           	psect	text7
  1541  062C                     __ptext7:	
  1542 ;; *************** function _shiftClock_Fil *****************
  1543 ;; Defined at:
  1544 ;;		line 13 in file "filas.c"
  1545 ;; Parameters:    Size  Location     Type
  1546 ;;		None
  1547 ;; Auto vars:     Size  Location     Type
  1548 ;;		None
  1549 ;; Return value:  Size  Location     Type
  1550 ;;                  1    wreg      void 
  1551 ;; Registers used:
  1552 ;;		None
  1553 ;; Tracked objects:
  1554 ;;		On entry : 0/0
  1555 ;;		On exit  : 0/0
  1556 ;;		Unchanged: 0/0
  1557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1558 ;;      Params:         0       0       0       0       0
  1559 ;;      Locals:         0       0       0       0       0
  1560 ;;      Temps:          0       0       0       0       0
  1561 ;;      Totals:         0       0       0       0       0
  1562 ;;Total ram usage:        0 bytes
  1563 ;; Hardware stack levels used:    1
  1564 ;; Hardware stack levels required when called:    1
  1565 ;; This function calls:
  1566 ;;		Nothing
  1567 ;; This function is called by:
  1568 ;;		_setFilas
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572                           
  1573                           ;psect for function _shiftClock_Fil
  1574  062C                     _shiftClock_Fil:	
  1575  062C                     l1145:	
  1576                           ;incstack = 0
  1577                           ; Regs used in _shiftClock_Fil: []
  1578                           
  1579                           
  1580                           ;filas.c: 14:     PORTCbits.RC7 = 0;
  1581  062C  1283               	bcf	3,5	;RP0=0, select bank0
  1582  062D  1303               	bcf	3,6	;RP1=0, select bank0
  1583  062E  1387               	bcf	7,7	;volatile
  1584                           
  1585                           ;filas.c: 15:     PORTCbits.RC7 = 1;
  1586  062F  1787               	bsf	7,7	;volatile
  1587                           
  1588                           ;filas.c: 16:     PORTCbits.RC7 = 0;
  1589  0630  1387               	bcf	7,7	;volatile
  1590  0631                     l122:	
  1591  0631  0008               	return
  1592  0632                     __end_of_shiftClock_Fil:	
  1593                           
  1594                           	psect	text8
  1595  0607                     __ptext8:	
  1596 ;; *************** function _srand *****************
  1597 ;; Defined at:
  1598 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  1599 ;; Parameters:    Size  Location     Type
  1600 ;;  x               2    2[COMMON] unsigned int 
  1601 ;; Auto vars:     Size  Location     Type
  1602 ;;		None
  1603 ;; Return value:  Size  Location     Type
  1604 ;;                  1    wreg      void 
  1605 ;; Registers used:
  1606 ;;		wreg
  1607 ;; Tracked objects:
  1608 ;;		On entry : 0/0
  1609 ;;		On exit  : 0/0
  1610 ;;		Unchanged: 0/0
  1611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1612 ;;      Params:         2       0       0       0       0
  1613 ;;      Locals:         0       0       0       0       0
  1614 ;;      Temps:          0       0       0       0       0
  1615 ;;      Totals:         2       0       0       0       0
  1616 ;;Total ram usage:        2 bytes
  1617 ;; Hardware stack levels used:    1
  1618 ;; Hardware stack levels required when called:    1
  1619 ;; This function calls:
  1620 ;;		Nothing
  1621 ;; This function is called by:
  1622 ;;		_main
  1623 ;; This function uses a non-reentrant model
  1624 ;;
  1625                           
  1626                           
  1627                           ;psect for function _srand
  1628  0607                     _srand:	
  1629  0607                     l1287:	
  1630                           ;incstack = 0
  1631                           ; Regs used in _srand: [wreg]
  1632                           
  1633  0607  0872               	movf	srand@x,w
  1634  0608  1283               	bcf	3,5	;RP0=0, select bank0
  1635  0609  1303               	bcf	3,6	;RP1=0, select bank0
  1636  060A  00DF               	movwf	_randx
  1637  060B  0873               	movf	srand@x+1,w
  1638  060C  00E0               	movwf	_randx+1
  1639  060D  01E1               	clrf	_randx+2
  1640  060E  01E2               	clrf	_randx+3
  1641  060F                     l716:	
  1642  060F  0008               	return
  1643  0610                     __end_of_srand:	
  1644                           
  1645                           	psect	text9
  1646  05E1                     __ptext9:	
  1647 ;; *************** function _init_timer *****************
  1648 ;; Defined at:
  1649 ;;		line 59 in file "init.c"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;		None
  1652 ;; Auto vars:     Size  Location     Type
  1653 ;;		None
  1654 ;; Return value:  Size  Location     Type
  1655 ;;                  1    wreg      void 
  1656 ;; Registers used:
  1657 ;;		status,2
  1658 ;; Tracked objects:
  1659 ;;		On entry : 0/0
  1660 ;;		On exit  : 0/0
  1661 ;;		Unchanged: 0/0
  1662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1663 ;;      Params:         0       0       0       0       0
  1664 ;;      Locals:         0       0       0       0       0
  1665 ;;      Temps:          0       0       0       0       0
  1666 ;;      Totals:         0       0       0       0       0
  1667 ;;Total ram usage:        0 bytes
  1668 ;; Hardware stack levels used:    1
  1669 ;; Hardware stack levels required when called:    1
  1670 ;; This function calls:
  1671 ;;		Nothing
  1672 ;; This function is called by:
  1673 ;;		_main
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           
  1678                           ;psect for function _init_timer
  1679  05E1                     _init_timer:	
  1680  05E1                     l1269:	
  1681                           ;incstack = 0
  1682                           ; Regs used in _init_timer: [status,2]
  1683                           
  1684                           
  1685                           ;init.c: 61:     TMR0=0;
  1686  05E1  1283               	bcf	3,5	;RP0=0, select bank0
  1687  05E2  1303               	bcf	3,6	;RP1=0, select bank0
  1688  05E3  0181               	clrf	1	;volatile
  1689  05E4                     l1271:	
  1690                           
  1691                           ;init.c: 69:     INTCONbits.GIE = 1;
  1692  05E4  178B               	bsf	11,7	;volatile
  1693  05E5                     l1273:	
  1694                           
  1695                           ;init.c: 70:     INTCONbits.TMR0IE = 1;
  1696  05E5  168B               	bsf	11,5	;volatile
  1697  05E6                     l1275:	
  1698                           
  1699                           ;init.c: 71:     INTCONbits.TMR0IF = 0;
  1700  05E6  110B               	bcf	11,2	;volatile
  1701  05E7                     l1277:	
  1702                           
  1703                           ;init.c: 80:     OPTION_REGbits.PSA = 1;
  1704  05E7  1683               	bsf	3,5	;RP0=1, select bank1
  1705  05E8  1303               	bcf	3,6	;RP1=0, select bank1
  1706  05E9  1581               	bsf	1,3	;volatile
  1707  05EA                     l1279:	
  1708                           
  1709                           ;init.c: 81:     OPTION_REGbits.PS0 = 1;
  1710  05EA  1401               	bsf	1,0	;volatile
  1711  05EB                     l1281:	
  1712                           
  1713                           ;init.c: 82:     OPTION_REGbits.PS1 = 1;
  1714  05EB  1481               	bsf	1,1	;volatile
  1715  05EC                     l1283:	
  1716                           
  1717                           ;init.c: 83:     OPTION_REGbits.PS2 = 1;
  1718  05EC  1501               	bsf	1,2	;volatile
  1719  05ED                     l1285:	
  1720                           
  1721                           ;init.c: 84:     OPTION_REGbits.T0CS = 0;
  1722  05ED  1281               	bcf	1,5	;volatile
  1723  05EE                     l36:	
  1724  05EE  0008               	return
  1725  05EF                     __end_of_init_timer:	
  1726                           
  1727                           	psect	text10
  1728  05D1                     __ptext10:	
  1729 ;; *************** function _init_pines *****************
  1730 ;; Defined at:
  1731 ;;		line 43 in file "init.c"
  1732 ;; Parameters:    Size  Location     Type
  1733 ;;		None
  1734 ;; Auto vars:     Size  Location     Type
  1735 ;;		None
  1736 ;; Return value:  Size  Location     Type
  1737 ;;                  1    wreg      void 
  1738 ;; Registers used:
  1739 ;;		status,2, status,0, pclath, cstack
  1740 ;; Tracked objects:
  1741 ;;		On entry : 0/0
  1742 ;;		On exit  : 0/0
  1743 ;;		Unchanged: 0/0
  1744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1745 ;;      Params:         0       0       0       0       0
  1746 ;;      Locals:         0       0       0       0       0
  1747 ;;      Temps:          0       0       0       0       0
  1748 ;;      Totals:         0       0       0       0       0
  1749 ;;Total ram usage:        0 bytes
  1750 ;; Hardware stack levels used:    1
  1751 ;; Hardware stack levels required when called:    2
  1752 ;; This function calls:
  1753 ;;		_init_pines_col
  1754 ;;		_init_pines_fil
  1755 ;;		_init_pines_in
  1756 ;; This function is called by:
  1757 ;;		_main
  1758 ;; This function uses a non-reentrant model
  1759 ;;
  1760                           
  1761                           
  1762                           ;psect for function _init_pines
  1763  05D1                     _init_pines:	
  1764  05D1                     l1265:	
  1765                           ;incstack = 0
  1766                           ; Regs used in _init_pines: [status,2+status,0+pclath+cstack]
  1767                           
  1768                           
  1769                           ;init.c: 45:     init_pines_fil();
  1770  05D1  120A  118A  25EF  120A  118A  	fcall	_init_pines_fil
  1771                           
  1772                           ;init.c: 46:     init_pines_col();
  1773  05D6  120A  118A  25BE  120A  118A  	fcall	_init_pines_col
  1774                           
  1775                           ;init.c: 47:     init_pines_in();
  1776  05DB  120A  118A  25FC  120A  118A  	fcall	_init_pines_in
  1777  05E0                     l30:	
  1778  05E0  0008               	return
  1779  05E1                     __end_of_init_pines:	
  1780                           
  1781                           	psect	text11
  1782  05FC                     __ptext11:	
  1783 ;; *************** function _init_pines_in *****************
  1784 ;; Defined at:
  1785 ;;		line 4 in file "init.c"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;		None
  1788 ;; Auto vars:     Size  Location     Type
  1789 ;;		None
  1790 ;; Return value:  Size  Location     Type
  1791 ;;                  1    wreg      void 
  1792 ;; Registers used:
  1793 ;;		None
  1794 ;; Tracked objects:
  1795 ;;		On entry : 0/0
  1796 ;;		On exit  : 0/0
  1797 ;;		Unchanged: 0/0
  1798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1799 ;;      Params:         0       0       0       0       0
  1800 ;;      Locals:         0       0       0       0       0
  1801 ;;      Temps:          0       0       0       0       0
  1802 ;;      Totals:         0       0       0       0       0
  1803 ;;Total ram usage:        0 bytes
  1804 ;; Hardware stack levels used:    1
  1805 ;; Hardware stack levels required when called:    1
  1806 ;; This function calls:
  1807 ;;		Nothing
  1808 ;; This function is called by:
  1809 ;;		_init_pines
  1810 ;; This function uses a non-reentrant model
  1811 ;;
  1812                           
  1813                           
  1814                           ;psect for function _init_pines_in
  1815  05FC                     _init_pines_in:	
  1816  05FC                     l1165:	
  1817                           ;incstack = 0
  1818                           ; Regs used in _init_pines_in: []
  1819                           
  1820                           
  1821                           ;init.c: 6:     TRISBbits.TRISB5 = 1;
  1822  05FC  1683               	bsf	3,5	;RP0=1, select bank1
  1823  05FD  1303               	bcf	3,6	;RP1=0, select bank1
  1824  05FE  1686               	bsf	6,5	;volatile
  1825                           
  1826                           ;init.c: 7:     TRISBbits.TRISB4 = 1;
  1827  05FF  1606               	bsf	6,4	;volatile
  1828                           
  1829                           ;init.c: 9:     TRISBbits.TRISB6 = 0;
  1830  0600  1306               	bcf	6,6	;volatile
  1831                           
  1832                           ;init.c: 10:     TRISBbits.TRISB7 = 0;
  1833  0601  1386               	bcf	6,7	;volatile
  1834                           
  1835                           ;init.c: 12:     PORTBbits.RB6 = 0;
  1836  0602  1283               	bcf	3,5	;RP0=0, select bank0
  1837  0603  1303               	bcf	3,6	;RP1=0, select bank0
  1838  0604  1306               	bcf	6,6	;volatile
  1839                           
  1840                           ;init.c: 13:     PORTBbits.RB7 = 0;
  1841  0605  1386               	bcf	6,7	;volatile
  1842  0606                     l21:	
  1843  0606  0008               	return
  1844  0607                     __end_of_init_pines_in:	
  1845                           
  1846                           	psect	text12
  1847  05EF                     __ptext12:	
  1848 ;; *************** function _init_pines_fil *****************
  1849 ;; Defined at:
  1850 ;;		line 16 in file "init.c"
  1851 ;; Parameters:    Size  Location     Type
  1852 ;;		None
  1853 ;; Auto vars:     Size  Location     Type
  1854 ;;		None
  1855 ;; Return value:  Size  Location     Type
  1856 ;;                  1    wreg      void 
  1857 ;; Registers used:
  1858 ;;		None
  1859 ;; Tracked objects:
  1860 ;;		On entry : 0/0
  1861 ;;		On exit  : 0/0
  1862 ;;		Unchanged: 0/0
  1863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1864 ;;      Params:         0       0       0       0       0
  1865 ;;      Locals:         0       0       0       0       0
  1866 ;;      Temps:          0       0       0       0       0
  1867 ;;      Totals:         0       0       0       0       0
  1868 ;;Total ram usage:        0 bytes
  1869 ;; Hardware stack levels used:    1
  1870 ;; Hardware stack levels required when called:    1
  1871 ;; This function calls:
  1872 ;;		Nothing
  1873 ;; This function is called by:
  1874 ;;		_init_pines
  1875 ;; This function uses a non-reentrant model
  1876 ;;
  1877                           
  1878                           
  1879                           ;psect for function _init_pines_fil
  1880  05EF                     _init_pines_fil:	
  1881  05EF                     l1167:	
  1882                           ;incstack = 0
  1883                           ; Regs used in _init_pines_fil: []
  1884                           
  1885                           
  1886                           ;init.c: 18:     TRISCbits.TRISC4 = 0;
  1887  05EF  1683               	bsf	3,5	;RP0=1, select bank1
  1888  05F0  1303               	bcf	3,6	;RP1=0, select bank1
  1889  05F1  1207               	bcf	7,4	;volatile
  1890                           
  1891                           ;init.c: 19:     TRISCbits.TRISC5 = 0;
  1892  05F2  1287               	bcf	7,5	;volatile
  1893                           
  1894                           ;init.c: 20:     TRISCbits.TRISC6 = 0;
  1895  05F3  1307               	bcf	7,6	;volatile
  1896                           
  1897                           ;init.c: 21:     TRISCbits.TRISC7 = 0;
  1898  05F4  1387               	bcf	7,7	;volatile
  1899                           
  1900                           ;init.c: 23:     PORTCbits.RC4 = 0;
  1901  05F5  1283               	bcf	3,5	;RP0=0, select bank0
  1902  05F6  1303               	bcf	3,6	;RP1=0, select bank0
  1903  05F7  1207               	bcf	7,4	;volatile
  1904                           
  1905                           ;init.c: 24:     PORTCbits.RC5 = 0;
  1906  05F8  1287               	bcf	7,5	;volatile
  1907                           
  1908                           ;init.c: 25:     PORTCbits.RC6 = 0;
  1909  05F9  1307               	bcf	7,6	;volatile
  1910                           
  1911                           ;init.c: 26:     PORTCbits.RC7 = 0;
  1912  05FA  1387               	bcf	7,7	;volatile
  1913  05FB                     l24:	
  1914  05FB  0008               	return
  1915  05FC                     __end_of_init_pines_fil:	
  1916                           
  1917                           	psect	text13
  1918  05BE                     __ptext13:	
  1919 ;; *************** function _init_pines_col *****************
  1920 ;; Defined at:
  1921 ;;		line 29 in file "init.c"
  1922 ;; Parameters:    Size  Location     Type
  1923 ;;		None
  1924 ;; Auto vars:     Size  Location     Type
  1925 ;;		None
  1926 ;; Return value:  Size  Location     Type
  1927 ;;                  1    wreg      void 
  1928 ;; Registers used:
  1929 ;;		None
  1930 ;; Tracked objects:
  1931 ;;		On entry : 0/0
  1932 ;;		On exit  : 0/0
  1933 ;;		Unchanged: 0/0
  1934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1935 ;;      Params:         0       0       0       0       0
  1936 ;;      Locals:         0       0       0       0       0
  1937 ;;      Temps:          0       0       0       0       0
  1938 ;;      Totals:         0       0       0       0       0
  1939 ;;Total ram usage:        0 bytes
  1940 ;; Hardware stack levels used:    1
  1941 ;; Hardware stack levels required when called:    1
  1942 ;; This function calls:
  1943 ;;		Nothing
  1944 ;; This function is called by:
  1945 ;;		_init_pines
  1946 ;; This function uses a non-reentrant model
  1947 ;;
  1948                           
  1949                           
  1950                           ;psect for function _init_pines_col
  1951  05BE                     _init_pines_col:	
  1952  05BE                     l1169:	
  1953                           ;incstack = 0
  1954                           ; Regs used in _init_pines_col: []
  1955                           
  1956                           
  1957                           ;init.c: 30:     TRISBbits.TRISB0 = 0;
  1958  05BE  1683               	bsf	3,5	;RP0=1, select bank1
  1959  05BF  1303               	bcf	3,6	;RP1=0, select bank1
  1960  05C0  1006               	bcf	6,0	;volatile
  1961                           
  1962                           ;init.c: 31:     PORTBbits.RB0 = 0;
  1963  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  1964  05C2  1303               	bcf	3,6	;RP1=0, select bank0
  1965  05C3  1006               	bcf	6,0	;volatile
  1966                           
  1967                           ;init.c: 33:     TRISDbits.TRISD4 = 0;
  1968  05C4  1683               	bsf	3,5	;RP0=1, select bank1
  1969  05C5  1303               	bcf	3,6	;RP1=0, select bank1
  1970  05C6  1208               	bcf	8,4	;volatile
  1971                           
  1972                           ;init.c: 34:     TRISDbits.TRISD5 = 0;
  1973  05C7  1288               	bcf	8,5	;volatile
  1974                           
  1975                           ;init.c: 35:     TRISDbits.TRISD6 = 0;
  1976  05C8  1308               	bcf	8,6	;volatile
  1977                           
  1978                           ;init.c: 36:     TRISDbits.TRISD7 = 0;
  1979  05C9  1388               	bcf	8,7	;volatile
  1980                           
  1981                           ;init.c: 38:     PORTDbits.RD4 = 0;
  1982  05CA  1283               	bcf	3,5	;RP0=0, select bank0
  1983  05CB  1303               	bcf	3,6	;RP1=0, select bank0
  1984  05CC  1208               	bcf	8,4	;volatile
  1985                           
  1986                           ;init.c: 39:     PORTDbits.RD5 = 0;
  1987  05CD  1288               	bcf	8,5	;volatile
  1988                           
  1989                           ;init.c: 40:     PORTDbits.RD6 = 0;
  1990  05CE  1308               	bcf	8,6	;volatile
  1991                           
  1992                           ;init.c: 41:     PORTDbits.RD7 = 0;
  1993  05CF  1388               	bcf	8,7	;volatile
  1994  05D0                     l27:	
  1995  05D0  0008               	return
  1996  05D1                     __end_of_init_pines_col:	
  1997                           
  1998                           	psect	text14
  1999  0618                     __ptext14:	
  2000 ;; *************** function _init_interrupt *****************
  2001 ;; Defined at:
  2002 ;;		line 50 in file "init.c"
  2003 ;; Parameters:    Size  Location     Type
  2004 ;;		None
  2005 ;; Auto vars:     Size  Location     Type
  2006 ;;		None
  2007 ;; Return value:  Size  Location     Type
  2008 ;;                  1    wreg      void 
  2009 ;; Registers used:
  2010 ;;		None
  2011 ;; Tracked objects:
  2012 ;;		On entry : 0/0
  2013 ;;		On exit  : 0/0
  2014 ;;		Unchanged: 0/0
  2015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2016 ;;      Params:         0       0       0       0       0
  2017 ;;      Locals:         0       0       0       0       0
  2018 ;;      Temps:          0       0       0       0       0
  2019 ;;      Totals:         0       0       0       0       0
  2020 ;;Total ram usage:        0 bytes
  2021 ;; Hardware stack levels used:    1
  2022 ;; Hardware stack levels required when called:    1
  2023 ;; This function calls:
  2024 ;;		Nothing
  2025 ;; This function is called by:
  2026 ;;		_main
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029                           
  2030                           
  2031                           ;psect for function _init_interrupt
  2032  0618                     _init_interrupt:	
  2033  0618                     l1267:	
  2034                           ;incstack = 0
  2035                           ; Regs used in _init_interrupt: []
  2036                           
  2037                           
  2038                           ;init.c: 51:     INTCONbits.GIE = 1;
  2039  0618  178B               	bsf	11,7	;volatile
  2040                           
  2041                           ;init.c: 52:     INTCONbits.PEIE = 1;
  2042  0619  170B               	bsf	11,6	;volatile
  2043                           
  2044                           ;init.c: 53:     INTCONbits.RBIE = 1;
  2045  061A  158B               	bsf	11,3	;volatile
  2046                           
  2047                           ;init.c: 54:     INTCONbits.RBIF = 0;
  2048  061B  100B               	bcf	11,0	;volatile
  2049                           
  2050                           ;init.c: 56:     OPTION_REGbits.nRBPU = 0;
  2051  061C  1683               	bsf	3,5	;RP0=1, select bank1
  2052  061D  1303               	bcf	3,6	;RP1=0, select bank1
  2053  061E  1381               	bcf	1,7	;volatile
  2054  061F                     l33:	
  2055  061F  0008               	return
  2056  0620                     __end_of_init_interrupt:	
  2057                           
  2058                           	psect	text15
  2059  003F                     __ptext15:	
  2060 ;; *************** function _checkCount *****************
  2061 ;; Defined at:
  2062 ;;		line 67 in file "mainsource.c"
  2063 ;; Parameters:    Size  Location     Type
  2064 ;;		None
  2065 ;; Auto vars:     Size  Location     Type
  2066 ;;  i               2   28[BANK0 ] int 
  2067 ;;  j               2   26[BANK0 ] int 
  2068 ;; Return value:  Size  Location     Type
  2069 ;;                  1    wreg      void 
  2070 ;; Registers used:
  2071 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2072 ;; Tracked objects:
  2073 ;;		On entry : 0/0
  2074 ;;		On exit  : 0/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2077 ;;      Params:         0       0       0       0       0
  2078 ;;      Locals:         0       4       0       0       0
  2079 ;;      Temps:          0       9       0       0       0
  2080 ;;      Totals:         0      13       0       0       0
  2081 ;;Total ram usage:       13 bytes
  2082 ;; Hardware stack levels used:    1
  2083 ;; Hardware stack levels required when called:    3
  2084 ;; This function calls:
  2085 ;;		___awmod
  2086 ;;		_drawFigure
  2087 ;;		_memset
  2088 ;;		_rand
  2089 ;; This function is called by:
  2090 ;;		_main
  2091 ;; This function uses a non-reentrant model
  2092 ;;
  2093                           
  2094                           
  2095                           ;psect for function _checkCount
  2096  003F                     _checkCount:	
  2097  003F                     l1289:	
  2098                           ;incstack = 0
  2099                           ; Regs used in _checkCount: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2100                           
  2101                           
  2102                           ;mainsource.c: 68:     if(con.check_count == 1){
  2103  003F  1283               	bcf	3,5	;RP0=0, select bank0
  2104  0040  1303               	bcf	3,6	;RP1=0, select bank0
  2105  0041  034C               	decf	_con+8,w
  2106  0042  1D03               	btfss	3,2
  2107  0043  2845               	goto	u851
  2108  0044  2846               	goto	u850
  2109  0045                     u851:	
  2110  0045  2A64               	goto	l104
  2111  0046                     u850:	
  2112  0046                     l1291:	
  2113  0046  01BA               	clrf	checkCount@j
  2114  0047  01BB               	clrf	checkCount@j+1
  2115  0048                     l1293:	
  2116                           
  2117                           ;mainsource.c: 71:         if(timerCount >= 3906){
  2118  0048  300F               	movlw	15
  2119  0049  024E               	subwf	_timerCount+1,w
  2120  004A  3042               	movlw	66
  2121  004B  1903               	skipnz
  2122  004C  024D               	subwf	_timerCount,w
  2123  004D  1C03               	skipc
  2124  004E  2850               	goto	u861
  2125  004F  2851               	goto	u860
  2126  0050                     u861:	
  2127  0050  2A5C               	goto	l1397
  2128  0051                     u860:	
  2129  0051                     l1295:	
  2130                           
  2131                           ;mainsource.c: 73:             PORTBbits.RB0 = con.led;
  2132  0051  0C46               	rrf	_con+2,w
  2133  0052  1C03               	skipc
  2134  0053  1006               	bcf	6,0	;volatile
  2135  0054  1803               	skipnc
  2136  0055  1406               	bsf	6,0	;volatile
  2137  0056                     l1297:	
  2138                           
  2139                           ;mainsource.c: 74:             con.led= ~con.led;
  2140  0056  0946               	comf	_con+2,w
  2141  0057  00B1               	movwf	??_checkCount
  2142  0058  0831               	movf	??_checkCount,w
  2143  0059  00C6               	movwf	_con+2
  2144  005A                     l1299:	
  2145                           
  2146                           ;mainsource.c: 75:             con.ficha_Vpos--;
  2147  005A  3001               	movlw	1
  2148  005B  02C7               	subwf	_con+3,f
  2149  005C                     l1301:	
  2150                           
  2151                           ;mainsource.c: 76:             timerCount = 0;
  2152  005C  01CD               	clrf	_timerCount
  2153  005D  01CE               	clrf	_timerCount+1
  2154  005E                     l1303:	
  2155                           
  2156                           ;mainsource.c: 77:             if(con.ficha_Vpos==0){
  2157  005E  0847               	movf	_con+3,w
  2158  005F  1D03               	btfss	3,2
  2159  0060  2862               	goto	u871
  2160  0061  2863               	goto	u870
  2161  0062                     u871:	
  2162  0062  28BF               	goto	l1321
  2163  0063                     u870:	
  2164  0063                     l1305:	
  2165                           
  2166                           ;mainsource.c: 78:                 for(j=0; j<8; j++){
  2167  0063  01BA               	clrf	checkCount@j
  2168  0064  01BB               	clrf	checkCount@j+1
  2169  0065                     l1311:	
  2170                           
  2171                           ;mainsource.c: 79:                     fondo[j] = fondo[j] | ficha[j];
  2172  0065  1283               	bcf	3,5	;RP0=0, select bank0
  2173  0066  1303               	bcf	3,6	;RP1=0, select bank0
  2174  0067  083A               	movf	checkCount@j,w
  2175  0068  00B1               	movwf	??_checkCount
  2176  0069  0731               	addwf	??_checkCount,w
  2177  006A  3EA0               	addlw	(low (_ficha| 0))& (0+255)
  2178  006B  0084               	movwf	4
  2179  006C  1383               	bcf	3,7	;select IRP bank1
  2180  006D  0800               	movf	0,w
  2181  006E  00B2               	movwf	??_checkCount+1
  2182  006F  0A84               	incf	4,f
  2183  0070  0800               	movf	0,w
  2184  0071  00B3               	movwf	??_checkCount+2
  2185  0072  083A               	movf	checkCount@j,w
  2186  0073  00B4               	movwf	??_checkCount+3
  2187  0074  0734               	addwf	??_checkCount+3,w
  2188  0075  3E4F               	addlw	(low (_fondo| 0))& (0+255)
  2189  0076  0084               	movwf	4
  2190  0077  0800               	movf	0,w
  2191  0078  00B5               	movwf	??_checkCount+4
  2192  0079  0A84               	incf	4,f
  2193  007A  0800               	movf	0,w
  2194  007B  00B6               	movwf	??_checkCount+5
  2195  007C  0832               	movf	??_checkCount+1,w
  2196  007D  0435               	iorwf	??_checkCount+4,w
  2197  007E  00B7               	movwf	??_checkCount+6
  2198  007F  0833               	movf	??_checkCount+2,w
  2199  0080  0436               	iorwf	??_checkCount+5,w
  2200  0081  00B8               	movwf	??_checkCount+7
  2201  0082  083A               	movf	checkCount@j,w
  2202  0083  00B9               	movwf	??_checkCount+8
  2203  0084  0739               	addwf	??_checkCount+8,w
  2204  0085  3E4F               	addlw	(low (_fondo| 0))& (0+255)
  2205  0086  0084               	movwf	4
  2206  0087  0837               	movf	??_checkCount+6,w
  2207  0088  0080               	movwf	0
  2208  0089  0A84               	incf	4,f
  2209  008A  0838               	movf	??_checkCount+7,w
  2210  008B  0080               	movwf	0
  2211  008C                     l1313:	
  2212                           
  2213                           ;mainsource.c: 80:                 }
  2214  008C  3001               	movlw	1
  2215  008D  07BA               	addwf	checkCount@j,f
  2216  008E  1803               	skipnc
  2217  008F  0ABB               	incf	checkCount@j+1,f
  2218  0090  3000               	movlw	0
  2219  0091  07BB               	addwf	checkCount@j+1,f
  2220  0092                     l1315:	
  2221  0092  083B               	movf	checkCount@j+1,w
  2222  0093  3A80               	xorlw	128
  2223  0094  00FF               	movwf	btemp+1
  2224  0095  3080               	movlw	128
  2225  0096  027F               	subwf	btemp+1,w
  2226  0097  1D03               	skipz
  2227  0098  289B               	goto	u885
  2228  0099  3008               	movlw	8
  2229  009A  023A               	subwf	checkCount@j,w
  2230  009B                     u885:	
  2231  009B  1C03               	skipc
  2232  009C  289E               	goto	u881
  2233  009D  289F               	goto	u880
  2234  009E                     u881:	
  2235  009E  2865               	goto	l1311
  2236  009F                     u880:	
  2237  009F                     l1317:	
  2238                           
  2239                           ;mainsource.c: 81:                 con.ficha_Vpos = 16;
  2240  009F  3010               	movlw	16
  2241  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  2242  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  2243  00A2  00B1               	movwf	??_checkCount
  2244  00A3  0831               	movf	??_checkCount,w
  2245  00A4  00C7               	movwf	_con+3
  2246  00A5                     l1319:	
  2247                           
  2248                           ;mainsource.c: 82:                 con.ficha_actual = rand() % 7;
  2249  00A5  3007               	movlw	7
  2250  00A6  00AB               	movwf	___awmod@divisor
  2251  00A7  3000               	movlw	0
  2252  00A8  00AC               	movwf	___awmod@divisor+1
  2253  00A9  120A  118A  2481  120A  118A  	fcall	_rand
  2254  00AE  1283               	bcf	3,5	;RP0=0, select bank0
  2255  00AF  1303               	bcf	3,6	;RP1=0, select bank0
  2256  00B0  0825               	movf	?_rand+1,w
  2257  00B1  00AE               	movwf	___awmod@dividend+1
  2258  00B2  0824               	movf	?_rand,w
  2259  00B3  00AD               	movwf	___awmod@dividend
  2260  00B4  120A  118A  238F  120A  118A  	fcall	___awmod
  2261  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  2262  00BA  1303               	bcf	3,6	;RP1=0, select bank0
  2263  00BB  082B               	movf	?___awmod,w
  2264  00BC  00B1               	movwf	??_checkCount
  2265  00BD  0831               	movf	??_checkCount,w
  2266  00BE  00C9               	movwf	_con+5
  2267  00BF                     l1321:	
  2268                           
  2269                           ;mainsource.c: 84:             for(i=0; i<8; i++){
  2270  00BF  01BC               	clrf	checkCount@i
  2271  00C0  01BD               	clrf	checkCount@i+1
  2272  00C1                     l1327:	
  2273                           
  2274                           ;mainsource.c: 85:                 pantalla[i] = ficha[i] | fondo[i];
  2275  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  2276  00C2  1303               	bcf	3,6	;RP1=0, select bank0
  2277  00C3  083C               	movf	checkCount@i,w
  2278  00C4  00B1               	movwf	??_checkCount
  2279  00C5  0731               	addwf	??_checkCount,w
  2280  00C6  3E4F               	addlw	(low (_fondo| 0))& (0+255)
  2281  00C7  0084               	movwf	4
  2282  00C8  1383               	bcf	3,7	;select IRP bank0
  2283  00C9  0800               	movf	0,w
  2284  00CA  00B2               	movwf	??_checkCount+1
  2285  00CB  0A84               	incf	4,f
  2286  00CC  0800               	movf	0,w
  2287  00CD  00B3               	movwf	??_checkCount+2
  2288  00CE  083C               	movf	checkCount@i,w
  2289  00CF  00B4               	movwf	??_checkCount+3
  2290  00D0  0734               	addwf	??_checkCount+3,w
  2291  00D1  3EA0               	addlw	(low (_ficha| 0))& (0+255)
  2292  00D2  0084               	movwf	4
  2293  00D3  0800               	movf	0,w
  2294  00D4  00B5               	movwf	??_checkCount+4
  2295  00D5  0A84               	incf	4,f
  2296  00D6  0800               	movf	0,w
  2297  00D7  00B6               	movwf	??_checkCount+5
  2298  00D8  0832               	movf	??_checkCount+1,w
  2299  00D9  0435               	iorwf	??_checkCount+4,w
  2300  00DA  00B7               	movwf	??_checkCount+6
  2301  00DB  0833               	movf	??_checkCount+2,w
  2302  00DC  0436               	iorwf	??_checkCount+5,w
  2303  00DD  00B8               	movwf	??_checkCount+7
  2304  00DE  083C               	movf	checkCount@i,w
  2305  00DF  00B9               	movwf	??_checkCount+8
  2306  00E0  0739               	addwf	??_checkCount+8,w
  2307  00E1  3EB0               	addlw	(low (_pantalla| 0))& (0+255)
  2308  00E2  0084               	movwf	4
  2309  00E3  0837               	movf	??_checkCount+6,w
  2310  00E4  0080               	movwf	0
  2311  00E5  0A84               	incf	4,f
  2312  00E6  0838               	movf	??_checkCount+7,w
  2313  00E7  0080               	movwf	0
  2314  00E8                     l1329:	
  2315                           
  2316                           ;mainsource.c: 86:             }
  2317  00E8  3001               	movlw	1
  2318  00E9  07BC               	addwf	checkCount@i,f
  2319  00EA  1803               	skipnc
  2320  00EB  0ABD               	incf	checkCount@i+1,f
  2321  00EC  3000               	movlw	0
  2322  00ED  07BD               	addwf	checkCount@i+1,f
  2323  00EE                     l1331:	
  2324  00EE  083D               	movf	checkCount@i+1,w
  2325  00EF  3A80               	xorlw	128
  2326  00F0  00FF               	movwf	btemp+1
  2327  00F1  3080               	movlw	128
  2328  00F2  027F               	subwf	btemp+1,w
  2329  00F3  1D03               	skipz
  2330  00F4  28F7               	goto	u895
  2331  00F5  3008               	movlw	8
  2332  00F6  023C               	subwf	checkCount@i,w
  2333  00F7                     u895:	
  2334  00F7  1C03               	skipc
  2335  00F8  28FA               	goto	u891
  2336  00F9  28FB               	goto	u890
  2337  00FA                     u891:	
  2338  00FA  28C1               	goto	l1327
  2339  00FB                     u890:	
  2340  00FB                     l1333:	
  2341                           
  2342                           ;mainsource.c: 88:             for(i=con.ficha_Hpos; i<(con.ficha_Hpos+4); i++){
  2343  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  2344  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  2345  00FD  0848               	movf	_con+4,w
  2346  00FE  00B1               	movwf	??_checkCount
  2347  00FF  01B2               	clrf	??_checkCount+1
  2348  0100  0831               	movf	??_checkCount,w
  2349  0101  00BC               	movwf	checkCount@i
  2350  0102  0832               	movf	??_checkCount+1,w
  2351  0103  00BD               	movwf	checkCount@i+1
  2352  0104  298E               	goto	l90
  2353  0105                     l1335:	
  2354                           
  2355                           ;mainsource.c: 89:                 if((ficha[i]>>1 & fondo[i]) != 0){
  2356  0105  1283               	bcf	3,5	;RP0=0, select bank0
  2357  0106  1303               	bcf	3,6	;RP1=0, select bank0
  2358  0107  083C               	movf	checkCount@i,w
  2359  0108  00B1               	movwf	??_checkCount
  2360  0109  0731               	addwf	??_checkCount,w
  2361  010A  3E4F               	addlw	(low (_fondo| 0))& (0+255)
  2362  010B  0084               	movwf	4
  2363  010C  1383               	bcf	3,7	;select IRP bank0
  2364  010D  0800               	movf	0,w
  2365  010E  00B2               	movwf	??_checkCount+1
  2366  010F  0A84               	incf	4,f
  2367  0110  0800               	movf	0,w
  2368  0111  00B3               	movwf	??_checkCount+2
  2369  0112  083C               	movf	checkCount@i,w
  2370  0113  00B4               	movwf	??_checkCount+3
  2371  0114  0734               	addwf	??_checkCount+3,w
  2372  0115  3EA0               	addlw	(low (_ficha| 0))& (0+255)
  2373  0116  0084               	movwf	4
  2374  0117  0800               	movf	0,w
  2375  0118  00B5               	movwf	??_checkCount+4
  2376  0119  0A84               	incf	4,f
  2377  011A  0800               	movf	0,w
  2378  011B  00B6               	movwf	??_checkCount+5
  2379  011C  1003               	clrc
  2380  011D  0CB6               	rrf	??_checkCount+5,f
  2381  011E  0CB5               	rrf	??_checkCount+4,f
  2382  011F  0832               	movf	??_checkCount+1,w
  2383  0120  0535               	andwf	??_checkCount+4,w
  2384  0121  00B7               	movwf	??_checkCount+6
  2385  0122  0833               	movf	??_checkCount+2,w
  2386  0123  0536               	andwf	??_checkCount+5,w
  2387  0124  00B8               	movwf	??_checkCount+7
  2388  0125  0837               	movf	??_checkCount+6,w
  2389  0126  0438               	iorwf	??_checkCount+7,w
  2390  0127  1903               	btfsc	3,2
  2391  0128  292A               	goto	u901
  2392  0129  292B               	goto	u900
  2393  012A                     u901:	
  2394  012A  2988               	goto	l1353
  2395  012B                     u900:	
  2396  012B                     l1337:	
  2397                           
  2398                           ;mainsource.c: 90:                     for(j=0; j<8; j++){
  2399  012B  01BA               	clrf	checkCount@j
  2400  012C  01BB               	clrf	checkCount@j+1
  2401  012D                     l1343:	
  2402                           
  2403                           ;mainsource.c: 91:                         fondo[j] = fondo[j] | ficha[j];
  2404  012D  1283               	bcf	3,5	;RP0=0, select bank0
  2405  012E  1303               	bcf	3,6	;RP1=0, select bank0
  2406  012F  083A               	movf	checkCount@j,w
  2407  0130  00B1               	movwf	??_checkCount
  2408  0131  0731               	addwf	??_checkCount,w
  2409  0132  3EA0               	addlw	(low (_ficha| 0))& (0+255)
  2410  0133  0084               	movwf	4
  2411  0134  1383               	bcf	3,7	;select IRP bank1
  2412  0135  0800               	movf	0,w
  2413  0136  00B2               	movwf	??_checkCount+1
  2414  0137  0A84               	incf	4,f
  2415  0138  0800               	movf	0,w
  2416  0139  00B3               	movwf	??_checkCount+2
  2417  013A  083A               	movf	checkCount@j,w
  2418  013B  00B4               	movwf	??_checkCount+3
  2419  013C  0734               	addwf	??_checkCount+3,w
  2420  013D  3E4F               	addlw	(low (_fondo| 0))& (0+255)
  2421  013E  0084               	movwf	4
  2422  013F  0800               	movf	0,w
  2423  0140  00B5               	movwf	??_checkCount+4
  2424  0141  0A84               	incf	4,f
  2425  0142  0800               	movf	0,w
  2426  0143  00B6               	movwf	??_checkCount+5
  2427  0144  0832               	movf	??_checkCount+1,w
  2428  0145  0435               	iorwf	??_checkCount+4,w
  2429  0146  00B7               	movwf	??_checkCount+6
  2430  0147  0833               	movf	??_checkCount+2,w
  2431  0148  0436               	iorwf	??_checkCount+5,w
  2432  0149  00B8               	movwf	??_checkCount+7
  2433  014A  083A               	movf	checkCount@j,w
  2434  014B  00B9               	movwf	??_checkCount+8
  2435  014C  0739               	addwf	??_checkCount+8,w
  2436  014D  3E4F               	addlw	(low (_fondo| 0))& (0+255)
  2437  014E  0084               	movwf	4
  2438  014F  0837               	movf	??_checkCount+6,w
  2439  0150  0080               	movwf	0
  2440  0151  0A84               	incf	4,f
  2441  0152  0838               	movf	??_checkCount+7,w
  2442  0153  0080               	movwf	0
  2443  0154                     l1345:	
  2444                           
  2445                           ;mainsource.c: 92:                     }
  2446  0154  3001               	movlw	1
  2447  0155  07BA               	addwf	checkCount@j,f
  2448  0156  1803               	skipnc
  2449  0157  0ABB               	incf	checkCount@j+1,f
  2450  0158  3000               	movlw	0
  2451  0159  07BB               	addwf	checkCount@j+1,f
  2452  015A                     l1347:	
  2453  015A  083B               	movf	checkCount@j+1,w
  2454  015B  3A80               	xorlw	128
  2455  015C  00FF               	movwf	btemp+1
  2456  015D  3080               	movlw	128
  2457  015E  027F               	subwf	btemp+1,w
  2458  015F  1D03               	skipz
  2459  0160  2963               	goto	u915
  2460  0161  3008               	movlw	8
  2461  0162  023A               	subwf	checkCount@j,w
  2462  0163                     u915:	
  2463  0163  1C03               	skipc
  2464  0164  2966               	goto	u911
  2465  0165  2967               	goto	u910
  2466  0166                     u911:	
  2467  0166  292D               	goto	l1343
  2468  0167                     u910:	
  2469  0167                     l1349:	
  2470                           
  2471                           ;mainsource.c: 93:                     con.ficha_Vpos = 16;
  2472  0167  3010               	movlw	16
  2473  0168  1283               	bcf	3,5	;RP0=0, select bank0
  2474  0169  1303               	bcf	3,6	;RP1=0, select bank0
  2475  016A  00B1               	movwf	??_checkCount
  2476  016B  0831               	movf	??_checkCount,w
  2477  016C  00C7               	movwf	_con+3
  2478  016D                     l1351:	
  2479                           
  2480                           ;mainsource.c: 94:                     con.ficha_actual = rand() % 7;
  2481  016D  3007               	movlw	7
  2482  016E  00AB               	movwf	___awmod@divisor
  2483  016F  3000               	movlw	0
  2484  0170  00AC               	movwf	___awmod@divisor+1
  2485  0171  120A  118A  2481  120A  118A  	fcall	_rand
  2486  0176  1283               	bcf	3,5	;RP0=0, select bank0
  2487  0177  1303               	bcf	3,6	;RP1=0, select bank0
  2488  0178  0825               	movf	?_rand+1,w
  2489  0179  00AE               	movwf	___awmod@dividend+1
  2490  017A  0824               	movf	?_rand,w
  2491  017B  00AD               	movwf	___awmod@dividend
  2492  017C  120A  118A  238F  120A  118A  	fcall	___awmod
  2493  0181  1283               	bcf	3,5	;RP0=0, select bank0
  2494  0182  1303               	bcf	3,6	;RP1=0, select bank0
  2495  0183  082B               	movf	?___awmod,w
  2496  0184  00B1               	movwf	??_checkCount
  2497  0185  0831               	movf	??_checkCount,w
  2498  0186  00C9               	movwf	_con+5
  2499                           
  2500                           ;mainsource.c: 95:                     break;
  2501  0187  29A3               	goto	l1355
  2502  0188                     l1353:	
  2503                           
  2504                           ;mainsource.c: 97:             }
  2505  0188  3001               	movlw	1
  2506  0189  07BC               	addwf	checkCount@i,f
  2507  018A  1803               	skipnc
  2508  018B  0ABD               	incf	checkCount@i+1,f
  2509  018C  3000               	movlw	0
  2510  018D  07BD               	addwf	checkCount@i+1,f
  2511  018E                     l90:	
  2512  018E  0848               	movf	_con+4,w
  2513  018F  3E04               	addlw	4
  2514  0190  00B1               	movwf	??_checkCount
  2515  0191  3000               	movlw	0
  2516  0192  1803               	skipnc
  2517  0193  3001               	movlw	1
  2518  0194  00B2               	movwf	??_checkCount+1
  2519  0195  083D               	movf	checkCount@i+1,w
  2520  0196  3A80               	xorlw	128
  2521  0197  00B3               	movwf	??_checkCount+2
  2522  0198  0832               	movf	??_checkCount+1,w
  2523  0199  3A80               	xorlw	128
  2524  019A  0233               	subwf	??_checkCount+2,w
  2525  019B  1D03               	skipz
  2526  019C  299F               	goto	u925
  2527  019D  0831               	movf	??_checkCount,w
  2528  019E  023C               	subwf	checkCount@i,w
  2529  019F                     u925:	
  2530  019F  1C03               	skipc
  2531  01A0  29A2               	goto	u921
  2532  01A1  29A3               	goto	u920
  2533  01A2                     u921:	
  2534  01A2  2905               	goto	l1335
  2535  01A3                     u920:	
  2536  01A3                     l1355:	
  2537                           
  2538                           ;mainsource.c: 99:             for(i=0; i<8; i++){
  2539  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  2540  01A4  1303               	bcf	3,6	;RP1=0, select bank0
  2541  01A5  01BC               	clrf	checkCount@i
  2542  01A6  01BD               	clrf	checkCount@i+1
  2543  01A7                     l1361:	
  2544                           
  2545                           ;mainsource.c: 100:                 if((fondo[i] & 0x8000) != 0){
  2546  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  2547  01A8  1303               	bcf	3,6	;RP1=0, select bank0
  2548  01A9  083C               	movf	checkCount@i,w
  2549  01AA  00B1               	movwf	??_checkCount
  2550  01AB  0731               	addwf	??_checkCount,w
  2551  01AC  3E4F               	addlw	(low (_fondo| 0))& (0+255)
  2552  01AD  0084               	movwf	4
  2553  01AE  1383               	bcf	3,7	;select IRP bank0
  2554  01AF  0800               	movf	0,w
  2555  01B0  00B2               	movwf	??_checkCount+1
  2556  01B1  0A84               	incf	4,f
  2557  01B2  0800               	movf	0,w
  2558  01B3  00B3               	movwf	??_checkCount+2
  2559  01B4  1FB3               	btfss	??_checkCount+2,7
  2560  01B5  29B7               	goto	u931
  2561  01B6  29B8               	goto	u930
  2562  01B7                     u931:	
  2563  01B7  29F3               	goto	l1369
  2564  01B8                     u930:	
  2565  01B8                     l1363:	
  2566                           
  2567                           ;mainsource.c: 101:                     memset(ficha, 0, sizeof(ficha));
  2568  01B8  3000               	movlw	0
  2569  01B9  00F2               	movwf	memset@c
  2570  01BA  00F3               	movwf	memset@c+1
  2571  01BB  3010               	movlw	16
  2572  01BC  00F4               	movwf	memset@n
  2573  01BD  3000               	movlw	0
  2574  01BE  00F5               	movwf	memset@n+1
  2575  01BF  30A0               	movlw	(low (_ficha| 0))& (0+255)
  2576  01C0  120A  118A  256F  120A  118A  	fcall	_memset
  2577                           
  2578                           ;mainsource.c: 102:                     memset(fondo, 0, sizeof(fondo));
  2579  01C5  3000               	movlw	0
  2580  01C6  00F2               	movwf	memset@c
  2581  01C7  00F3               	movwf	memset@c+1
  2582  01C8  3010               	movlw	16
  2583  01C9  00F4               	movwf	memset@n
  2584  01CA  3000               	movlw	0
  2585  01CB  00F5               	movwf	memset@n+1
  2586  01CC  304F               	movlw	(low (_fondo| 0))& (0+255)
  2587  01CD  120A  118A  256F  120A  118A  	fcall	_memset
  2588  01D2                     l1365:	
  2589                           
  2590                           ;mainsource.c: 103:                     con.ficha_Vpos = 16;
  2591  01D2  3010               	movlw	16
  2592  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  2593  01D4  1303               	bcf	3,6	;RP1=0, select bank0
  2594  01D5  00B1               	movwf	??_checkCount
  2595  01D6  0831               	movf	??_checkCount,w
  2596  01D7  00C7               	movwf	_con+3
  2597  01D8                     l1367:	
  2598                           
  2599                           ;mainsource.c: 104:                     con.ficha_actual = rand() % 7;
  2600  01D8  3007               	movlw	7
  2601  01D9  00AB               	movwf	___awmod@divisor
  2602  01DA  3000               	movlw	0
  2603  01DB  00AC               	movwf	___awmod@divisor+1
  2604  01DC  120A  118A  2481  120A  118A  	fcall	_rand
  2605  01E1  1283               	bcf	3,5	;RP0=0, select bank0
  2606  01E2  1303               	bcf	3,6	;RP1=0, select bank0
  2607  01E3  0825               	movf	?_rand+1,w
  2608  01E4  00AE               	movwf	___awmod@dividend+1
  2609  01E5  0824               	movf	?_rand,w
  2610  01E6  00AD               	movwf	___awmod@dividend
  2611  01E7  120A  118A  238F  120A  118A  	fcall	___awmod
  2612  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  2613  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  2614  01EE  082B               	movf	?___awmod,w
  2615  01EF  00B1               	movwf	??_checkCount
  2616  01F0  0831               	movf	??_checkCount,w
  2617  01F1  00C9               	movwf	_con+5
  2618                           
  2619                           ;mainsource.c: 105:                     break;
  2620  01F2  2A06               	goto	l1373
  2621  01F3                     l1369:	
  2622                           
  2623                           ;mainsource.c: 108:             }
  2624  01F3  3001               	movlw	1
  2625  01F4  07BC               	addwf	checkCount@i,f
  2626  01F5  1803               	skipnc
  2627  01F6  0ABD               	incf	checkCount@i+1,f
  2628  01F7  3000               	movlw	0
  2629  01F8  07BD               	addwf	checkCount@i+1,f
  2630  01F9                     l1371:	
  2631  01F9  083D               	movf	checkCount@i+1,w
  2632  01FA  3A80               	xorlw	128
  2633  01FB  00FF               	movwf	btemp+1
  2634  01FC  3080               	movlw	128
  2635  01FD  027F               	subwf	btemp+1,w
  2636  01FE  1D03               	skipz
  2637  01FF  2A02               	goto	u945
  2638  0200  3008               	movlw	8
  2639  0201  023C               	subwf	checkCount@i,w
  2640  0202                     u945:	
  2641  0202  1C03               	skipc
  2642  0203  2A05               	goto	u941
  2643  0204  2A06               	goto	u940
  2644  0205                     u941:	
  2645  0205  29A7               	goto	l1361
  2646  0206                     u940:	
  2647  0206                     l1373:	
  2648                           
  2649                           ;mainsource.c: 109:             for (i=0; i<16; i++){
  2650  0206  1283               	bcf	3,5	;RP0=0, select bank0
  2651  0207  1303               	bcf	3,6	;RP1=0, select bank0
  2652  0208  01BC               	clrf	checkCount@i
  2653  0209  01BD               	clrf	checkCount@i+1
  2654  020A                     l1379:	
  2655                           
  2656                           ;mainsource.c: 110:                 for(j=0; j<8; j++){
  2657  020A  1283               	bcf	3,5	;RP0=0, select bank0
  2658  020B  1303               	bcf	3,6	;RP1=0, select bank0
  2659  020C  01BA               	clrf	checkCount@j
  2660  020D  01BB               	clrf	checkCount@j+1
  2661  020E                     l1385:	
  2662                           
  2663                           ;mainsource.c: 111:                    if( (fondo[i] & (1<<j)) == 0){
  2664  020E  1283               	bcf	3,5	;RP0=0, select bank0
  2665  020F  1303               	bcf	3,6	;RP1=0, select bank0
  2666  0210  083C               	movf	checkCount@i,w
  2667  0211  00B1               	movwf	??_checkCount
  2668  0212  0731               	addwf	??_checkCount,w
  2669  0213  3E4F               	addlw	(low (_fondo| 0))& (0+255)
  2670  0214  0084               	movwf	4
  2671  0215  1383               	bcf	3,7	;select IRP bank0
  2672  0216  0800               	movf	0,w
  2673  0217  00B2               	movwf	??_checkCount+1
  2674  0218  0A84               	incf	4,f
  2675  0219  0800               	movf	0,w
  2676  021A  00B3               	movwf	??_checkCount+2
  2677  021B  0A3A               	incf	checkCount@j,w
  2678  021C  00B4               	movwf	??_checkCount+3
  2679  021D  3001               	movlw	1
  2680  021E  00B5               	movwf	??_checkCount+4
  2681  021F  3000               	movlw	0
  2682  0220  00B6               	movwf	??_checkCount+5
  2683  0221  2A25               	goto	u954
  2684  0222                     u955:	
  2685  0222  1003               	clrc
  2686  0223  0DB5               	rlf	??_checkCount+4,f
  2687  0224  0DB6               	rlf	??_checkCount+5,f
  2688  0225                     u954:	
  2689  0225  0BB4               	decfsz	??_checkCount+3,f
  2690  0226  2A22               	goto	u955
  2691  0227  0832               	movf	??_checkCount+1,w
  2692  0228  0535               	andwf	??_checkCount+4,w
  2693  0229  00B7               	movwf	??_checkCount+6
  2694  022A  0833               	movf	??_checkCount+2,w
  2695  022B  0536               	andwf	??_checkCount+5,w
  2696  022C  00B8               	movwf	??_checkCount+7
  2697  022D  0837               	movf	??_checkCount+6,w
  2698  022E  0438               	iorwf	??_checkCount+7,w
  2699  022F  1D03               	btfss	3,2
  2700  0230  2A32               	goto	u961
  2701  0231  2A33               	goto	u960
  2702  0232                     u961:	
  2703  0232  2A34               	goto	l1389
  2704  0233                     u960:	
  2705  0233  2A47               	goto	l1393
  2706  0234                     l1389:	
  2707                           
  2708                           ;mainsource.c: 114:                 }
  2709  0234  3001               	movlw	1
  2710  0235  07BA               	addwf	checkCount@j,f
  2711  0236  1803               	skipnc
  2712  0237  0ABB               	incf	checkCount@j+1,f
  2713  0238  3000               	movlw	0
  2714  0239  07BB               	addwf	checkCount@j+1,f
  2715  023A                     l1391:	
  2716  023A  083B               	movf	checkCount@j+1,w
  2717  023B  3A80               	xorlw	128
  2718  023C  00FF               	movwf	btemp+1
  2719  023D  3080               	movlw	128
  2720  023E  027F               	subwf	btemp+1,w
  2721  023F  1D03               	skipz
  2722  0240  2A43               	goto	u975
  2723  0241  3008               	movlw	8
  2724  0242  023A               	subwf	checkCount@j,w
  2725  0243                     u975:	
  2726  0243  1C03               	skipc
  2727  0244  2A46               	goto	u971
  2728  0245  2A47               	goto	u970
  2729  0246                     u971:	
  2730  0246  2A0E               	goto	l1385
  2731  0247                     u970:	
  2732  0247                     l1393:	
  2733                           
  2734                           ;mainsource.c: 116:             }
  2735  0247  3001               	movlw	1
  2736  0248  1283               	bcf	3,5	;RP0=0, select bank0
  2737  0249  1303               	bcf	3,6	;RP1=0, select bank0
  2738  024A  07BC               	addwf	checkCount@i,f
  2739  024B  1803               	skipnc
  2740  024C  0ABD               	incf	checkCount@i+1,f
  2741  024D  3000               	movlw	0
  2742  024E  07BD               	addwf	checkCount@i+1,f
  2743  024F                     l1395:	
  2744  024F  083D               	movf	checkCount@i+1,w
  2745  0250  3A80               	xorlw	128
  2746  0251  00FF               	movwf	btemp+1
  2747  0252  3080               	movlw	128
  2748  0253  027F               	subwf	btemp+1,w
  2749  0254  1D03               	skipz
  2750  0255  2A58               	goto	u985
  2751  0256  3010               	movlw	16
  2752  0257  023C               	subwf	checkCount@i,w
  2753  0258                     u985:	
  2754  0258  1C03               	skipc
  2755  0259  2A5B               	goto	u981
  2756  025A  2A5C               	goto	u980
  2757  025B                     u981:	
  2758  025B  2A0A               	goto	l1379
  2759  025C                     u980:	
  2760  025C                     l1397:	
  2761                           
  2762                           ;mainsource.c: 120:         drawFigure();
  2763  025C  120A  118A  2265  120A  118A  	fcall	_drawFigure
  2764  0261                     l1399:	
  2765                           
  2766                           ;mainsource.c: 123:         con.check_count = 0;
  2767  0261  1283               	bcf	3,5	;RP0=0, select bank0
  2768  0262  1303               	bcf	3,6	;RP1=0, select bank0
  2769  0263  01CC               	clrf	_con+8
  2770  0264                     l104:	
  2771  0264  0008               	return
  2772  0265                     __end_of_checkCount:	
  2773                           
  2774                           	psect	text16
  2775  0481                     __ptext16:	
  2776 ;; *************** function _rand *****************
  2777 ;; Defined at:
  2778 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  2779 ;; Parameters:    Size  Location     Type
  2780 ;;		None
  2781 ;; Auto vars:     Size  Location     Type
  2782 ;;		None
  2783 ;; Return value:  Size  Location     Type
  2784 ;;                  2    4[BANK0 ] int 
  2785 ;; Registers used:
  2786 ;;		wreg, status,2, status,0, pclath, cstack
  2787 ;; Tracked objects:
  2788 ;;		On entry : 0/0
  2789 ;;		On exit  : 0/0
  2790 ;;		Unchanged: 0/0
  2791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2792 ;;      Params:         0       2       0       0       0
  2793 ;;      Locals:         0       0       0       0       0
  2794 ;;      Temps:          0       5       0       0       0
  2795 ;;      Totals:         0       7       0       0       0
  2796 ;;Total ram usage:        7 bytes
  2797 ;; Hardware stack levels used:    1
  2798 ;; Hardware stack levels required when called:    2
  2799 ;; This function calls:
  2800 ;;		___lmul
  2801 ;; This function is called by:
  2802 ;;		_main
  2803 ;;		_checkCount
  2804 ;; This function uses a non-reentrant model
  2805 ;;
  2806                           
  2807                           
  2808                           ;psect for function _rand
  2809  0481                     _rand:	
  2810  0481                     l1171:	
  2811                           ;incstack = 0
  2812                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  2813                           
  2814  0481  1283               	bcf	3,5	;RP0=0, select bank0
  2815  0482  1303               	bcf	3,6	;RP1=0, select bank0
  2816  0483  0862               	movf	_randx+3,w
  2817  0484  00F5               	movwf	___lmul@multiplier+3
  2818  0485  0861               	movf	_randx+2,w
  2819  0486  00F4               	movwf	___lmul@multiplier+2
  2820  0487  0860               	movf	_randx+1,w
  2821  0488  00F3               	movwf	___lmul@multiplier+1
  2822  0489  085F               	movf	_randx,w
  2823  048A  00F2               	movwf	___lmul@multiplier
  2824  048B  3041               	movlw	65
  2825  048C  00F9               	movwf	___lmul@multiplicand+3
  2826  048D  30C6               	movlw	198
  2827  048E  00F8               	movwf	___lmul@multiplicand+2
  2828  048F  304E               	movlw	78
  2829  0490  00F7               	movwf	___lmul@multiplicand+1
  2830  0491  306D               	movlw	109
  2831  0492  00F6               	movwf	___lmul@multiplicand
  2832  0493  120A  118A  23EA  120A  118A  	fcall	___lmul
  2833  0498  0875               	movf	?___lmul+3,w
  2834  0499  1283               	bcf	3,5	;RP0=0, select bank0
  2835  049A  1303               	bcf	3,6	;RP1=0, select bank0
  2836  049B  00E2               	movwf	_randx+3
  2837  049C  0874               	movf	?___lmul+2,w
  2838  049D  00E1               	movwf	_randx+2
  2839  049E  0873               	movf	?___lmul+1,w
  2840  049F  00E0               	movwf	_randx+1
  2841  04A0  0872               	movf	?___lmul,w
  2842  04A1  00DF               	movwf	_randx
  2843  04A2                     l1173:	
  2844  04A2  3039               	movlw	57
  2845  04A3  07DF               	addwf	_randx,f
  2846  04A4  3030               	movlw	48
  2847  04A5  1803               	skipnc
  2848  04A6  3031               	movlw	49
  2849  04A7  07E0               	addwf	_randx+1,f
  2850  04A8  3000               	movlw	0
  2851  04A9  1803               	skipnc
  2852  04AA  3001               	movlw	1
  2853  04AB  07E1               	addwf	_randx+2,f
  2854  04AC  3000               	movlw	0
  2855  04AD  1803               	skipnc
  2856  04AE  3001               	movlw	1
  2857  04AF  07E2               	addwf	_randx+3,f
  2858  04B0                     l1175:	
  2859  04B0  085F               	movf	_randx,w
  2860  04B1  00A6               	movwf	??_rand
  2861  04B2  0860               	movf	_randx+1,w
  2862  04B3  00A7               	movwf	??_rand+1
  2863  04B4  0861               	movf	_randx+2,w
  2864  04B5  00A8               	movwf	??_rand+2
  2865  04B6  0862               	movf	_randx+3,w
  2866  04B7  00A9               	movwf	??_rand+3
  2867  04B8  3010               	movlw	16
  2868  04B9  00AA               	movwf	??_rand+4
  2869  04BA                     u605:	
  2870  04BA  0D29               	rlf	??_rand+3,w
  2871  04BB  0CA9               	rrf	??_rand+3,f
  2872  04BC  0CA8               	rrf	??_rand+2,f
  2873  04BD  0CA7               	rrf	??_rand+1,f
  2874  04BE  0CA6               	rrf	??_rand,f
  2875  04BF                     u600:	
  2876  04BF  0BAA               	decfsz	??_rand+4,f
  2877  04C0  2CBA               	goto	u605
  2878  04C1  30FF               	movlw	255
  2879  04C2  0526               	andwf	??_rand,w
  2880  04C3  00A4               	movwf	?_rand
  2881  04C4  307F               	movlw	127
  2882  04C5  0527               	andwf	??_rand+1,w
  2883  04C6  00A5               	movwf	?_rand+1
  2884  04C7                     l719:	
  2885  04C7  0008               	return
  2886  04C8                     __end_of_rand:	
  2887                           
  2888                           	psect	text17
  2889  03EA                     __ptext17:	
  2890 ;; *************** function ___lmul *****************
  2891 ;; Defined at:
  2892 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  2893 ;; Parameters:    Size  Location     Type
  2894 ;;  multiplier      4    2[COMMON] unsigned long 
  2895 ;;  multiplicand    4    6[COMMON] unsigned long 
  2896 ;; Auto vars:     Size  Location     Type
  2897 ;;  product         4    0[BANK0 ] unsigned long 
  2898 ;; Return value:  Size  Location     Type
  2899 ;;                  4    2[COMMON] unsigned long 
  2900 ;; Registers used:
  2901 ;;		wreg, status,2, status,0
  2902 ;; Tracked objects:
  2903 ;;		On entry : 0/0
  2904 ;;		On exit  : 0/0
  2905 ;;		Unchanged: 0/0
  2906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2907 ;;      Params:         8       0       0       0       0
  2908 ;;      Locals:         0       4       0       0       0
  2909 ;;      Temps:          1       0       0       0       0
  2910 ;;      Totals:         9       4       0       0       0
  2911 ;;Total ram usage:       13 bytes
  2912 ;; Hardware stack levels used:    1
  2913 ;; Hardware stack levels required when called:    1
  2914 ;; This function calls:
  2915 ;;		Nothing
  2916 ;; This function is called by:
  2917 ;;		_rand
  2918 ;; This function uses a non-reentrant model
  2919 ;;
  2920                           
  2921                           
  2922                           ;psect for function ___lmul
  2923  03EA                     ___lmul:	
  2924  03EA                     l1151:	
  2925                           ;incstack = 0
  2926                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2927                           
  2928  03EA  3000               	movlw	0
  2929  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  2930  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  2931  03ED  00A3               	movwf	___lmul@product+3
  2932  03EE  3000               	movlw	0
  2933  03EF  00A2               	movwf	___lmul@product+2
  2934  03F0  3000               	movlw	0
  2935  03F1  00A1               	movwf	___lmul@product+1
  2936  03F2  3000               	movlw	0
  2937  03F3  00A0               	movwf	___lmul@product
  2938  03F4                     l1153:	
  2939  03F4  1C72               	btfss	___lmul@multiplier,0
  2940  03F5  2BF7               	goto	u551
  2941  03F6  2BF8               	goto	u550
  2942  03F7                     u551:	
  2943  03F7  2C11               	goto	l1157
  2944  03F8                     u550:	
  2945  03F8                     l1155:	
  2946  03F8  0876               	movf	___lmul@multiplicand,w
  2947  03F9  1283               	bcf	3,5	;RP0=0, select bank0
  2948  03FA  1303               	bcf	3,6	;RP1=0, select bank0
  2949  03FB  07A0               	addwf	___lmul@product,f
  2950  03FC  0877               	movf	___lmul@multiplicand+1,w
  2951  03FD  1103               	clrz
  2952  03FE  1803               	skipnc
  2953  03FF  3E01               	addlw	1
  2954  0400  1903               	skipnz
  2955  0401  2C03               	goto	u561
  2956  0402  07A1               	addwf	___lmul@product+1,f
  2957  0403                     u561:	
  2958  0403  0878               	movf	___lmul@multiplicand+2,w
  2959  0404  1103               	clrz
  2960  0405  1803               	skipnc
  2961  0406  3E01               	addlw	1
  2962  0407  1903               	skipnz
  2963  0408  2C0A               	goto	u562
  2964  0409  07A2               	addwf	___lmul@product+2,f
  2965  040A                     u562:	
  2966  040A  0879               	movf	___lmul@multiplicand+3,w
  2967  040B  1103               	clrz
  2968  040C  1803               	skipnc
  2969  040D  3E01               	addlw	1
  2970  040E  1903               	skipnz
  2971  040F  2C11               	goto	u563
  2972  0410  07A3               	addwf	___lmul@product+3,f
  2973  0411                     u563:	
  2974  0411                     l1157:	
  2975  0411  3001               	movlw	1
  2976  0412  00FA               	movwf	??___lmul
  2977  0413                     u575:	
  2978  0413  1003               	clrc
  2979  0414  0DF6               	rlf	___lmul@multiplicand,f
  2980  0415  0DF7               	rlf	___lmul@multiplicand+1,f
  2981  0416  0DF8               	rlf	___lmul@multiplicand+2,f
  2982  0417  0DF9               	rlf	___lmul@multiplicand+3,f
  2983  0418  0BFA               	decfsz	??___lmul,f
  2984  0419  2C13               	goto	u575
  2985  041A                     l1159:	
  2986  041A  3001               	movlw	1
  2987  041B                     u585:	
  2988  041B  1003               	clrc
  2989  041C  0CF5               	rrf	___lmul@multiplier+3,f
  2990  041D  0CF4               	rrf	___lmul@multiplier+2,f
  2991  041E  0CF3               	rrf	___lmul@multiplier+1,f
  2992  041F  0CF2               	rrf	___lmul@multiplier,f
  2993  0420  3EFF               	addlw	-1
  2994  0421  1D03               	skipz
  2995  0422  2C1B               	goto	u585
  2996  0423  0875               	movf	___lmul@multiplier+3,w
  2997  0424  0474               	iorwf	___lmul@multiplier+2,w
  2998  0425  0473               	iorwf	___lmul@multiplier+1,w
  2999  0426  0472               	iorwf	___lmul@multiplier,w
  3000  0427  1D03               	skipz
  3001  0428  2C2A               	goto	u591
  3002  0429  2C2B               	goto	u590
  3003  042A                     u591:	
  3004  042A  2BF4               	goto	l1153
  3005  042B                     u590:	
  3006  042B                     l1161:	
  3007  042B  1283               	bcf	3,5	;RP0=0, select bank0
  3008  042C  1303               	bcf	3,6	;RP1=0, select bank0
  3009  042D  0823               	movf	___lmul@product+3,w
  3010  042E  00F5               	movwf	?___lmul+3
  3011  042F  0822               	movf	___lmul@product+2,w
  3012  0430  00F4               	movwf	?___lmul+2
  3013  0431  0821               	movf	___lmul@product+1,w
  3014  0432  00F3               	movwf	?___lmul+1
  3015  0433  0820               	movf	___lmul@product,w
  3016  0434  00F2               	movwf	?___lmul
  3017  0435                     l277:	
  3018  0435  0008               	return
  3019  0436                     __end_of___lmul:	
  3020                           
  3021                           	psect	text18
  3022  0265                     __ptext18:	
  3023 ;; *************** function _drawFigure *****************
  3024 ;; Defined at:
  3025 ;;		line 36 in file "screen.c"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;		None
  3028 ;; Auto vars:     Size  Location     Type
  3029 ;;		None
  3030 ;; Return value:  Size  Location     Type
  3031 ;;                  1    wreg      void 
  3032 ;; Registers used:
  3033 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3034 ;; Tracked objects:
  3035 ;;		On entry : 0/0
  3036 ;;		On exit  : 0/0
  3037 ;;		Unchanged: 0/0
  3038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3039 ;;      Params:         0       0       0       0       0
  3040 ;;      Locals:         0       0       0       0       0
  3041 ;;      Temps:          0       5       0       0       0
  3042 ;;      Totals:         0       5       0       0       0
  3043 ;;Total ram usage:        5 bytes
  3044 ;; Hardware stack levels used:    1
  3045 ;; Hardware stack levels required when called:    2
  3046 ;; This function calls:
  3047 ;;		_memset
  3048 ;; This function is called by:
  3049 ;;		_checkCount
  3050 ;; This function uses a non-reentrant model
  3051 ;;
  3052                           
  3053                           
  3054                           ;psect for function _drawFigure
  3055  0265                     _drawFigure:	
  3056  0265                     l1179:	
  3057                           ;incstack = 0
  3058                           ; Regs used in _drawFigure: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3059                           
  3060                           
  3061                           ;screen.c: 37:     memset(ficha, 0, sizeof(ficha));
  3062  0265  3000               	movlw	0
  3063  0266  00F2               	movwf	memset@c
  3064  0267  00F3               	movwf	memset@c+1
  3065  0268  3010               	movlw	16
  3066  0269  00F4               	movwf	memset@n
  3067  026A  3000               	movlw	0
  3068  026B  00F5               	movwf	memset@n+1
  3069  026C  30A0               	movlw	(low (_ficha| 0))& (0+255)
  3070  026D  120A  118A  256F  120A  118A  	fcall	_memset
  3071  0272                     l1181:	
  3072                           
  3073                           ;screen.c: 38:     if(con.derecha == 1 && con.ficha_Hpos<4){
  3074  0272  1283               	bcf	3,5	;RP0=0, select bank0
  3075  0273  1303               	bcf	3,6	;RP1=0, select bank0
  3076  0274  034A               	decf	_con+6,w
  3077  0275  1D03               	btfss	3,2
  3078  0276  2A78               	goto	u611
  3079  0277  2A79               	goto	u610
  3080  0278                     u611:	
  3081  0278  2A85               	goto	l1189
  3082  0279                     u610:	
  3083  0279                     l1183:	
  3084  0279  3004               	movlw	4
  3085  027A  0248               	subwf	_con+4,w
  3086  027B  1803               	skipnc
  3087  027C  2A7E               	goto	u621
  3088  027D  2A7F               	goto	u620
  3089  027E                     u621:	
  3090  027E  2A85               	goto	l1189
  3091  027F                     u620:	
  3092  027F                     l1185:	
  3093                           
  3094                           ;screen.c: 39:         con.ficha_Hpos++;
  3095  027F  3001               	movlw	1
  3096  0280  00A0               	movwf	??_drawFigure
  3097  0281  0820               	movf	??_drawFigure,w
  3098  0282  07C8               	addwf	_con+4,f
  3099  0283                     l1187:	
  3100                           
  3101                           ;screen.c: 40:         con.derecha = 0;
  3102  0283  01CA               	clrf	_con+6
  3103                           
  3104                           ;screen.c: 41:     }else if (con.izquierda == 1 && con.ficha_Hpos>0){
  3105  0284  2A92               	goto	l1197
  3106  0285                     l1189:	
  3107  0285  034B               	decf	_con+7,w
  3108  0286  1D03               	btfss	3,2
  3109  0287  2A89               	goto	u631
  3110  0288  2A8A               	goto	u630
  3111  0289                     u631:	
  3112  0289  2A92               	goto	l1197
  3113  028A                     u630:	
  3114  028A                     l1191:	
  3115  028A  0848               	movf	_con+4,w
  3116  028B  1903               	btfsc	3,2
  3117  028C  2A8E               	goto	u641
  3118  028D  2A8F               	goto	u640
  3119  028E                     u641:	
  3120  028E  2A92               	goto	l1197
  3121  028F                     u640:	
  3122  028F                     l1193:	
  3123                           
  3124                           ;screen.c: 42:         con.ficha_Hpos--;
  3125  028F  3001               	movlw	1
  3126  0290  02C8               	subwf	_con+4,f
  3127  0291                     l1195:	
  3128                           
  3129                           ;screen.c: 43:         con.izquierda = 0;
  3130  0291  01CB               	clrf	_con+7
  3131  0292                     l1197:	
  3132                           
  3133                           ;screen.c: 46:     ficha[con.ficha_Hpos ] = figuras[con.ficha_actual][0] << (con.ficha_V
      +                          pos -1);
  3134  0292  0847               	movf	_con+3,w
  3135  0293  3EFF               	addlw	-1
  3136  0294  00A0               	movwf	??_drawFigure
  3137  0295  0AA0               	incf	??_drawFigure,f
  3138  0296  0849               	movf	_con+5,w
  3139  0297  00A1               	movwf	??_drawFigure+1
  3140  0298  3002               	movlw	2
  3141  0299                     u655:	
  3142  0299  1003               	clrc
  3143  029A  0DA1               	rlf	??_drawFigure+1,f
  3144  029B  3EFF               	addlw	-1
  3145  029C  1D03               	skipz
  3146  029D  2A99               	goto	u655
  3147  029E  1003               	clrc
  3148  029F  0D21               	rlf	??_drawFigure+1,w
  3149  02A0  3E90               	addlw	(low (_figuras| (0+256)))& (0+255)
  3150  02A1  0084               	movwf	4
  3151  02A2  1783               	bsf	3,7	;select IRP bank3
  3152  02A3  0800               	movf	0,w
  3153  02A4  00A2               	movwf	??_drawFigure+2
  3154  02A5  0A84               	incf	4,f
  3155  02A6  0800               	movf	0,w
  3156  02A7  00A3               	movwf	??_drawFigure+3
  3157  02A8  2AAC               	goto	u664
  3158  02A9                     u665:	
  3159  02A9  1003               	clrc
  3160  02AA  0DA2               	rlf	??_drawFigure+2,f
  3161  02AB  0DA3               	rlf	??_drawFigure+3,f
  3162  02AC                     u664:	
  3163  02AC  0BA0               	decfsz	??_drawFigure,f
  3164  02AD  2AA9               	goto	u665
  3165  02AE  0848               	movf	_con+4,w
  3166  02AF  00A4               	movwf	??_drawFigure+4
  3167  02B0  0724               	addwf	??_drawFigure+4,w
  3168  02B1  3EA0               	addlw	(low (_ficha| 0))& (0+255)
  3169  02B2  0084               	movwf	4
  3170  02B3  0822               	movf	??_drawFigure+2,w
  3171  02B4  1383               	bcf	3,7	;select IRP bank1
  3172  02B5  0080               	movwf	0
  3173  02B6  0A84               	incf	4,f
  3174  02B7  0823               	movf	??_drawFigure+3,w
  3175  02B8  0080               	movwf	0
  3176  02B9                     l1199:	
  3177                           
  3178                           ;screen.c: 47:     ficha[con.ficha_Hpos +1] = figuras[con.ficha_actual][1] << (con.ficha
      +                          _Vpos -1);
  3179  02B9  0847               	movf	_con+3,w
  3180  02BA  3EFF               	addlw	-1
  3181  02BB  00A0               	movwf	??_drawFigure
  3182  02BC  0AA0               	incf	??_drawFigure,f
  3183  02BD  0849               	movf	_con+5,w
  3184  02BE  00A1               	movwf	??_drawFigure+1
  3185  02BF  3002               	movlw	2
  3186  02C0                     u675:	
  3187  02C0  1003               	clrc
  3188  02C1  0DA1               	rlf	??_drawFigure+1,f
  3189  02C2  3EFF               	addlw	-1
  3190  02C3  1D03               	skipz
  3191  02C4  2AC0               	goto	u675
  3192  02C5  1003               	clrc
  3193  02C6  0D21               	rlf	??_drawFigure+1,w
  3194  02C7  3E92               	addlw	(low ((_figuras| (0+256)+2)))& (0+255)
  3195  02C8  0084               	movwf	4
  3196  02C9  1783               	bsf	3,7	;select IRP bank3
  3197  02CA  0800               	movf	0,w
  3198  02CB  00A2               	movwf	??_drawFigure+2
  3199  02CC  0A84               	incf	4,f
  3200  02CD  0800               	movf	0,w
  3201  02CE  00A3               	movwf	??_drawFigure+3
  3202  02CF  2AD3               	goto	u684
  3203  02D0                     u685:	
  3204  02D0  1003               	clrc
  3205  02D1  0DA2               	rlf	??_drawFigure+2,f
  3206  02D2  0DA3               	rlf	??_drawFigure+3,f
  3207  02D3                     u684:	
  3208  02D3  0BA0               	decfsz	??_drawFigure,f
  3209  02D4  2AD0               	goto	u685
  3210  02D5  0848               	movf	_con+4,w
  3211  02D6  00A4               	movwf	??_drawFigure+4
  3212  02D7  0724               	addwf	??_drawFigure+4,w
  3213  02D8  3EA2               	addlw	(low ((_ficha| 0+2)))& (0+255)
  3214  02D9  0084               	movwf	4
  3215  02DA  0822               	movf	??_drawFigure+2,w
  3216  02DB  1383               	bcf	3,7	;select IRP bank1
  3217  02DC  0080               	movwf	0
  3218  02DD  0A84               	incf	4,f
  3219  02DE  0823               	movf	??_drawFigure+3,w
  3220  02DF  0080               	movwf	0
  3221  02E0                     l1201:	
  3222                           
  3223                           ;screen.c: 48:     ficha[con.ficha_Hpos +2] = figuras[con.ficha_actual][2] << (con.ficha
      +                          _Vpos -1);
  3224  02E0  0847               	movf	_con+3,w
  3225  02E1  3EFF               	addlw	-1
  3226  02E2  00A0               	movwf	??_drawFigure
  3227  02E3  0AA0               	incf	??_drawFigure,f
  3228  02E4  0849               	movf	_con+5,w
  3229  02E5  00A1               	movwf	??_drawFigure+1
  3230  02E6  3002               	movlw	2
  3231  02E7                     u695:	
  3232  02E7  1003               	clrc
  3233  02E8  0DA1               	rlf	??_drawFigure+1,f
  3234  02E9  3EFF               	addlw	-1
  3235  02EA  1D03               	skipz
  3236  02EB  2AE7               	goto	u695
  3237  02EC  1003               	clrc
  3238  02ED  0D21               	rlf	??_drawFigure+1,w
  3239  02EE  3E94               	addlw	(low ((_figuras| (0+256)+4)))& (0+255)
  3240  02EF  0084               	movwf	4
  3241  02F0  1783               	bsf	3,7	;select IRP bank3
  3242  02F1  0800               	movf	0,w
  3243  02F2  00A2               	movwf	??_drawFigure+2
  3244  02F3  0A84               	incf	4,f
  3245  02F4  0800               	movf	0,w
  3246  02F5  00A3               	movwf	??_drawFigure+3
  3247  02F6  2AFA               	goto	u704
  3248  02F7                     u705:	
  3249  02F7  1003               	clrc
  3250  02F8  0DA2               	rlf	??_drawFigure+2,f
  3251  02F9  0DA3               	rlf	??_drawFigure+3,f
  3252  02FA                     u704:	
  3253  02FA  0BA0               	decfsz	??_drawFigure,f
  3254  02FB  2AF7               	goto	u705
  3255  02FC  0848               	movf	_con+4,w
  3256  02FD  00A4               	movwf	??_drawFigure+4
  3257  02FE  0724               	addwf	??_drawFigure+4,w
  3258  02FF  3EA4               	addlw	(low ((_ficha| 0+4)))& (0+255)
  3259  0300  0084               	movwf	4
  3260  0301  0822               	movf	??_drawFigure+2,w
  3261  0302  1383               	bcf	3,7	;select IRP bank1
  3262  0303  0080               	movwf	0
  3263  0304  0A84               	incf	4,f
  3264  0305  0823               	movf	??_drawFigure+3,w
  3265  0306  0080               	movwf	0
  3266  0307                     l1203:	
  3267                           
  3268                           ;screen.c: 49:     ficha[con.ficha_Hpos +3] = figuras[con.ficha_actual][3] << (con.ficha
      +                          _Vpos -1);
  3269  0307  0847               	movf	_con+3,w
  3270  0308  3EFF               	addlw	-1
  3271  0309  00A0               	movwf	??_drawFigure
  3272  030A  0AA0               	incf	??_drawFigure,f
  3273  030B  0849               	movf	_con+5,w
  3274  030C  00A1               	movwf	??_drawFigure+1
  3275  030D  3002               	movlw	2
  3276  030E                     u715:	
  3277  030E  1003               	clrc
  3278  030F  0DA1               	rlf	??_drawFigure+1,f
  3279  0310  3EFF               	addlw	-1
  3280  0311  1D03               	skipz
  3281  0312  2B0E               	goto	u715
  3282  0313  1003               	clrc
  3283  0314  0D21               	rlf	??_drawFigure+1,w
  3284  0315  3E96               	addlw	(low ((_figuras| (0+256)+6)))& (0+255)
  3285  0316  0084               	movwf	4
  3286  0317  1783               	bsf	3,7	;select IRP bank3
  3287  0318  0800               	movf	0,w
  3288  0319  00A2               	movwf	??_drawFigure+2
  3289  031A  0A84               	incf	4,f
  3290  031B  0800               	movf	0,w
  3291  031C  00A3               	movwf	??_drawFigure+3
  3292  031D  2B21               	goto	u724
  3293  031E                     u725:	
  3294  031E  1003               	clrc
  3295  031F  0DA2               	rlf	??_drawFigure+2,f
  3296  0320  0DA3               	rlf	??_drawFigure+3,f
  3297  0321                     u724:	
  3298  0321  0BA0               	decfsz	??_drawFigure,f
  3299  0322  2B1E               	goto	u725
  3300  0323  0848               	movf	_con+4,w
  3301  0324  00A4               	movwf	??_drawFigure+4
  3302  0325  0724               	addwf	??_drawFigure+4,w
  3303  0326  3EA6               	addlw	(low ((_ficha| 0+6)))& (0+255)
  3304  0327  0084               	movwf	4
  3305  0328  0822               	movf	??_drawFigure+2,w
  3306  0329  1383               	bcf	3,7	;select IRP bank1
  3307  032A  0080               	movwf	0
  3308  032B  0A84               	incf	4,f
  3309  032C  0823               	movf	??_drawFigure+3,w
  3310  032D  0080               	movwf	0
  3311  032E                     l177:	
  3312  032E  0008               	return
  3313  032F                     __end_of_drawFigure:	
  3314                           
  3315                           	psect	text19
  3316  056F                     __ptext19:	
  3317 ;; *************** function _memset *****************
  3318 ;; Defined at:
  3319 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\memset.c"
  3320 ;; Parameters:    Size  Location     Type
  3321 ;;  p1              1    wreg     PTR void 
  3322 ;;		 -> ficha(16), fondo(16), 
  3323 ;;  c               2    2[COMMON] int 
  3324 ;;  n               2    4[COMMON] unsigned int 
  3325 ;; Auto vars:     Size  Location     Type
  3326 ;;  p1              1    8[COMMON] PTR void 
  3327 ;;		 -> ficha(16), fondo(16), 
  3328 ;;  p               1    7[COMMON] PTR unsigned char 
  3329 ;;		 -> ficha(16), fondo(16), 
  3330 ;; Return value:  Size  Location     Type
  3331 ;;                  1    wreg      PTR void 
  3332 ;; Registers used:
  3333 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3334 ;; Tracked objects:
  3335 ;;		On entry : 0/0
  3336 ;;		On exit  : 0/0
  3337 ;;		Unchanged: 0/0
  3338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3339 ;;      Params:         4       0       0       0       0
  3340 ;;      Locals:         2       0       0       0       0
  3341 ;;      Temps:          1       0       0       0       0
  3342 ;;      Totals:         7       0       0       0       0
  3343 ;;Total ram usage:        7 bytes
  3344 ;; Hardware stack levels used:    1
  3345 ;; Hardware stack levels required when called:    1
  3346 ;; This function calls:
  3347 ;;		Nothing
  3348 ;; This function is called by:
  3349 ;;		_checkCount
  3350 ;;		_drawFigure
  3351 ;; This function uses a non-reentrant model
  3352 ;;
  3353                           
  3354                           
  3355                           ;psect for function _memset
  3356  056F                     _memset:	
  3357                           
  3358                           ;incstack = 0
  3359                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0]
  3360                           ;memset@p1 stored from wreg
  3361  056F  00F8               	movwf	memset@p1
  3362  0570                     l1135:	
  3363  0570  0878               	movf	memset@p1,w
  3364  0571  00F6               	movwf	??_memset
  3365  0572  0876               	movf	??_memset,w
  3366  0573  00F7               	movwf	memset@p
  3367  0574  2D80               	goto	l1141
  3368  0575                     l1137:	
  3369  0575  0872               	movf	memset@c,w
  3370  0576  00F6               	movwf	??_memset
  3371  0577  0877               	movf	memset@p,w
  3372  0578  0084               	movwf	4
  3373  0579  0876               	movf	??_memset,w
  3374  057A  1383               	bcf	3,7	;select IRP bank0
  3375  057B  0080               	movwf	0
  3376  057C                     l1139:	
  3377  057C  3001               	movlw	1
  3378  057D  00F6               	movwf	??_memset
  3379  057E  0876               	movf	??_memset,w
  3380  057F  07F7               	addwf	memset@p,f
  3381  0580                     l1141:	
  3382  0580  3001               	movlw	1
  3383  0581  02F4               	subwf	memset@n,f
  3384  0582  3000               	movlw	0
  3385  0583  1C03               	skipc
  3386  0584  03F5               	decf	memset@n+1,f
  3387  0585  02F5               	subwf	memset@n+1,f
  3388  0586  0A74               	incf	memset@n,w
  3389  0587  1D03               	skipz
  3390  0588  2D8D               	goto	u541
  3391  0589  0A75               	incf	memset@n+1,w
  3392  058A  1D03               	btfss	3,2
  3393  058B  2D8D               	goto	u541
  3394  058C  2D8E               	goto	u540
  3395  058D                     u541:	
  3396  058D  2D75               	goto	l1137
  3397  058E                     u540:	
  3398  058E                     l711:	
  3399  058E  0008               	return
  3400  058F                     __end_of_memset:	
  3401                           
  3402                           	psect	text20
  3403  038F                     __ptext20:	
  3404 ;; *************** function ___awmod *****************
  3405 ;; Defined at:
  3406 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  3407 ;; Parameters:    Size  Location     Type
  3408 ;;  divisor         2   11[BANK0 ] int 
  3409 ;;  dividend        2   13[BANK0 ] int 
  3410 ;; Auto vars:     Size  Location     Type
  3411 ;;  sign            1   16[BANK0 ] unsigned char 
  3412 ;;  counter         1   15[BANK0 ] unsigned char 
  3413 ;; Return value:  Size  Location     Type
  3414 ;;                  2   11[BANK0 ] int 
  3415 ;; Registers used:
  3416 ;;		wreg, status,2, status,0
  3417 ;; Tracked objects:
  3418 ;;		On entry : 0/0
  3419 ;;		On exit  : 0/0
  3420 ;;		Unchanged: 0/0
  3421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3422 ;;      Params:         0       4       0       0       0
  3423 ;;      Locals:         0       2       0       0       0
  3424 ;;      Temps:          1       0       0       0       0
  3425 ;;      Totals:         1       6       0       0       0
  3426 ;;Total ram usage:        7 bytes
  3427 ;; Hardware stack levels used:    1
  3428 ;; Hardware stack levels required when called:    1
  3429 ;; This function calls:
  3430 ;;		Nothing
  3431 ;; This function is called by:
  3432 ;;		_main
  3433 ;;		_checkCount
  3434 ;; This function uses a non-reentrant model
  3435 ;;
  3436                           
  3437                           
  3438                           ;psect for function ___awmod
  3439  038F                     ___awmod:	
  3440  038F                     l1227:	
  3441                           ;incstack = 0
  3442                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3443                           
  3444  038F  1283               	bcf	3,5	;RP0=0, select bank0
  3445  0390  1303               	bcf	3,6	;RP1=0, select bank0
  3446  0391  01B0               	clrf	___awmod@sign
  3447  0392                     l1229:	
  3448  0392  1FAE               	btfss	___awmod@dividend+1,7
  3449  0393  2B95               	goto	u761
  3450  0394  2B96               	goto	u760
  3451  0395                     u761:	
  3452  0395  2B9D               	goto	l1235
  3453  0396                     u760:	
  3454  0396                     l1231:	
  3455  0396  09AD               	comf	___awmod@dividend,f
  3456  0397  09AE               	comf	___awmod@dividend+1,f
  3457  0398  0AAD               	incf	___awmod@dividend,f
  3458  0399  1903               	skipnz
  3459  039A  0AAE               	incf	___awmod@dividend+1,f
  3460  039B                     l1233:	
  3461  039B  01B0               	clrf	___awmod@sign
  3462  039C  0AB0               	incf	___awmod@sign,f
  3463  039D                     l1235:	
  3464  039D  1FAC               	btfss	___awmod@divisor+1,7
  3465  039E  2BA0               	goto	u771
  3466  039F  2BA1               	goto	u770
  3467  03A0                     u771:	
  3468  03A0  2BA6               	goto	l1239
  3469  03A1                     u770:	
  3470  03A1                     l1237:	
  3471  03A1  09AB               	comf	___awmod@divisor,f
  3472  03A2  09AC               	comf	___awmod@divisor+1,f
  3473  03A3  0AAB               	incf	___awmod@divisor,f
  3474  03A4  1903               	skipnz
  3475  03A5  0AAC               	incf	___awmod@divisor+1,f
  3476  03A6                     l1239:	
  3477  03A6  082B               	movf	___awmod@divisor,w
  3478  03A7  042C               	iorwf	___awmod@divisor+1,w
  3479  03A8  1903               	btfsc	3,2
  3480  03A9  2BAB               	goto	u781
  3481  03AA  2BAC               	goto	u780
  3482  03AB                     u781:	
  3483  03AB  2BDB               	goto	l1257
  3484  03AC                     u780:	
  3485  03AC                     l1241:	
  3486  03AC  01AF               	clrf	___awmod@counter
  3487  03AD  0AAF               	incf	___awmod@counter,f
  3488  03AE  2BBA               	goto	l1247
  3489  03AF                     l1243:	
  3490  03AF  3001               	movlw	1
  3491  03B0                     u795:	
  3492  03B0  1003               	clrc
  3493  03B1  0DAB               	rlf	___awmod@divisor,f
  3494  03B2  0DAC               	rlf	___awmod@divisor+1,f
  3495  03B3  3EFF               	addlw	-1
  3496  03B4  1D03               	skipz
  3497  03B5  2BB0               	goto	u795
  3498  03B6                     l1245:	
  3499  03B6  3001               	movlw	1
  3500  03B7  00FB               	movwf	??___awmod
  3501  03B8  087B               	movf	??___awmod,w
  3502  03B9  07AF               	addwf	___awmod@counter,f
  3503  03BA                     l1247:	
  3504  03BA  1FAC               	btfss	___awmod@divisor+1,7
  3505  03BB  2BBD               	goto	u801
  3506  03BC  2BBE               	goto	u800
  3507  03BD                     u801:	
  3508  03BD  2BAF               	goto	l1243
  3509  03BE                     u800:	
  3510  03BE                     l1249:	
  3511  03BE  082C               	movf	___awmod@divisor+1,w
  3512  03BF  022E               	subwf	___awmod@dividend+1,w
  3513  03C0  1D03               	skipz
  3514  03C1  2BC4               	goto	u815
  3515  03C2  082B               	movf	___awmod@divisor,w
  3516  03C3  022D               	subwf	___awmod@dividend,w
  3517  03C4                     u815:	
  3518  03C4  1C03               	skipc
  3519  03C5  2BC7               	goto	u811
  3520  03C6  2BC8               	goto	u810
  3521  03C7                     u811:	
  3522  03C7  2BCE               	goto	l1253
  3523  03C8                     u810:	
  3524  03C8                     l1251:	
  3525  03C8  082B               	movf	___awmod@divisor,w
  3526  03C9  02AD               	subwf	___awmod@dividend,f
  3527  03CA  082C               	movf	___awmod@divisor+1,w
  3528  03CB  1C03               	skipc
  3529  03CC  03AE               	decf	___awmod@dividend+1,f
  3530  03CD  02AE               	subwf	___awmod@dividend+1,f
  3531  03CE                     l1253:	
  3532  03CE  3001               	movlw	1
  3533  03CF                     u825:	
  3534  03CF  1003               	clrc
  3535  03D0  0CAC               	rrf	___awmod@divisor+1,f
  3536  03D1  0CAB               	rrf	___awmod@divisor,f
  3537  03D2  3EFF               	addlw	-1
  3538  03D3  1D03               	skipz
  3539  03D4  2BCF               	goto	u825
  3540  03D5                     l1255:	
  3541  03D5  3001               	movlw	1
  3542  03D6  02AF               	subwf	___awmod@counter,f
  3543  03D7  1D03               	btfss	3,2
  3544  03D8  2BDA               	goto	u831
  3545  03D9  2BDB               	goto	u830
  3546  03DA                     u831:	
  3547  03DA  2BBE               	goto	l1249
  3548  03DB                     u830:	
  3549  03DB                     l1257:	
  3550  03DB  0830               	movf	___awmod@sign,w
  3551  03DC  1903               	btfsc	3,2
  3552  03DD  2BDF               	goto	u841
  3553  03DE  2BE0               	goto	u840
  3554  03DF                     u841:	
  3555  03DF  2BE5               	goto	l1261
  3556  03E0                     u840:	
  3557  03E0                     l1259:	
  3558  03E0  09AD               	comf	___awmod@dividend,f
  3559  03E1  09AE               	comf	___awmod@dividend+1,f
  3560  03E2  0AAD               	incf	___awmod@dividend,f
  3561  03E3  1903               	skipnz
  3562  03E4  0AAE               	incf	___awmod@dividend+1,f
  3563  03E5                     l1261:	
  3564  03E5  082E               	movf	___awmod@dividend+1,w
  3565  03E6  00AC               	movwf	?___awmod+1
  3566  03E7  082D               	movf	___awmod@dividend,w
  3567  03E8  00AB               	movwf	?___awmod
  3568  03E9                     l429:	
  3569  03E9  0008               	return
  3570  03EA                     __end_of___awmod:	
  3571                           
  3572                           	psect	text21
  3573  0543                     __ptext21:	
  3574 ;; *************** function _Timer0_ISR *****************
  3575 ;; Defined at:
  3576 ;;		line 126 in file "mainsource.c"
  3577 ;; Parameters:    Size  Location     Type
  3578 ;;		None
  3579 ;; Auto vars:     Size  Location     Type
  3580 ;;		None
  3581 ;; Return value:  Size  Location     Type
  3582 ;;                  1    wreg      void 
  3583 ;; Registers used:
  3584 ;;		wreg, status,2
  3585 ;; Tracked objects:
  3586 ;;		On entry : 0/0
  3587 ;;		On exit  : 0/0
  3588 ;;		Unchanged: 0/0
  3589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3590 ;;      Params:         0       0       0       0       0
  3591 ;;      Locals:         0       0       0       0       0
  3592 ;;      Temps:          2       0       0       0       0
  3593 ;;      Totals:         2       0       0       0       0
  3594 ;;Total ram usage:        2 bytes
  3595 ;; Hardware stack levels used:    1
  3596 ;; This function calls:
  3597 ;;		Nothing
  3598 ;; This function is called by:
  3599 ;;		Interrupt level 1
  3600 ;; This function uses a non-reentrant model
  3601 ;;
  3602                           
  3603                           
  3604                           ;psect for function _Timer0_ISR
  3605  0543                     _Timer0_ISR:	
  3606  0543                     i1l1437:	
  3607                           
  3608                           ;mainsource.c: 127:     if(INTCONbits.TMR0IF){
  3609  0543  1D0B               	btfss	11,2	;volatile
  3610  0544  2D46               	goto	u100_21
  3611  0545  2D47               	goto	u100_20
  3612  0546                     u100_21:	
  3613  0546  2D53               	goto	i1l109
  3614  0547                     u100_20:	
  3615  0547                     i1l1439:	
  3616                           
  3617                           ;mainsource.c: 128:         INTCONbits.TMR0IF=0;
  3618  0547  110B               	bcf	11,2	;volatile
  3619  0548                     i1l1441:	
  3620                           
  3621                           ;mainsource.c: 129:         timerCount ++;
  3622  0548  3001               	movlw	1
  3623  0549  1283               	bcf	3,5	;RP0=0, select bank0
  3624  054A  1303               	bcf	3,6	;RP1=0, select bank0
  3625  054B  07CD               	addwf	_timerCount,f
  3626  054C  1803               	skipnc
  3627  054D  0ACE               	incf	_timerCount+1,f
  3628  054E  3000               	movlw	0
  3629  054F  07CE               	addwf	_timerCount+1,f
  3630  0550                     i1l1443:	
  3631                           
  3632                           ;mainsource.c: 131:         con.check_count = 1;
  3633  0550  01CC               	clrf	_con+8
  3634  0551  0ACC               	incf	_con+8,f
  3635                           
  3636                           ;mainsource.c: 132:     }
  3637  0552  2D68               	goto	i1l114
  3638  0553                     i1l109:	
  3639                           ;mainsource.c: 133:     else if(INTCONbits.RBIF){
  3640                           
  3641  0553  1C0B               	btfss	11,0	;volatile
  3642  0554  2D56               	goto	u101_21
  3643  0555  2D57               	goto	u101_20
  3644  0556                     u101_21:	
  3645  0556  2D68               	goto	i1l114
  3646  0557                     u101_20:	
  3647  0557                     i1l1445:	
  3648                           
  3649                           ;mainsource.c: 134:         if(PORTBbits.RB5 == 0){
  3650  0557  1283               	bcf	3,5	;RP0=0, select bank0
  3651  0558  1303               	bcf	3,6	;RP1=0, select bank0
  3652  0559  1A86               	btfsc	6,5	;volatile
  3653  055A  2D5C               	goto	u102_21
  3654  055B  2D5D               	goto	u102_20
  3655  055C                     u102_21:	
  3656  055C  2D60               	goto	i1l1451
  3657  055D                     u102_20:	
  3658  055D                     i1l1447:	
  3659                           
  3660                           ;mainsource.c: 135:             con.derecha = 1;
  3661  055D  01CA               	clrf	_con+6
  3662  055E  0ACA               	incf	_con+6,f
  3663  055F                     i1l1449:	
  3664                           
  3665                           ;mainsource.c: 136:             con.izquierda = 0;
  3666  055F  01CB               	clrf	_con+7
  3667  0560                     i1l1451:	
  3668                           
  3669                           ;mainsource.c: 138:         if(PORTBbits.RB4 == 0){
  3670  0560  1A06               	btfsc	6,4	;volatile
  3671  0561  2D63               	goto	u103_21
  3672  0562  2D64               	goto	u103_20
  3673  0563                     u103_21:	
  3674  0563  2D67               	goto	i1l1457
  3675  0564                     u103_20:	
  3676  0564                     i1l1453:	
  3677                           
  3678                           ;mainsource.c: 139:             con.derecha = 0;
  3679  0564  01CA               	clrf	_con+6
  3680  0565                     i1l1455:	
  3681                           
  3682                           ;mainsource.c: 140:             con.izquierda = 1;
  3683  0565  01CB               	clrf	_con+7
  3684  0566  0ACB               	incf	_con+7,f
  3685  0567                     i1l1457:	
  3686                           
  3687                           ;mainsource.c: 142:         INTCONbits.RBIF=0;
  3688  0567  100B               	bcf	11,0	;volatile
  3689  0568                     i1l114:	
  3690  0568  0871               	movf	??_Timer0_ISR+1,w
  3691  0569  008A               	movwf	10
  3692  056A  0E70               	swapf	??_Timer0_ISR^(0+4294967168),w
  3693  056B  0083               	movwf	3
  3694  056C  0EFE               	swapf	btemp,f
  3695  056D  0E7E               	swapf	btemp,w
  3696  056E  0009               	retfie
  3697  056F                     __end_of_Timer0_ISR:	
  3698  007E                     btemp	set	126	;btemp
  3699  007E                     wtemp0	set	126
  3700                           
  3701                           	psect	intentry
  3702  0004                     __pintentry:	
  3703                           ;incstack = 0
  3704                           ; Regs used in _Timer0_ISR: [wreg+status,2]
  3705                           
  3706  0004                     interrupt_function:	
  3707  007E                     saved_w	set	btemp
  3708  0004  00FE               	movwf	btemp
  3709  0005  0E03               	swapf	3,w
  3710  0006  00F0               	movwf	??_Timer0_ISR
  3711  0007  080A               	movf	10,w
  3712  0008  00F1               	movwf	??_Timer0_ISR+1
  3713  0009  120A  118A  2D43   	ljmp	_Timer0_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        60
    BSS         59
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     40      71
    BANK1            80      0      32
    BANK3            96      0      56
    BANK2            96      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(1) Largest target is 16
		 -> ficha(BANK1[16]), fondo(BANK0[16]), 

    memset@p	PTR unsigned char  size(1) Largest target is 16
		 -> ficha(BANK1[16]), fondo(BANK0[16]), 

    updateScreen@screen	PTR unsigned int  size(1) Largest target is 16
		 -> pantalla(BANK1[16]), 

    sp__memset	PTR void  size(1) Largest target is 16
		 -> ficha(BANK1[16]), fondo(BANK0[16]), 


Critical Paths under _main in COMMON

    _main->___awmod
    _updateScreen->_setFilas
    _checkCount->___awmod
    _rand->___lmul
    _drawFigure->_memset

Critical Paths under _Timer0_ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_checkCount
    _checkCount->___awmod
    _rand->___lmul
    ___awmod->_rand

Critical Paths under _Timer0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer0_ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10     6      4    4748
                                             30 BANK0     10     6      4
                            ___awmod
                         _checkCount
                     _init_interrupt
                         _init_pines
                         _init_timer
                               _rand
                              _srand
                       _updateScreen
 ---------------------------------------------------------------------------------
 (1) _updateScreen                                         5     5      0     364
                                              0 BANK0      5     5      0
                           _setFilas
                    _shiftBitColumna
 ---------------------------------------------------------------------------------
 (2) _shiftBitColumna                                      2     2      0      22
                                              2 COMMON     2     2      0
                     _latchClock_Col
                     _latchClock_Fil
                     _shiftClock_Col
 ---------------------------------------------------------------------------------
 (3) _shiftClock_Col                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _latchClock_Fil                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _latchClock_Col                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setFilas                                            10     8      2     265
                                              2 COMMON    10     8      2
                     _shiftClock_Fil
 ---------------------------------------------------------------------------------
 (3) _shiftClock_Fil                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_pines                                           0     0      0       0
                     _init_pines_col
                     _init_pines_fil
                      _init_pines_in
 ---------------------------------------------------------------------------------
 (2) _init_pines_in                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_pines_fil                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_pines_col                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_interrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkCount                                          13    13      0    3060
                                             17 BANK0     13    13      0
                            ___awmod
                         _drawFigure
                             _memset
                               _rand
 ---------------------------------------------------------------------------------
 (1) _rand                                                 7     5      2     244
                                              4 BANK0      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     244
                                              2 COMMON     9     1      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _drawFigure                                           5     5      0     651
                                              0 BANK0      5     5      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               7     3      4     651
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     904
                                             11 COMMON     1     1      0
                                             11 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Timer0_ISR                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awmod
     _rand (ARG)
       ___lmul
   _checkCount
     ___awmod
       _rand (ARG)
         ___lmul
     _drawFigure
       _memset
     _memset
     _rand
       ___lmul
   _init_interrupt
   _init_pines
     _init_pines_col
     _init_pines_fil
     _init_pines_in
   _init_timer
   _rand
     ___lmul
   _srand
   _updateScreen
     _setFilas
       _shiftClock_Fil
     _shiftBitColumna
       _latchClock_Col
       _latchClock_Fil
       _shiftClock_Col

 _Timer0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      38       9       58.3%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      20       7       40.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     28      47       5       88.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      AB      12        0.0%
ABS                  0      0      AB       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun May 03 14:54:17 2020

                       pc 0002               __CFG_CP$OFF 0000          ??_init_interrupt 0072  
                      l21 0606                        l30 05E0                        l24 05FB  
                      l33 061F                        l27 05D0                        l36 05EE  
                      l90 018E                        fsr 0004          ??_init_pines_col 0072  
        ??_init_pines_fil 0072                       l104 0264                       l122 0631  
                     l134 0636                       l127 050A                       l119 062B  
                     l137 0625                       l145 05AA                       l168 0480  
                     l177 032E                       l429 03E9                       l277 0435  
                     l711 058E                       l716 060F                       l719 04C7  
                     u600 04BF                       u610 0279              __CFG_CPD$OFF 0000  
                     u611 0278                       u540 058E                       u620 027F  
                     u541 058D                       u621 027E                       u605 04BA  
                     u630 028A                       u550 03F8                       u631 0289  
                     u551 03F7                       u800 03BE                       u704 02FA  
                     u640 028F                       u801 03BD                       u705 02F7  
                     u641 028E                       u561 0403                       u810 03C8  
                     u562 040A                       u730 04D9                       u811 03C7  
                     u715 030E                       u563 0411                       u731 04D8  
                     u724 0321                       u900 012B                       u725 031E  
                     u901 012A                       u830 03DB                       u590 042B  
                     u910 0167                       u831 03DA                       u815 03C4  
                     u655 0299                       u591 042A                       u575 0413  
                     u911 0166                       u735 04D5                       u840 03E0  
                     u760 0396                       u664 02AC                       u920 01A3  
                     u744 04E4                       u841 03DF                       u825 03CF  
                     u761 0395                       u665 02A9                       u585 041B  
                     u921 01A2                       u745 04E1                       u770 03A1  
                     u930 01B8                       u850 0046                       u754 04F1  
                     u771 03A0                       u675 02C0                       u931 01B7  
                     u915 0163                       u851 0045                       u755 04EE  
                     u780 03AC                       u684 02D3                       u940 0206  
                     u860 0051                       u781 03AB                       u685 02D0  
                     u941 0205                       u925 019F                       u861 0050  
                     u870 0063                       u695 02E7                       u871 0062  
                     u960 0233                       u880 009F                       u961 0232  
                     u945 0202                       u881 009E                       u970 0247  
                     u954 0225                       u890 00FB                       u795 03B0  
                     u971 0246                       u955 0222                       u891 00FA  
                     u980 025C                       u981 025B                       u885 009B  
                     u990 043F                       u975 0243                       u895 00F7  
                     u991 043E                       u985 0258                       _con 0044  
                     fsr0 0004                       indf 0000              ___awmod@sign 0030  
            __CFG_FOSC$XT 0000              __CFG_LVP$OFF 0000                      l1201 02E0  
                    l1203 0307                      l1211 04DA                      l1141 0580  
                    l1301 005C                      l1213 04FE                      l1205 04C8  
                    l1221 059B                      l1231 0396                      l1135 0570  
                    l1151 03EA                      l1311 0065                      l1303 005E  
                    l1215 0503                      l1207 04CC                      l1143 0626  
                    l1223 05A0                      l1241 03AC                      l1233 039B  
                    l1137 0575                      l1161 042B                      l1153 03F4  
                    l1313 008C                      l1305 0063                      l1321 00BF  
                    l1145 062C                      l1225 05A5                      l1401 0439  
                    l1251 03C8                      l1243 03AF                      l1235 039D  
                    l1227 038F                      l1139 057C                      l1155 03F8  
                    l1171 0481                      l1331 00EE                      l1315 0092  
                    l1147 0632                      l1219 0590                      l1411 0463  
                    l1403 043F                      l1261 03E5                      l1253 03CE  
                    l1245 03B6                      l1237 03A1                      l1229 0392  
                    l1181 0272                      l1157 0411                      l1173 04A2  
                    l1333 00FB                      l1317 009F                      l1165 05FC  
                    l1149 0620                      l1413 047A                      l1405 0441  
                    l1421 033E                      l1255 03D5                      l1247 03BA  
                    l1239 03A6                      l1191 028A                      l1183 0279  
                    l1159 041A                      l1175 04B0                      l1351 016D  
                    l1343 012D                      l1335 0105                      l1327 00C1  
                    l1319 00A5                      l1167 05EF                      l1271 05E4  
                    l1407 0458                      l1431 0372                      l1423 0342  
                    l1415 032F                      l1249 03BE                      l1257 03DB  
                    l1193 028F                      l1185 027F                      l1361 01A7  
                    l1345 0154                      l1337 012B                      l1353 0188  
                    l1329 00E8                      l1169 05BE                      l1265 05D1  
                    l1281 05EB                      l1273 05E5                      l1409 045F  
                    l1433 0380                      l1425 0346                      l1417 033E  
                    l1259 03E0                      l1195 0291                      l1187 0283  
                    l1179 0265                      l1371 01F9                      l1363 01B8  
                    l1355 01A3                      l1347 015A                      l1291 0046  
                    l1267 0618                      l1283 05EC                      l1275 05E6  
                    l1435 0385                      l1427 034A                      l1419 033E  
                    l1197 0292                      l1189 0285                      l1373 0206  
                    l1365 01D2                      l1349 0167                      l1293 0048  
                    l1285 05ED                      l1277 05E7                      l1269 05E1  
                    l1429 0356                      l1199 02B9                      l1391 023A  
                    l1367 01D8                      l1295 0051                      l1279 05EA  
                    l1287 0607                      l1393 0247                      l1385 020E  
                    l1369 01F3                      l1297 0056                      l1289 003F  
                    l1395 024F                      l1379 020A                      l1299 005A  
                    l1389 0234                      l1397 025C                      l1399 0261  
                    _TMR0 0001              __CFG_WRT$OFF 0000                      _main 032F  
                    _rand 0481                      btemp 007E             __CFG_BOREN$ON 0000  
                    start 000C        shiftBitColumna@bit 0073                     ?_main 003E  
                   ?_rand 0024             __CFG_WDTE$OFF 0000           __end_of___awmod 03EA  
                   i1l114 0568                     i1l109 0553       ___lmul@multiplicand 0076  
                   _ficha 00A0                     _fondo 004F                     _randx 005F  
                   _srand 0607                     pclath 000A                     status 0003  
                   wtemp0 007E           __initialization 000F              __end_of_main 038F  
            __end_of_rand 04C8            _latchClock_Fil 0626            _latchClock_Col 0632  
 __size_of_shiftClock_Fil 0006   __size_of_shiftClock_Col 0006                    ??_main 0042  
                  ??_rand 0026                    ?_srand 0072                    u100_20 0547  
                  u100_21 0546                    u101_20 0557                    u101_21 0556  
                  u102_20 055D                    u102_21 055C                    u103_20 0564  
                  u103_21 0563                    i1l1441 0548                    i1l1451 0560  
                  i1l1443 0550                    i1l1453 0564                    i1l1445 0557  
                  i1l1437 0543                    i1l1455 0565                    i1l1447 055D  
                  i1l1439 0547                    i1l1457 0567                    i1l1449 055F  
          __CFG_PWRTE$OFF 0000                _Timer0_ISR 0543    __end_of_latchClock_Col 0637  
  __end_of_latchClock_Fil 062C                    ___lmul 03EA                 ??___awmod 007B  
                  _memset 056F           ___awmod@divisor 002B           ___awmod@counter 002F  
        __end_of_setFilas 050B    __size_of_init_pines_in 000B                    saved_w 007E  
                  srand@x 0072   __end_of__initialization 003B  __size_of_shiftBitColumna 001C  
      updateScreen@screen 0024           ?_latchClock_Col 0070           ?_latchClock_Fil 0070  
          __pcstackCOMMON 0070              __pidataBANK0 0637              __pidataBANK3 050B  
           __end_of_srand 0610            _OPTION_REGbits 0081                _checkCount 003F  
                 ??_srand 0074                __pbssBANK0 0044                __pbssBANK1 00A0  
           _init_pines_in 05FC               ?_Timer0_ISR 0070                __pmaintext 032F  
                 ?___lmul 0072                __pintentry 0004            _shiftClock_Fil 062C  
          _shiftClock_Col 0620                   ?_memset 0072            ___lmul@product 0020  
              _drawFigure 0265            ?_init_pines_in 0070                 ?_setFilas 0072  
  __end_of_shiftClock_Fil 0632    __end_of_shiftClock_Col 0626           __size_of___lmul 004C  
                 ___awmod 038F         ??_shiftBitColumna 0072                _init_pines 05D1  
              _init_timer 05E1           __size_of_memset 0020                   __ptext1 0436  
                 __ptext2 058F                   __ptext3 0620                   __ptext4 0626  
                 __ptext5 0632                   __ptext6 04C8                   __ptext7 062C  
                 __ptext8 0607                   __ptext9 05E1                   _figuras 0190  
        ___awmod@dividend 002D       __size_of_Timer0_ISR 002C   __size_of_init_interrupt 0008  
                 clrloop0 0611               ?_checkCount 0070      end_of_initialization 003B  
 __size_of_init_pines_col 0013   __size_of_init_pines_fil 000D                   memset@c 0072  
                 memset@n 0074                   memset@p 0077                ??_setFilas 0074  
         ?_shiftClock_Col 0070           ?_shiftClock_Fil 0070                _timerCount 004D  
               _PORTBbits 0006                 _PORTCbits 0007                 _PORTDbits 0008  
             ?_drawFigure 0070                 _TRISBbits 0086                 _TRISCbits 0087  
               _TRISDbits 0088           ??_init_pines_in 0072          ??_latchClock_Col 0072  
        ??_latchClock_Fil 0072             ?_updateScreen 0070            __end_of___lmul 0436  
     __size_of_checkCount 0226               ?_init_pines 0070               ?_init_timer 0070  
          __end_of_memset 058F       start_initialization 000F            ??_updateScreen 0020  
            ??_Timer0_ISR 0070       __size_of_drawFigure 00CA                  ??___lmul 007A  
       setFilas@reg_value 0072                init_fetch0 05AB               __pdataBANK0 005F  
             __pdataBANK3 0190                  ??_memset 0076                 ___latbits 0002  
           __pcstackBANK0 0020            _init_interrupt 0618        __end_of_Timer0_ISR 056F  
          _init_pines_fil 05EF            _init_pines_col 05BE       __size_of_init_pines 0010  
         _shiftBitColumna 058F       __size_of_init_timer 000E         __size_of_setFilas 0043  
                ?___awmod 002B    __end_of_init_interrupt 0620    __end_of_init_pines_col 05D1  
  __end_of_init_pines_fil 05FC              ??_checkCount 0031            __size_of_srand 0009  
       interrupt_function 0004          ??_shiftClock_Col 0072          ??_shiftClock_Fil 0072  
               clear_ram0 0610        __end_of_checkCount 0265           ?_init_interrupt 0070  
            ??_drawFigure 0020      __end_of_updateScreen 0481           ?_init_pines_col 0070  
         ?_init_pines_fil 0070   __end_of_shiftBitColumna 05AB         ___lmul@multiplier 0072  
             checkCount@i 003C               checkCount@j 003A        __end_of_drawFigure 032F  
        __size_of___awmod 005B              ??_init_pines 0072              ??_init_timer 0072  
               setFilas@i 007A                  __ptext10 05D1                  __ptext11 05FC  
                __ptext20 038F                  __ptext12 05EF                  __ptext21 0543  
                __ptext13 05BE                  __ptext14 0618                  __ptext15 003F  
                __ptext16 0481                  __ptext17 03EA                  __ptext18 0265  
                __ptext19 056F     __end_of_init_pines_in 0607             __size_of_main 0060  
           __size_of_rand 0047        __end_of_init_pines 05E1        __end_of_init_timer 05EF  
                _pantalla 00B0                  _setFilas 04C8                  main@argc 003E  
                main@argv 0040                _INTCONbits 000B                  init_ram0 05AF  
                memset@p1 0078          ?_shiftBitColumna 0070                  intlevel1 0000  
 __size_of_latchClock_Col 0005   __size_of_latchClock_Fil 0006     __size_of_updateScreen 004B  
            _updateScreen 0436  
