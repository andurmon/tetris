

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed May 13 19:21:39 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK3,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	dabs	1,0x7E,2
    41  0000                     
    42                           ; Version 2.10
    43                           ; Generated 31/07/2019 GMT
    44                           ; 
    45                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F877A Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0008                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  000E                     	;# 
    91  000E                     	;# 
    92  000F                     	;# 
    93  0010                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0014                     	;# 
    98  0015                     	;# 
    99  0015                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  001A                     	;# 
   105  001B                     	;# 
   106  001B                     	;# 
   107  001C                     	;# 
   108  001D                     	;# 
   109  001E                     	;# 
   110  001F                     	;# 
   111  0081                     	;# 
   112  0085                     	;# 
   113  0086                     	;# 
   114  0087                     	;# 
   115  0088                     	;# 
   116  0089                     	;# 
   117  008C                     	;# 
   118  008D                     	;# 
   119  008E                     	;# 
   120  0091                     	;# 
   121  0092                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  010E                     	;# 
   133  010F                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  010C                     	;# 
   191  010D                     	;# 
   192  010E                     	;# 
   193  010F                     	;# 
   194  018C                     	;# 
   195  018D                     	;# 
   196  0000                     	;# 
   197  0001                     	;# 
   198  0002                     	;# 
   199  0003                     	;# 
   200  0004                     	;# 
   201  0005                     	;# 
   202  0006                     	;# 
   203  0007                     	;# 
   204  0008                     	;# 
   205  0009                     	;# 
   206  000A                     	;# 
   207  000B                     	;# 
   208  000C                     	;# 
   209  000D                     	;# 
   210  000E                     	;# 
   211  000E                     	;# 
   212  000F                     	;# 
   213  0010                     	;# 
   214  0011                     	;# 
   215  0012                     	;# 
   216  0013                     	;# 
   217  0014                     	;# 
   218  0015                     	;# 
   219  0015                     	;# 
   220  0016                     	;# 
   221  0017                     	;# 
   222  0018                     	;# 
   223  0019                     	;# 
   224  001A                     	;# 
   225  001B                     	;# 
   226  001B                     	;# 
   227  001C                     	;# 
   228  001D                     	;# 
   229  001E                     	;# 
   230  001F                     	;# 
   231  0081                     	;# 
   232  0085                     	;# 
   233  0086                     	;# 
   234  0087                     	;# 
   235  0088                     	;# 
   236  0089                     	;# 
   237  008C                     	;# 
   238  008D                     	;# 
   239  008E                     	;# 
   240  0091                     	;# 
   241  0092                     	;# 
   242  0093                     	;# 
   243  0094                     	;# 
   244  0098                     	;# 
   245  0099                     	;# 
   246  009C                     	;# 
   247  009D                     	;# 
   248  009E                     	;# 
   249  009F                     	;# 
   250  010C                     	;# 
   251  010D                     	;# 
   252  010E                     	;# 
   253  010F                     	;# 
   254  018C                     	;# 
   255  018D                     	;# 
   256  0000                     	;# 
   257  0001                     	;# 
   258  0002                     	;# 
   259  0003                     	;# 
   260  0004                     	;# 
   261  0005                     	;# 
   262  0006                     	;# 
   263  0007                     	;# 
   264  0008                     	;# 
   265  0009                     	;# 
   266  000A                     	;# 
   267  000B                     	;# 
   268  000C                     	;# 
   269  000D                     	;# 
   270  000E                     	;# 
   271  000E                     	;# 
   272  000F                     	;# 
   273  0010                     	;# 
   274  0011                     	;# 
   275  0012                     	;# 
   276  0013                     	;# 
   277  0014                     	;# 
   278  0015                     	;# 
   279  0015                     	;# 
   280  0016                     	;# 
   281  0017                     	;# 
   282  0018                     	;# 
   283  0019                     	;# 
   284  001A                     	;# 
   285  001B                     	;# 
   286  001B                     	;# 
   287  001C                     	;# 
   288  001D                     	;# 
   289  001E                     	;# 
   290  001F                     	;# 
   291  0081                     	;# 
   292  0085                     	;# 
   293  0086                     	;# 
   294  0087                     	;# 
   295  0088                     	;# 
   296  0089                     	;# 
   297  008C                     	;# 
   298  008D                     	;# 
   299  008E                     	;# 
   300  0091                     	;# 
   301  0092                     	;# 
   302  0093                     	;# 
   303  0094                     	;# 
   304  0098                     	;# 
   305  0099                     	;# 
   306  009C                     	;# 
   307  009D                     	;# 
   308  009E                     	;# 
   309  009F                     	;# 
   310  010C                     	;# 
   311  010D                     	;# 
   312  010E                     	;# 
   313  010F                     	;# 
   314  018C                     	;# 
   315  018D                     	;# 
   316  0000                     	;# 
   317  0001                     	;# 
   318  0002                     	;# 
   319  0003                     	;# 
   320  0004                     	;# 
   321  0005                     	;# 
   322  0006                     	;# 
   323  0007                     	;# 
   324  0008                     	;# 
   325  0009                     	;# 
   326  000A                     	;# 
   327  000B                     	;# 
   328  000C                     	;# 
   329  000D                     	;# 
   330  000E                     	;# 
   331  000E                     	;# 
   332  000F                     	;# 
   333  0010                     	;# 
   334  0011                     	;# 
   335  0012                     	;# 
   336  0013                     	;# 
   337  0014                     	;# 
   338  0015                     	;# 
   339  0015                     	;# 
   340  0016                     	;# 
   341  0017                     	;# 
   342  0018                     	;# 
   343  0019                     	;# 
   344  001A                     	;# 
   345  001B                     	;# 
   346  001B                     	;# 
   347  001C                     	;# 
   348  001D                     	;# 
   349  001E                     	;# 
   350  001F                     	;# 
   351  0081                     	;# 
   352  0085                     	;# 
   353  0086                     	;# 
   354  0087                     	;# 
   355  0088                     	;# 
   356  0089                     	;# 
   357  008C                     	;# 
   358  008D                     	;# 
   359  008E                     	;# 
   360  0091                     	;# 
   361  0092                     	;# 
   362  0093                     	;# 
   363  0094                     	;# 
   364  0098                     	;# 
   365  0099                     	;# 
   366  009C                     	;# 
   367  009D                     	;# 
   368  009E                     	;# 
   369  009F                     	;# 
   370  010C                     	;# 
   371  010D                     	;# 
   372  010E                     	;# 
   373  010F                     	;# 
   374  018C                     	;# 
   375  018D                     	;# 
   376  0000                     	;# 
   377  0001                     	;# 
   378  0002                     	;# 
   379  0003                     	;# 
   380  0004                     	;# 
   381  0005                     	;# 
   382  0006                     	;# 
   383  0007                     	;# 
   384  0008                     	;# 
   385  0009                     	;# 
   386  000A                     	;# 
   387  000B                     	;# 
   388  000C                     	;# 
   389  000D                     	;# 
   390  000E                     	;# 
   391  000E                     	;# 
   392  000F                     	;# 
   393  0010                     	;# 
   394  0011                     	;# 
   395  0012                     	;# 
   396  0013                     	;# 
   397  0014                     	;# 
   398  0015                     	;# 
   399  0015                     	;# 
   400  0016                     	;# 
   401  0017                     	;# 
   402  0018                     	;# 
   403  0019                     	;# 
   404  001A                     	;# 
   405  001B                     	;# 
   406  001B                     	;# 
   407  001C                     	;# 
   408  001D                     	;# 
   409  001E                     	;# 
   410  001F                     	;# 
   411  0081                     	;# 
   412  0085                     	;# 
   413  0086                     	;# 
   414  0087                     	;# 
   415  0088                     	;# 
   416  0089                     	;# 
   417  008C                     	;# 
   418  008D                     	;# 
   419  008E                     	;# 
   420  0091                     	;# 
   421  0092                     	;# 
   422  0093                     	;# 
   423  0094                     	;# 
   424  0098                     	;# 
   425  0099                     	;# 
   426  009C                     	;# 
   427  009D                     	;# 
   428  009E                     	;# 
   429  009F                     	;# 
   430  010C                     	;# 
   431  010D                     	;# 
   432  010E                     	;# 
   433  010F                     	;# 
   434  018C                     	;# 
   435  018D                     	;# 
   436  0000                     	;# 
   437  0001                     	;# 
   438  0002                     	;# 
   439  0003                     	;# 
   440  0004                     	;# 
   441  0005                     	;# 
   442  0006                     	;# 
   443  0007                     	;# 
   444  0008                     	;# 
   445  0009                     	;# 
   446  000A                     	;# 
   447  000B                     	;# 
   448  000C                     	;# 
   449  000D                     	;# 
   450  000E                     	;# 
   451  000E                     	;# 
   452  000F                     	;# 
   453  0010                     	;# 
   454  0011                     	;# 
   455  0012                     	;# 
   456  0013                     	;# 
   457  0014                     	;# 
   458  0015                     	;# 
   459  0015                     	;# 
   460  0016                     	;# 
   461  0017                     	;# 
   462  0018                     	;# 
   463  0019                     	;# 
   464  001A                     	;# 
   465  001B                     	;# 
   466  001B                     	;# 
   467  001C                     	;# 
   468  001D                     	;# 
   469  001E                     	;# 
   470  001F                     	;# 
   471  0081                     	;# 
   472  0085                     	;# 
   473  0086                     	;# 
   474  0087                     	;# 
   475  0088                     	;# 
   476  0089                     	;# 
   477  008C                     	;# 
   478  008D                     	;# 
   479  008E                     	;# 
   480  0091                     	;# 
   481  0092                     	;# 
   482  0093                     	;# 
   483  0094                     	;# 
   484  0098                     	;# 
   485  0099                     	;# 
   486  009C                     	;# 
   487  009D                     	;# 
   488  009E                     	;# 
   489  009F                     	;# 
   490  010C                     	;# 
   491  010D                     	;# 
   492  010E                     	;# 
   493  010F                     	;# 
   494  018C                     	;# 
   495  018D                     	;# 
   496                           
   497                           	psect	idataBANK0
   498  06AF                     __pidataBANK0:	
   499                           
   500                           ;initializer for _randx
   501  06AF  3401               	retlw	1
   502  06B0  3400               	retlw	0
   503  06B1  3400               	retlw	0
   504  06B2  3400               	retlw	0
   505                           
   506                           	psect	idataBANK3
   507  0582                     __pidataBANK3:	
   508                           
   509                           ;initializer for _figuras
   510  0582  3402               	retlw	2
   511  0583  3400               	retlw	0
   512  0584  3402               	retlw	2
   513  0585  3400               	retlw	0
   514  0586  3403               	retlw	3
   515  0587  3400               	retlw	0
   516  0588  3400               	retlw	0
   517  0589  3400               	retlw	0
   518  058A  3403               	retlw	3
   519  058B  3400               	retlw	0
   520  058C  3402               	retlw	2
   521  058D  3400               	retlw	0
   522  058E  3402               	retlw	2
   523  058F  3400               	retlw	0
   524  0590  3400               	retlw	0
   525  0591  3400               	retlw	0
   526  0592  3401               	retlw	1
   527  0593  3400               	retlw	0
   528  0594  3403               	retlw	3
   529  0595  3400               	retlw	0
   530  0596  3402               	retlw	2
   531  0597  3400               	retlw	0
   532  0598  3400               	retlw	0
   533  0599  3400               	retlw	0
   534  059A  3402               	retlw	2
   535  059B  3400               	retlw	0
   536  059C  3403               	retlw	3
   537  059D  3400               	retlw	0
   538  059E  3401               	retlw	1
   539  059F  3400               	retlw	0
   540  05A0  3400               	retlw	0
   541  05A1  3400               	retlw	0
   542  05A2  3401               	retlw	1
   543  05A3  3400               	retlw	0
   544  05A4  3401               	retlw	1
   545  05A5  3400               	retlw	0
   546  05A6  3401               	retlw	1
   547  05A7  3400               	retlw	0
   548  05A8  3401               	retlw	1
   549  05A9  3400               	retlw	0
   550  05AA  3403               	retlw	3
   551  05AB  3400               	retlw	0
   552  05AC  3403               	retlw	3
   553  05AD  3400               	retlw	0
   554  05AE  3400               	retlw	0
   555  05AF  3400               	retlw	0
   556  05B0  3400               	retlw	0
   557  05B1  3400               	retlw	0
   558  05B2  3401               	retlw	1
   559  05B3  3400               	retlw	0
   560  05B4  3403               	retlw	3
   561  05B5  3400               	retlw	0
   562  05B6  3401               	retlw	1
   563  05B7  3400               	retlw	0
   564  05B8  3400               	retlw	0
   565  05B9  3400               	retlw	0
   566  0001                     _TMR0	set	1
   567  000B                     _INTCONbits	set	11
   568  0008                     _PORTDbits	set	8
   569  0007                     _PORTCbits	set	7
   570  0006                     _PORTBbits	set	6
   571  0081                     _OPTION_REGbits	set	129
   572  0088                     _TRISDbits	set	136
   573  0087                     _TRISCbits	set	135
   574  0086                     _TRISBbits	set	134
   575                           
   576                           ; #config settings
   577  0000                     
   578                           	psect	cinit
   579  000F                     start_initialization:	
   580  000F                     __initialization:	
   581                           
   582                           ; Initialize objects allocated to BANK3
   583  000F  1783               	bsf	3,7	;select IRP bank2
   584  0010  30C8               	movlw	low (__pdataBANK3+56)
   585  0011  00FD               	movwf	btemp+-1
   586  0012  3005               	movlw	high __pidataBANK3
   587  0013  00FE               	movwf	btemp
   588  0014  3082               	movlw	low __pidataBANK3
   589  0015  00FF               	movwf	btemp+1
   590  0016  3090               	movlw	low __pdataBANK3
   591  0017  0084               	movwf	4
   592  0018  120A  118A  262F  120A  118A  	fcall	init_ram0
   593                           
   594                           ; Initialize objects allocated to BANK0
   595  001D  1383               	bcf	3,7	;select IRP bank0
   596  001E  3061               	movlw	low (__pdataBANK0+4)
   597  001F  00FD               	movwf	btemp+-1
   598  0020  3006               	movlw	high __pidataBANK0
   599  0021  00FE               	movwf	btemp
   600  0022  30AF               	movlw	low __pidataBANK0
   601  0023  00FF               	movwf	btemp+1
   602  0024  305D               	movlw	low __pdataBANK0
   603  0025  0084               	movwf	4
   604  0026  120A  118A  262F  120A  118A  	fcall	init_ram0
   605                           
   606                           ; Clear objects allocated to BANK1
   607  002B  30A0               	movlw	low __pbssBANK1
   608  002C  0084               	movwf	4
   609  002D  30C0               	movlw	low (__pbssBANK1+32)
   610  002E  120A  118A  2690  120A  118A  	fcall	clear_ram0
   611                           
   612                           ; Clear objects allocated to BANK0
   613  0033  3042               	movlw	low __pbssBANK0
   614  0034  0084               	movwf	4
   615  0035  305D               	movlw	low (__pbssBANK0+27)
   616  0036  120A  118A  2690  120A  118A  	fcall	clear_ram0
   617  003B                     end_of_initialization:	
   618                           ;End of C runtime variable initialization code
   619                           
   620  003B                     __end_of__initialization:	
   621  003B  0183               	clrf	3
   622  003C  120A  118A  2C2E   	ljmp	_main	;jump to C main() function
   623                           
   624                           	psect	bssBANK0
   625  0042                     __pbssBANK0:	
   626  0042                     _con:	
   627  0042                     	ds	7
   628  0049                     _timerCount:	
   629  0049                     	ds	4
   630  004D                     _ficha:	
   631  004D                     	ds	16
   632                           
   633                           	psect	dataBANK0
   634  005D                     __pdataBANK0:	
   635  005D                     _randx:	
   636  005D                     	ds	4
   637                           
   638                           	psect	bssBANK1
   639  00A0                     __pbssBANK1:	
   640  00A0                     _fondo:	
   641  00A0                     	ds	16
   642  00B0                     _pantalla:	
   643  00B0                     	ds	16
   644                           
   645                           	psect	dataBANK3
   646  0190                     __pdataBANK3:	
   647  0190                     _figuras:	
   648  0190                     	ds	56
   649                           
   650                           	psect	inittext
   651  062B                     init_fetch0:	
   652                           ;	Called with low address in FSR and high address in W
   653                           
   654  062B  087E               	movf	btemp,w
   655  062C  008A               	movwf	10
   656  062D  087F               	movf	btemp+1,w
   657  062E  0082               	movwf	2
   658  062F                     init_ram0:	
   659                           ;Called with:
   660                           ;	high address of idata address in btemp 
   661                           ;	low address of idata address in btemp+1 
   662                           ;	low address of data in FSR
   663                           ;	high address + 1 of data in btemp-1
   664                           
   665  062F  120A  118A  262B  120A  118A  	fcall	init_fetch0
   666  0634  0080               	movwf	0
   667  0635  0A84               	incf	4,f
   668  0636  0804               	movf	4,w
   669  0637  067D               	xorwf	btemp+-1,w
   670  0638  1903               	btfsc	3,2
   671  0639  3400               	retlw	0
   672  063A  0AFF               	incf	btemp+1,f
   673  063B  1903               	btfsc	3,2
   674  063C  0AFE               	incf	btemp,f
   675  063D  2E2F               	goto	init_ram0
   676                           
   677                           	psect	clrtext
   678  0690                     clear_ram0:	
   679                           ;	Called with FSR containing the base address, and
   680                           ;	W with the last address+1
   681                           
   682  0690  0064               	clrwdt	;clear the watchdog before getting into this loop
   683  0691                     clrloop0:	
   684  0691  0180               	clrf	0	;clear RAM location pointed to by FSR
   685  0692  0A84               	incf	4,f	;increment pointer
   686  0693  0604               	xorwf	4,w	;XOR with final address
   687  0694  1903               	btfsc	3,2	;have we reached the end yet?
   688  0695  3400               	retlw	0	;all done for this memory range, return
   689  0696  0604               	xorwf	4,w	;XOR again to restore value
   690  0697  2E91               	goto	clrloop0	;do the next byte
   691                           
   692                           	psect	cstackCOMMON
   693  0070                     __pcstackCOMMON:	
   694  0070                     ?_checkCount:	
   695  0070                     ?_updateScreen:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0070                     ?_drawFigure:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0070                     ?_drawBground:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0070                     ?_addToScreen:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0070                     ?_init_pines_in:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0070                     ?_init_pines_fil:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0070                     ?_init_pines_col:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0070                     ?_init_pines:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0070                     ?_init_timer:	
   720                           ; 1 bytes @ 0x0
   721                           
   722  0070                     ?_leerEntradas:	
   723                           ; 1 bytes @ 0x0
   724                           
   725  0070                     ?_Timer0_ISR:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0070                     ??_Timer0_ISR:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0070                     ?_latchClock_Fil:	
   732                           ; 1 bytes @ 0x0
   733                           
   734  0070                     ?_shiftClock_Fil:	
   735                           ; 1 bytes @ 0x0
   736                           
   737  0070                     ?_latchClock_Col:	
   738                           ; 1 bytes @ 0x0
   739                           
   740  0070                     ?_shiftClock_Col:	
   741                           ; 1 bytes @ 0x0
   742                           
   743  0070                     ?_shiftBitColumna:	
   744                           ; 1 bytes @ 0x0
   745                           
   746                           
   747                           ; 1 bytes @ 0x0
   748  0070                     	ds	2
   749  0072                     ?_srand:	
   750  0072                     ??_drawBground:	
   751                           ; 1 bytes @ 0x2
   752                           
   753  0072                     ?_memset:	
   754                           ; 1 bytes @ 0x2
   755                           
   756  0072                     ??_addToScreen:	
   757                           ; 1 bytes @ 0x2
   758                           
   759  0072                     ??_init_pines_in:	
   760                           ; 1 bytes @ 0x2
   761                           
   762  0072                     ??_init_pines_fil:	
   763                           ; 1 bytes @ 0x2
   764                           
   765  0072                     ??_init_pines_col:	
   766                           ; 1 bytes @ 0x2
   767                           
   768  0072                     ??_init_pines:	
   769                           ; 1 bytes @ 0x2
   770                           
   771  0072                     ??_init_timer:	
   772                           ; 1 bytes @ 0x2
   773                           
   774  0072                     ??_latchClock_Fil:	
   775                           ; 1 bytes @ 0x2
   776                           
   777  0072                     ??_shiftClock_Fil:	
   778                           ; 1 bytes @ 0x2
   779                           
   780  0072                     ?_setFilas:	
   781                           ; 1 bytes @ 0x2
   782                           
   783  0072                     ??_latchClock_Col:	
   784                           ; 1 bytes @ 0x2
   785                           
   786  0072                     ??_shiftClock_Col:	
   787                           ; 1 bytes @ 0x2
   788                           
   789  0072                     ??_shiftBitColumna:	
   790                           ; 1 bytes @ 0x2
   791                           
   792  0072                     ?___lmul:	
   793                           ; 1 bytes @ 0x2
   794                           
   795  0072                     setFilas@reg_value:	
   796                           ; 4 bytes @ 0x2
   797                           
   798  0072                     memset@c:	
   799                           ; 2 bytes @ 0x2
   800                           
   801  0072                     srand@x:	
   802                           ; 2 bytes @ 0x2
   803                           
   804  0072                     ___lmul@multiplier:	
   805                           ; 2 bytes @ 0x2
   806                           
   807                           
   808                           ; 4 bytes @ 0x2
   809  0072                     	ds	1
   810  0073                     shiftBitColumna@bit:	
   811                           
   812                           ; 1 bytes @ 0x3
   813  0073                     	ds	1
   814  0074                     ??_srand:	
   815  0074                     ??_setFilas:	
   816                           ; 1 bytes @ 0x4
   817                           
   818  0074                     memset@n:	
   819                           ; 1 bytes @ 0x4
   820                           
   821                           
   822                           ; 2 bytes @ 0x4
   823  0074                     	ds	2
   824  0076                     ??_memset:	
   825  0076                     ___lmul@multiplicand:	
   826                           ; 1 bytes @ 0x6
   827                           
   828                           
   829                           ; 4 bytes @ 0x6
   830  0076                     	ds	1
   831  0077                     memset@p:	
   832                           
   833                           ; 1 bytes @ 0x7
   834  0077                     	ds	1
   835  0078                     memset@p1:	
   836                           
   837                           ; 1 bytes @ 0x8
   838  0078                     	ds	1
   839  0079                     leerEntradas@i:	
   840                           
   841                           ; 2 bytes @ 0x9
   842  0079                     	ds	1
   843  007A                     ??___lmul:	
   844  007A                     setFilas@i:	
   845                           ; 1 bytes @ 0xA
   846                           
   847                           
   848                           ; 2 bytes @ 0xA
   849  007A                     	ds	1
   850  007B                     ??___awmod:	
   851                           
   852                           ; 1 bytes @ 0xB
   853  007B                     	ds	1
   854                           
   855                           	psect	cstackBANK0
   856  0020                     __pcstackBANK0:	
   857  0020                     ??_drawFigure:	
   858  0020                     addToScreen@i:	
   859                           ; 1 bytes @ 0x0
   860                           
   861  0020                     drawBground@i:	
   862                           ; 2 bytes @ 0x0
   863                           
   864  0020                     ___lmul@product:	
   865                           ; 2 bytes @ 0x0
   866                           
   867                           
   868                           ; 4 bytes @ 0x0
   869  0020                     	ds	2
   870  0022                     ??_updateScreen:	
   871                           
   872                           ; 1 bytes @ 0x2
   873  0022                     	ds	2
   874  0024                     ?_rand:	
   875                           
   876                           ; 2 bytes @ 0x4
   877  0024                     	ds	1
   878  0025                     ??_leerEntradas:	
   879                           
   880                           ; 1 bytes @ 0x5
   881  0025                     	ds	1
   882  0026                     ??_rand:	
   883  0026                     updateScreen@screen:	
   884                           ; 1 bytes @ 0x6
   885                           
   886                           
   887                           ; 1 bytes @ 0x6
   888  0026                     	ds	1
   889  0027                     updateScreen@i:	
   890                           
   891                           ; 2 bytes @ 0x7
   892  0027                     	ds	4
   893  002B                     ?___awmod:	
   894  002B                     ___awmod@divisor:	
   895                           ; 2 bytes @ 0xB
   896                           
   897                           
   898                           ; 2 bytes @ 0xB
   899  002B                     	ds	2
   900  002D                     ___awmod@dividend:	
   901                           
   902                           ; 2 bytes @ 0xD
   903  002D                     	ds	2
   904  002F                     ___awmod@counter:	
   905                           
   906                           ; 1 bytes @ 0xF
   907  002F                     	ds	1
   908  0030                     ___awmod@sign:	
   909                           
   910                           ; 1 bytes @ 0x10
   911  0030                     	ds	1
   912  0031                     ??_checkCount:	
   913                           
   914                           ; 1 bytes @ 0x11
   915  0031                     	ds	8
   916  0039                     checkCount@j:	
   917                           
   918                           ; 2 bytes @ 0x19
   919  0039                     	ds	2
   920  003B                     checkCount@i:	
   921                           
   922                           ; 2 bytes @ 0x1B
   923  003B                     	ds	2
   924  003D                     ?_main:	
   925  003D                     main@argc:	
   926                           ; 2 bytes @ 0x1D
   927                           
   928                           
   929                           ; 2 bytes @ 0x1D
   930  003D                     	ds	2
   931  003F                     main@argv:	
   932                           
   933                           ; 2 bytes @ 0x1F
   934  003F                     	ds	2
   935  0041                     ??_main:	
   936                           
   937                           ; 1 bytes @ 0x21
   938  0041                     	ds	1
   939                           
   940                           	psect	maintext
   941  042E                     __pmaintext:	
   942 ;;
   943 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   944 ;;
   945 ;; *************** function _main *****************
   946 ;; Defined at:
   947 ;;		line 41 in file "mainsource.c"
   948 ;; Parameters:    Size  Location     Type
   949 ;;  argc            2   29[BANK0 ] int 
   950 ;;  argv            2   31[BANK0 ] PTR PTR unsigned char 
   951 ;; Auto vars:     Size  Location     Type
   952 ;;  j               2    0        int 
   953 ;;  i               2    0        int 
   954 ;; Return value:  Size  Location     Type
   955 ;;                  2   29[BANK0 ] int 
   956 ;; Registers used:
   957 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   958 ;; Tracked objects:
   959 ;;		On entry : B00/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   963 ;;      Params:         0       4       0       0       0
   964 ;;      Locals:         0       4       0       0       0
   965 ;;      Temps:          0       1       0       0       0
   966 ;;      Totals:         0       9       0       0       0
   967 ;;Total ram usage:        9 bytes
   968 ;; Hardware stack levels required when called:    5
   969 ;; This function calls:
   970 ;;		___awmod
   971 ;;		_checkCount
   972 ;;		_init_pines
   973 ;;		_init_timer
   974 ;;		_rand
   975 ;;		_srand
   976 ;;		_updateScreen
   977 ;; This function is called by:
   978 ;;		Startup code after reset
   979 ;; This function uses a non-reentrant model
   980 ;;
   981                           
   982                           
   983                           ;psect for function _main
   984  042E                     _main:	
   985  042E                     l1484:	
   986                           ;incstack = 0
   987                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   988                           
   989                           
   990                           ;mainsource.c: 45:     init_timer();
   991  042E  120A  118A  2661  120A  118A  	fcall	_init_timer
   992                           
   993                           ;mainsource.c: 46:     init_pines();
   994  0433  120A  118A  2651  120A  118A  	fcall	_init_pines
   995  0438                     l1486:	
   996  0438                     l1488:	
   997  0438                     l1490:	
   998                           
   999                           ;mainsource.c: 50:     con.ficha_Vpos = 16;
  1000  0438  3010               	movlw	16
  1001  0439  1283               	bcf	3,5	;RP0=0, select bank0
  1002  043A  1303               	bcf	3,6	;RP1=0, select bank0
  1003  043B  00C1               	movwf	??_main
  1004  043C  0841               	movf	??_main,w
  1005  043D  00C3               	movwf	_con+1
  1006  043E                     l1492:	
  1007                           
  1008                           ;mainsource.c: 51:     con.ficha_Hpos = 2;
  1009  043E  3002               	movlw	2
  1010  043F  00C1               	movwf	??_main
  1011  0440  0841               	movf	??_main,w
  1012  0441  00C4               	movwf	_con+2
  1013  0442                     l1494:	
  1014                           
  1015                           ;mainsource.c: 52:     srand(1);
  1016  0442  3001               	movlw	1
  1017  0443  00F2               	movwf	srand@x
  1018  0444  3000               	movlw	0
  1019  0445  00F3               	movwf	srand@x+1
  1020  0446  120A  118A  2687  120A  118A  	fcall	_srand
  1021  044B                     l1496:	
  1022                           
  1023                           ;mainsource.c: 53:     con.ficha_actual = rand() % 7;
  1024  044B  3007               	movlw	7
  1025  044C  1283               	bcf	3,5	;RP0=0, select bank0
  1026  044D  1303               	bcf	3,6	;RP1=0, select bank0
  1027  044E  00AB               	movwf	___awmod@divisor
  1028  044F  3000               	movlw	0
  1029  0450  00AC               	movwf	___awmod@divisor+1
  1030  0451  120A  118A  2476  120A  118A  	fcall	_rand
  1031  0456  1283               	bcf	3,5	;RP0=0, select bank0
  1032  0457  1303               	bcf	3,6	;RP1=0, select bank0
  1033  0458  0825               	movf	?_rand+1,w
  1034  0459  00AE               	movwf	___awmod@dividend+1
  1035  045A  0824               	movf	?_rand,w
  1036  045B  00AD               	movwf	___awmod@dividend
  1037  045C  120A  118A  2387  120A  118A  	fcall	___awmod
  1038  0461  1283               	bcf	3,5	;RP0=0, select bank0
  1039  0462  1303               	bcf	3,6	;RP1=0, select bank0
  1040  0463  082B               	movf	?___awmod,w
  1041  0464  00C1               	movwf	??_main
  1042  0465  0841               	movf	??_main,w
  1043  0466  00C5               	movwf	_con+3
  1044  0467                     l1498:	
  1045                           
  1046                           ;mainsource.c: 58:         checkCount();
  1047  0467  120A  118A  203F  120A  118A  	fcall	_checkCount
  1048  046C                     l1500:	
  1049                           
  1050                           ;mainsource.c: 60:         updateScreen(pantalla);
  1051  046C  30B0               	movlw	(low (_pantalla| 0))& (0+255)
  1052  046D  120A  118A  2324  120A  118A  	fcall	_updateScreen
  1053  0472  2C67               	goto	l1498
  1054  0473  120A  118A  280C   	ljmp	start
  1055  0476                     __end_of_main:	
  1056                           
  1057                           	psect	text1
  1058  0324                     __ptext1:	
  1059 ;; *************** function _updateScreen *****************
  1060 ;; Defined at:
  1061 ;;		line 17 in file "screen.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;  screen          1    wreg     PTR unsigned int 
  1064 ;;		 -> pantalla(16), 
  1065 ;; Auto vars:     Size  Location     Type
  1066 ;;  screen          1    6[BANK0 ] PTR unsigned int 
  1067 ;;		 -> pantalla(16), 
  1068 ;;  i               2    7[BANK0 ] int 
  1069 ;; Return value:  Size  Location     Type
  1070 ;;                  1    wreg      void 
  1071 ;; Registers used:
  1072 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1078 ;;      Params:         0       0       0       0       0
  1079 ;;      Locals:         0       3       0       0       0
  1080 ;;      Temps:          0       4       0       0       0
  1081 ;;      Totals:         0       7       0       0       0
  1082 ;;Total ram usage:        7 bytes
  1083 ;; Hardware stack levels used:    1
  1084 ;; Hardware stack levels required when called:    3
  1085 ;; This function calls:
  1086 ;;		_addToScreen
  1087 ;;		_setFilas
  1088 ;;		_shiftBitColumna
  1089 ;; This function is called by:
  1090 ;;		_main
  1091 ;; This function uses a non-reentrant model
  1092 ;;
  1093                           
  1094                           
  1095                           ;psect for function _updateScreen
  1096  0324                     _updateScreen:	
  1097                           
  1098                           ;incstack = 0
  1099                           ; Regs used in _updateScreen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1100                           ;updateScreen@screen stored from wreg
  1101  0324  1283               	bcf	3,5	;RP0=0, select bank0
  1102  0325  1303               	bcf	3,6	;RP1=0, select bank0
  1103  0326  00A6               	movwf	updateScreen@screen
  1104  0327                     l1460:	
  1105  0327                     l1462:	
  1106                           
  1107                           ;screen.c: 20:     addToScreen();
  1108  0327  120A  118A  2500  120A  118A  	fcall	_addToScreen
  1109  032C                     l1464:	
  1110                           
  1111                           ;screen.c: 22:     for(i=0; i<=7;i++){
  1112  032C  1283               	bcf	3,5	;RP0=0, select bank0
  1113  032D  1303               	bcf	3,6	;RP1=0, select bank0
  1114  032E  01A7               	clrf	updateScreen@i
  1115  032F  01A8               	clrf	updateScreen@i+1
  1116  0330                     l1470:	
  1117                           
  1118                           ;screen.c: 23:        if(i == 0){
  1119  0330  1283               	bcf	3,5	;RP0=0, select bank0
  1120  0331  1303               	bcf	3,6	;RP1=0, select bank0
  1121  0332  0827               	movf	updateScreen@i,w
  1122  0333  0428               	iorwf	updateScreen@i+1,w
  1123  0334  1D03               	btfss	3,2
  1124  0335  2B37               	goto	u1061
  1125  0336  2B38               	goto	u1060
  1126  0337                     u1061:	
  1127  0337  2B55               	goto	l1476
  1128  0338                     u1060:	
  1129  0338                     l1472:	
  1130                           
  1131                           ;screen.c: 24:             setFilas(~screen[i]);
  1132  0338  0827               	movf	updateScreen@i,w
  1133  0339  00A2               	movwf	??_updateScreen
  1134  033A  0722               	addwf	??_updateScreen,w
  1135  033B  0726               	addwf	updateScreen@screen,w
  1136  033C  00A3               	movwf	??_updateScreen+1
  1137  033D  0823               	movf	??_updateScreen+1,w
  1138  033E  0084               	movwf	4
  1139  033F  1383               	bcf	3,7	;select IRP bank0
  1140  0340  0800               	movf	0,w
  1141  0341  00A4               	movwf	??_updateScreen+2
  1142  0342  0A84               	incf	4,f
  1143  0343  0800               	movf	0,w
  1144  0344  00A5               	movwf	??_updateScreen+3
  1145  0345  0924               	comf	??_updateScreen+2,w
  1146  0346  00F2               	movwf	setFilas@reg_value
  1147  0347  0925               	comf	??_updateScreen+3,w
  1148  0348  00F3               	movwf	setFilas@reg_value+1
  1149  0349  120A  118A  24BD  120A  118A  	fcall	_setFilas
  1150  034E                     l1474:	
  1151                           
  1152                           ;screen.c: 25:             shiftBitColumna(1);
  1153  034E  3001               	movlw	1
  1154  034F  120A  118A  260F  120A  118A  	fcall	_shiftBitColumna
  1155                           
  1156                           ;screen.c: 26:         }
  1157  0354  2B71               	goto	l1480
  1158  0355                     l1476:	
  1159                           
  1160                           ;screen.c: 28:             setFilas(~screen[i]);
  1161  0355  0827               	movf	updateScreen@i,w
  1162  0356  00A2               	movwf	??_updateScreen
  1163  0357  0722               	addwf	??_updateScreen,w
  1164  0358  0726               	addwf	updateScreen@screen,w
  1165  0359  00A3               	movwf	??_updateScreen+1
  1166  035A  0823               	movf	??_updateScreen+1,w
  1167  035B  0084               	movwf	4
  1168  035C  1383               	bcf	3,7	;select IRP bank0
  1169  035D  0800               	movf	0,w
  1170  035E  00A4               	movwf	??_updateScreen+2
  1171  035F  0A84               	incf	4,f
  1172  0360  0800               	movf	0,w
  1173  0361  00A5               	movwf	??_updateScreen+3
  1174  0362  0924               	comf	??_updateScreen+2,w
  1175  0363  00F2               	movwf	setFilas@reg_value
  1176  0364  0925               	comf	??_updateScreen+3,w
  1177  0365  00F3               	movwf	setFilas@reg_value+1
  1178  0366  120A  118A  24BD  120A  118A  	fcall	_setFilas
  1179  036B                     l1478:	
  1180                           
  1181                           ;screen.c: 29:             shiftBitColumna(0);
  1182  036B  3000               	movlw	0
  1183  036C  120A  118A  260F  120A  118A  	fcall	_shiftBitColumna
  1184  0371                     l1480:	
  1185                           
  1186                           ;screen.c: 31:     }
  1187  0371  3001               	movlw	1
  1188  0372  1283               	bcf	3,5	;RP0=0, select bank0
  1189  0373  1303               	bcf	3,6	;RP1=0, select bank0
  1190  0374  07A7               	addwf	updateScreen@i,f
  1191  0375  1803               	skipnc
  1192  0376  0AA8               	incf	updateScreen@i+1,f
  1193  0377  3000               	movlw	0
  1194  0378  07A8               	addwf	updateScreen@i+1,f
  1195  0379                     l1482:	
  1196  0379  0828               	movf	updateScreen@i+1,w
  1197  037A  3A80               	xorlw	128
  1198  037B  00FF               	movwf	btemp+1
  1199  037C  3080               	movlw	128
  1200  037D  027F               	subwf	btemp+1,w
  1201  037E  1D03               	skipz
  1202  037F  2B82               	goto	u1075
  1203  0380  3008               	movlw	8
  1204  0381  0227               	subwf	updateScreen@i,w
  1205  0382                     u1075:	
  1206  0382  1C03               	skipc
  1207  0383  2B85               	goto	u1071
  1208  0384  2B86               	goto	u1070
  1209  0385                     u1071:	
  1210  0385  2B30               	goto	l1470
  1211  0386                     u1070:	
  1212  0386                     l177:	
  1213  0386  0008               	return
  1214  0387                     __end_of_updateScreen:	
  1215                           
  1216                           	psect	text2
  1217  060F                     __ptext2:	
  1218 ;; *************** function _shiftBitColumna *****************
  1219 ;; Defined at:
  1220 ;;		line 33 in file "columnas.c"
  1221 ;; Parameters:    Size  Location     Type
  1222 ;;  bit             1    wreg     unsigned char 
  1223 ;; Auto vars:     Size  Location     Type
  1224 ;;  bit             1    3[COMMON] unsigned char 
  1225 ;; Return value:  Size  Location     Type
  1226 ;;                  1    wreg      void 
  1227 ;; Registers used:
  1228 ;;		wreg, status,2, status,0, pclath, cstack
  1229 ;; Tracked objects:
  1230 ;;		On entry : 0/0
  1231 ;;		On exit  : 0/0
  1232 ;;		Unchanged: 0/0
  1233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1234 ;;      Params:         0       0       0       0       0
  1235 ;;      Locals:         1       0       0       0       0
  1236 ;;      Temps:          1       0       0       0       0
  1237 ;;      Totals:         2       0       0       0       0
  1238 ;;Total ram usage:        2 bytes
  1239 ;; Hardware stack levels used:    1
  1240 ;; Hardware stack levels required when called:    2
  1241 ;; This function calls:
  1242 ;;		_latchClock_Col
  1243 ;;		_latchClock_Fil
  1244 ;;		_shiftClock_Col
  1245 ;; This function is called by:
  1246 ;;		_updateScreen
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           
  1250                           
  1251                           ;psect for function _shiftBitColumna
  1252  060F                     _shiftBitColumna:	
  1253                           
  1254                           ;incstack = 0
  1255                           ; Regs used in _shiftBitColumna: [wreg+status,2+status,0+pclath+cstack]
  1256                           ;shiftBitColumna@bit stored from wreg
  1257  060F  00F3               	movwf	shiftBitColumna@bit
  1258  0610                     l1300:	
  1259                           
  1260                           ;columnas.c: 34:     PORTDbits.RD4= bit & 0x01;
  1261  0610  0873               	movf	shiftBitColumna@bit,w
  1262  0611  3901               	andlw	1
  1263  0612  00F2               	movwf	??_shiftBitColumna
  1264  0613  0EF2               	swapf	??_shiftBitColumna,f
  1265  0614  1283               	bcf	3,5	;RP0=0, select bank0
  1266  0615  1303               	bcf	3,6	;RP1=0, select bank0
  1267  0616  0808               	movf	8,w	;volatile
  1268  0617  0672               	xorwf	??_shiftBitColumna,w
  1269  0618  39EF               	andlw	-17
  1270  0619  0672               	xorwf	??_shiftBitColumna,w
  1271  061A  0088               	movwf	8	;volatile
  1272  061B                     l1302:	
  1273                           
  1274                           ;columnas.c: 35:     shiftClock_Col();
  1275  061B  120A  118A  2698  120A  118A  	fcall	_shiftClock_Col
  1276  0620                     l1304:	
  1277                           
  1278                           ;columnas.c: 36:     latchClock_Col();
  1279  0620  120A  118A  26AA  120A  118A  	fcall	_latchClock_Col
  1280  0625                     l1306:	
  1281                           
  1282                           ;columnas.c: 37:     latchClock_Fil();
  1283  0625  120A  118A  269E  120A  118A  	fcall	_latchClock_Fil
  1284  062A                     l150:	
  1285  062A  0008               	return
  1286  062B                     __end_of_shiftBitColumna:	
  1287                           
  1288                           	psect	text3
  1289  0698                     __ptext3:	
  1290 ;; *************** function _shiftClock_Col *****************
  1291 ;; Defined at:
  1292 ;;		line 13 in file "columnas.c"
  1293 ;; Parameters:    Size  Location     Type
  1294 ;;		None
  1295 ;; Auto vars:     Size  Location     Type
  1296 ;;		None
  1297 ;; Return value:  Size  Location     Type
  1298 ;;                  1    wreg      void 
  1299 ;; Registers used:
  1300 ;;		None
  1301 ;; Tracked objects:
  1302 ;;		On entry : 0/0
  1303 ;;		On exit  : 0/0
  1304 ;;		Unchanged: 0/0
  1305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1306 ;;      Params:         0       0       0       0       0
  1307 ;;      Locals:         0       0       0       0       0
  1308 ;;      Temps:          0       0       0       0       0
  1309 ;;      Totals:         0       0       0       0       0
  1310 ;;Total ram usage:        0 bytes
  1311 ;; Hardware stack levels used:    1
  1312 ;; Hardware stack levels required when called:    1
  1313 ;; This function calls:
  1314 ;;		Nothing
  1315 ;; This function is called by:
  1316 ;;		_shiftBitColumna
  1317 ;;		_setColumnas
  1318 ;; This function uses a non-reentrant model
  1319 ;;
  1320                           
  1321                           
  1322                           ;psect for function _shiftClock_Col
  1323  0698                     _shiftClock_Col:	
  1324  0698                     l1200:	
  1325                           ;incstack = 0
  1326                           ; Regs used in _shiftClock_Col: []
  1327                           
  1328                           
  1329                           ;columnas.c: 14:     PORTDbits.RD7 = 0;
  1330  0698  1283               	bcf	3,5	;RP0=0, select bank0
  1331  0699  1303               	bcf	3,6	;RP1=0, select bank0
  1332  069A  1388               	bcf	8,7	;volatile
  1333                           
  1334                           ;columnas.c: 15:     PORTDbits.RD7 = 1;
  1335  069B  1788               	bsf	8,7	;volatile
  1336                           
  1337                           ;columnas.c: 16:     PORTDbits.RD7 = 0;
  1338  069C  1388               	bcf	8,7	;volatile
  1339  069D                     l142:	
  1340  069D  0008               	return
  1341  069E                     __end_of_shiftClock_Col:	
  1342                           
  1343                           	psect	text4
  1344  069E                     __ptext4:	
  1345 ;; *************** function _latchClock_Fil *****************
  1346 ;; Defined at:
  1347 ;;		line 7 in file "filas.c"
  1348 ;; Parameters:    Size  Location     Type
  1349 ;;		None
  1350 ;; Auto vars:     Size  Location     Type
  1351 ;;		None
  1352 ;; Return value:  Size  Location     Type
  1353 ;;                  1    wreg      void 
  1354 ;; Registers used:
  1355 ;;		None
  1356 ;; Tracked objects:
  1357 ;;		On entry : 0/0
  1358 ;;		On exit  : 0/0
  1359 ;;		Unchanged: 0/0
  1360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1361 ;;      Params:         0       0       0       0       0
  1362 ;;      Locals:         0       0       0       0       0
  1363 ;;      Temps:          0       0       0       0       0
  1364 ;;      Totals:         0       0       0       0       0
  1365 ;;Total ram usage:        0 bytes
  1366 ;; Hardware stack levels used:    1
  1367 ;; Hardware stack levels required when called:    1
  1368 ;; This function calls:
  1369 ;;		Nothing
  1370 ;; This function is called by:
  1371 ;;		_shiftBitColumna
  1372 ;; This function uses a non-reentrant model
  1373 ;;
  1374                           
  1375                           
  1376                           ;psect for function _latchClock_Fil
  1377  069E                     _latchClock_Fil:	
  1378  069E                     l1194:	
  1379                           ;incstack = 0
  1380                           ; Regs used in _latchClock_Fil: []
  1381                           
  1382                           
  1383                           ;filas.c: 8:     PORTCbits.RC6 = 0;
  1384  069E  1283               	bcf	3,5	;RP0=0, select bank0
  1385  069F  1303               	bcf	3,6	;RP1=0, select bank0
  1386  06A0  1307               	bcf	7,6	;volatile
  1387                           
  1388                           ;filas.c: 9:     PORTCbits.RC6 = 1;
  1389  06A1  1707               	bsf	7,6	;volatile
  1390                           
  1391                           ;filas.c: 10:     PORTCbits.RC6 = 0;
  1392  06A2  1307               	bcf	7,6	;volatile
  1393  06A3                     l124:	
  1394  06A3  0008               	return
  1395  06A4                     __end_of_latchClock_Fil:	
  1396                           
  1397                           	psect	text5
  1398  06AA                     __ptext5:	
  1399 ;; *************** function _latchClock_Col *****************
  1400 ;; Defined at:
  1401 ;;		line 8 in file "columnas.c"
  1402 ;; Parameters:    Size  Location     Type
  1403 ;;		None
  1404 ;; Auto vars:     Size  Location     Type
  1405 ;;		None
  1406 ;; Return value:  Size  Location     Type
  1407 ;;                  1    wreg      void 
  1408 ;; Registers used:
  1409 ;;		None
  1410 ;; Tracked objects:
  1411 ;;		On entry : 0/0
  1412 ;;		On exit  : 0/0
  1413 ;;		Unchanged: 0/0
  1414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1415 ;;      Params:         0       0       0       0       0
  1416 ;;      Locals:         0       0       0       0       0
  1417 ;;      Temps:          0       0       0       0       0
  1418 ;;      Totals:         0       0       0       0       0
  1419 ;;Total ram usage:        0 bytes
  1420 ;; Hardware stack levels used:    1
  1421 ;; Hardware stack levels required when called:    1
  1422 ;; This function calls:
  1423 ;;		Nothing
  1424 ;; This function is called by:
  1425 ;;		_shiftBitColumna
  1426 ;;		_setColumnas
  1427 ;; This function uses a non-reentrant model
  1428 ;;
  1429                           
  1430                           
  1431                           ;psect for function _latchClock_Col
  1432  06AA                     _latchClock_Col:	
  1433  06AA                     l1198:	
  1434                           ;incstack = 0
  1435                           ; Regs used in _latchClock_Col: []
  1436                           
  1437                           
  1438                           ;columnas.c: 9:     PORTDbits.RD6 = 1;
  1439  06AA  1283               	bcf	3,5	;RP0=0, select bank0
  1440  06AB  1303               	bcf	3,6	;RP1=0, select bank0
  1441  06AC  1708               	bsf	8,6	;volatile
  1442                           
  1443                           ;columnas.c: 10:     PORTDbits.RD6 = 0;
  1444  06AD  1308               	bcf	8,6	;volatile
  1445  06AE                     l139:	
  1446  06AE  0008               	return
  1447  06AF                     __end_of_latchClock_Col:	
  1448                           
  1449                           	psect	text6
  1450  04BD                     __ptext6:	
  1451 ;; *************** function _setFilas *****************
  1452 ;; Defined at:
  1453 ;;		line 19 in file "filas.c"
  1454 ;; Parameters:    Size  Location     Type
  1455 ;;  reg_value       2    2[COMMON] unsigned int 
  1456 ;; Auto vars:     Size  Location     Type
  1457 ;;  i               2   10[COMMON] int 
  1458 ;; Return value:  Size  Location     Type
  1459 ;;                  1    wreg      void 
  1460 ;; Registers used:
  1461 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1462 ;; Tracked objects:
  1463 ;;		On entry : 0/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1467 ;;      Params:         2       0       0       0       0
  1468 ;;      Locals:         2       0       0       0       0
  1469 ;;      Temps:          6       0       0       0       0
  1470 ;;      Totals:        10       0       0       0       0
  1471 ;;Total ram usage:       10 bytes
  1472 ;; Hardware stack levels used:    1
  1473 ;; Hardware stack levels required when called:    2
  1474 ;; This function calls:
  1475 ;;		_shiftClock_Fil
  1476 ;; This function is called by:
  1477 ;;		_updateScreen
  1478 ;; This function uses a non-reentrant model
  1479 ;;
  1480                           
  1481                           
  1482                           ;psect for function _setFilas
  1483  04BD                     _setFilas:	
  1484  04BD                     l1286:	
  1485                           ;incstack = 0
  1486                           ; Regs used in _setFilas: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1487                           
  1488                           
  1489                           ;filas.c: 20:     int i = 0;
  1490  04BD  01FA               	clrf	setFilas@i
  1491  04BE  01FB               	clrf	setFilas@i+1
  1492                           
  1493                           ;filas.c: 21:     for(i=0;i<16;i++){
  1494  04BF  01FA               	clrf	setFilas@i
  1495  04C0  01FB               	clrf	setFilas@i+1
  1496  04C1                     l1288:	
  1497  04C1  087B               	movf	setFilas@i+1,w
  1498  04C2  3A80               	xorlw	128
  1499  04C3  00FF               	movwf	btemp+1
  1500  04C4  3080               	movlw	128
  1501  04C5  027F               	subwf	btemp+1,w
  1502  04C6  1D03               	skipz
  1503  04C7  2CCA               	goto	u825
  1504  04C8  3010               	movlw	16
  1505  04C9  027A               	subwf	setFilas@i,w
  1506  04CA                     u825:	
  1507  04CA  1C03               	skipc
  1508  04CB  2CCD               	goto	u821
  1509  04CC  2CCE               	goto	u820
  1510  04CD                     u821:	
  1511  04CD  2CCF               	goto	l1292
  1512  04CE                     u820:	
  1513  04CE  2CFF               	goto	l132
  1514  04CF                     l1292:	
  1515                           
  1516                           ;filas.c: 22:         PORTCbits.RC4 = (reg_value & (1<<i) )>>i;
  1517  04CF  0A7A               	incf	setFilas@i,w
  1518  04D0  00F4               	movwf	??_setFilas
  1519  04D1  3001               	movlw	1
  1520  04D2  00F5               	movwf	??_setFilas+1
  1521  04D3  3000               	movlw	0
  1522  04D4  00F6               	movwf	??_setFilas+2
  1523  04D5  2CD9               	goto	u834
  1524  04D6                     u835:	
  1525  04D6  1003               	clrc
  1526  04D7  0DF5               	rlf	??_setFilas+1,f
  1527  04D8  0DF6               	rlf	??_setFilas+2,f
  1528  04D9                     u834:	
  1529  04D9  0BF4               	decfsz	??_setFilas,f
  1530  04DA  2CD6               	goto	u835
  1531  04DB  0872               	movf	setFilas@reg_value,w
  1532  04DC  0575               	andwf	??_setFilas+1,w
  1533  04DD  00F7               	movwf	??_setFilas+3
  1534  04DE  0873               	movf	setFilas@reg_value+1,w
  1535  04DF  0576               	andwf	??_setFilas+2,w
  1536  04E0  00F8               	movwf	??_setFilas+4
  1537  04E1  0A7A               	incf	setFilas@i,w
  1538  04E2  2CE6               	goto	u844
  1539  04E3                     u845:	
  1540  04E3  1003               	clrc
  1541  04E4  0CF8               	rrf	??_setFilas+4,f
  1542  04E5  0CF7               	rrf	??_setFilas+3,f
  1543  04E6                     u844:	
  1544  04E6  3EFF               	addlw	-1
  1545  04E7  1D03               	skipz
  1546  04E8  2CE3               	goto	u845
  1547  04E9  0877               	movf	??_setFilas+3,w
  1548  04EA  00F9               	movwf	??_setFilas+5
  1549  04EB  0EF9               	swapf	??_setFilas+5,f
  1550  04EC  1283               	bcf	3,5	;RP0=0, select bank0
  1551  04ED  1303               	bcf	3,6	;RP1=0, select bank0
  1552  04EE  0807               	movf	7,w	;volatile
  1553  04EF  0679               	xorwf	??_setFilas+5,w
  1554  04F0  39EF               	andlw	-17
  1555  04F1  0679               	xorwf	??_setFilas+5,w
  1556  04F2  0087               	movwf	7	;volatile
  1557  04F3                     l1294:	
  1558                           
  1559                           ;filas.c: 23:         shiftClock_Fil();
  1560  04F3  120A  118A  26A4  120A  118A  	fcall	_shiftClock_Fil
  1561  04F8                     l1296:	
  1562                           
  1563                           ;filas.c: 24:     }
  1564  04F8  3001               	movlw	1
  1565  04F9  07FA               	addwf	setFilas@i,f
  1566  04FA  1803               	skipnc
  1567  04FB  0AFB               	incf	setFilas@i+1,f
  1568  04FC  3000               	movlw	0
  1569  04FD  07FB               	addwf	setFilas@i+1,f
  1570  04FE  2CC1               	goto	l1288
  1571  04FF                     l132:	
  1572  04FF  0008               	return
  1573  0500                     __end_of_setFilas:	
  1574                           
  1575                           	psect	text7
  1576  06A4                     __ptext7:	
  1577 ;; *************** function _shiftClock_Fil *****************
  1578 ;; Defined at:
  1579 ;;		line 13 in file "filas.c"
  1580 ;; Parameters:    Size  Location     Type
  1581 ;;		None
  1582 ;; Auto vars:     Size  Location     Type
  1583 ;;		None
  1584 ;; Return value:  Size  Location     Type
  1585 ;;                  1    wreg      void 
  1586 ;; Registers used:
  1587 ;;		None
  1588 ;; Tracked objects:
  1589 ;;		On entry : 0/0
  1590 ;;		On exit  : 0/0
  1591 ;;		Unchanged: 0/0
  1592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1593 ;;      Params:         0       0       0       0       0
  1594 ;;      Locals:         0       0       0       0       0
  1595 ;;      Temps:          0       0       0       0       0
  1596 ;;      Totals:         0       0       0       0       0
  1597 ;;Total ram usage:        0 bytes
  1598 ;; Hardware stack levels used:    1
  1599 ;; Hardware stack levels required when called:    1
  1600 ;; This function calls:
  1601 ;;		Nothing
  1602 ;; This function is called by:
  1603 ;;		_setFilas
  1604 ;; This function uses a non-reentrant model
  1605 ;;
  1606                           
  1607                           
  1608                           ;psect for function _shiftClock_Fil
  1609  06A4                     _shiftClock_Fil:	
  1610  06A4                     l1196:	
  1611                           ;incstack = 0
  1612                           ; Regs used in _shiftClock_Fil: []
  1613                           
  1614                           
  1615                           ;filas.c: 14:     PORTCbits.RC7 = 0;
  1616  06A4  1283               	bcf	3,5	;RP0=0, select bank0
  1617  06A5  1303               	bcf	3,6	;RP1=0, select bank0
  1618  06A6  1387               	bcf	7,7	;volatile
  1619                           
  1620                           ;filas.c: 15:     PORTCbits.RC7 = 1;
  1621  06A7  1787               	bsf	7,7	;volatile
  1622                           
  1623                           ;filas.c: 16:     PORTCbits.RC7 = 0;
  1624  06A8  1387               	bcf	7,7	;volatile
  1625  06A9                     l127:	
  1626  06A9  0008               	return
  1627  06AA                     __end_of_shiftClock_Fil:	
  1628                           
  1629                           	psect	text8
  1630  0500                     __ptext8:	
  1631 ;; *************** function _addToScreen *****************
  1632 ;; Defined at:
  1633 ;;		line 39 in file "screen.c"
  1634 ;; Parameters:    Size  Location     Type
  1635 ;;		None
  1636 ;; Auto vars:     Size  Location     Type
  1637 ;;  i               2    0[BANK0 ] int 
  1638 ;; Return value:  Size  Location     Type
  1639 ;;                  1    wreg      void 
  1640 ;; Registers used:
  1641 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1642 ;; Tracked objects:
  1643 ;;		On entry : 0/0
  1644 ;;		On exit  : 0/0
  1645 ;;		Unchanged: 0/0
  1646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1647 ;;      Params:         0       0       0       0       0
  1648 ;;      Locals:         0       2       0       0       0
  1649 ;;      Temps:          9       0       0       0       0
  1650 ;;      Totals:         9       2       0       0       0
  1651 ;;Total ram usage:       11 bytes
  1652 ;; Hardware stack levels used:    1
  1653 ;; Hardware stack levels required when called:    1
  1654 ;; This function calls:
  1655 ;;		Nothing
  1656 ;; This function is called by:
  1657 ;;		_updateScreen
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           
  1661                           
  1662                           ;psect for function _addToScreen
  1663  0500                     _addToScreen:	
  1664  0500                     l1308:	
  1665                           ;incstack = 0
  1666                           ; Regs used in _addToScreen: [wreg-fsr0h+status,2+status,0+btemp+1]
  1667                           
  1668                           
  1669                           ;screen.c: 40:     int i=0;
  1670  0500  1283               	bcf	3,5	;RP0=0, select bank0
  1671  0501  1303               	bcf	3,6	;RP1=0, select bank0
  1672  0502  01A0               	clrf	addToScreen@i
  1673  0503  01A1               	clrf	addToScreen@i+1
  1674                           
  1675                           ;screen.c: 41:     for(i=0; i<8; i++){
  1676  0504  01A0               	clrf	addToScreen@i
  1677  0505  01A1               	clrf	addToScreen@i+1
  1678  0506                     l1314:	
  1679                           
  1680                           ;screen.c: 42:         pantalla[i] = ficha[i] | fondo[i];
  1681  0506  1283               	bcf	3,5	;RP0=0, select bank0
  1682  0507  1303               	bcf	3,6	;RP1=0, select bank0
  1683  0508  0820               	movf	addToScreen@i,w
  1684  0509  00F2               	movwf	??_addToScreen
  1685  050A  0772               	addwf	??_addToScreen,w
  1686  050B  3EA0               	addlw	(low (_fondo| 0))& (0+255)
  1687  050C  0084               	movwf	4
  1688  050D  1383               	bcf	3,7	;select IRP bank1
  1689  050E  0800               	movf	0,w
  1690  050F  00F3               	movwf	??_addToScreen+1
  1691  0510  0A84               	incf	4,f
  1692  0511  0800               	movf	0,w
  1693  0512  00F4               	movwf	??_addToScreen+2
  1694  0513  0820               	movf	addToScreen@i,w
  1695  0514  00F5               	movwf	??_addToScreen+3
  1696  0515  0775               	addwf	??_addToScreen+3,w
  1697  0516  3E4D               	addlw	(low (_ficha| 0))& (0+255)
  1698  0517  0084               	movwf	4
  1699  0518  0800               	movf	0,w
  1700  0519  00F6               	movwf	??_addToScreen+4
  1701  051A  0A84               	incf	4,f
  1702  051B  0800               	movf	0,w
  1703  051C  00F7               	movwf	??_addToScreen+5
  1704  051D  0873               	movf	??_addToScreen+1,w
  1705  051E  0476               	iorwf	??_addToScreen+4,w
  1706  051F  00F8               	movwf	??_addToScreen+6
  1707  0520  0874               	movf	??_addToScreen+2,w
  1708  0521  0477               	iorwf	??_addToScreen+5,w
  1709  0522  00F9               	movwf	??_addToScreen+7
  1710  0523  0820               	movf	addToScreen@i,w
  1711  0524  00FA               	movwf	??_addToScreen+8
  1712  0525  077A               	addwf	??_addToScreen+8,w
  1713  0526  3EB0               	addlw	(low (_pantalla| 0))& (0+255)
  1714  0527  0084               	movwf	4
  1715  0528  0878               	movf	??_addToScreen+6,w
  1716  0529  0080               	movwf	0
  1717  052A  0A84               	incf	4,f
  1718  052B  0879               	movf	??_addToScreen+7,w
  1719  052C  0080               	movwf	0
  1720  052D                     l1316:	
  1721                           
  1722                           ;screen.c: 43:     }
  1723  052D  3001               	movlw	1
  1724  052E  07A0               	addwf	addToScreen@i,f
  1725  052F  1803               	skipnc
  1726  0530  0AA1               	incf	addToScreen@i+1,f
  1727  0531  3000               	movlw	0
  1728  0532  07A1               	addwf	addToScreen@i+1,f
  1729  0533                     l1318:	
  1730  0533  0821               	movf	addToScreen@i+1,w
  1731  0534  3A80               	xorlw	128
  1732  0535  00FF               	movwf	btemp+1
  1733  0536  3080               	movlw	128
  1734  0537  027F               	subwf	btemp+1,w
  1735  0538  1D03               	skipz
  1736  0539  2D3C               	goto	u855
  1737  053A  3008               	movlw	8
  1738  053B  0220               	subwf	addToScreen@i,w
  1739  053C                     u855:	
  1740  053C  1C03               	skipc
  1741  053D  2D3F               	goto	u851
  1742  053E  2D40               	goto	u850
  1743  053F                     u851:	
  1744  053F  2D06               	goto	l1314
  1745  0540                     u850:	
  1746  0540                     l182:	
  1747  0540  0008               	return
  1748  0541                     __end_of_addToScreen:	
  1749                           
  1750                           	psect	text9
  1751  0687                     __ptext9:	
  1752 ;; *************** function _srand *****************
  1753 ;; Defined at:
  1754 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  1755 ;; Parameters:    Size  Location     Type
  1756 ;;  x               2    2[COMMON] unsigned int 
  1757 ;; Auto vars:     Size  Location     Type
  1758 ;;		None
  1759 ;; Return value:  Size  Location     Type
  1760 ;;                  1    wreg      void 
  1761 ;; Registers used:
  1762 ;;		wreg
  1763 ;; Tracked objects:
  1764 ;;		On entry : 0/0
  1765 ;;		On exit  : 0/0
  1766 ;;		Unchanged: 0/0
  1767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1768 ;;      Params:         2       0       0       0       0
  1769 ;;      Locals:         0       0       0       0       0
  1770 ;;      Temps:          0       0       0       0       0
  1771 ;;      Totals:         2       0       0       0       0
  1772 ;;Total ram usage:        2 bytes
  1773 ;; Hardware stack levels used:    1
  1774 ;; Hardware stack levels required when called:    1
  1775 ;; This function calls:
  1776 ;;		Nothing
  1777 ;; This function is called by:
  1778 ;;		_main
  1779 ;; This function uses a non-reentrant model
  1780 ;;
  1781                           
  1782                           
  1783                           ;psect for function _srand
  1784  0687                     _srand:	
  1785  0687                     l1378:	
  1786                           ;incstack = 0
  1787                           ; Regs used in _srand: [wreg]
  1788                           
  1789  0687  0872               	movf	srand@x,w
  1790  0688  1283               	bcf	3,5	;RP0=0, select bank0
  1791  0689  1303               	bcf	3,6	;RP1=0, select bank0
  1792  068A  00DD               	movwf	_randx
  1793  068B  0873               	movf	srand@x+1,w
  1794  068C  00DE               	movwf	_randx+1
  1795  068D  01DF               	clrf	_randx+2
  1796  068E  01E0               	clrf	_randx+3
  1797  068F                     l729:	
  1798  068F  0008               	return
  1799  0690                     __end_of_srand:	
  1800                           
  1801                           	psect	text10
  1802  0661                     __ptext10:	
  1803 ;; *************** function _init_timer *****************
  1804 ;; Defined at:
  1805 ;;		line 59 in file "init.c"
  1806 ;; Parameters:    Size  Location     Type
  1807 ;;		None
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;		None
  1810 ;; Return value:  Size  Location     Type
  1811 ;;                  1    wreg      void 
  1812 ;; Registers used:
  1813 ;;		status,2
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 0/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1819 ;;      Params:         0       0       0       0       0
  1820 ;;      Locals:         0       0       0       0       0
  1821 ;;      Temps:          0       0       0       0       0
  1822 ;;      Totals:         0       0       0       0       0
  1823 ;;Total ram usage:        0 bytes
  1824 ;; Hardware stack levels used:    1
  1825 ;; Hardware stack levels required when called:    1
  1826 ;; This function calls:
  1827 ;;		Nothing
  1828 ;; This function is called by:
  1829 ;;		_main
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           
  1834                           ;psect for function _init_timer
  1835  0661                     _init_timer:	
  1836  0661                     l1360:	
  1837                           ;incstack = 0
  1838                           ; Regs used in _init_timer: [status,2]
  1839                           
  1840                           
  1841                           ;init.c: 61:     TMR0=0;
  1842  0661  1283               	bcf	3,5	;RP0=0, select bank0
  1843  0662  1303               	bcf	3,6	;RP1=0, select bank0
  1844  0663  0181               	clrf	1	;volatile
  1845  0664                     l1362:	
  1846                           
  1847                           ;init.c: 69:     INTCONbits.GIE = 1;
  1848  0664  178B               	bsf	11,7	;volatile
  1849  0665                     l1364:	
  1850                           
  1851                           ;init.c: 70:     INTCONbits.TMR0IE = 1;
  1852  0665  168B               	bsf	11,5	;volatile
  1853  0666                     l1366:	
  1854                           
  1855                           ;init.c: 71:     INTCONbits.TMR0IF = 0;
  1856  0666  110B               	bcf	11,2	;volatile
  1857  0667                     l1368:	
  1858                           
  1859                           ;init.c: 80:     OPTION_REGbits.PSA = 0;
  1860  0667  1683               	bsf	3,5	;RP0=1, select bank1
  1861  0668  1303               	bcf	3,6	;RP1=0, select bank1
  1862  0669  1181               	bcf	1,3	;volatile
  1863  066A                     l1370:	
  1864                           
  1865                           ;init.c: 81:     OPTION_REGbits.PS0 = 1;
  1866  066A  1401               	bsf	1,0	;volatile
  1867  066B                     l1372:	
  1868                           
  1869                           ;init.c: 82:     OPTION_REGbits.PS1 = 1;
  1870  066B  1481               	bsf	1,1	;volatile
  1871  066C                     l1374:	
  1872                           
  1873                           ;init.c: 83:     OPTION_REGbits.PS2 = 1;
  1874  066C  1501               	bsf	1,2	;volatile
  1875  066D                     l1376:	
  1876                           
  1877                           ;init.c: 84:     OPTION_REGbits.T0CS = 0;
  1878  066D  1281               	bcf	1,5	;volatile
  1879  066E                     l36:	
  1880  066E  0008               	return
  1881  066F                     __end_of_init_timer:	
  1882                           
  1883                           	psect	text11
  1884  0651                     __ptext11:	
  1885 ;; *************** function _init_pines *****************
  1886 ;; Defined at:
  1887 ;;		line 43 in file "init.c"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;		None
  1890 ;; Auto vars:     Size  Location     Type
  1891 ;;		None
  1892 ;; Return value:  Size  Location     Type
  1893 ;;                  1    wreg      void 
  1894 ;; Registers used:
  1895 ;;		status,2, status,0, pclath, cstack
  1896 ;; Tracked objects:
  1897 ;;		On entry : 0/0
  1898 ;;		On exit  : 0/0
  1899 ;;		Unchanged: 0/0
  1900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1901 ;;      Params:         0       0       0       0       0
  1902 ;;      Locals:         0       0       0       0       0
  1903 ;;      Temps:          0       0       0       0       0
  1904 ;;      Totals:         0       0       0       0       0
  1905 ;;Total ram usage:        0 bytes
  1906 ;; Hardware stack levels used:    1
  1907 ;; Hardware stack levels required when called:    2
  1908 ;; This function calls:
  1909 ;;		_init_pines_col
  1910 ;;		_init_pines_fil
  1911 ;;		_init_pines_in
  1912 ;; This function is called by:
  1913 ;;		_main
  1914 ;; This function uses a non-reentrant model
  1915 ;;
  1916                           
  1917                           
  1918                           ;psect for function _init_pines
  1919  0651                     _init_pines:	
  1920  0651                     l1358:	
  1921                           ;incstack = 0
  1922                           ; Regs used in _init_pines: [status,2+status,0+pclath+cstack]
  1923                           
  1924                           
  1925                           ;init.c: 45:     init_pines_fil();
  1926  0651  120A  118A  266F  120A  118A  	fcall	_init_pines_fil
  1927                           
  1928                           ;init.c: 46:     init_pines_col();
  1929  0656  120A  118A  263E  120A  118A  	fcall	_init_pines_col
  1930                           
  1931                           ;init.c: 47:     init_pines_in();
  1932  065B  120A  118A  267C  120A  118A  	fcall	_init_pines_in
  1933  0660                     l30:	
  1934  0660  0008               	return
  1935  0661                     __end_of_init_pines:	
  1936                           
  1937                           	psect	text12
  1938  067C                     __ptext12:	
  1939 ;; *************** function _init_pines_in *****************
  1940 ;; Defined at:
  1941 ;;		line 4 in file "init.c"
  1942 ;; Parameters:    Size  Location     Type
  1943 ;;		None
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;		None
  1946 ;; Return value:  Size  Location     Type
  1947 ;;                  1    wreg      void 
  1948 ;; Registers used:
  1949 ;;		None
  1950 ;; Tracked objects:
  1951 ;;		On entry : 0/0
  1952 ;;		On exit  : 0/0
  1953 ;;		Unchanged: 0/0
  1954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1955 ;;      Params:         0       0       0       0       0
  1956 ;;      Locals:         0       0       0       0       0
  1957 ;;      Temps:          0       0       0       0       0
  1958 ;;      Totals:         0       0       0       0       0
  1959 ;;Total ram usage:        0 bytes
  1960 ;; Hardware stack levels used:    1
  1961 ;; Hardware stack levels required when called:    1
  1962 ;; This function calls:
  1963 ;;		Nothing
  1964 ;; This function is called by:
  1965 ;;		_init_pines
  1966 ;; This function uses a non-reentrant model
  1967 ;;
  1968                           
  1969                           
  1970                           ;psect for function _init_pines_in
  1971  067C                     _init_pines_in:	
  1972  067C                     l1216:	
  1973                           ;incstack = 0
  1974                           ; Regs used in _init_pines_in: []
  1975                           
  1976                           
  1977                           ;init.c: 6:     TRISBbits.TRISB5 = 1;
  1978  067C  1683               	bsf	3,5	;RP0=1, select bank1
  1979  067D  1303               	bcf	3,6	;RP1=0, select bank1
  1980  067E  1686               	bsf	6,5	;volatile
  1981                           
  1982                           ;init.c: 7:     TRISBbits.TRISB4 = 1;
  1983  067F  1606               	bsf	6,4	;volatile
  1984                           
  1985                           ;init.c: 9:     TRISBbits.TRISB6 = 0;
  1986  0680  1306               	bcf	6,6	;volatile
  1987                           
  1988                           ;init.c: 10:     TRISBbits.TRISB7 = 0;
  1989  0681  1386               	bcf	6,7	;volatile
  1990                           
  1991                           ;init.c: 12:     PORTBbits.RB6 = 0;
  1992  0682  1283               	bcf	3,5	;RP0=0, select bank0
  1993  0683  1303               	bcf	3,6	;RP1=0, select bank0
  1994  0684  1306               	bcf	6,6	;volatile
  1995                           
  1996                           ;init.c: 13:     PORTBbits.RB7 = 0;
  1997  0685  1386               	bcf	6,7	;volatile
  1998  0686                     l21:	
  1999  0686  0008               	return
  2000  0687                     __end_of_init_pines_in:	
  2001                           
  2002                           	psect	text13
  2003  066F                     __ptext13:	
  2004 ;; *************** function _init_pines_fil *****************
  2005 ;; Defined at:
  2006 ;;		line 16 in file "init.c"
  2007 ;; Parameters:    Size  Location     Type
  2008 ;;		None
  2009 ;; Auto vars:     Size  Location     Type
  2010 ;;		None
  2011 ;; Return value:  Size  Location     Type
  2012 ;;                  1    wreg      void 
  2013 ;; Registers used:
  2014 ;;		None
  2015 ;; Tracked objects:
  2016 ;;		On entry : 0/0
  2017 ;;		On exit  : 0/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2020 ;;      Params:         0       0       0       0       0
  2021 ;;      Locals:         0       0       0       0       0
  2022 ;;      Temps:          0       0       0       0       0
  2023 ;;      Totals:         0       0       0       0       0
  2024 ;;Total ram usage:        0 bytes
  2025 ;; Hardware stack levels used:    1
  2026 ;; Hardware stack levels required when called:    1
  2027 ;; This function calls:
  2028 ;;		Nothing
  2029 ;; This function is called by:
  2030 ;;		_init_pines
  2031 ;; This function uses a non-reentrant model
  2032 ;;
  2033                           
  2034                           
  2035                           ;psect for function _init_pines_fil
  2036  066F                     _init_pines_fil:	
  2037  066F                     l1218:	
  2038                           ;incstack = 0
  2039                           ; Regs used in _init_pines_fil: []
  2040                           
  2041                           
  2042                           ;init.c: 18:     TRISCbits.TRISC4 = 0;
  2043  066F  1683               	bsf	3,5	;RP0=1, select bank1
  2044  0670  1303               	bcf	3,6	;RP1=0, select bank1
  2045  0671  1207               	bcf	7,4	;volatile
  2046                           
  2047                           ;init.c: 19:     TRISCbits.TRISC5 = 0;
  2048  0672  1287               	bcf	7,5	;volatile
  2049                           
  2050                           ;init.c: 20:     TRISCbits.TRISC6 = 0;
  2051  0673  1307               	bcf	7,6	;volatile
  2052                           
  2053                           ;init.c: 21:     TRISCbits.TRISC7 = 0;
  2054  0674  1387               	bcf	7,7	;volatile
  2055                           
  2056                           ;init.c: 23:     PORTCbits.RC4 = 0;
  2057  0675  1283               	bcf	3,5	;RP0=0, select bank0
  2058  0676  1303               	bcf	3,6	;RP1=0, select bank0
  2059  0677  1207               	bcf	7,4	;volatile
  2060                           
  2061                           ;init.c: 24:     PORTCbits.RC5 = 0;
  2062  0678  1287               	bcf	7,5	;volatile
  2063                           
  2064                           ;init.c: 25:     PORTCbits.RC6 = 0;
  2065  0679  1307               	bcf	7,6	;volatile
  2066                           
  2067                           ;init.c: 26:     PORTCbits.RC7 = 0;
  2068  067A  1387               	bcf	7,7	;volatile
  2069  067B                     l24:	
  2070  067B  0008               	return
  2071  067C                     __end_of_init_pines_fil:	
  2072                           
  2073                           	psect	text14
  2074  063E                     __ptext14:	
  2075 ;; *************** function _init_pines_col *****************
  2076 ;; Defined at:
  2077 ;;		line 29 in file "init.c"
  2078 ;; Parameters:    Size  Location     Type
  2079 ;;		None
  2080 ;; Auto vars:     Size  Location     Type
  2081 ;;		None
  2082 ;; Return value:  Size  Location     Type
  2083 ;;                  1    wreg      void 
  2084 ;; Registers used:
  2085 ;;		None
  2086 ;; Tracked objects:
  2087 ;;		On entry : 0/0
  2088 ;;		On exit  : 0/0
  2089 ;;		Unchanged: 0/0
  2090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2091 ;;      Params:         0       0       0       0       0
  2092 ;;      Locals:         0       0       0       0       0
  2093 ;;      Temps:          0       0       0       0       0
  2094 ;;      Totals:         0       0       0       0       0
  2095 ;;Total ram usage:        0 bytes
  2096 ;; Hardware stack levels used:    1
  2097 ;; Hardware stack levels required when called:    1
  2098 ;; This function calls:
  2099 ;;		Nothing
  2100 ;; This function is called by:
  2101 ;;		_init_pines
  2102 ;; This function uses a non-reentrant model
  2103 ;;
  2104                           
  2105                           
  2106                           ;psect for function _init_pines_col
  2107  063E                     _init_pines_col:	
  2108  063E                     l1220:	
  2109                           ;incstack = 0
  2110                           ; Regs used in _init_pines_col: []
  2111                           
  2112                           
  2113                           ;init.c: 30:     TRISBbits.TRISB0 = 0;
  2114  063E  1683               	bsf	3,5	;RP0=1, select bank1
  2115  063F  1303               	bcf	3,6	;RP1=0, select bank1
  2116  0640  1006               	bcf	6,0	;volatile
  2117                           
  2118                           ;init.c: 31:     PORTBbits.RB0 = 0;
  2119  0641  1283               	bcf	3,5	;RP0=0, select bank0
  2120  0642  1303               	bcf	3,6	;RP1=0, select bank0
  2121  0643  1006               	bcf	6,0	;volatile
  2122                           
  2123                           ;init.c: 33:     TRISDbits.TRISD4 = 0;
  2124  0644  1683               	bsf	3,5	;RP0=1, select bank1
  2125  0645  1303               	bcf	3,6	;RP1=0, select bank1
  2126  0646  1208               	bcf	8,4	;volatile
  2127                           
  2128                           ;init.c: 34:     TRISDbits.TRISD5 = 0;
  2129  0647  1288               	bcf	8,5	;volatile
  2130                           
  2131                           ;init.c: 35:     TRISDbits.TRISD6 = 0;
  2132  0648  1308               	bcf	8,6	;volatile
  2133                           
  2134                           ;init.c: 36:     TRISDbits.TRISD7 = 0;
  2135  0649  1388               	bcf	8,7	;volatile
  2136                           
  2137                           ;init.c: 38:     PORTDbits.RD4 = 0;
  2138  064A  1283               	bcf	3,5	;RP0=0, select bank0
  2139  064B  1303               	bcf	3,6	;RP1=0, select bank0
  2140  064C  1208               	bcf	8,4	;volatile
  2141                           
  2142                           ;init.c: 39:     PORTDbits.RD5 = 0;
  2143  064D  1288               	bcf	8,5	;volatile
  2144                           
  2145                           ;init.c: 40:     PORTDbits.RD6 = 0;
  2146  064E  1308               	bcf	8,6	;volatile
  2147                           
  2148                           ;init.c: 41:     PORTDbits.RD7 = 0;
  2149  064F  1388               	bcf	8,7	;volatile
  2150  0650                     l27:	
  2151  0650  0008               	return
  2152  0651                     __end_of_init_pines_col:	
  2153                           
  2154                           	psect	text15
  2155  003F                     __ptext15:	
  2156 ;; *************** function _checkCount *****************
  2157 ;; Defined at:
  2158 ;;		line 91 in file "mainsource.c"
  2159 ;; Parameters:    Size  Location     Type
  2160 ;;		None
  2161 ;; Auto vars:     Size  Location     Type
  2162 ;;  i               2   27[BANK0 ] int 
  2163 ;;  j               2   25[BANK0 ] int 
  2164 ;; Return value:  Size  Location     Type
  2165 ;;                  1    wreg      void 
  2166 ;; Registers used:
  2167 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2168 ;; Tracked objects:
  2169 ;;		On entry : 0/0
  2170 ;;		On exit  : 0/0
  2171 ;;		Unchanged: 0/0
  2172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2173 ;;      Params:         0       0       0       0       0
  2174 ;;      Locals:         0       4       0       0       0
  2175 ;;      Temps:          0       8       0       0       0
  2176 ;;      Totals:         0      12       0       0       0
  2177 ;;Total ram usage:       12 bytes
  2178 ;; Hardware stack levels used:    1
  2179 ;; Hardware stack levels required when called:    4
  2180 ;; This function calls:
  2181 ;;		___awmod
  2182 ;;		_drawBground
  2183 ;;		_drawFigure
  2184 ;;		_leerEntradas
  2185 ;;		_memset
  2186 ;;		_rand
  2187 ;; This function is called by:
  2188 ;;		_main
  2189 ;; This function uses a non-reentrant model
  2190 ;;
  2191                           
  2192                           
  2193                           ;psect for function _checkCount
  2194  003F                     _checkCount:	
  2195  003F                     l1380:	
  2196                           ;incstack = 0
  2197                           ; Regs used in _checkCount: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2198                           
  2199                           
  2200                           ;mainsource.c: 92:     if(con.check_count == 1){
  2201  003F  1283               	bcf	3,5	;RP0=0, select bank0
  2202  0040  1303               	bcf	3,6	;RP1=0, select bank0
  2203  0041  0348               	decf	_con+6,w
  2204  0042  1D03               	btfss	3,2
  2205  0043  2845               	goto	u951
  2206  0044  2846               	goto	u950
  2207  0045                     u951:	
  2208  0045  29C8               	goto	l110
  2209  0046                     u950:	
  2210  0046                     l1382:	
  2211  0046  01B9               	clrf	checkCount@j
  2212  0047  01BA               	clrf	checkCount@j+1
  2213                           
  2214                           ;mainsource.c: 94:         con.check_count = 0;
  2215  0048  01C8               	clrf	_con+6
  2216  0049                     l1384:	
  2217                           
  2218                           ;mainsource.c: 96:         leerEntradas();
  2219  0049  120A  118A  21C9  120A  118A  	fcall	_leerEntradas
  2220  004E                     l1386:	
  2221                           
  2222                           ;mainsource.c: 99:         if(timerCount >= 15 ){
  2223  004E  1283               	bcf	3,5	;RP0=0, select bank0
  2224  004F  1303               	bcf	3,6	;RP1=0, select bank0
  2225  0050  084C               	movf	_timerCount+3,w
  2226  0051  1D03               	btfss	3,2
  2227  0052  2861               	goto	u960
  2228  0053  084B               	movf	_timerCount+2,w
  2229  0054  1D03               	btfss	3,2
  2230  0055  2861               	goto	u960
  2231  0056  084A               	movf	_timerCount+1,w
  2232  0057  1D03               	btfss	3,2
  2233  0058  2861               	goto	u960
  2234  0059  300F               	movlw	15
  2235  005A  0249               	subwf	_timerCount,w
  2236  005B  1D03               	skipz
  2237  005C  285D               	goto	u963
  2238  005D                     u963:	
  2239  005D  1C03               	btfss	3,0
  2240  005E  2860               	goto	u961
  2241  005F  2861               	goto	u960
  2242  0060                     u961:	
  2243  0060  29C8               	goto	l110
  2244  0061                     u960:	
  2245  0061                     l1388:	
  2246                           
  2247                           ;mainsource.c: 100:             timerCount = 0;
  2248  0061  3000               	movlw	0
  2249  0062  00CC               	movwf	_timerCount+3
  2250  0063  3000               	movlw	0
  2251  0064  00CB               	movwf	_timerCount+2
  2252  0065  3000               	movlw	0
  2253  0066  00CA               	movwf	_timerCount+1
  2254  0067  3000               	movlw	0
  2255  0068  00C9               	movwf	_timerCount
  2256  0069                     l1390:	
  2257                           
  2258                           ;mainsource.c: 102:             PORTBbits.RB0 = con.led;
  2259  0069  0C42               	rrf	_con,w
  2260  006A  1C03               	skipc
  2261  006B  1006               	bcf	6,0	;volatile
  2262  006C  1803               	skipnc
  2263  006D  1406               	bsf	6,0	;volatile
  2264  006E                     l1392:	
  2265                           
  2266                           ;mainsource.c: 103:             con.led= ~con.led;
  2267  006E  09C2               	comf	_con,f
  2268  006F                     l1394:	
  2269                           
  2270                           ;mainsource.c: 104:             con.ficha_Vpos--;
  2271  006F  3001               	movlw	1
  2272  0070  02C3               	subwf	_con+1,f
  2273  0071                     l1396:	
  2274                           
  2275                           ;mainsource.c: 109:             if(con.ficha_Vpos==0){
  2276  0071  0843               	movf	_con+1,w
  2277  0072  1D03               	btfss	3,2
  2278  0073  2875               	goto	u971
  2279  0074  2876               	goto	u970
  2280  0075                     u971:	
  2281  0075  289B               	goto	l1404
  2282  0076                     u970:	
  2283  0076                     l1398:	
  2284                           
  2285                           ;mainsource.c: 110:                 drawBground();
  2286  0076  120A  118A  2541  120A  118A  	fcall	_drawBground
  2287  007B                     l1400:	
  2288                           
  2289                           ;mainsource.c: 111:                 con.ficha_Vpos = 16;
  2290  007B  3010               	movlw	16
  2291  007C  1283               	bcf	3,5	;RP0=0, select bank0
  2292  007D  1303               	bcf	3,6	;RP1=0, select bank0
  2293  007E  00B1               	movwf	??_checkCount
  2294  007F  0831               	movf	??_checkCount,w
  2295  0080  00C3               	movwf	_con+1
  2296  0081                     l1402:	
  2297                           
  2298                           ;mainsource.c: 112:                 con.ficha_actual = rand() % 7;
  2299  0081  3007               	movlw	7
  2300  0082  00AB               	movwf	___awmod@divisor
  2301  0083  3000               	movlw	0
  2302  0084  00AC               	movwf	___awmod@divisor+1
  2303  0085  120A  118A  2476  120A  118A  	fcall	_rand
  2304  008A  1283               	bcf	3,5	;RP0=0, select bank0
  2305  008B  1303               	bcf	3,6	;RP1=0, select bank0
  2306  008C  0825               	movf	?_rand+1,w
  2307  008D  00AE               	movwf	___awmod@dividend+1
  2308  008E  0824               	movf	?_rand,w
  2309  008F  00AD               	movwf	___awmod@dividend
  2310  0090  120A  118A  2387  120A  118A  	fcall	___awmod
  2311  0095  1283               	bcf	3,5	;RP0=0, select bank0
  2312  0096  1303               	bcf	3,6	;RP1=0, select bank0
  2313  0097  082B               	movf	?___awmod,w
  2314  0098  00B1               	movwf	??_checkCount
  2315  0099  0831               	movf	??_checkCount,w
  2316  009A  00C5               	movwf	_con+3
  2317  009B                     l1404:	
  2318                           
  2319                           ;mainsource.c: 120:             for(i=con.ficha_Hpos; i<(con.ficha_Hpos+4); i++){
  2320  009B  0844               	movf	_con+2,w
  2321  009C  00B1               	movwf	??_checkCount
  2322  009D  01B2               	clrf	??_checkCount+1
  2323  009E  0831               	movf	??_checkCount,w
  2324  009F  00BB               	movwf	checkCount@i
  2325  00A0  0832               	movf	??_checkCount+1,w
  2326  00A1  00BC               	movwf	checkCount@i+1
  2327  00A2  28F5               	goto	l98
  2328  00A3                     l1406:	
  2329                           
  2330                           ;mainsource.c: 121:                 if((ficha[i]>>1 & fondo[i]) != 0){
  2331  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  2332  00A4  1303               	bcf	3,6	;RP1=0, select bank0
  2333  00A5  083B               	movf	checkCount@i,w
  2334  00A6  00B1               	movwf	??_checkCount
  2335  00A7  0731               	addwf	??_checkCount,w
  2336  00A8  3EA0               	addlw	(low (_fondo| 0))& (0+255)
  2337  00A9  0084               	movwf	4
  2338  00AA  1383               	bcf	3,7	;select IRP bank1
  2339  00AB  0800               	movf	0,w
  2340  00AC  00B2               	movwf	??_checkCount+1
  2341  00AD  0A84               	incf	4,f
  2342  00AE  0800               	movf	0,w
  2343  00AF  00B3               	movwf	??_checkCount+2
  2344  00B0  083B               	movf	checkCount@i,w
  2345  00B1  00B4               	movwf	??_checkCount+3
  2346  00B2  0734               	addwf	??_checkCount+3,w
  2347  00B3  3E4D               	addlw	(low (_ficha| 0))& (0+255)
  2348  00B4  0084               	movwf	4
  2349  00B5  0800               	movf	0,w
  2350  00B6  00B5               	movwf	??_checkCount+4
  2351  00B7  0A84               	incf	4,f
  2352  00B8  0800               	movf	0,w
  2353  00B9  00B6               	movwf	??_checkCount+5
  2354  00BA  1003               	clrc
  2355  00BB  0CB6               	rrf	??_checkCount+5,f
  2356  00BC  0CB5               	rrf	??_checkCount+4,f
  2357  00BD  0832               	movf	??_checkCount+1,w
  2358  00BE  0535               	andwf	??_checkCount+4,w
  2359  00BF  00B7               	movwf	??_checkCount+6
  2360  00C0  0833               	movf	??_checkCount+2,w
  2361  00C1  0536               	andwf	??_checkCount+5,w
  2362  00C2  00B8               	movwf	??_checkCount+7
  2363  00C3  0837               	movf	??_checkCount+6,w
  2364  00C4  0438               	iorwf	??_checkCount+7,w
  2365  00C5  1903               	btfsc	3,2
  2366  00C6  28C8               	goto	u981
  2367  00C7  28C9               	goto	u980
  2368  00C8                     u981:	
  2369  00C8  28EF               	goto	l1414
  2370  00C9                     u980:	
  2371  00C9                     l1408:	
  2372                           
  2373                           ;mainsource.c: 122:                     drawBground();
  2374  00C9  120A  118A  2541  120A  118A  	fcall	_drawBground
  2375  00CE                     l1410:	
  2376                           
  2377                           ;mainsource.c: 123:                     con.ficha_Vpos = 16;
  2378  00CE  3010               	movlw	16
  2379  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  2380  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  2381  00D1  00B1               	movwf	??_checkCount
  2382  00D2  0831               	movf	??_checkCount,w
  2383  00D3  00C3               	movwf	_con+1
  2384  00D4                     l1412:	
  2385                           
  2386                           ;mainsource.c: 124:                     con.ficha_actual = rand() % 7;
  2387  00D4  3007               	movlw	7
  2388  00D5  00AB               	movwf	___awmod@divisor
  2389  00D6  3000               	movlw	0
  2390  00D7  00AC               	movwf	___awmod@divisor+1
  2391  00D8  120A  118A  2476  120A  118A  	fcall	_rand
  2392  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  2393  00DE  1303               	bcf	3,6	;RP1=0, select bank0
  2394  00DF  0825               	movf	?_rand+1,w
  2395  00E0  00AE               	movwf	___awmod@dividend+1
  2396  00E1  0824               	movf	?_rand,w
  2397  00E2  00AD               	movwf	___awmod@dividend
  2398  00E3  120A  118A  2387  120A  118A  	fcall	___awmod
  2399  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  2400  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  2401  00EA  082B               	movf	?___awmod,w
  2402  00EB  00B1               	movwf	??_checkCount
  2403  00EC  0831               	movf	??_checkCount,w
  2404  00ED  00C5               	movwf	_con+3
  2405                           
  2406                           ;mainsource.c: 125:                     break;
  2407  00EE  290A               	goto	l1416
  2408  00EF                     l1414:	
  2409                           
  2410                           ;mainsource.c: 127:             }
  2411  00EF  3001               	movlw	1
  2412  00F0  07BB               	addwf	checkCount@i,f
  2413  00F1  1803               	skipnc
  2414  00F2  0ABC               	incf	checkCount@i+1,f
  2415  00F3  3000               	movlw	0
  2416  00F4  07BC               	addwf	checkCount@i+1,f
  2417  00F5                     l98:	
  2418  00F5  0844               	movf	_con+2,w
  2419  00F6  3E04               	addlw	4
  2420  00F7  00B1               	movwf	??_checkCount
  2421  00F8  3000               	movlw	0
  2422  00F9  1803               	skipnc
  2423  00FA  3001               	movlw	1
  2424  00FB  00B2               	movwf	??_checkCount+1
  2425  00FC  083C               	movf	checkCount@i+1,w
  2426  00FD  3A80               	xorlw	128
  2427  00FE  00B3               	movwf	??_checkCount+2
  2428  00FF  0832               	movf	??_checkCount+1,w
  2429  0100  3A80               	xorlw	128
  2430  0101  0233               	subwf	??_checkCount+2,w
  2431  0102  1D03               	skipz
  2432  0103  2906               	goto	u995
  2433  0104  0831               	movf	??_checkCount,w
  2434  0105  023B               	subwf	checkCount@i,w
  2435  0106                     u995:	
  2436  0106  1C03               	skipc
  2437  0107  2909               	goto	u991
  2438  0108  290A               	goto	u990
  2439  0109                     u991:	
  2440  0109  28A3               	goto	l1406
  2441  010A                     u990:	
  2442  010A                     l1416:	
  2443                           
  2444                           ;mainsource.c: 131:             drawFigure();
  2445  010A  120A  118A  2278  120A  118A  	fcall	_drawFigure
  2446  010F                     l1418:	
  2447                           
  2448                           ;mainsource.c: 137:             for(i=0; i<8; i++){
  2449  010F  1283               	bcf	3,5	;RP0=0, select bank0
  2450  0110  1303               	bcf	3,6	;RP1=0, select bank0
  2451  0111  01BB               	clrf	checkCount@i
  2452  0112  01BC               	clrf	checkCount@i+1
  2453  0113                     l1424:	
  2454                           
  2455                           ;mainsource.c: 138:                 if((fondo[i] & 0x8000) != 0){
  2456  0113  1283               	bcf	3,5	;RP0=0, select bank0
  2457  0114  1303               	bcf	3,6	;RP1=0, select bank0
  2458  0115  083B               	movf	checkCount@i,w
  2459  0116  00B1               	movwf	??_checkCount
  2460  0117  0731               	addwf	??_checkCount,w
  2461  0118  3EA0               	addlw	(low (_fondo| 0))& (0+255)
  2462  0119  0084               	movwf	4
  2463  011A  1383               	bcf	3,7	;select IRP bank1
  2464  011B  0800               	movf	0,w
  2465  011C  00B2               	movwf	??_checkCount+1
  2466  011D  0A84               	incf	4,f
  2467  011E  0800               	movf	0,w
  2468  011F  00B3               	movwf	??_checkCount+2
  2469  0120  1FB3               	btfss	??_checkCount+2,7
  2470  0121  2923               	goto	u1001
  2471  0122  2924               	goto	u1000
  2472  0123                     u1001:	
  2473  0123  295F               	goto	l1432
  2474  0124                     u1000:	
  2475  0124                     l1426:	
  2476                           
  2477                           ;mainsource.c: 139:                     memset(ficha, 0, sizeof(ficha));
  2478  0124  3000               	movlw	0
  2479  0125  00F2               	movwf	memset@c
  2480  0126  00F3               	movwf	memset@c+1
  2481  0127  3010               	movlw	16
  2482  0128  00F4               	movwf	memset@n
  2483  0129  3000               	movlw	0
  2484  012A  00F5               	movwf	memset@n+1
  2485  012B  304D               	movlw	(low (_ficha| 0))& (0+255)
  2486  012C  120A  118A  25EF  120A  118A  	fcall	_memset
  2487                           
  2488                           ;mainsource.c: 140:                     memset(fondo, 0, sizeof(fondo));
  2489  0131  3000               	movlw	0
  2490  0132  00F2               	movwf	memset@c
  2491  0133  00F3               	movwf	memset@c+1
  2492  0134  3010               	movlw	16
  2493  0135  00F4               	movwf	memset@n
  2494  0136  3000               	movlw	0
  2495  0137  00F5               	movwf	memset@n+1
  2496  0138  30A0               	movlw	(low (_fondo| 0))& (0+255)
  2497  0139  120A  118A  25EF  120A  118A  	fcall	_memset
  2498  013E                     l1428:	
  2499                           
  2500                           ;mainsource.c: 141:                     con.ficha_Vpos = 16;
  2501  013E  3010               	movlw	16
  2502  013F  1283               	bcf	3,5	;RP0=0, select bank0
  2503  0140  1303               	bcf	3,6	;RP1=0, select bank0
  2504  0141  00B1               	movwf	??_checkCount
  2505  0142  0831               	movf	??_checkCount,w
  2506  0143  00C3               	movwf	_con+1
  2507  0144                     l1430:	
  2508                           
  2509                           ;mainsource.c: 142:                     con.ficha_actual = rand() % 7;
  2510  0144  3007               	movlw	7
  2511  0145  00AB               	movwf	___awmod@divisor
  2512  0146  3000               	movlw	0
  2513  0147  00AC               	movwf	___awmod@divisor+1
  2514  0148  120A  118A  2476  120A  118A  	fcall	_rand
  2515  014D  1283               	bcf	3,5	;RP0=0, select bank0
  2516  014E  1303               	bcf	3,6	;RP1=0, select bank0
  2517  014F  0825               	movf	?_rand+1,w
  2518  0150  00AE               	movwf	___awmod@dividend+1
  2519  0151  0824               	movf	?_rand,w
  2520  0152  00AD               	movwf	___awmod@dividend
  2521  0153  120A  118A  2387  120A  118A  	fcall	___awmod
  2522  0158  1283               	bcf	3,5	;RP0=0, select bank0
  2523  0159  1303               	bcf	3,6	;RP1=0, select bank0
  2524  015A  082B               	movf	?___awmod,w
  2525  015B  00B1               	movwf	??_checkCount
  2526  015C  0831               	movf	??_checkCount,w
  2527  015D  00C5               	movwf	_con+3
  2528                           
  2529                           ;mainsource.c: 143:                     break;
  2530  015E  2972               	goto	l1436
  2531  015F                     l1432:	
  2532                           
  2533                           ;mainsource.c: 146:             }
  2534  015F  3001               	movlw	1
  2535  0160  07BB               	addwf	checkCount@i,f
  2536  0161  1803               	skipnc
  2537  0162  0ABC               	incf	checkCount@i+1,f
  2538  0163  3000               	movlw	0
  2539  0164  07BC               	addwf	checkCount@i+1,f
  2540  0165                     l1434:	
  2541  0165  083C               	movf	checkCount@i+1,w
  2542  0166  3A80               	xorlw	128
  2543  0167  00FF               	movwf	btemp+1
  2544  0168  3080               	movlw	128
  2545  0169  027F               	subwf	btemp+1,w
  2546  016A  1D03               	skipz
  2547  016B  296E               	goto	u1015
  2548  016C  3008               	movlw	8
  2549  016D  023B               	subwf	checkCount@i,w
  2550  016E                     u1015:	
  2551  016E  1C03               	skipc
  2552  016F  2971               	goto	u1011
  2553  0170  2972               	goto	u1010
  2554  0171                     u1011:	
  2555  0171  2913               	goto	l1424
  2556  0172                     u1010:	
  2557  0172                     l1436:	
  2558                           
  2559                           ;mainsource.c: 152:             for (i=0; i<16; i++){
  2560  0172  1283               	bcf	3,5	;RP0=0, select bank0
  2561  0173  1303               	bcf	3,6	;RP1=0, select bank0
  2562  0174  01BB               	clrf	checkCount@i
  2563  0175  01BC               	clrf	checkCount@i+1
  2564  0176                     l1442:	
  2565                           
  2566                           ;mainsource.c: 153:                 for(j=0; j<8; j++){
  2567  0176  1283               	bcf	3,5	;RP0=0, select bank0
  2568  0177  1303               	bcf	3,6	;RP1=0, select bank0
  2569  0178  01B9               	clrf	checkCount@j
  2570  0179  01BA               	clrf	checkCount@j+1
  2571  017A                     l1448:	
  2572                           
  2573                           ;mainsource.c: 154:                    if( (fondo[i] & (1<<j)) == 0){
  2574  017A  1283               	bcf	3,5	;RP0=0, select bank0
  2575  017B  1303               	bcf	3,6	;RP1=0, select bank0
  2576  017C  083B               	movf	checkCount@i,w
  2577  017D  00B1               	movwf	??_checkCount
  2578  017E  0731               	addwf	??_checkCount,w
  2579  017F  3EA0               	addlw	(low (_fondo| 0))& (0+255)
  2580  0180  0084               	movwf	4
  2581  0181  1383               	bcf	3,7	;select IRP bank1
  2582  0182  0800               	movf	0,w
  2583  0183  00B2               	movwf	??_checkCount+1
  2584  0184  0A84               	incf	4,f
  2585  0185  0800               	movf	0,w
  2586  0186  00B3               	movwf	??_checkCount+2
  2587  0187  0A39               	incf	checkCount@j,w
  2588  0188  00B4               	movwf	??_checkCount+3
  2589  0189  3001               	movlw	1
  2590  018A  00B5               	movwf	??_checkCount+4
  2591  018B  3000               	movlw	0
  2592  018C  00B6               	movwf	??_checkCount+5
  2593  018D  2991               	goto	u1024
  2594  018E                     u1025:	
  2595  018E  1003               	clrc
  2596  018F  0DB5               	rlf	??_checkCount+4,f
  2597  0190  0DB6               	rlf	??_checkCount+5,f
  2598  0191                     u1024:	
  2599  0191  0BB4               	decfsz	??_checkCount+3,f
  2600  0192  298E               	goto	u1025
  2601  0193  0832               	movf	??_checkCount+1,w
  2602  0194  0535               	andwf	??_checkCount+4,w
  2603  0195  00B7               	movwf	??_checkCount+6
  2604  0196  0833               	movf	??_checkCount+2,w
  2605  0197  0536               	andwf	??_checkCount+5,w
  2606  0198  00B8               	movwf	??_checkCount+7
  2607  0199  0837               	movf	??_checkCount+6,w
  2608  019A  0438               	iorwf	??_checkCount+7,w
  2609  019B  1D03               	btfss	3,2
  2610  019C  299E               	goto	u1031
  2611  019D  299F               	goto	u1030
  2612  019E                     u1031:	
  2613  019E  29A0               	goto	l1452
  2614  019F                     u1030:	
  2615  019F  29B3               	goto	l1456
  2616  01A0                     l1452:	
  2617                           
  2618                           ;mainsource.c: 157:                 }
  2619  01A0  3001               	movlw	1
  2620  01A1  07B9               	addwf	checkCount@j,f
  2621  01A2  1803               	skipnc
  2622  01A3  0ABA               	incf	checkCount@j+1,f
  2623  01A4  3000               	movlw	0
  2624  01A5  07BA               	addwf	checkCount@j+1,f
  2625  01A6                     l1454:	
  2626  01A6  083A               	movf	checkCount@j+1,w
  2627  01A7  3A80               	xorlw	128
  2628  01A8  00FF               	movwf	btemp+1
  2629  01A9  3080               	movlw	128
  2630  01AA  027F               	subwf	btemp+1,w
  2631  01AB  1D03               	skipz
  2632  01AC  29AF               	goto	u1045
  2633  01AD  3008               	movlw	8
  2634  01AE  0239               	subwf	checkCount@j,w
  2635  01AF                     u1045:	
  2636  01AF  1C03               	skipc
  2637  01B0  29B2               	goto	u1041
  2638  01B1  29B3               	goto	u1040
  2639  01B2                     u1041:	
  2640  01B2  297A               	goto	l1448
  2641  01B3                     u1040:	
  2642  01B3                     l1456:	
  2643                           
  2644                           ;mainsource.c: 159:             }
  2645  01B3  3001               	movlw	1
  2646  01B4  1283               	bcf	3,5	;RP0=0, select bank0
  2647  01B5  1303               	bcf	3,6	;RP1=0, select bank0
  2648  01B6  07BB               	addwf	checkCount@i,f
  2649  01B7  1803               	skipnc
  2650  01B8  0ABC               	incf	checkCount@i+1,f
  2651  01B9  3000               	movlw	0
  2652  01BA  07BC               	addwf	checkCount@i+1,f
  2653  01BB                     l1458:	
  2654  01BB  083C               	movf	checkCount@i+1,w
  2655  01BC  3A80               	xorlw	128
  2656  01BD  00FF               	movwf	btemp+1
  2657  01BE  3080               	movlw	128
  2658  01BF  027F               	subwf	btemp+1,w
  2659  01C0  1D03               	skipz
  2660  01C1  29C4               	goto	u1055
  2661  01C2  3010               	movlw	16
  2662  01C3  023B               	subwf	checkCount@i,w
  2663  01C4                     u1055:	
  2664  01C4  1C03               	skipc
  2665  01C5  29C7               	goto	u1051
  2666  01C6  29C8               	goto	u1050
  2667  01C7                     u1051:	
  2668  01C7  2976               	goto	l1442
  2669  01C8                     u1050:	
  2670  01C8                     l110:	
  2671  01C8  0008               	return
  2672  01C9                     __end_of_checkCount:	
  2673                           
  2674                           	psect	text16
  2675  0476                     __ptext16:	
  2676 ;; *************** function _rand *****************
  2677 ;; Defined at:
  2678 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  2679 ;; Parameters:    Size  Location     Type
  2680 ;;		None
  2681 ;; Auto vars:     Size  Location     Type
  2682 ;;		None
  2683 ;; Return value:  Size  Location     Type
  2684 ;;                  2    4[BANK0 ] int 
  2685 ;; Registers used:
  2686 ;;		wreg, status,2, status,0, pclath, cstack
  2687 ;; Tracked objects:
  2688 ;;		On entry : 0/0
  2689 ;;		On exit  : 0/0
  2690 ;;		Unchanged: 0/0
  2691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2692 ;;      Params:         0       2       0       0       0
  2693 ;;      Locals:         0       0       0       0       0
  2694 ;;      Temps:          0       5       0       0       0
  2695 ;;      Totals:         0       7       0       0       0
  2696 ;;Total ram usage:        7 bytes
  2697 ;; Hardware stack levels used:    1
  2698 ;; Hardware stack levels required when called:    2
  2699 ;; This function calls:
  2700 ;;		___lmul
  2701 ;; This function is called by:
  2702 ;;		_main
  2703 ;;		_checkCount
  2704 ;; This function uses a non-reentrant model
  2705 ;;
  2706                           
  2707                           
  2708                           ;psect for function _rand
  2709  0476                     _rand:	
  2710  0476                     l1222:	
  2711                           ;incstack = 0
  2712                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  2713                           
  2714  0476  1283               	bcf	3,5	;RP0=0, select bank0
  2715  0477  1303               	bcf	3,6	;RP1=0, select bank0
  2716  0478  0860               	movf	_randx+3,w
  2717  0479  00F5               	movwf	___lmul@multiplier+3
  2718  047A  085F               	movf	_randx+2,w
  2719  047B  00F4               	movwf	___lmul@multiplier+2
  2720  047C  085E               	movf	_randx+1,w
  2721  047D  00F3               	movwf	___lmul@multiplier+1
  2722  047E  085D               	movf	_randx,w
  2723  047F  00F2               	movwf	___lmul@multiplier
  2724  0480  3041               	movlw	65
  2725  0481  00F9               	movwf	___lmul@multiplicand+3
  2726  0482  30C6               	movlw	198
  2727  0483  00F8               	movwf	___lmul@multiplicand+2
  2728  0484  304E               	movlw	78
  2729  0485  00F7               	movwf	___lmul@multiplicand+1
  2730  0486  306D               	movlw	109
  2731  0487  00F6               	movwf	___lmul@multiplicand
  2732  0488  120A  118A  23E2  120A  118A  	fcall	___lmul
  2733  048D  0875               	movf	?___lmul+3,w
  2734  048E  1283               	bcf	3,5	;RP0=0, select bank0
  2735  048F  1303               	bcf	3,6	;RP1=0, select bank0
  2736  0490  00E0               	movwf	_randx+3
  2737  0491  0874               	movf	?___lmul+2,w
  2738  0492  00DF               	movwf	_randx+2
  2739  0493  0873               	movf	?___lmul+1,w
  2740  0494  00DE               	movwf	_randx+1
  2741  0495  0872               	movf	?___lmul,w
  2742  0496  00DD               	movwf	_randx
  2743  0497                     l1224:	
  2744  0497  3039               	movlw	57
  2745  0498  07DD               	addwf	_randx,f
  2746  0499  3030               	movlw	48
  2747  049A  1803               	skipnc
  2748  049B  3031               	movlw	49
  2749  049C  07DE               	addwf	_randx+1,f
  2750  049D  3000               	movlw	0
  2751  049E  1803               	skipnc
  2752  049F  3001               	movlw	1
  2753  04A0  07DF               	addwf	_randx+2,f
  2754  04A1  3000               	movlw	0
  2755  04A2  1803               	skipnc
  2756  04A3  3001               	movlw	1
  2757  04A4  07E0               	addwf	_randx+3,f
  2758  04A5                     l1226:	
  2759  04A5  085D               	movf	_randx,w
  2760  04A6  00A6               	movwf	??_rand
  2761  04A7  085E               	movf	_randx+1,w
  2762  04A8  00A7               	movwf	??_rand+1
  2763  04A9  085F               	movf	_randx+2,w
  2764  04AA  00A8               	movwf	??_rand+2
  2765  04AB  0860               	movf	_randx+3,w
  2766  04AC  00A9               	movwf	??_rand+3
  2767  04AD  3010               	movlw	16
  2768  04AE  00AA               	movwf	??_rand+4
  2769  04AF                     u725:	
  2770  04AF  0D29               	rlf	??_rand+3,w
  2771  04B0  0CA9               	rrf	??_rand+3,f
  2772  04B1  0CA8               	rrf	??_rand+2,f
  2773  04B2  0CA7               	rrf	??_rand+1,f
  2774  04B3  0CA6               	rrf	??_rand,f
  2775  04B4                     u720:	
  2776  04B4  0BAA               	decfsz	??_rand+4,f
  2777  04B5  2CAF               	goto	u725
  2778  04B6  30FF               	movlw	255
  2779  04B7  0526               	andwf	??_rand,w
  2780  04B8  00A4               	movwf	?_rand
  2781  04B9  307F               	movlw	127
  2782  04BA  0527               	andwf	??_rand+1,w
  2783  04BB  00A5               	movwf	?_rand+1
  2784  04BC                     l732:	
  2785  04BC  0008               	return
  2786  04BD                     __end_of_rand:	
  2787                           
  2788                           	psect	text17
  2789  03E2                     __ptext17:	
  2790 ;; *************** function ___lmul *****************
  2791 ;; Defined at:
  2792 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  2793 ;; Parameters:    Size  Location     Type
  2794 ;;  multiplier      4    2[COMMON] unsigned long 
  2795 ;;  multiplicand    4    6[COMMON] unsigned long 
  2796 ;; Auto vars:     Size  Location     Type
  2797 ;;  product         4    0[BANK0 ] unsigned long 
  2798 ;; Return value:  Size  Location     Type
  2799 ;;                  4    2[COMMON] unsigned long 
  2800 ;; Registers used:
  2801 ;;		wreg, status,2, status,0
  2802 ;; Tracked objects:
  2803 ;;		On entry : 0/0
  2804 ;;		On exit  : 0/0
  2805 ;;		Unchanged: 0/0
  2806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2807 ;;      Params:         8       0       0       0       0
  2808 ;;      Locals:         0       4       0       0       0
  2809 ;;      Temps:          1       0       0       0       0
  2810 ;;      Totals:         9       4       0       0       0
  2811 ;;Total ram usage:       13 bytes
  2812 ;; Hardware stack levels used:    1
  2813 ;; Hardware stack levels required when called:    1
  2814 ;; This function calls:
  2815 ;;		Nothing
  2816 ;; This function is called by:
  2817 ;;		_rand
  2818 ;; This function uses a non-reentrant model
  2819 ;;
  2820                           
  2821                           
  2822                           ;psect for function ___lmul
  2823  03E2                     ___lmul:	
  2824  03E2                     l1202:	
  2825                           ;incstack = 0
  2826                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2827                           
  2828  03E2  3000               	movlw	0
  2829  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  2830  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  2831  03E5  00A3               	movwf	___lmul@product+3
  2832  03E6  3000               	movlw	0
  2833  03E7  00A2               	movwf	___lmul@product+2
  2834  03E8  3000               	movlw	0
  2835  03E9  00A1               	movwf	___lmul@product+1
  2836  03EA  3000               	movlw	0
  2837  03EB  00A0               	movwf	___lmul@product
  2838  03EC                     l1204:	
  2839  03EC  1C72               	btfss	___lmul@multiplier,0
  2840  03ED  2BEF               	goto	u671
  2841  03EE  2BF0               	goto	u670
  2842  03EF                     u671:	
  2843  03EF  2C09               	goto	l1208
  2844  03F0                     u670:	
  2845  03F0                     l1206:	
  2846  03F0  0876               	movf	___lmul@multiplicand,w
  2847  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  2848  03F2  1303               	bcf	3,6	;RP1=0, select bank0
  2849  03F3  07A0               	addwf	___lmul@product,f
  2850  03F4  0877               	movf	___lmul@multiplicand+1,w
  2851  03F5  1103               	clrz
  2852  03F6  1803               	skipnc
  2853  03F7  3E01               	addlw	1
  2854  03F8  1903               	skipnz
  2855  03F9  2BFB               	goto	u681
  2856  03FA  07A1               	addwf	___lmul@product+1,f
  2857  03FB                     u681:	
  2858  03FB  0878               	movf	___lmul@multiplicand+2,w
  2859  03FC  1103               	clrz
  2860  03FD  1803               	skipnc
  2861  03FE  3E01               	addlw	1
  2862  03FF  1903               	skipnz
  2863  0400  2C02               	goto	u682
  2864  0401  07A2               	addwf	___lmul@product+2,f
  2865  0402                     u682:	
  2866  0402  0879               	movf	___lmul@multiplicand+3,w
  2867  0403  1103               	clrz
  2868  0404  1803               	skipnc
  2869  0405  3E01               	addlw	1
  2870  0406  1903               	skipnz
  2871  0407  2C09               	goto	u683
  2872  0408  07A3               	addwf	___lmul@product+3,f
  2873  0409                     u683:	
  2874  0409                     l1208:	
  2875  0409  3001               	movlw	1
  2876  040A  00FA               	movwf	??___lmul
  2877  040B                     u695:	
  2878  040B  1003               	clrc
  2879  040C  0DF6               	rlf	___lmul@multiplicand,f
  2880  040D  0DF7               	rlf	___lmul@multiplicand+1,f
  2881  040E  0DF8               	rlf	___lmul@multiplicand+2,f
  2882  040F  0DF9               	rlf	___lmul@multiplicand+3,f
  2883  0410  0BFA               	decfsz	??___lmul,f
  2884  0411  2C0B               	goto	u695
  2885  0412                     l1210:	
  2886  0412  3001               	movlw	1
  2887  0413                     u705:	
  2888  0413  1003               	clrc
  2889  0414  0CF5               	rrf	___lmul@multiplier+3,f
  2890  0415  0CF4               	rrf	___lmul@multiplier+2,f
  2891  0416  0CF3               	rrf	___lmul@multiplier+1,f
  2892  0417  0CF2               	rrf	___lmul@multiplier,f
  2893  0418  3EFF               	addlw	-1
  2894  0419  1D03               	skipz
  2895  041A  2C13               	goto	u705
  2896  041B  0875               	movf	___lmul@multiplier+3,w
  2897  041C  0474               	iorwf	___lmul@multiplier+2,w
  2898  041D  0473               	iorwf	___lmul@multiplier+1,w
  2899  041E  0472               	iorwf	___lmul@multiplier,w
  2900  041F  1D03               	skipz
  2901  0420  2C22               	goto	u711
  2902  0421  2C23               	goto	u710
  2903  0422                     u711:	
  2904  0422  2BEC               	goto	l1204
  2905  0423                     u710:	
  2906  0423                     l1212:	
  2907  0423  1283               	bcf	3,5	;RP0=0, select bank0
  2908  0424  1303               	bcf	3,6	;RP1=0, select bank0
  2909  0425  0823               	movf	___lmul@product+3,w
  2910  0426  00F5               	movwf	?___lmul+3
  2911  0427  0822               	movf	___lmul@product+2,w
  2912  0428  00F4               	movwf	?___lmul+2
  2913  0429  0821               	movf	___lmul@product+1,w
  2914  042A  00F3               	movwf	?___lmul+1
  2915  042B  0820               	movf	___lmul@product,w
  2916  042C  00F2               	movwf	?___lmul
  2917  042D                     l290:	
  2918  042D  0008               	return
  2919  042E                     __end_of___lmul:	
  2920                           
  2921                           	psect	text18
  2922  01C9                     __ptext18:	
  2923 ;; *************** function _leerEntradas *****************
  2924 ;; Defined at:
  2925 ;;		line 65 in file "mainsource.c"
  2926 ;; Parameters:    Size  Location     Type
  2927 ;;		None
  2928 ;; Auto vars:     Size  Location     Type
  2929 ;;  i               2    9[COMMON] int 
  2930 ;; Return value:  Size  Location     Type
  2931 ;;                  1    wreg      void 
  2932 ;; Registers used:
  2933 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2934 ;; Tracked objects:
  2935 ;;		On entry : 0/0
  2936 ;;		On exit  : 0/0
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2939 ;;      Params:         0       0       0       0       0
  2940 ;;      Locals:         2       0       0       0       0
  2941 ;;      Temps:          0       8       0       0       0
  2942 ;;      Totals:         2       8       0       0       0
  2943 ;;Total ram usage:       10 bytes
  2944 ;; Hardware stack levels used:    1
  2945 ;; Hardware stack levels required when called:    3
  2946 ;; This function calls:
  2947 ;;		_drawFigure
  2948 ;; This function is called by:
  2949 ;;		_checkCount
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953                           
  2954                           ;psect for function _leerEntradas
  2955  01C9                     _leerEntradas:	
  2956  01C9                     l1230:	
  2957                           ;incstack = 0
  2958                           ; Regs used in _leerEntradas: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2959                           
  2960  01C9                     l1232:	
  2961                           
  2962                           ;mainsource.c: 68:     if(con.derecha == 1 && con.ficha_Hpos<4){
  2963  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  2964  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  2965  01CB  0346               	decf	_con+4,w
  2966  01CC  1D03               	btfss	3,2
  2967  01CD  29CF               	goto	u731
  2968  01CE  29D0               	goto	u730
  2969  01CF                     u731:	
  2970  01CF  2A20               	goto	l1254
  2971  01D0                     u730:	
  2972  01D0                     l1234:	
  2973  01D0  3004               	movlw	4
  2974  01D1  0244               	subwf	_con+2,w
  2975  01D2  1803               	skipnc
  2976  01D3  29D5               	goto	u741
  2977  01D4  29D6               	goto	u740
  2978  01D5                     u741:	
  2979  01D5  2A20               	goto	l1254
  2980  01D6                     u740:	
  2981  01D6                     l1236:	
  2982                           
  2983                           ;mainsource.c: 69:         con.derecha = 0;
  2984  01D6  01C6               	clrf	_con+4
  2985  01D7                     l1238:	
  2986                           
  2987                           ;mainsource.c: 70:         for(i=(con.ficha_Hpos+4); i>con.ficha_Hpos; i--){
  2988  01D7  0844               	movf	_con+2,w
  2989  01D8  3E04               	addlw	4
  2990  01D9  00F9               	movwf	leerEntradas@i
  2991  01DA  3000               	movlw	0
  2992  01DB  1803               	skipnc
  2993  01DC  3001               	movlw	1
  2994  01DD  00FA               	movwf	leerEntradas@i+1
  2995  01DE  2A09               	goto	l82
  2996  01DF                     l1240:	
  2997                           
  2998                           ;mainsource.c: 71:             if((ficha[i] & fondo[i+1]) != 0){
  2999  01DF  0879               	movf	leerEntradas@i,w
  3000  01E0  1283               	bcf	3,5	;RP0=0, select bank0
  3001  01E1  1303               	bcf	3,6	;RP1=0, select bank0
  3002  01E2  00A5               	movwf	??_leerEntradas
  3003  01E3  0725               	addwf	??_leerEntradas,w
  3004  01E4  3EA2               	addlw	(low ((_fondo| 0+2)))& (0+255)
  3005  01E5  0084               	movwf	4
  3006  01E6  1383               	bcf	3,7	;select IRP bank1
  3007  01E7  0800               	movf	0,w
  3008  01E8  00A6               	movwf	??_leerEntradas+1
  3009  01E9  0A84               	incf	4,f
  3010  01EA  0800               	movf	0,w
  3011  01EB  00A7               	movwf	??_leerEntradas+2
  3012  01EC  0879               	movf	leerEntradas@i,w
  3013  01ED  00A8               	movwf	??_leerEntradas+3
  3014  01EE  0728               	addwf	??_leerEntradas+3,w
  3015  01EF  3E4D               	addlw	(low (_ficha| 0))& (0+255)
  3016  01F0  0084               	movwf	4
  3017  01F1  0800               	movf	0,w
  3018  01F2  00A9               	movwf	??_leerEntradas+4
  3019  01F3  0A84               	incf	4,f
  3020  01F4  0800               	movf	0,w
  3021  01F5  00AA               	movwf	??_leerEntradas+5
  3022  01F6  0826               	movf	??_leerEntradas+1,w
  3023  01F7  0529               	andwf	??_leerEntradas+4,w
  3024  01F8  00AB               	movwf	??_leerEntradas+6
  3025  01F9  0827               	movf	??_leerEntradas+2,w
  3026  01FA  052A               	andwf	??_leerEntradas+5,w
  3027  01FB  00AC               	movwf	??_leerEntradas+7
  3028  01FC  082B               	movf	??_leerEntradas+6,w
  3029  01FD  042C               	iorwf	??_leerEntradas+7,w
  3030  01FE  1903               	btfsc	3,2
  3031  01FF  2A01               	goto	u751
  3032  0200  2A02               	goto	u750
  3033  0201                     u751:	
  3034  0201  2A03               	goto	l1244
  3035  0202                     u750:	
  3036  0202  2A77               	goto	l85
  3037  0203                     l1244:	
  3038                           
  3039                           ;mainsource.c: 74:         }
  3040  0203  30FF               	movlw	255
  3041  0204  07F9               	addwf	leerEntradas@i,f
  3042  0205  1803               	skipnc
  3043  0206  0AFA               	incf	leerEntradas@i+1,f
  3044  0207  30FF               	movlw	255
  3045  0208  07FA               	addwf	leerEntradas@i+1,f
  3046  0209                     l82:	
  3047  0209  087A               	movf	leerEntradas@i+1,w
  3048  020A  3A80               	xorlw	128
  3049  020B  3C80               	sublw	128
  3050  020C  1D03               	skipz
  3051  020D  2A10               	goto	u765
  3052  020E  0879               	movf	leerEntradas@i,w
  3053  020F  0244               	subwf	_con+2,w
  3054  0210                     u765:	
  3055  0210  1C03               	skipc
  3056  0211  2A13               	goto	u761
  3057  0212  2A14               	goto	u760
  3058  0213                     u761:	
  3059  0213  29DF               	goto	l1240
  3060  0214                     u760:	
  3061  0214                     l1246:	
  3062                           
  3063                           ;mainsource.c: 75:         con.ficha_Hpos++;
  3064  0214  3001               	movlw	1
  3065  0215  1283               	bcf	3,5	;RP0=0, select bank0
  3066  0216  1303               	bcf	3,6	;RP1=0, select bank0
  3067  0217  00A5               	movwf	??_leerEntradas
  3068  0218  0825               	movf	??_leerEntradas,w
  3069  0219  07C4               	addwf	_con+2,f
  3070  021A                     l1248:	
  3071                           
  3072                           ;mainsource.c: 76:         drawFigure();
  3073  021A  120A  118A  2278  120A  118A  	fcall	_drawFigure
  3074  021F  2A77               	goto	l85
  3075  0220                     l1254:	
  3076  0220  0347               	decf	_con+5,w
  3077  0221  1D03               	btfss	3,2
  3078  0222  2A24               	goto	u771
  3079  0223  2A25               	goto	u770
  3080  0224                     u771:	
  3081  0224  2A77               	goto	l85
  3082  0225                     u770:	
  3083  0225                     l1256:	
  3084  0225  0844               	movf	_con+2,w
  3085  0226  1903               	btfsc	3,2
  3086  0227  2A29               	goto	u781
  3087  0228  2A2A               	goto	u780
  3088  0229                     u781:	
  3089  0229  2A77               	goto	l85
  3090  022A                     u780:	
  3091  022A                     l1258:	
  3092                           
  3093                           ;mainsource.c: 80:         con.izquierda = 0;
  3094  022A  01C7               	clrf	_con+5
  3095  022B                     l1260:	
  3096                           
  3097                           ;mainsource.c: 81:         for(i=con.ficha_Hpos; i<(con.ficha_Hpos+4); i++){
  3098  022B  0844               	movf	_con+2,w
  3099  022C  00A5               	movwf	??_leerEntradas
  3100  022D  01A6               	clrf	??_leerEntradas+1
  3101  022E  0825               	movf	??_leerEntradas,w
  3102  022F  00F9               	movwf	leerEntradas@i
  3103  0230  0826               	movf	??_leerEntradas+1,w
  3104  0231  00FA               	movwf	leerEntradas@i+1
  3105  0232  2A5D               	goto	l89
  3106  0233                     l1262:	
  3107                           
  3108                           ;mainsource.c: 82:             if((ficha[i] & fondo[i-1]) != 0){
  3109  0233  0879               	movf	leerEntradas@i,w
  3110  0234  1283               	bcf	3,5	;RP0=0, select bank0
  3111  0235  1303               	bcf	3,6	;RP1=0, select bank0
  3112  0236  00A5               	movwf	??_leerEntradas
  3113  0237  0725               	addwf	??_leerEntradas,w
  3114  0238  3E9E               	addlw	(low ((_fondo| 0+254)))& (0+255)
  3115  0239  0084               	movwf	4
  3116  023A  1383               	bcf	3,7	;select IRP bank1
  3117  023B  0800               	movf	0,w
  3118  023C  00A6               	movwf	??_leerEntradas+1
  3119  023D  0A84               	incf	4,f
  3120  023E  0800               	movf	0,w
  3121  023F  00A7               	movwf	??_leerEntradas+2
  3122  0240  0879               	movf	leerEntradas@i,w
  3123  0241  00A8               	movwf	??_leerEntradas+3
  3124  0242  0728               	addwf	??_leerEntradas+3,w
  3125  0243  3E4D               	addlw	(low (_ficha| 0))& (0+255)
  3126  0244  0084               	movwf	4
  3127  0245  0800               	movf	0,w
  3128  0246  00A9               	movwf	??_leerEntradas+4
  3129  0247  0A84               	incf	4,f
  3130  0248  0800               	movf	0,w
  3131  0249  00AA               	movwf	??_leerEntradas+5
  3132  024A  0826               	movf	??_leerEntradas+1,w
  3133  024B  0529               	andwf	??_leerEntradas+4,w
  3134  024C  00AB               	movwf	??_leerEntradas+6
  3135  024D  0827               	movf	??_leerEntradas+2,w
  3136  024E  052A               	andwf	??_leerEntradas+5,w
  3137  024F  00AC               	movwf	??_leerEntradas+7
  3138  0250  082B               	movf	??_leerEntradas+6,w
  3139  0251  042C               	iorwf	??_leerEntradas+7,w
  3140  0252  1903               	btfsc	3,2
  3141  0253  2A55               	goto	u791
  3142  0254  2A56               	goto	u790
  3143  0255                     u791:	
  3144  0255  2A57               	goto	l1266
  3145  0256                     u790:	
  3146  0256  2A77               	goto	l85
  3147  0257                     l1266:	
  3148                           
  3149                           ;mainsource.c: 85:         }
  3150  0257  3001               	movlw	1
  3151  0258  07F9               	addwf	leerEntradas@i,f
  3152  0259  1803               	skipnc
  3153  025A  0AFA               	incf	leerEntradas@i+1,f
  3154  025B  3000               	movlw	0
  3155  025C  07FA               	addwf	leerEntradas@i+1,f
  3156  025D                     l89:	
  3157  025D  0844               	movf	_con+2,w
  3158  025E  3E04               	addlw	4
  3159  025F  00A5               	movwf	??_leerEntradas
  3160  0260  3000               	movlw	0
  3161  0261  1803               	skipnc
  3162  0262  3001               	movlw	1
  3163  0263  00A6               	movwf	??_leerEntradas+1
  3164  0264  087A               	movf	leerEntradas@i+1,w
  3165  0265  3A80               	xorlw	128
  3166  0266  00A7               	movwf	??_leerEntradas+2
  3167  0267  0826               	movf	??_leerEntradas+1,w
  3168  0268  3A80               	xorlw	128
  3169  0269  0227               	subwf	??_leerEntradas+2,w
  3170  026A  1D03               	skipz
  3171  026B  2A6E               	goto	u805
  3172  026C  0825               	movf	??_leerEntradas,w
  3173  026D  0279               	subwf	leerEntradas@i,w
  3174  026E                     u805:	
  3175  026E  1C03               	skipc
  3176  026F  2A71               	goto	u801
  3177  0270  2A72               	goto	u800
  3178  0271                     u801:	
  3179  0271  2A33               	goto	l1262
  3180  0272                     u800:	
  3181  0272                     l1268:	
  3182                           
  3183                           ;mainsource.c: 86:         con.ficha_Hpos--;
  3184  0272  3001               	movlw	1
  3185  0273  1283               	bcf	3,5	;RP0=0, select bank0
  3186  0274  1303               	bcf	3,6	;RP1=0, select bank0
  3187  0275  02C4               	subwf	_con+2,f
  3188  0276  2A1A               	goto	l1248
  3189  0277                     l85:	
  3190  0277  0008               	return
  3191  0278                     __end_of_leerEntradas:	
  3192                           
  3193                           	psect	text19
  3194  0278                     __ptext19:	
  3195 ;; *************** function _drawFigure *****************
  3196 ;; Defined at:
  3197 ;;		line 57 in file "screen.c"
  3198 ;; Parameters:    Size  Location     Type
  3199 ;;		None
  3200 ;; Auto vars:     Size  Location     Type
  3201 ;;		None
  3202 ;; Return value:  Size  Location     Type
  3203 ;;                  1    wreg      void 
  3204 ;; Registers used:
  3205 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3206 ;; Tracked objects:
  3207 ;;		On entry : 0/0
  3208 ;;		On exit  : 0/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3211 ;;      Params:         0       0       0       0       0
  3212 ;;      Locals:         0       0       0       0       0
  3213 ;;      Temps:          0       5       0       0       0
  3214 ;;      Totals:         0       5       0       0       0
  3215 ;;Total ram usage:        5 bytes
  3216 ;; Hardware stack levels used:    1
  3217 ;; Hardware stack levels required when called:    2
  3218 ;; This function calls:
  3219 ;;		_memset
  3220 ;; This function is called by:
  3221 ;;		_leerEntradas
  3222 ;;		_checkCount
  3223 ;; This function uses a non-reentrant model
  3224 ;;
  3225                           
  3226                           
  3227                           ;psect for function _drawFigure
  3228  0278                     _drawFigure:	
  3229  0278                     l1184:	
  3230                           ;incstack = 0
  3231                           ; Regs used in _drawFigure: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3232                           
  3233                           
  3234                           ;screen.c: 58:     memset(ficha, 0, sizeof(ficha));
  3235  0278  3000               	movlw	0
  3236  0279  00F2               	movwf	memset@c
  3237  027A  00F3               	movwf	memset@c+1
  3238  027B  3010               	movlw	16
  3239  027C  00F4               	movwf	memset@n
  3240  027D  3000               	movlw	0
  3241  027E  00F5               	movwf	memset@n+1
  3242  027F  304D               	movlw	(low (_ficha| 0))& (0+255)
  3243  0280  120A  118A  25EF  120A  118A  	fcall	_memset
  3244  0285                     l1186:	
  3245                           
  3246                           ;screen.c: 59:     ficha[con.ficha_Hpos ] = figuras[con.ficha_actual][0] << (con.ficha_V
      +                          pos-1);
  3247  0285  1283               	bcf	3,5	;RP0=0, select bank0
  3248  0286  1303               	bcf	3,6	;RP1=0, select bank0
  3249  0287  0843               	movf	_con+1,w
  3250  0288  3EFF               	addlw	-1
  3251  0289  00A0               	movwf	??_drawFigure
  3252  028A  0AA0               	incf	??_drawFigure,f
  3253  028B  0845               	movf	_con+3,w
  3254  028C  00A1               	movwf	??_drawFigure+1
  3255  028D  3002               	movlw	2
  3256  028E                     u595:	
  3257  028E  1003               	clrc
  3258  028F  0DA1               	rlf	??_drawFigure+1,f
  3259  0290  3EFF               	addlw	-1
  3260  0291  1D03               	skipz
  3261  0292  2A8E               	goto	u595
  3262  0293  1003               	clrc
  3263  0294  0D21               	rlf	??_drawFigure+1,w
  3264  0295  3E90               	addlw	(low (_figuras| (0+256)))& (0+255)
  3265  0296  0084               	movwf	4
  3266  0297  1783               	bsf	3,7	;select IRP bank3
  3267  0298  0800               	movf	0,w
  3268  0299  00A2               	movwf	??_drawFigure+2
  3269  029A  0A84               	incf	4,f
  3270  029B  0800               	movf	0,w
  3271  029C  00A3               	movwf	??_drawFigure+3
  3272  029D  2AA1               	goto	u604
  3273  029E                     u605:	
  3274  029E  1003               	clrc
  3275  029F  0DA2               	rlf	??_drawFigure+2,f
  3276  02A0  0DA3               	rlf	??_drawFigure+3,f
  3277  02A1                     u604:	
  3278  02A1  0BA0               	decfsz	??_drawFigure,f
  3279  02A2  2A9E               	goto	u605
  3280  02A3  0844               	movf	_con+2,w
  3281  02A4  00A4               	movwf	??_drawFigure+4
  3282  02A5  0724               	addwf	??_drawFigure+4,w
  3283  02A6  3E4D               	addlw	(low (_ficha| 0))& (0+255)
  3284  02A7  0084               	movwf	4
  3285  02A8  0822               	movf	??_drawFigure+2,w
  3286  02A9  1383               	bcf	3,7	;select IRP bank0
  3287  02AA  0080               	movwf	0
  3288  02AB  0A84               	incf	4,f
  3289  02AC  0823               	movf	??_drawFigure+3,w
  3290  02AD  0080               	movwf	0
  3291  02AE                     l1188:	
  3292                           
  3293                           ;screen.c: 60:     ficha[con.ficha_Hpos +1] = figuras[con.ficha_actual][1] << (con.ficha
      +                          _Vpos-1);
  3294  02AE  0843               	movf	_con+1,w
  3295  02AF  3EFF               	addlw	-1
  3296  02B0  00A0               	movwf	??_drawFigure
  3297  02B1  0AA0               	incf	??_drawFigure,f
  3298  02B2  0845               	movf	_con+3,w
  3299  02B3  00A1               	movwf	??_drawFigure+1
  3300  02B4  3002               	movlw	2
  3301  02B5                     u615:	
  3302  02B5  1003               	clrc
  3303  02B6  0DA1               	rlf	??_drawFigure+1,f
  3304  02B7  3EFF               	addlw	-1
  3305  02B8  1D03               	skipz
  3306  02B9  2AB5               	goto	u615
  3307  02BA  1003               	clrc
  3308  02BB  0D21               	rlf	??_drawFigure+1,w
  3309  02BC  3E92               	addlw	(low ((_figuras| (0+256)+2)))& (0+255)
  3310  02BD  0084               	movwf	4
  3311  02BE  1783               	bsf	3,7	;select IRP bank3
  3312  02BF  0800               	movf	0,w
  3313  02C0  00A2               	movwf	??_drawFigure+2
  3314  02C1  0A84               	incf	4,f
  3315  02C2  0800               	movf	0,w
  3316  02C3  00A3               	movwf	??_drawFigure+3
  3317  02C4  2AC8               	goto	u624
  3318  02C5                     u625:	
  3319  02C5  1003               	clrc
  3320  02C6  0DA2               	rlf	??_drawFigure+2,f
  3321  02C7  0DA3               	rlf	??_drawFigure+3,f
  3322  02C8                     u624:	
  3323  02C8  0BA0               	decfsz	??_drawFigure,f
  3324  02C9  2AC5               	goto	u625
  3325  02CA  0844               	movf	_con+2,w
  3326  02CB  00A4               	movwf	??_drawFigure+4
  3327  02CC  0724               	addwf	??_drawFigure+4,w
  3328  02CD  3E4F               	addlw	(low ((_ficha| 0+2)))& (0+255)
  3329  02CE  0084               	movwf	4
  3330  02CF  0822               	movf	??_drawFigure+2,w
  3331  02D0  1383               	bcf	3,7	;select IRP bank0
  3332  02D1  0080               	movwf	0
  3333  02D2  0A84               	incf	4,f
  3334  02D3  0823               	movf	??_drawFigure+3,w
  3335  02D4  0080               	movwf	0
  3336  02D5                     l1190:	
  3337                           
  3338                           ;screen.c: 61:     ficha[con.ficha_Hpos +2] = figuras[con.ficha_actual][2] << (con.ficha
      +                          _Vpos-1);
  3339  02D5  0843               	movf	_con+1,w
  3340  02D6  3EFF               	addlw	-1
  3341  02D7  00A0               	movwf	??_drawFigure
  3342  02D8  0AA0               	incf	??_drawFigure,f
  3343  02D9  0845               	movf	_con+3,w
  3344  02DA  00A1               	movwf	??_drawFigure+1
  3345  02DB  3002               	movlw	2
  3346  02DC                     u635:	
  3347  02DC  1003               	clrc
  3348  02DD  0DA1               	rlf	??_drawFigure+1,f
  3349  02DE  3EFF               	addlw	-1
  3350  02DF  1D03               	skipz
  3351  02E0  2ADC               	goto	u635
  3352  02E1  1003               	clrc
  3353  02E2  0D21               	rlf	??_drawFigure+1,w
  3354  02E3  3E94               	addlw	(low ((_figuras| (0+256)+4)))& (0+255)
  3355  02E4  0084               	movwf	4
  3356  02E5  1783               	bsf	3,7	;select IRP bank3
  3357  02E6  0800               	movf	0,w
  3358  02E7  00A2               	movwf	??_drawFigure+2
  3359  02E8  0A84               	incf	4,f
  3360  02E9  0800               	movf	0,w
  3361  02EA  00A3               	movwf	??_drawFigure+3
  3362  02EB  2AEF               	goto	u644
  3363  02EC                     u645:	
  3364  02EC  1003               	clrc
  3365  02ED  0DA2               	rlf	??_drawFigure+2,f
  3366  02EE  0DA3               	rlf	??_drawFigure+3,f
  3367  02EF                     u644:	
  3368  02EF  0BA0               	decfsz	??_drawFigure,f
  3369  02F0  2AEC               	goto	u645
  3370  02F1  0844               	movf	_con+2,w
  3371  02F2  00A4               	movwf	??_drawFigure+4
  3372  02F3  0724               	addwf	??_drawFigure+4,w
  3373  02F4  3E51               	addlw	(low ((_ficha| 0+4)))& (0+255)
  3374  02F5  0084               	movwf	4
  3375  02F6  0822               	movf	??_drawFigure+2,w
  3376  02F7  1383               	bcf	3,7	;select IRP bank0
  3377  02F8  0080               	movwf	0
  3378  02F9  0A84               	incf	4,f
  3379  02FA  0823               	movf	??_drawFigure+3,w
  3380  02FB  0080               	movwf	0
  3381  02FC                     l1192:	
  3382                           
  3383                           ;screen.c: 62:     ficha[con.ficha_Hpos +3] = figuras[con.ficha_actual][3] << (con.ficha
      +                          _Vpos-1);
  3384  02FC  0843               	movf	_con+1,w
  3385  02FD  3EFF               	addlw	-1
  3386  02FE  00A0               	movwf	??_drawFigure
  3387  02FF  0AA0               	incf	??_drawFigure,f
  3388  0300  0845               	movf	_con+3,w
  3389  0301  00A1               	movwf	??_drawFigure+1
  3390  0302  3002               	movlw	2
  3391  0303                     u655:	
  3392  0303  1003               	clrc
  3393  0304  0DA1               	rlf	??_drawFigure+1,f
  3394  0305  3EFF               	addlw	-1
  3395  0306  1D03               	skipz
  3396  0307  2B03               	goto	u655
  3397  0308  1003               	clrc
  3398  0309  0D21               	rlf	??_drawFigure+1,w
  3399  030A  3E96               	addlw	(low ((_figuras| (0+256)+6)))& (0+255)
  3400  030B  0084               	movwf	4
  3401  030C  1783               	bsf	3,7	;select IRP bank3
  3402  030D  0800               	movf	0,w
  3403  030E  00A2               	movwf	??_drawFigure+2
  3404  030F  0A84               	incf	4,f
  3405  0310  0800               	movf	0,w
  3406  0311  00A3               	movwf	??_drawFigure+3
  3407  0312  2B16               	goto	u664
  3408  0313                     u665:	
  3409  0313  1003               	clrc
  3410  0314  0DA2               	rlf	??_drawFigure+2,f
  3411  0315  0DA3               	rlf	??_drawFigure+3,f
  3412  0316                     u664:	
  3413  0316  0BA0               	decfsz	??_drawFigure,f
  3414  0317  2B13               	goto	u665
  3415  0318  0844               	movf	_con+2,w
  3416  0319  00A4               	movwf	??_drawFigure+4
  3417  031A  0724               	addwf	??_drawFigure+4,w
  3418  031B  3E53               	addlw	(low ((_ficha| 0+6)))& (0+255)
  3419  031C  0084               	movwf	4
  3420  031D  0822               	movf	??_drawFigure+2,w
  3421  031E  1383               	bcf	3,7	;select IRP bank0
  3422  031F  0080               	movwf	0
  3423  0320  0A84               	incf	4,f
  3424  0321  0823               	movf	??_drawFigure+3,w
  3425  0322  0080               	movwf	0
  3426  0323                     l190:	
  3427  0323  0008               	return
  3428  0324                     __end_of_drawFigure:	
  3429                           
  3430                           	psect	text20
  3431  05EF                     __ptext20:	
  3432 ;; *************** function _memset *****************
  3433 ;; Defined at:
  3434 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\memset.c"
  3435 ;; Parameters:    Size  Location     Type
  3436 ;;  p1              1    wreg     PTR void 
  3437 ;;		 -> fondo(16), ficha(16), 
  3438 ;;  c               2    2[COMMON] int 
  3439 ;;  n               2    4[COMMON] unsigned int 
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;  p1              1    8[COMMON] PTR void 
  3442 ;;		 -> fondo(16), ficha(16), 
  3443 ;;  p               1    7[COMMON] PTR unsigned char 
  3444 ;;		 -> fondo(16), ficha(16), 
  3445 ;; Return value:  Size  Location     Type
  3446 ;;                  1    wreg      PTR void 
  3447 ;; Registers used:
  3448 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3449 ;; Tracked objects:
  3450 ;;		On entry : 0/0
  3451 ;;		On exit  : 0/0
  3452 ;;		Unchanged: 0/0
  3453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3454 ;;      Params:         4       0       0       0       0
  3455 ;;      Locals:         2       0       0       0       0
  3456 ;;      Temps:          1       0       0       0       0
  3457 ;;      Totals:         7       0       0       0       0
  3458 ;;Total ram usage:        7 bytes
  3459 ;; Hardware stack levels used:    1
  3460 ;; Hardware stack levels required when called:    1
  3461 ;; This function calls:
  3462 ;;		Nothing
  3463 ;; This function is called by:
  3464 ;;		_checkCount
  3465 ;;		_drawFigure
  3466 ;; This function uses a non-reentrant model
  3467 ;;
  3468                           
  3469                           
  3470                           ;psect for function _memset
  3471  05EF                     _memset:	
  3472                           
  3473                           ;incstack = 0
  3474                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0]
  3475                           ;memset@p1 stored from wreg
  3476  05EF  00F8               	movwf	memset@p1
  3477  05F0                     l1176:	
  3478  05F0  0878               	movf	memset@p1,w
  3479  05F1  00F6               	movwf	??_memset
  3480  05F2  0876               	movf	??_memset,w
  3481  05F3  00F7               	movwf	memset@p
  3482  05F4  2E00               	goto	l1182
  3483  05F5                     l1178:	
  3484  05F5  0872               	movf	memset@c,w
  3485  05F6  00F6               	movwf	??_memset
  3486  05F7  0877               	movf	memset@p,w
  3487  05F8  0084               	movwf	4
  3488  05F9  0876               	movf	??_memset,w
  3489  05FA  1383               	bcf	3,7	;select IRP bank0
  3490  05FB  0080               	movwf	0
  3491  05FC                     l1180:	
  3492  05FC  3001               	movlw	1
  3493  05FD  00F6               	movwf	??_memset
  3494  05FE  0876               	movf	??_memset,w
  3495  05FF  07F7               	addwf	memset@p,f
  3496  0600                     l1182:	
  3497  0600  3001               	movlw	1
  3498  0601  02F4               	subwf	memset@n,f
  3499  0602  3000               	movlw	0
  3500  0603  1C03               	skipc
  3501  0604  03F5               	decf	memset@n+1,f
  3502  0605  02F5               	subwf	memset@n+1,f
  3503  0606  0A74               	incf	memset@n,w
  3504  0607  1D03               	skipz
  3505  0608  2E0D               	goto	u581
  3506  0609  0A75               	incf	memset@n+1,w
  3507  060A  1D03               	btfss	3,2
  3508  060B  2E0D               	goto	u581
  3509  060C  2E0E               	goto	u580
  3510  060D                     u581:	
  3511  060D  2DF5               	goto	l1178
  3512  060E                     u580:	
  3513  060E                     l724:	
  3514  060E  0008               	return
  3515  060F                     __end_of_memset:	
  3516                           
  3517                           	psect	text21
  3518  0541                     __ptext21:	
  3519 ;; *************** function _drawBground *****************
  3520 ;; Defined at:
  3521 ;;		line 46 in file "screen.c"
  3522 ;; Parameters:    Size  Location     Type
  3523 ;;		None
  3524 ;; Auto vars:     Size  Location     Type
  3525 ;;  i               2    0[BANK0 ] int 
  3526 ;; Return value:  Size  Location     Type
  3527 ;;                  1    wreg      void 
  3528 ;; Registers used:
  3529 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3530 ;; Tracked objects:
  3531 ;;		On entry : 0/0
  3532 ;;		On exit  : 0/0
  3533 ;;		Unchanged: 0/0
  3534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3535 ;;      Params:         0       0       0       0       0
  3536 ;;      Locals:         0       2       0       0       0
  3537 ;;      Temps:          9       0       0       0       0
  3538 ;;      Totals:         9       2       0       0       0
  3539 ;;Total ram usage:       11 bytes
  3540 ;; Hardware stack levels used:    1
  3541 ;; Hardware stack levels required when called:    1
  3542 ;; This function calls:
  3543 ;;		Nothing
  3544 ;; This function is called by:
  3545 ;;		_checkCount
  3546 ;; This function uses a non-reentrant model
  3547 ;;
  3548                           
  3549                           
  3550                           ;psect for function _drawBground
  3551  0541                     _drawBground:	
  3552  0541                     l1274:	
  3553                           ;incstack = 0
  3554                           ; Regs used in _drawBground: [wreg-fsr0h+status,2+status,0+btemp+1]
  3555                           
  3556                           
  3557                           ;screen.c: 47:     int i=0;
  3558  0541  1283               	bcf	3,5	;RP0=0, select bank0
  3559  0542  1303               	bcf	3,6	;RP1=0, select bank0
  3560  0543  01A0               	clrf	drawBground@i
  3561  0544  01A1               	clrf	drawBground@i+1
  3562                           
  3563                           ;screen.c: 48:     for(i=0; i<8; i++){
  3564  0545  01A0               	clrf	drawBground@i
  3565  0546  01A1               	clrf	drawBground@i+1
  3566  0547                     l1280:	
  3567                           
  3568                           ;screen.c: 49:         fondo[i] = fondo[i] | ficha[i];
  3569  0547  1283               	bcf	3,5	;RP0=0, select bank0
  3570  0548  1303               	bcf	3,6	;RP1=0, select bank0
  3571  0549  0820               	movf	drawBground@i,w
  3572  054A  00F2               	movwf	??_drawBground
  3573  054B  0772               	addwf	??_drawBground,w
  3574  054C  3E4D               	addlw	(low (_ficha| 0))& (0+255)
  3575  054D  0084               	movwf	4
  3576  054E  1383               	bcf	3,7	;select IRP bank0
  3577  054F  0800               	movf	0,w
  3578  0550  00F3               	movwf	??_drawBground+1
  3579  0551  0A84               	incf	4,f
  3580  0552  0800               	movf	0,w
  3581  0553  00F4               	movwf	??_drawBground+2
  3582  0554  0820               	movf	drawBground@i,w
  3583  0555  00F5               	movwf	??_drawBground+3
  3584  0556  0775               	addwf	??_drawBground+3,w
  3585  0557  3EA0               	addlw	(low (_fondo| 0))& (0+255)
  3586  0558  0084               	movwf	4
  3587  0559  0800               	movf	0,w
  3588  055A  00F6               	movwf	??_drawBground+4
  3589  055B  0A84               	incf	4,f
  3590  055C  0800               	movf	0,w
  3591  055D  00F7               	movwf	??_drawBground+5
  3592  055E  0873               	movf	??_drawBground+1,w
  3593  055F  0476               	iorwf	??_drawBground+4,w
  3594  0560  00F8               	movwf	??_drawBground+6
  3595  0561  0874               	movf	??_drawBground+2,w
  3596  0562  0477               	iorwf	??_drawBground+5,w
  3597  0563  00F9               	movwf	??_drawBground+7
  3598  0564  0820               	movf	drawBground@i,w
  3599  0565  00FA               	movwf	??_drawBground+8
  3600  0566  077A               	addwf	??_drawBground+8,w
  3601  0567  3EA0               	addlw	(low (_fondo| 0))& (0+255)
  3602  0568  0084               	movwf	4
  3603  0569  0878               	movf	??_drawBground+6,w
  3604  056A  0080               	movwf	0
  3605  056B  0A84               	incf	4,f
  3606  056C  0879               	movf	??_drawBground+7,w
  3607  056D  0080               	movwf	0
  3608  056E                     l1282:	
  3609                           
  3610                           ;screen.c: 50:     }
  3611  056E  3001               	movlw	1
  3612  056F  07A0               	addwf	drawBground@i,f
  3613  0570  1803               	skipnc
  3614  0571  0AA1               	incf	drawBground@i+1,f
  3615  0572  3000               	movlw	0
  3616  0573  07A1               	addwf	drawBground@i+1,f
  3617  0574                     l1284:	
  3618  0574  0821               	movf	drawBground@i+1,w
  3619  0575  3A80               	xorlw	128
  3620  0576  00FF               	movwf	btemp+1
  3621  0577  3080               	movlw	128
  3622  0578  027F               	subwf	btemp+1,w
  3623  0579  1D03               	skipz
  3624  057A  2D7D               	goto	u815
  3625  057B  3008               	movlw	8
  3626  057C  0220               	subwf	drawBground@i,w
  3627  057D                     u815:	
  3628  057D  1C03               	skipc
  3629  057E  2D80               	goto	u811
  3630  057F  2D81               	goto	u810
  3631  0580                     u811:	
  3632  0580  2D47               	goto	l1280
  3633  0581                     u810:	
  3634  0581                     l187:	
  3635  0581  0008               	return
  3636  0582                     __end_of_drawBground:	
  3637                           
  3638                           	psect	text22
  3639  0387                     __ptext22:	
  3640 ;; *************** function ___awmod *****************
  3641 ;; Defined at:
  3642 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  3643 ;; Parameters:    Size  Location     Type
  3644 ;;  divisor         2   11[BANK0 ] int 
  3645 ;;  dividend        2   13[BANK0 ] int 
  3646 ;; Auto vars:     Size  Location     Type
  3647 ;;  sign            1   16[BANK0 ] unsigned char 
  3648 ;;  counter         1   15[BANK0 ] unsigned char 
  3649 ;; Return value:  Size  Location     Type
  3650 ;;                  2   11[BANK0 ] int 
  3651 ;; Registers used:
  3652 ;;		wreg, status,2, status,0
  3653 ;; Tracked objects:
  3654 ;;		On entry : 0/0
  3655 ;;		On exit  : 0/0
  3656 ;;		Unchanged: 0/0
  3657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3658 ;;      Params:         0       4       0       0       0
  3659 ;;      Locals:         0       2       0       0       0
  3660 ;;      Temps:          1       0       0       0       0
  3661 ;;      Totals:         1       6       0       0       0
  3662 ;;Total ram usage:        7 bytes
  3663 ;; Hardware stack levels used:    1
  3664 ;; Hardware stack levels required when called:    1
  3665 ;; This function calls:
  3666 ;;		Nothing
  3667 ;; This function is called by:
  3668 ;;		_main
  3669 ;;		_checkCount
  3670 ;; This function uses a non-reentrant model
  3671 ;;
  3672                           
  3673                           
  3674                           ;psect for function ___awmod
  3675  0387                     ___awmod:	
  3676  0387                     l1320:	
  3677                           ;incstack = 0
  3678                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3679                           
  3680  0387  1283               	bcf	3,5	;RP0=0, select bank0
  3681  0388  1303               	bcf	3,6	;RP1=0, select bank0
  3682  0389  01B0               	clrf	___awmod@sign
  3683  038A                     l1322:	
  3684  038A  1FAE               	btfss	___awmod@dividend+1,7
  3685  038B  2B8D               	goto	u861
  3686  038C  2B8E               	goto	u860
  3687  038D                     u861:	
  3688  038D  2B95               	goto	l1328
  3689  038E                     u860:	
  3690  038E                     l1324:	
  3691  038E  09AD               	comf	___awmod@dividend,f
  3692  038F  09AE               	comf	___awmod@dividend+1,f
  3693  0390  0AAD               	incf	___awmod@dividend,f
  3694  0391  1903               	skipnz
  3695  0392  0AAE               	incf	___awmod@dividend+1,f
  3696  0393                     l1326:	
  3697  0393  01B0               	clrf	___awmod@sign
  3698  0394  0AB0               	incf	___awmod@sign,f
  3699  0395                     l1328:	
  3700  0395  1FAC               	btfss	___awmod@divisor+1,7
  3701  0396  2B98               	goto	u871
  3702  0397  2B99               	goto	u870
  3703  0398                     u871:	
  3704  0398  2B9E               	goto	l1332
  3705  0399                     u870:	
  3706  0399                     l1330:	
  3707  0399  09AB               	comf	___awmod@divisor,f
  3708  039A  09AC               	comf	___awmod@divisor+1,f
  3709  039B  0AAB               	incf	___awmod@divisor,f
  3710  039C  1903               	skipnz
  3711  039D  0AAC               	incf	___awmod@divisor+1,f
  3712  039E                     l1332:	
  3713  039E  082B               	movf	___awmod@divisor,w
  3714  039F  042C               	iorwf	___awmod@divisor+1,w
  3715  03A0  1903               	btfsc	3,2
  3716  03A1  2BA3               	goto	u881
  3717  03A2  2BA4               	goto	u880
  3718  03A3                     u881:	
  3719  03A3  2BD3               	goto	l1350
  3720  03A4                     u880:	
  3721  03A4                     l1334:	
  3722  03A4  01AF               	clrf	___awmod@counter
  3723  03A5  0AAF               	incf	___awmod@counter,f
  3724  03A6  2BB2               	goto	l1340
  3725  03A7                     l1336:	
  3726  03A7  3001               	movlw	1
  3727  03A8                     u895:	
  3728  03A8  1003               	clrc
  3729  03A9  0DAB               	rlf	___awmod@divisor,f
  3730  03AA  0DAC               	rlf	___awmod@divisor+1,f
  3731  03AB  3EFF               	addlw	-1
  3732  03AC  1D03               	skipz
  3733  03AD  2BA8               	goto	u895
  3734  03AE                     l1338:	
  3735  03AE  3001               	movlw	1
  3736  03AF  00FB               	movwf	??___awmod
  3737  03B0  087B               	movf	??___awmod,w
  3738  03B1  07AF               	addwf	___awmod@counter,f
  3739  03B2                     l1340:	
  3740  03B2  1FAC               	btfss	___awmod@divisor+1,7
  3741  03B3  2BB5               	goto	u901
  3742  03B4  2BB6               	goto	u900
  3743  03B5                     u901:	
  3744  03B5  2BA7               	goto	l1336
  3745  03B6                     u900:	
  3746  03B6                     l1342:	
  3747  03B6  082C               	movf	___awmod@divisor+1,w
  3748  03B7  022E               	subwf	___awmod@dividend+1,w
  3749  03B8  1D03               	skipz
  3750  03B9  2BBC               	goto	u915
  3751  03BA  082B               	movf	___awmod@divisor,w
  3752  03BB  022D               	subwf	___awmod@dividend,w
  3753  03BC                     u915:	
  3754  03BC  1C03               	skipc
  3755  03BD  2BBF               	goto	u911
  3756  03BE  2BC0               	goto	u910
  3757  03BF                     u911:	
  3758  03BF  2BC6               	goto	l1346
  3759  03C0                     u910:	
  3760  03C0                     l1344:	
  3761  03C0  082B               	movf	___awmod@divisor,w
  3762  03C1  02AD               	subwf	___awmod@dividend,f
  3763  03C2  082C               	movf	___awmod@divisor+1,w
  3764  03C3  1C03               	skipc
  3765  03C4  03AE               	decf	___awmod@dividend+1,f
  3766  03C5  02AE               	subwf	___awmod@dividend+1,f
  3767  03C6                     l1346:	
  3768  03C6  3001               	movlw	1
  3769  03C7                     u925:	
  3770  03C7  1003               	clrc
  3771  03C8  0CAC               	rrf	___awmod@divisor+1,f
  3772  03C9  0CAB               	rrf	___awmod@divisor,f
  3773  03CA  3EFF               	addlw	-1
  3774  03CB  1D03               	skipz
  3775  03CC  2BC7               	goto	u925
  3776  03CD                     l1348:	
  3777  03CD  3001               	movlw	1
  3778  03CE  02AF               	subwf	___awmod@counter,f
  3779  03CF  1D03               	btfss	3,2
  3780  03D0  2BD2               	goto	u931
  3781  03D1  2BD3               	goto	u930
  3782  03D2                     u931:	
  3783  03D2  2BB6               	goto	l1342
  3784  03D3                     u930:	
  3785  03D3                     l1350:	
  3786  03D3  0830               	movf	___awmod@sign,w
  3787  03D4  1903               	btfsc	3,2
  3788  03D5  2BD7               	goto	u941
  3789  03D6  2BD8               	goto	u940
  3790  03D7                     u941:	
  3791  03D7  2BDD               	goto	l1354
  3792  03D8                     u940:	
  3793  03D8                     l1352:	
  3794  03D8  09AD               	comf	___awmod@dividend,f
  3795  03D9  09AE               	comf	___awmod@dividend+1,f
  3796  03DA  0AAD               	incf	___awmod@dividend,f
  3797  03DB  1903               	skipnz
  3798  03DC  0AAE               	incf	___awmod@dividend+1,f
  3799  03DD                     l1354:	
  3800  03DD  082E               	movf	___awmod@dividend+1,w
  3801  03DE  00AC               	movwf	?___awmod+1
  3802  03DF  082D               	movf	___awmod@dividend,w
  3803  03E0  00AB               	movwf	?___awmod
  3804  03E1                     l442:	
  3805  03E1  0008               	return
  3806  03E2                     __end_of___awmod:	
  3807                           
  3808                           	psect	text23
  3809  05BA                     __ptext23:	
  3810 ;; *************** function _Timer0_ISR *****************
  3811 ;; Defined at:
  3812 ;;		line 166 in file "mainsource.c"
  3813 ;; Parameters:    Size  Location     Type
  3814 ;;		None
  3815 ;; Auto vars:     Size  Location     Type
  3816 ;;		None
  3817 ;; Return value:  Size  Location     Type
  3818 ;;                  1    wreg      void 
  3819 ;; Registers used:
  3820 ;;		wreg, status,2
  3821 ;; Tracked objects:
  3822 ;;		On entry : 0/0
  3823 ;;		On exit  : 0/0
  3824 ;;		Unchanged: 0/0
  3825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3826 ;;      Params:         0       0       0       0       0
  3827 ;;      Locals:         0       0       0       0       0
  3828 ;;      Temps:          2       0       0       0       0
  3829 ;;      Totals:         2       0       0       0       0
  3830 ;;Total ram usage:        2 bytes
  3831 ;; Hardware stack levels used:    1
  3832 ;; This function calls:
  3833 ;;		Nothing
  3834 ;; This function is called by:
  3835 ;;		Interrupt level 1
  3836 ;; This function uses a non-reentrant model
  3837 ;;
  3838                           
  3839                           
  3840                           ;psect for function _Timer0_ISR
  3841  05BA                     _Timer0_ISR:	
  3842  05BA                     i1l1502:	
  3843                           
  3844                           ;mainsource.c: 167:     if(INTCONbits.TMR0IF){
  3845  05BA  1D0B               	btfss	11,2	;volatile
  3846  05BB  2DBD               	goto	u108_21
  3847  05BC  2DBE               	goto	u108_20
  3848  05BD                     u108_21:	
  3849  05BD  2DD1               	goto	i1l1510
  3850  05BE                     u108_20:	
  3851  05BE                     i1l1504:	
  3852                           
  3853                           ;mainsource.c: 168:         INTCONbits.TMR0IF=0;
  3854  05BE  110B               	bcf	11,2	;volatile
  3855  05BF                     i1l1506:	
  3856                           
  3857                           ;mainsource.c: 169:         timerCount ++;
  3858  05BF  3001               	movlw	1
  3859  05C0  1283               	bcf	3,5	;RP0=0, select bank0
  3860  05C1  1303               	bcf	3,6	;RP1=0, select bank0
  3861  05C2  07C9               	addwf	_timerCount,f
  3862  05C3  3000               	movlw	0
  3863  05C4  1803               	skipnc
  3864  05C5  3001               	movlw	1
  3865  05C6  07CA               	addwf	_timerCount+1,f
  3866  05C7  3000               	movlw	0
  3867  05C8  1803               	skipnc
  3868  05C9  3001               	movlw	1
  3869  05CA  07CB               	addwf	_timerCount+2,f
  3870  05CB  3000               	movlw	0
  3871  05CC  1803               	skipnc
  3872  05CD  3001               	movlw	1
  3873  05CE  07CC               	addwf	_timerCount+3,f
  3874  05CF                     i1l1508:	
  3875                           
  3876                           ;mainsource.c: 170:         con.check_count = 1;
  3877  05CF  01C8               	clrf	_con+6
  3878  05D0  0AC8               	incf	_con+6,f
  3879  05D1                     i1l1510:	
  3880                           
  3881                           ;mainsource.c: 173:     if(PORTBbits.RB5 == 0){
  3882  05D1  1283               	bcf	3,5	;RP0=0, select bank0
  3883  05D2  1303               	bcf	3,6	;RP1=0, select bank0
  3884  05D3  1A86               	btfsc	6,5	;volatile
  3885  05D4  2DD6               	goto	u109_21
  3886  05D5  2DD7               	goto	u109_20
  3887  05D6                     u109_21:	
  3888  05D6  2DDA               	goto	i1l1516
  3889  05D7                     u109_20:	
  3890  05D7                     i1l1512:	
  3891                           
  3892                           ;mainsource.c: 174:         con.derecha = 1;
  3893  05D7  01C6               	clrf	_con+4
  3894  05D8  0AC6               	incf	_con+4,f
  3895  05D9                     i1l1514:	
  3896                           
  3897                           ;mainsource.c: 175:         con.izquierda = 0;
  3898  05D9  01C7               	clrf	_con+5
  3899  05DA                     i1l1516:	
  3900                           
  3901                           ;mainsource.c: 177:     if(PORTBbits.RB4 == 0){
  3902  05DA  1A06               	btfsc	6,4	;volatile
  3903  05DB  2DDD               	goto	u110_21
  3904  05DC  2DDE               	goto	u110_20
  3905  05DD                     u110_21:	
  3906  05DD  2DE1               	goto	i1l1522
  3907  05DE                     u110_20:	
  3908  05DE                     i1l1518:	
  3909                           
  3910                           ;mainsource.c: 178:         con.derecha = 0;
  3911  05DE  01C6               	clrf	_con+4
  3912  05DF                     i1l1520:	
  3913                           
  3914                           ;mainsource.c: 179:         con.izquierda = 1;
  3915  05DF  01C7               	clrf	_con+5
  3916  05E0  0AC7               	incf	_con+5,f
  3917  05E1                     i1l1522:	
  3918                           
  3919                           ;mainsource.c: 181:     if(PORTBbits.RB4 == 0){
  3920  05E1  1A06               	btfsc	6,4	;volatile
  3921  05E2  2DE4               	goto	u111_21
  3922  05E3  2DE5               	goto	u111_20
  3923  05E4                     u111_21:	
  3924  05E4  2DE8               	goto	i1l119
  3925  05E5                     u111_20:	
  3926  05E5                     i1l1524:	
  3927                           
  3928                           ;mainsource.c: 182:         con.derecha = 0;
  3929  05E5  01C6               	clrf	_con+4
  3930  05E6                     i1l1526:	
  3931                           
  3932                           ;mainsource.c: 183:         con.izquierda = 1;
  3933  05E6  01C7               	clrf	_con+5
  3934  05E7  0AC7               	incf	_con+5,f
  3935  05E8                     i1l119:	
  3936  05E8  0871               	movf	??_Timer0_ISR+1,w
  3937  05E9  008A               	movwf	10
  3938  05EA  0E70               	swapf	??_Timer0_ISR^(0+4294967168),w
  3939  05EB  0083               	movwf	3
  3940  05EC  0EFE               	swapf	btemp,f
  3941  05ED  0E7E               	swapf	btemp,w
  3942  05EE  0009               	retfie
  3943  05EF                     __end_of_Timer0_ISR:	
  3944  007E                     btemp	set	126	;btemp
  3945  007E                     wtemp0	set	126
  3946                           
  3947                           	psect	intentry
  3948  0004                     __pintentry:	
  3949                           ;incstack = 0
  3950                           ; Regs used in _Timer0_ISR: [wreg+status,2]
  3951                           
  3952  0004                     interrupt_function:	
  3953  007E                     saved_w	set	btemp
  3954  0004  00FE               	movwf	btemp
  3955  0005  0E03               	swapf	3,w
  3956  0006  00F0               	movwf	??_Timer0_ISR
  3957  0007  080A               	movf	10,w
  3958  0008  00F1               	movwf	??_Timer0_ISR+1
  3959  0009  120A  118A  2DBA   	ljmp	_Timer0_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        60
    BSS         59
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     38      69
    BANK1            80      0      32
    BANK3            96      0      56
    BANK2            96      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(1) Largest target is 16
		 -> fondo(BANK1[16]), ficha(BANK0[16]), 

    memset@p	PTR unsigned char  size(1) Largest target is 16
		 -> fondo(BANK1[16]), ficha(BANK0[16]), 

    updateScreen@screen	PTR unsigned int  size(1) Largest target is 16
		 -> pantalla(BANK1[16]), 

    sp__memset	PTR void  size(1) Largest target is 16
		 -> fondo(BANK1[16]), ficha(BANK0[16]), 


Critical Paths under _main in COMMON

    _main->___awmod
    _updateScreen->_setFilas
    _checkCount->___awmod
    _rand->___lmul
    _drawFigure->_memset

Critical Paths under _Timer0_ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_checkCount
    _updateScreen->_addToScreen
    _checkCount->___awmod
    _rand->___lmul
    _leerEntradas->_drawFigure
    ___awmod->_rand

Critical Paths under _Timer0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer0_ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     5      4    5463
                                             29 BANK0      9     5      4
                            ___awmod
                         _checkCount
                         _init_pines
                         _init_timer
                               _rand
                              _srand
                       _updateScreen
 ---------------------------------------------------------------------------------
 (1) _updateScreen                                         7     7      0     590
                                              2 BANK0      7     7      0
                        _addToScreen
                           _setFilas
                    _shiftBitColumna
 ---------------------------------------------------------------------------------
 (2) _shiftBitColumna                                      2     2      0      22
                                              2 COMMON     2     2      0
                     _latchClock_Col
                     _latchClock_Fil
                     _shiftClock_Col
 ---------------------------------------------------------------------------------
 (3) _shiftClock_Col                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _latchClock_Fil                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _latchClock_Col                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setFilas                                            10     8      2     265
                                              2 COMMON    10     8      2
                     _shiftClock_Fil
 ---------------------------------------------------------------------------------
 (3) _shiftClock_Fil                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _addToScreen                                         11    11      0     113
                                              2 COMMON     9     9      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_pines                                           0     0      0       0
                     _init_pines_col
                     _init_pines_fil
                      _init_pines_in
 ---------------------------------------------------------------------------------
 (2) _init_pines_in                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_pines_fil                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_pines_col                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkCount                                          12    12      0    3625
                                             17 BANK0     12    12      0
                            ___awmod
                        _drawBground
                         _drawFigure
                       _leerEntradas
                             _memset
                               _rand
 ---------------------------------------------------------------------------------
 (1) _rand                                                 7     5      2     244
                                              4 BANK0      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     244
                                              2 COMMON     9     1      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _leerEntradas                                        10    10      0     788
                                              9 COMMON     2     2      0
                                              5 BANK0      8     8      0
                         _drawFigure
 ---------------------------------------------------------------------------------
 (3) _drawFigure                                           5     5      0     651
                                              0 BANK0      5     5      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               7     3      4     651
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) _drawBground                                         11    11      0     113
                                              2 COMMON     9     9      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     904
                                             11 COMMON     1     1      0
                                             11 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Timer0_ISR                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awmod
     _rand (ARG)
       ___lmul
   _checkCount
     ___awmod
       _rand (ARG)
         ___lmul
     _drawBground
     _drawFigure
       _memset
     _leerEntradas
       _drawFigure
         _memset
     _memset
     _rand
       ___lmul
   _init_pines
     _init_pines_col
     _init_pines_fil
     _init_pines_in
   _init_timer
   _rand
     ___lmul
   _srand
   _updateScreen
     _addToScreen
     _setFilas
       _shiftClock_Fil
     _shiftBitColumna
       _latchClock_Col
       _latchClock_Fil
       _shiftClock_Col

 _Timer0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      38       9       58.3%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      20       7       40.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     26      45       5       86.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      A9      12        0.0%
ABS                  0      0      A9       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed May 13 19:21:39 2020

                       pc 0002               __CFG_CP$OFF 0000                        l21 0686  
                      l30 0660                        l24 067B                        l27 0650  
                      l36 066E                        l82 0209                        l85 0277  
                      l89 025D                        l98 00F5              drawBground@i 0020  
                      fsr 0004          ??_init_pines_col 0072          ??_init_pines_fil 0072  
                     l110 01C8                       l132 04FF                       l124 06A3  
                     l142 069D                       l150 062A                       l127 06A9  
                     l139 06AE                       l190 0323                       l182 0540  
                     l177 0386                       l442 03E1                       l290 042D  
                     l187 0581                       l724 060E                       l732 04BC  
                     l729 068F              __CFG_CPD$OFF 0000                       u604 02A1  
                     u605 029E                       u710 0423                       u615 02B5  
                     u711 0422                       u624 02C8                       u800 0272  
                     u720 04B4                       u625 02C5                       u801 0271  
                     u705 0413                       u810 0581                       u730 01D0  
                     u811 0580                       u635 02DC                       u731 01CF  
                     u900 03B6                       u580 060E                       u644 02EF  
                     u740 01D6                       u820 04CE                       u901 03B5  
                     u581 060D                       u645 02EC                       u805 026E  
                     u741 01D5                       u725 04AF                       u821 04CD  
                     u910 03C0                       u750 0202                       u670 03F0  
                     u911 03BF                       u815 057D                       u655 0303  
                     u751 0201                       u671 03EF                       u664 0316  
                     u760 0214                       u665 0313                       u761 0213  
                     u681 03FB                       u825 04CA                       u930 03D3  
                     u770 0225                       u682 0402                       u850 0540  
                     u834 04D9                       u931 03D2                       u915 03BC  
                     u595 028E                       u771 0224                       u683 0409  
                     u851 053F                       u835 04D6                       u940 03D8  
                     u860 038E                       u780 022A                       u844 04E6  
                     u941 03D7                       u925 03C7                       u861 038D  
                     u781 0229                       u765 0210                       u845 04E3  
                     u870 0399                       u790 0256                       u950 0046  
                     u871 0398                       u791 0255                       u695 040B  
                     u951 0045                       u855 053C                       u880 03A4  
                     u960 0061                       u881 03A3                       u961 0060  
                     u970 0076                       u971 0075                       u963 005D  
                     u980 00C9                       u981 00C8                       u990 010A  
                     u895 03A8                       u991 0109                       u995 0106  
                     _con 0042                       fsr0 0004                       indf 0000  
            ___awmod@sign 0030              __CFG_FOSC$XT 0000              __CFG_LVP$OFF 0000  
                    l1200 0698                      l1210 0412                      l1202 03E2  
                    l1212 0423                      l1204 03EC                      l1220 063E  
                    l1300 0610                      l1230 01C9                      l1206 03F0  
                    l1222 0476                      l1302 061B                      l1320 0387  
                    l1240 01DF                      l1232 01C9                      l1208 0409  
                    l1224 0497                      l1400 007B                      l1216 067C  
                    l1304 0620                      l1330 0399                      l1322 038A  
                    l1234 01D0                      l1226 04A5                      l1410 00CE  
                    l1402 0081                      l1218 066F                      l1314 0506  
                    l1306 0625                      l1340 03B2                      l1332 039E  
                    l1324 038E                      l1180 05FC                      l1260 022B  
                    l1244 0203                      l1236 01D6                      l1412 00D4  
                    l1404 009B                      l1316 052D                      l1308 0500  
                    l1500 046C                      l1342 03B6                      l1334 03A4  
                    l1350 03D3                      l1326 0393                      l1182 0600  
                    l1190 02D5                      l1262 0233                      l1246 0214  
                    l1238 01D7                      l1254 0220                      l1430 0144  
                    l1414 00EF                      l1406 00A3                      l1318 0533  
                    l1352 03D8                      l1344 03C0                      l1336 03A7  
                    l1328 0395                      l1280 0547                      l1176 05F0  
                    l1192 02FC                      l1184 0278                      l1256 0225  
                    l1248 021A                      l1432 015F                      l1424 0113  
                    l1416 010A                      l1408 00C9                      l1360 0661  
                    l1354 03DD                      l1346 03C6                      l1338 03AE  
                    l1282 056E                      l1274 0541                      l1178 05F5  
                    l1186 0285                      l1266 0257                      l1258 022A  
                    l1442 0176                      l1434 0165                      l1426 0124  
                    l1418 010F                      l1370 066A                      l1362 0664  
                    l1194 069E                      l1348 03CD                      l1284 0574  
                    l1188 02AE                      l1268 0272                      l1452 01A0  
                    l1436 0172                      l1428 013E                      l1380 003F  
                    l1372 066B                      l1364 0665                      l1196 06A4  
                    l1292 04CF                      l1460 0327                      l1454 01A6  
                    l1390 0069                      l1382 0046                      l1358 0651  
                    l1374 066C                      l1366 0666                      l1294 04F3  
                    l1286 04BD                      l1198 06AA                      l1470 0330  
                    l1462 0327                      l1456 01B3                      l1448 017A  
                    l1392 006E                      l1384 0049                      l1376 066D  
                    l1368 0667                      l1296 04F8                      l1288 04C1  
                    l1480 0371                      l1472 0338                      l1464 032C  
                    l1458 01BB                      l1394 006F                      l1386 004E  
                    l1378 0687                      l1482 0379                      l1474 034E  
                    l1490 0438                      l1396 0071                      l1388 0061  
                    l1476 0355                      l1492 043E                      l1484 042E  
                    l1398 0076                      l1478 036B                      l1494 0442  
                    l1486 0438                      l1496 044B                      l1488 0438  
                    l1498 0467                      u1000 0124                      u1001 0123  
                    u1010 0172                      u1011 0171                      u1030 019F  
                    u1031 019E                      u1015 016E                      u1040 01B3  
                    u1024 0191                      u1041 01B2                      u1025 018E  
                    u1050 01C8                      u1051 01C7                      u1060 0338  
                    u1045 01AF                      u1061 0337                      u1070 0386  
                    u1055 01C4                      u1071 0385                      u1075 0382  
                    _TMR0 0001             ?_leerEntradas 0070              __CFG_WRT$OFF 0000  
                    _main 042E                      _rand 0476                      btemp 007E  
           __CFG_BOREN$ON 0000                      start 000C        shiftBitColumna@bit 0073  
                   ?_main 003D                     ?_rand 0024             __CFG_WDTE$OFF 0000  
         __end_of___awmod 03E2                     i1l119 05E8       ___lmul@multiplicand 0076  
                   _ficha 004D                     _fondo 00A0                     _randx 005D  
                   _srand 0687            ??_leerEntradas 0025                     pclath 000A  
                   status 0003                     wtemp0 007E           __initialization 000F  
            __end_of_main 0476              __end_of_rand 04BD            _latchClock_Fil 069E  
          _latchClock_Col 06AA   __size_of_shiftClock_Fil 0006   __size_of_shiftClock_Col 0006  
                  ??_main 0041                    ??_rand 0026                    ?_srand 0072  
                  u110_20 05DE                    u110_21 05DD                    u111_20 05E5  
                  u111_21 05E4                    i1l1510 05D1                    i1l1502 05BA  
                  i1l1520 05DF                    i1l1512 05D7                    i1l1504 05BE  
                  i1l1522 05E1                    i1l1514 05D9                    i1l1506 05BF  
                  i1l1524 05E5                    i1l1516 05DA                    i1l1508 05CF  
                  i1l1526 05E6                    i1l1518 05DE                    u108_20 05BE  
                  u108_21 05BD                    u109_20 05D7                    u109_21 05D6  
          __CFG_PWRTE$OFF 0000      __size_of_drawBground 0041                _Timer0_ISR 05BA  
  __end_of_latchClock_Col 06AF    __end_of_latchClock_Fil 06A4                    ___lmul 03E2  
               ??___awmod 007B                    _memset 05EF           ___awmod@divisor 002B  
         ___awmod@counter 002F          __end_of_setFilas 0500              addToScreen@i 0020  
  __size_of_init_pines_in 000B                    saved_w 007E                    srand@x 0072  
 __end_of__initialization 003B             updateScreen@i 0027  __size_of_shiftBitColumna 001C  
      updateScreen@screen 0026           ?_latchClock_Col 0070           ?_latchClock_Fil 0070  
          __pcstackCOMMON 0070              __pidataBANK0 06AF              __pidataBANK3 0582  
           __end_of_srand 0690      __end_of_leerEntradas 0278            _OPTION_REGbits 0081  
              _checkCount 003F                   ??_srand 0074                __pbssBANK0 0042  
              __pbssBANK1 00A0             ??_addToScreen 0072             _init_pines_in 067C  
             ?_Timer0_ISR 0070             leerEntradas@i 0079                __pmaintext 042E  
                 ?___lmul 0072                __pintentry 0004            _shiftClock_Fil 06A4  
          _shiftClock_Col 0698                   ?_memset 0072            ___lmul@product 0020  
              _drawFigure 0278            ?_init_pines_in 0070                 ?_setFilas 0072  
  __end_of_shiftClock_Fil 06AA    __end_of_shiftClock_Col 069E       __end_of_addToScreen 0541  
         __size_of___lmul 004C                   ___awmod 0387         ??_shiftBitColumna 0072  
              _init_pines 0651                _init_timer 0661           __size_of_memset 0020  
                 __ptext1 0324                   __ptext2 060F                   __ptext3 0698  
                 __ptext4 069E                   __ptext5 06AA                   __ptext6 04BD  
                 __ptext7 06A4                   __ptext8 0500                   __ptext9 0687  
                 _figuras 0190          ___awmod@dividend 002D       __size_of_Timer0_ISR 0035  
                 clrloop0 0691               ?_checkCount 0070      end_of_initialization 003B  
 __size_of_init_pines_col 0013   __size_of_init_pines_fil 000D                   memset@c 0072  
                 memset@n 0074                   memset@p 0077                ??_setFilas 0074  
   __size_of_leerEntradas 00AF           ?_shiftClock_Col 0070           ?_shiftClock_Fil 0070  
              _timerCount 0049                 _PORTBbits 0006                 _PORTCbits 0007  
               _PORTDbits 0008               ?_drawFigure 0070                 _TRISBbits 0086  
               _TRISCbits 0087                 _TRISDbits 0088           ??_init_pines_in 0072  
            _leerEntradas 01C9             ??_drawBground 0072          ??_latchClock_Col 0072  
        ??_latchClock_Fil 0072               _addToScreen 0500             ?_updateScreen 0070  
          __end_of___lmul 042E       __size_of_checkCount 018A               ?_init_pines 0070  
             ?_init_timer 0070            __end_of_memset 060F       start_initialization 000F  
          ??_updateScreen 0022              ??_Timer0_ISR 0070       __size_of_drawFigure 00AC  
     __end_of_drawBground 0582                  ??___lmul 007A         setFilas@reg_value 0072  
              init_fetch0 062B               __pdataBANK0 005D               __pdataBANK3 0190  
                ??_memset 0076                 ___latbits 0002             __pcstackBANK0 0020  
      __end_of_Timer0_ISR 05EF            _init_pines_fil 066F            _init_pines_col 063E  
     __size_of_init_pines 0010           _shiftBitColumna 060F       __size_of_init_timer 000E  
       __size_of_setFilas 0043                  ?___awmod 002B    __end_of_init_pines_col 0651  
  __end_of_init_pines_fil 067C              ??_checkCount 0031            __size_of_srand 0009  
       interrupt_function 0004               _drawBground 0541          ??_shiftClock_Col 0072  
        ??_shiftClock_Fil 0072                 clear_ram0 0690        __end_of_checkCount 01C9  
            ??_drawFigure 0020      __end_of_updateScreen 0387           ?_init_pines_col 0070  
         ?_init_pines_fil 0070   __end_of_shiftBitColumna 062B         ___lmul@multiplier 0072  
            ?_addToScreen 0070               checkCount@i 003B               checkCount@j 0039  
      __end_of_drawFigure 0324          __size_of___awmod 005B              ??_init_pines 0072  
            ??_init_timer 0072                 setFilas@i 007A                  __ptext10 0661  
                __ptext11 0651                  __ptext20 05EF                  __ptext12 067C  
                __ptext21 0541                  __ptext13 066F                  __ptext22 0387  
                __ptext14 063E                  __ptext23 05BA                  __ptext15 003F  
                __ptext16 0476                  __ptext17 03E2                  __ptext18 01C9  
                __ptext19 0278     __end_of_init_pines_in 0687             __size_of_main 0048  
           __size_of_rand 0047        __end_of_init_pines 0661        __end_of_init_timer 066F  
                _pantalla 00B0                  _setFilas 04BD                  main@argc 003D  
                main@argv 003F                _INTCONbits 000B                  init_ram0 062F  
                memset@p1 0078          ?_shiftBitColumna 0070                  intlevel1 0000  
 __size_of_latchClock_Col 0005   __size_of_latchClock_Fil 0006     __size_of_updateScreen 0063  
            ?_drawBground 0070      __size_of_addToScreen 0041              _updateScreen 0324  
