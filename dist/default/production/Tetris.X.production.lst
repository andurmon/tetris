

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat May 02 23:45:25 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.10
    41                           ; Generated 31/07/2019 GMT
    42                           ; 
    43                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F877A Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  000E                     	;# 
    90  000F                     	;# 
    91  0010                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0015                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  001D                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  0081                     	;# 
   110  0085                     	;# 
   111  0086                     	;# 
   112  0087                     	;# 
   113  0088                     	;# 
   114  0089                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0094                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009C                     	;# 
   185  009D                     	;# 
   186  009E                     	;# 
   187  009F                     	;# 
   188  010C                     	;# 
   189  010D                     	;# 
   190  010E                     	;# 
   191  010F                     	;# 
   192  018C                     	;# 
   193  018D                     	;# 
   194  0000                     	;# 
   195  0001                     	;# 
   196  0002                     	;# 
   197  0003                     	;# 
   198  0004                     	;# 
   199  0005                     	;# 
   200  0006                     	;# 
   201  0007                     	;# 
   202  0008                     	;# 
   203  0009                     	;# 
   204  000A                     	;# 
   205  000B                     	;# 
   206  000C                     	;# 
   207  000D                     	;# 
   208  000E                     	;# 
   209  000E                     	;# 
   210  000F                     	;# 
   211  0010                     	;# 
   212  0011                     	;# 
   213  0012                     	;# 
   214  0013                     	;# 
   215  0014                     	;# 
   216  0015                     	;# 
   217  0015                     	;# 
   218  0016                     	;# 
   219  0017                     	;# 
   220  0018                     	;# 
   221  0019                     	;# 
   222  001A                     	;# 
   223  001B                     	;# 
   224  001B                     	;# 
   225  001C                     	;# 
   226  001D                     	;# 
   227  001E                     	;# 
   228  001F                     	;# 
   229  0081                     	;# 
   230  0085                     	;# 
   231  0086                     	;# 
   232  0087                     	;# 
   233  0088                     	;# 
   234  0089                     	;# 
   235  008C                     	;# 
   236  008D                     	;# 
   237  008E                     	;# 
   238  0091                     	;# 
   239  0092                     	;# 
   240  0093                     	;# 
   241  0094                     	;# 
   242  0098                     	;# 
   243  0099                     	;# 
   244  009C                     	;# 
   245  009D                     	;# 
   246  009E                     	;# 
   247  009F                     	;# 
   248  010C                     	;# 
   249  010D                     	;# 
   250  010E                     	;# 
   251  010F                     	;# 
   252  018C                     	;# 
   253  018D                     	;# 
   254  0000                     	;# 
   255  0001                     	;# 
   256  0002                     	;# 
   257  0003                     	;# 
   258  0004                     	;# 
   259  0005                     	;# 
   260  0006                     	;# 
   261  0007                     	;# 
   262  0008                     	;# 
   263  0009                     	;# 
   264  000A                     	;# 
   265  000B                     	;# 
   266  000C                     	;# 
   267  000D                     	;# 
   268  000E                     	;# 
   269  000E                     	;# 
   270  000F                     	;# 
   271  0010                     	;# 
   272  0011                     	;# 
   273  0012                     	;# 
   274  0013                     	;# 
   275  0014                     	;# 
   276  0015                     	;# 
   277  0015                     	;# 
   278  0016                     	;# 
   279  0017                     	;# 
   280  0018                     	;# 
   281  0019                     	;# 
   282  001A                     	;# 
   283  001B                     	;# 
   284  001B                     	;# 
   285  001C                     	;# 
   286  001D                     	;# 
   287  001E                     	;# 
   288  001F                     	;# 
   289  0081                     	;# 
   290  0085                     	;# 
   291  0086                     	;# 
   292  0087                     	;# 
   293  0088                     	;# 
   294  0089                     	;# 
   295  008C                     	;# 
   296  008D                     	;# 
   297  008E                     	;# 
   298  0091                     	;# 
   299  0092                     	;# 
   300  0093                     	;# 
   301  0094                     	;# 
   302  0098                     	;# 
   303  0099                     	;# 
   304  009C                     	;# 
   305  009D                     	;# 
   306  009E                     	;# 
   307  009F                     	;# 
   308  010C                     	;# 
   309  010D                     	;# 
   310  010E                     	;# 
   311  010F                     	;# 
   312  018C                     	;# 
   313  018D                     	;# 
   314  0000                     	;# 
   315  0001                     	;# 
   316  0002                     	;# 
   317  0003                     	;# 
   318  0004                     	;# 
   319  0005                     	;# 
   320  0006                     	;# 
   321  0007                     	;# 
   322  0008                     	;# 
   323  0009                     	;# 
   324  000A                     	;# 
   325  000B                     	;# 
   326  000C                     	;# 
   327  000D                     	;# 
   328  000E                     	;# 
   329  000E                     	;# 
   330  000F                     	;# 
   331  0010                     	;# 
   332  0011                     	;# 
   333  0012                     	;# 
   334  0013                     	;# 
   335  0014                     	;# 
   336  0015                     	;# 
   337  0015                     	;# 
   338  0016                     	;# 
   339  0017                     	;# 
   340  0018                     	;# 
   341  0019                     	;# 
   342  001A                     	;# 
   343  001B                     	;# 
   344  001B                     	;# 
   345  001C                     	;# 
   346  001D                     	;# 
   347  001E                     	;# 
   348  001F                     	;# 
   349  0081                     	;# 
   350  0085                     	;# 
   351  0086                     	;# 
   352  0087                     	;# 
   353  0088                     	;# 
   354  0089                     	;# 
   355  008C                     	;# 
   356  008D                     	;# 
   357  008E                     	;# 
   358  0091                     	;# 
   359  0092                     	;# 
   360  0093                     	;# 
   361  0094                     	;# 
   362  0098                     	;# 
   363  0099                     	;# 
   364  009C                     	;# 
   365  009D                     	;# 
   366  009E                     	;# 
   367  009F                     	;# 
   368  010C                     	;# 
   369  010D                     	;# 
   370  010E                     	;# 
   371  010F                     	;# 
   372  018C                     	;# 
   373  018D                     	;# 
   374  0000                     	;# 
   375  0001                     	;# 
   376  0002                     	;# 
   377  0003                     	;# 
   378  0004                     	;# 
   379  0005                     	;# 
   380  0006                     	;# 
   381  0007                     	;# 
   382  0008                     	;# 
   383  0009                     	;# 
   384  000A                     	;# 
   385  000B                     	;# 
   386  000C                     	;# 
   387  000D                     	;# 
   388  000E                     	;# 
   389  000E                     	;# 
   390  000F                     	;# 
   391  0010                     	;# 
   392  0011                     	;# 
   393  0012                     	;# 
   394  0013                     	;# 
   395  0014                     	;# 
   396  0015                     	;# 
   397  0015                     	;# 
   398  0016                     	;# 
   399  0017                     	;# 
   400  0018                     	;# 
   401  0019                     	;# 
   402  001A                     	;# 
   403  001B                     	;# 
   404  001B                     	;# 
   405  001C                     	;# 
   406  001D                     	;# 
   407  001E                     	;# 
   408  001F                     	;# 
   409  0081                     	;# 
   410  0085                     	;# 
   411  0086                     	;# 
   412  0087                     	;# 
   413  0088                     	;# 
   414  0089                     	;# 
   415  008C                     	;# 
   416  008D                     	;# 
   417  008E                     	;# 
   418  0091                     	;# 
   419  0092                     	;# 
   420  0093                     	;# 
   421  0094                     	;# 
   422  0098                     	;# 
   423  0099                     	;# 
   424  009C                     	;# 
   425  009D                     	;# 
   426  009E                     	;# 
   427  009F                     	;# 
   428  010C                     	;# 
   429  010D                     	;# 
   430  010E                     	;# 
   431  010F                     	;# 
   432  018C                     	;# 
   433  018D                     	;# 
   434  0000                     	;# 
   435  0001                     	;# 
   436  0002                     	;# 
   437  0003                     	;# 
   438  0004                     	;# 
   439  0005                     	;# 
   440  0006                     	;# 
   441  0007                     	;# 
   442  0008                     	;# 
   443  0009                     	;# 
   444  000A                     	;# 
   445  000B                     	;# 
   446  000C                     	;# 
   447  000D                     	;# 
   448  000E                     	;# 
   449  000E                     	;# 
   450  000F                     	;# 
   451  0010                     	;# 
   452  0011                     	;# 
   453  0012                     	;# 
   454  0013                     	;# 
   455  0014                     	;# 
   456  0015                     	;# 
   457  0015                     	;# 
   458  0016                     	;# 
   459  0017                     	;# 
   460  0018                     	;# 
   461  0019                     	;# 
   462  001A                     	;# 
   463  001B                     	;# 
   464  001B                     	;# 
   465  001C                     	;# 
   466  001D                     	;# 
   467  001E                     	;# 
   468  001F                     	;# 
   469  0081                     	;# 
   470  0085                     	;# 
   471  0086                     	;# 
   472  0087                     	;# 
   473  0088                     	;# 
   474  0089                     	;# 
   475  008C                     	;# 
   476  008D                     	;# 
   477  008E                     	;# 
   478  0091                     	;# 
   479  0092                     	;# 
   480  0093                     	;# 
   481  0094                     	;# 
   482  0098                     	;# 
   483  0099                     	;# 
   484  009C                     	;# 
   485  009D                     	;# 
   486  009E                     	;# 
   487  009F                     	;# 
   488  010C                     	;# 
   489  010D                     	;# 
   490  010E                     	;# 
   491  010F                     	;# 
   492  018C                     	;# 
   493  018D                     	;# 
   494                           
   495                           	psect	idataBANK0
   496  0519                     __pidataBANK0:	
   497                           
   498                           ;initializer for _randx
   499  0519  3401               	retlw	1
   500  051A  3400               	retlw	0
   501  051B  3400               	retlw	0
   502  051C  3400               	retlw	0
   503                           
   504                           	psect	idataBANK1
   505  03AC                     __pidataBANK1:	
   506                           
   507                           ;initializer for _figuras
   508  03AC  3402               	retlw	2
   509  03AD  3400               	retlw	0
   510  03AE  3402               	retlw	2
   511  03AF  3400               	retlw	0
   512  03B0  3403               	retlw	3
   513  03B1  3400               	retlw	0
   514  03B2  3400               	retlw	0
   515  03B3  3400               	retlw	0
   516  03B4  3400               	retlw	0
   517  03B5  3400               	retlw	0
   518  03B6  3403               	retlw	3
   519  03B7  3400               	retlw	0
   520  03B8  3402               	retlw	2
   521  03B9  3400               	retlw	0
   522  03BA  3402               	retlw	2
   523  03BB  3400               	retlw	0
   524  03BC  3401               	retlw	1
   525  03BD  3400               	retlw	0
   526  03BE  3403               	retlw	3
   527  03BF  3400               	retlw	0
   528  03C0  3402               	retlw	2
   529  03C1  3400               	retlw	0
   530  03C2  3400               	retlw	0
   531  03C3  3400               	retlw	0
   532  03C4  3400               	retlw	0
   533  03C5  3400               	retlw	0
   534  03C6  3402               	retlw	2
   535  03C7  3400               	retlw	0
   536  03C8  3403               	retlw	3
   537  03C9  3400               	retlw	0
   538  03CA  3401               	retlw	1
   539  03CB  3400               	retlw	0
   540  03CC  3401               	retlw	1
   541  03CD  3400               	retlw	0
   542  03CE  3401               	retlw	1
   543  03CF  3400               	retlw	0
   544  03D0  3401               	retlw	1
   545  03D1  3400               	retlw	0
   546  03D2  3401               	retlw	1
   547  03D3  3400               	retlw	0
   548  03D4  3400               	retlw	0
   549  03D5  3400               	retlw	0
   550  03D6  3403               	retlw	3
   551  03D7  3400               	retlw	0
   552  03D8  3403               	retlw	3
   553  03D9  3400               	retlw	0
   554  03DA  3400               	retlw	0
   555  03DB  3400               	retlw	0
   556  0001                     _TMR0	set	1
   557  000B                     _INTCONbits	set	11
   558  0008                     _PORTDbits	set	8
   559  0007                     _PORTCbits	set	7
   560  0006                     _PORTBbits	set	6
   561  0081                     _OPTION_REGbits	set	129
   562  0088                     _TRISDbits	set	136
   563  0087                     _TRISCbits	set	135
   564  0086                     _TRISBbits	set	134
   565                           
   566                           ; #config settings
   567  0000                     
   568                           	psect	cinit
   569  000F                     start_initialization:	
   570  000F                     __initialization:	
   571                           
   572                           ; Initialize objects allocated to BANK1
   573  000F  1383               	bcf	3,7	;select IRP bank0
   574  0010  30D0               	movlw	low (__pdataBANK1+48)
   575  0011  00FD               	movwf	btemp+-1
   576  0012  3003               	movlw	high __pidataBANK1
   577  0013  00FE               	movwf	btemp
   578  0014  30AC               	movlw	low __pidataBANK1
   579  0015  00FF               	movwf	btemp+1
   580  0016  30A0               	movlw	low __pdataBANK1
   581  0017  0084               	movwf	4
   582  0018  120A  118A  249A  120A  118A  	fcall	init_ram0
   583                           
   584                           ; Initialize objects allocated to BANK0
   585  001D  3064               	movlw	low (__pdataBANK0+4)
   586  001E  00FD               	movwf	btemp+-1
   587  001F  3005               	movlw	high __pidataBANK0
   588  0020  00FE               	movwf	btemp
   589  0021  3019               	movlw	low __pidataBANK0
   590  0022  00FF               	movwf	btemp+1
   591  0023  3060               	movlw	low __pdataBANK0
   592  0024  0084               	movwf	4
   593  0025  120A  118A  249A  120A  118A  	fcall	init_ram0
   594                           
   595                           ; Clear objects allocated to BANK1
   596  002A  30D0               	movlw	low __pbssBANK1
   597  002B  0084               	movwf	4
   598  002C  30F0               	movlw	low (__pbssBANK1+32)
   599  002D  120A  118A  24F2  120A  118A  	fcall	clear_ram0
   600                           
   601                           ; Clear objects allocated to BANK0
   602  0032  3045               	movlw	low __pbssBANK0
   603  0033  0084               	movwf	4
   604  0034  3060               	movlw	low (__pbssBANK0+27)
   605  0035  120A  118A  24F2  120A  118A  	fcall	clear_ram0
   606  003A                     end_of_initialization:	
   607                           ;End of C runtime variable initialization code
   608                           
   609  003A                     __end_of__initialization:	
   610  003A  0183               	clrf	3
   611  003B  120A  118A  2BDC   	ljmp	_main	;jump to C main() function
   612                           
   613                           	psect	bssBANK0
   614  0045                     __pbssBANK0:	
   615  0045                     _fondo:	
   616  0045                     	ds	16
   617  0055                     _con:	
   618  0055                     	ds	9
   619  005E                     _timerCount:	
   620  005E                     	ds	2
   621                           
   622                           	psect	dataBANK0
   623  0060                     __pdataBANK0:	
   624  0060                     _randx:	
   625  0060                     	ds	4
   626                           
   627                           	psect	bssBANK1
   628  00D0                     __pbssBANK1:	
   629  00D0                     _ficha:	
   630  00D0                     	ds	16
   631  00E0                     _pantalla:	
   632  00E0                     	ds	16
   633                           
   634                           	psect	dataBANK1
   635  00A0                     __pdataBANK1:	
   636  00A0                     _figuras:	
   637  00A0                     	ds	48
   638                           
   639                           	psect	inittext
   640  0496                     init_fetch0:	
   641                           ;	Called with low address in FSR and high address in W
   642                           
   643  0496  087E               	movf	btemp,w
   644  0497  008A               	movwf	10
   645  0498  087F               	movf	btemp+1,w
   646  0499  0082               	movwf	2
   647  049A                     init_ram0:	
   648                           ;Called with:
   649                           ;	high address of idata address in btemp 
   650                           ;	low address of idata address in btemp+1 
   651                           ;	low address of data in FSR
   652                           ;	high address + 1 of data in btemp-1
   653                           
   654  049A  120A  118A  2496  120A  118A  	fcall	init_fetch0
   655  049F  0080               	movwf	0
   656  04A0  0A84               	incf	4,f
   657  04A1  0804               	movf	4,w
   658  04A2  067D               	xorwf	btemp+-1,w
   659  04A3  1903               	btfsc	3,2
   660  04A4  3400               	retlw	0
   661  04A5  0AFF               	incf	btemp+1,f
   662  04A6  1903               	btfsc	3,2
   663  04A7  0AFE               	incf	btemp,f
   664  04A8  2C9A               	goto	init_ram0
   665                           
   666                           	psect	clrtext
   667  04F2                     clear_ram0:	
   668                           ;	Called with FSR containing the base address, and
   669                           ;	W with the last address+1
   670                           
   671  04F2  0064               	clrwdt	;clear the watchdog before getting into this loop
   672  04F3                     clrloop0:	
   673  04F3  0180               	clrf	0	;clear RAM location pointed to by FSR
   674  04F4  0A84               	incf	4,f	;increment pointer
   675  04F5  0604               	xorwf	4,w	;XOR with final address
   676  04F6  1903               	btfsc	3,2	;have we reached the end yet?
   677  04F7  3400               	retlw	0	;all done for this memory range, return
   678  04F8  0604               	xorwf	4,w	;XOR again to restore value
   679  04F9  2CF3               	goto	clrloop0	;do the next byte
   680                           
   681                           	psect	cstackCOMMON
   682  0070                     __pcstackCOMMON:	
   683  0070                     ?_drawBground:	
   684  0070                     ?_checkCount:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0070                     ?_updateScreen:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0070                     ?_drawFigure:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0070                     ?_init_pines_in:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0070                     ?_init_pines_fil:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0070                     ?_init_pines_col:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0070                     ?_init_pines:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0070                     ?_init_interrupt:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0070                     ?_init_timer:	
   709                           ; 1 bytes @ 0x0
   710                           
   711  0070                     ?_Timer0_ISR:	
   712                           ; 1 bytes @ 0x0
   713                           
   714  0070                     ??_Timer0_ISR:	
   715                           ; 1 bytes @ 0x0
   716                           
   717  0070                     ?_latchClock_Fil:	
   718                           ; 1 bytes @ 0x0
   719                           
   720  0070                     ?_shiftClock_Fil:	
   721                           ; 1 bytes @ 0x0
   722                           
   723  0070                     ?_latchClock_Col:	
   724                           ; 1 bytes @ 0x0
   725                           
   726  0070                     ?_shiftClock_Col:	
   727                           ; 1 bytes @ 0x0
   728                           
   729  0070                     ?_shiftBitColumna:	
   730                           ; 1 bytes @ 0x0
   731                           
   732                           
   733                           ; 1 bytes @ 0x0
   734  0070                     	ds	2
   735  0072                     ??_drawBground:	
   736  0072                     ?_memset:	
   737                           ; 1 bytes @ 0x2
   738                           
   739  0072                     ??_init_pines_in:	
   740                           ; 1 bytes @ 0x2
   741                           
   742  0072                     ??_init_pines_fil:	
   743                           ; 1 bytes @ 0x2
   744                           
   745  0072                     ??_init_pines_col:	
   746                           ; 1 bytes @ 0x2
   747                           
   748  0072                     ??_init_pines:	
   749                           ; 1 bytes @ 0x2
   750                           
   751  0072                     ??_init_interrupt:	
   752                           ; 1 bytes @ 0x2
   753                           
   754  0072                     ??_init_timer:	
   755                           ; 1 bytes @ 0x2
   756                           
   757  0072                     ??_latchClock_Fil:	
   758                           ; 1 bytes @ 0x2
   759                           
   760  0072                     ??_shiftClock_Fil:	
   761                           ; 1 bytes @ 0x2
   762                           
   763  0072                     ?_setFilas:	
   764                           ; 1 bytes @ 0x2
   765                           
   766  0072                     ??_latchClock_Col:	
   767                           ; 1 bytes @ 0x2
   768                           
   769  0072                     ??_shiftClock_Col:	
   770                           ; 1 bytes @ 0x2
   771                           
   772  0072                     ??_shiftBitColumna:	
   773                           ; 1 bytes @ 0x2
   774                           
   775  0072                     ?___lmul:	
   776                           ; 1 bytes @ 0x2
   777                           
   778  0072                     setFilas@reg_value:	
   779                           ; 4 bytes @ 0x2
   780                           
   781  0072                     memset@c:	
   782                           ; 2 bytes @ 0x2
   783                           
   784  0072                     ___lmul@multiplier:	
   785                           ; 2 bytes @ 0x2
   786                           
   787                           
   788                           ; 4 bytes @ 0x2
   789  0072                     	ds	1
   790  0073                     shiftBitColumna@bit:	
   791                           
   792                           ; 1 bytes @ 0x3
   793  0073                     	ds	1
   794  0074                     ??_setFilas:	
   795  0074                     memset@n:	
   796                           ; 1 bytes @ 0x4
   797                           
   798                           
   799                           ; 2 bytes @ 0x4
   800  0074                     	ds	2
   801  0076                     ??_memset:	
   802  0076                     ___lmul@multiplicand:	
   803                           ; 1 bytes @ 0x6
   804                           
   805                           
   806                           ; 4 bytes @ 0x6
   807  0076                     	ds	1
   808  0077                     memset@p1:	
   809                           
   810                           ; 1 bytes @ 0x7
   811  0077                     	ds	1
   812  0078                     memset@p:	
   813                           
   814                           ; 1 bytes @ 0x8
   815  0078                     	ds	2
   816  007A                     ??___lmul:	
   817  007A                     setFilas@i:	
   818                           ; 1 bytes @ 0xA
   819                           
   820                           
   821                           ; 2 bytes @ 0xA
   822  007A                     	ds	1
   823  007B                     ??___awmod:	
   824                           
   825                           ; 1 bytes @ 0xB
   826  007B                     	ds	1
   827                           
   828                           	psect	cstackBANK0
   829  0020                     __pcstackBANK0:	
   830  0020                     ??_updateScreen:	
   831  0020                     ??_drawFigure:	
   832                           ; 1 bytes @ 0x0
   833                           
   834  0020                     ___lmul@product:	
   835                           ; 1 bytes @ 0x0
   836                           
   837                           
   838                           ; 4 bytes @ 0x0
   839  0020                     	ds	4
   840  0024                     ?_rand:	
   841  0024                     updateScreen@screen:	
   842                           ; 2 bytes @ 0x4
   843                           
   844                           
   845                           ; 1 bytes @ 0x4
   846  0024                     	ds	2
   847  0026                     ??_rand:	
   848                           
   849                           ; 1 bytes @ 0x6
   850  0026                     	ds	5
   851  002B                     ?___awmod:	
   852  002B                     ___awmod@divisor:	
   853                           ; 2 bytes @ 0xB
   854                           
   855                           
   856                           ; 2 bytes @ 0xB
   857  002B                     	ds	2
   858  002D                     ___awmod@dividend:	
   859                           
   860                           ; 2 bytes @ 0xD
   861  002D                     	ds	2
   862  002F                     ___awmod@counter:	
   863                           
   864                           ; 1 bytes @ 0xF
   865  002F                     	ds	1
   866  0030                     ___awmod@sign:	
   867                           
   868                           ; 1 bytes @ 0x10
   869  0030                     	ds	1
   870  0031                     ??_checkCount:	
   871                           
   872                           ; 1 bytes @ 0x11
   873  0031                     	ds	9
   874  003A                     checkCount@condicion:	
   875                           
   876                           ; 2 bytes @ 0x1A
   877  003A                     	ds	2
   878  003C                     checkCount@j:	
   879                           
   880                           ; 2 bytes @ 0x1C
   881  003C                     	ds	2
   882  003E                     checkCount@i:	
   883                           
   884                           ; 2 bytes @ 0x1E
   885  003E                     	ds	2
   886  0040                     ?_main:	
   887  0040                     main@argc:	
   888                           ; 2 bytes @ 0x20
   889                           
   890                           
   891                           ; 2 bytes @ 0x20
   892  0040                     	ds	2
   893  0042                     main@argv:	
   894                           
   895                           ; 2 bytes @ 0x22
   896  0042                     	ds	2
   897  0044                     ??_main:	
   898                           
   899                           ; 1 bytes @ 0x24
   900  0044                     	ds	1
   901                           
   902                           	psect	maintext
   903  03DC                     __pmaintext:	
   904 ;;
   905 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   906 ;;
   907 ;; *************** function _main *****************
   908 ;; Defined at:
   909 ;;		line 41 in file "mainsource.c"
   910 ;; Parameters:    Size  Location     Type
   911 ;;  argc            2   32[BANK0 ] int 
   912 ;;  argv            2   34[BANK0 ] PTR PTR unsigned char 
   913 ;; Auto vars:     Size  Location     Type
   914 ;;  j               2    0        int 
   915 ;;  i               2    0        int 
   916 ;; Return value:  Size  Location     Type
   917 ;;                  2   32[BANK0 ] int 
   918 ;; Registers used:
   919 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   920 ;; Tracked objects:
   921 ;;		On entry : B00/0
   922 ;;		On exit  : 0/0
   923 ;;		Unchanged: 0/0
   924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   925 ;;      Params:         0       4       0       0       0
   926 ;;      Locals:         0       4       0       0       0
   927 ;;      Temps:          0       1       0       0       0
   928 ;;      Totals:         0       9       0       0       0
   929 ;;Total ram usage:        9 bytes
   930 ;; Hardware stack levels required when called:    4
   931 ;; This function calls:
   932 ;;		_checkCount
   933 ;;		_drawBground
   934 ;;		_init_interrupt
   935 ;;		_init_pines
   936 ;;		_init_timer
   937 ;;		_updateScreen
   938 ;; This function is called by:
   939 ;;		Startup code after reset
   940 ;; This function uses a non-reentrant model
   941 ;;
   942                           
   943                           
   944                           ;psect for function _main
   945  03DC                     _main:	
   946  03DC                     l1299:	
   947                           ;incstack = 0
   948                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   949                           
   950                           
   951                           ;mainsource.c: 46:     init_pines();
   952  03DC  120A  118A  24BC  120A  118A  	fcall	_init_pines
   953                           
   954                           ;mainsource.c: 47:     init_interrupt();
   955  03E1  120A  118A  24FA  120A  118A  	fcall	_init_interrupt
   956                           
   957                           ;mainsource.c: 48:     init_timer();
   958  03E6  120A  118A  24CC  120A  118A  	fcall	_init_timer
   959  03EB                     l1301:	
   960  03EB                     l1303:	
   961  03EB                     l1305:	
   962                           
   963                           ;mainsource.c: 50:     con.columna = 1;
   964  03EB  1283               	bcf	3,5	;RP0=0, select bank0
   965  03EC  1303               	bcf	3,6	;RP1=0, select bank0
   966  03ED  01D5               	clrf	_con
   967  03EE  0AD5               	incf	_con,f
   968  03EF                     l1307:	
   969                           
   970                           ;mainsource.c: 51:     con.ficha_Vpos = 16;
   971  03EF  3010               	movlw	16
   972  03F0  00C4               	movwf	??_main
   973  03F1  0844               	movf	??_main,w
   974  03F2  00D8               	movwf	_con+3
   975  03F3                     l1309:	
   976                           
   977                           ;mainsource.c: 52:     con.ficha_Hpos = 2;
   978  03F3  3002               	movlw	2
   979  03F4  00C4               	movwf	??_main
   980  03F5  0844               	movf	??_main,w
   981  03F6  00D9               	movwf	_con+4
   982  03F7                     l1311:	
   983                           
   984                           ;mainsource.c: 54:     drawBground();
   985  03F7  120A  118A  2437  120A  118A  	fcall	_drawBground
   986  03FC                     l1313:	
   987                           
   988                           ;mainsource.c: 57:         checkCount();
   989  03FC  120A  118A  203E  120A  118A  	fcall	_checkCount
   990  0401                     l1315:	
   991                           
   992                           ;mainsource.c: 59:         updateScreen(pantalla);
   993  0401  30E0               	movlw	(low (_pantalla| 0))& (0+255)
   994  0402  120A  118A  22D7  120A  118A  	fcall	_updateScreen
   995  0407  2BFC               	goto	l1313
   996  0408  120A  118A  280C   	ljmp	start
   997  040B                     __end_of_main:	
   998                           
   999                           	psect	text1
  1000  02D7                     __ptext1:	
  1001 ;; *************** function _updateScreen *****************
  1002 ;; Defined at:
  1003 ;;		line 12 in file "screen.c"
  1004 ;; Parameters:    Size  Location     Type
  1005 ;;  screen          1    wreg     PTR unsigned int 
  1006 ;;		 -> pantalla(16), 
  1007 ;; Auto vars:     Size  Location     Type
  1008 ;;  screen          1    4[BANK0 ] PTR unsigned int 
  1009 ;;		 -> pantalla(16), 
  1010 ;; Return value:  Size  Location     Type
  1011 ;;                  1    wreg      void 
  1012 ;; Registers used:
  1013 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1014 ;; Tracked objects:
  1015 ;;		On entry : 0/0
  1016 ;;		On exit  : 0/0
  1017 ;;		Unchanged: 0/0
  1018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1019 ;;      Params:         0       0       0       0       0
  1020 ;;      Locals:         0       1       0       0       0
  1021 ;;      Temps:          0       4       0       0       0
  1022 ;;      Totals:         0       5       0       0       0
  1023 ;;Total ram usage:        5 bytes
  1024 ;; Hardware stack levels used:    1
  1025 ;; Hardware stack levels required when called:    3
  1026 ;; This function calls:
  1027 ;;		_setFilas
  1028 ;;		_shiftBitColumna
  1029 ;; This function is called by:
  1030 ;;		_main
  1031 ;; This function uses a non-reentrant model
  1032 ;;
  1033                           
  1034                           
  1035                           ;psect for function _updateScreen
  1036  02D7                     _updateScreen:	
  1037                           
  1038                           ;incstack = 0
  1039                           ; Regs used in _updateScreen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1040                           ;updateScreen@screen stored from wreg
  1041  02D7  1283               	bcf	3,5	;RP0=0, select bank0
  1042  02D8  1303               	bcf	3,6	;RP1=0, select bank0
  1043  02D9  00A4               	movwf	updateScreen@screen
  1044  02DA                     l1285:	
  1045                           
  1046                           ;screen.c: 13:     if(con.columna == 9){
  1047  02DA  3009               	movlw	9
  1048  02DB  0655               	xorwf	_con,w
  1049  02DC  1D03               	btfss	3,2
  1050  02DD  2ADF               	goto	u851
  1051  02DE  2AE0               	goto	u850
  1052  02DF                     u851:	
  1053  02DF  2B00               	goto	l1293
  1054  02E0                     u850:	
  1055  02E0                     l1287:	
  1056                           
  1057                           ;screen.c: 14:         con.columna = 1;
  1058  02E0  01D5               	clrf	_con
  1059  02E1  0AD5               	incf	_con,f
  1060  02E2                     l1289:	
  1061                           
  1062                           ;screen.c: 15:         setFilas(~screen[con.columna-1]);
  1063  02E2  0855               	movf	_con,w
  1064  02E3  00A0               	movwf	??_updateScreen
  1065  02E4  0720               	addwf	??_updateScreen,w
  1066  02E5  0724               	addwf	updateScreen@screen,w
  1067  02E6  00A1               	movwf	??_updateScreen+1
  1068  02E7  0821               	movf	??_updateScreen+1,w
  1069  02E8  3EFE               	addlw	-2
  1070  02E9  0084               	movwf	4
  1071  02EA  1383               	bcf	3,7	;select IRP bank0
  1072  02EB  0800               	movf	0,w
  1073  02EC  00A2               	movwf	??_updateScreen+2
  1074  02ED  0A84               	incf	4,f
  1075  02EE  0800               	movf	0,w
  1076  02EF  00A3               	movwf	??_updateScreen+3
  1077  02F0  0922               	comf	??_updateScreen+2,w
  1078  02F1  00F2               	movwf	setFilas@reg_value
  1079  02F2  0923               	comf	??_updateScreen+3,w
  1080  02F3  00F3               	movwf	setFilas@reg_value+1
  1081  02F4  120A  118A  2369  120A  118A  	fcall	_setFilas
  1082  02F9                     l1291:	
  1083                           
  1084                           ;screen.c: 16:         shiftBitColumna(1);
  1085  02F9  3001               	movlw	1
  1086  02FA  120A  118A  247A  120A  118A  	fcall	_shiftBitColumna
  1087                           
  1088                           ;screen.c: 17:     }
  1089  02FF  2B21               	goto	l154
  1090  0300                     l1293:	
  1091                           
  1092                           ;screen.c: 19:         con.columna++;
  1093  0300  3001               	movlw	1
  1094  0301  00A0               	movwf	??_updateScreen
  1095  0302  0820               	movf	??_updateScreen,w
  1096  0303  07D5               	addwf	_con,f
  1097  0304                     l1295:	
  1098                           
  1099                           ;screen.c: 20:         setFilas(~screen[con.columna-1]);
  1100  0304  0855               	movf	_con,w
  1101  0305  00A0               	movwf	??_updateScreen
  1102  0306  0720               	addwf	??_updateScreen,w
  1103  0307  0724               	addwf	updateScreen@screen,w
  1104  0308  00A1               	movwf	??_updateScreen+1
  1105  0309  0821               	movf	??_updateScreen+1,w
  1106  030A  3EFE               	addlw	-2
  1107  030B  0084               	movwf	4
  1108  030C  1383               	bcf	3,7	;select IRP bank0
  1109  030D  0800               	movf	0,w
  1110  030E  00A2               	movwf	??_updateScreen+2
  1111  030F  0A84               	incf	4,f
  1112  0310  0800               	movf	0,w
  1113  0311  00A3               	movwf	??_updateScreen+3
  1114  0312  0922               	comf	??_updateScreen+2,w
  1115  0313  00F2               	movwf	setFilas@reg_value
  1116  0314  0923               	comf	??_updateScreen+3,w
  1117  0315  00F3               	movwf	setFilas@reg_value+1
  1118  0316  120A  118A  2369  120A  118A  	fcall	_setFilas
  1119  031B                     l1297:	
  1120                           
  1121                           ;screen.c: 21:         shiftBitColumna(0);
  1122  031B  3000               	movlw	0
  1123  031C  120A  118A  247A  120A  118A  	fcall	_shiftBitColumna
  1124  0321                     l154:	
  1125  0321  0008               	return
  1126  0322                     __end_of_updateScreen:	
  1127                           
  1128                           	psect	text2
  1129  047A                     __ptext2:	
  1130 ;; *************** function _shiftBitColumna *****************
  1131 ;; Defined at:
  1132 ;;		line 32 in file "columnas.c"
  1133 ;; Parameters:    Size  Location     Type
  1134 ;;  bit             1    wreg     unsigned char 
  1135 ;; Auto vars:     Size  Location     Type
  1136 ;;  bit             1    3[COMMON] unsigned char 
  1137 ;; Return value:  Size  Location     Type
  1138 ;;                  1    wreg      void 
  1139 ;; Registers used:
  1140 ;;		wreg, status,2, status,0, pclath, cstack
  1141 ;; Tracked objects:
  1142 ;;		On entry : 0/0
  1143 ;;		On exit  : 0/0
  1144 ;;		Unchanged: 0/0
  1145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1146 ;;      Params:         0       0       0       0       0
  1147 ;;      Locals:         1       0       0       0       0
  1148 ;;      Temps:          1       0       0       0       0
  1149 ;;      Totals:         2       0       0       0       0
  1150 ;;Total ram usage:        2 bytes
  1151 ;; Hardware stack levels used:    1
  1152 ;; Hardware stack levels required when called:    2
  1153 ;; This function calls:
  1154 ;;		_latchClock_Col
  1155 ;;		_latchClock_Fil
  1156 ;;		_shiftClock_Col
  1157 ;; This function is called by:
  1158 ;;		_updateScreen
  1159 ;; This function uses a non-reentrant model
  1160 ;;
  1161                           
  1162                           
  1163                           ;psect for function _shiftBitColumna
  1164  047A                     _shiftBitColumna:	
  1165                           
  1166                           ;incstack = 0
  1167                           ; Regs used in _shiftBitColumna: [wreg+status,2+status,0+pclath+cstack]
  1168                           ;shiftBitColumna@bit stored from wreg
  1169  047A  00F3               	movwf	shiftBitColumna@bit
  1170  047B                     l1151:	
  1171                           
  1172                           ;columnas.c: 33:     PORTDbits.RD4= bit & 0x01;
  1173  047B  0873               	movf	shiftBitColumna@bit,w
  1174  047C  3901               	andlw	1
  1175  047D  00F2               	movwf	??_shiftBitColumna
  1176  047E  0EF2               	swapf	??_shiftBitColumna,f
  1177  047F  1283               	bcf	3,5	;RP0=0, select bank0
  1178  0480  1303               	bcf	3,6	;RP1=0, select bank0
  1179  0481  0808               	movf	8,w	;volatile
  1180  0482  0672               	xorwf	??_shiftBitColumna,w
  1181  0483  39EF               	andlw	-17
  1182  0484  0672               	xorwf	??_shiftBitColumna,w
  1183  0485  0088               	movwf	8	;volatile
  1184  0486                     l1153:	
  1185                           
  1186                           ;columnas.c: 34:     shiftClock_Col();
  1187  0486  120A  118A  2502  120A  118A  	fcall	_shiftClock_Col
  1188  048B                     l1155:	
  1189                           
  1190                           ;columnas.c: 35:     latchClock_Col();
  1191  048B  120A  118A  2514  120A  118A  	fcall	_latchClock_Col
  1192  0490                     l1157:	
  1193                           
  1194                           ;columnas.c: 36:     latchClock_Fil();
  1195  0490  120A  118A  2508  120A  118A  	fcall	_latchClock_Fil
  1196  0495                     l131:	
  1197  0495  0008               	return
  1198  0496                     __end_of_shiftBitColumna:	
  1199                           
  1200                           	psect	text3
  1201  0502                     __ptext3:	
  1202 ;; *************** function _shiftClock_Col *****************
  1203 ;; Defined at:
  1204 ;;		line 12 in file "columnas.c"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;		None
  1207 ;; Auto vars:     Size  Location     Type
  1208 ;;		None
  1209 ;; Return value:  Size  Location     Type
  1210 ;;                  1    wreg      void 
  1211 ;; Registers used:
  1212 ;;		None
  1213 ;; Tracked objects:
  1214 ;;		On entry : 0/0
  1215 ;;		On exit  : 0/0
  1216 ;;		Unchanged: 0/0
  1217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1218 ;;      Params:         0       0       0       0       0
  1219 ;;      Locals:         0       0       0       0       0
  1220 ;;      Temps:          0       0       0       0       0
  1221 ;;      Totals:         0       0       0       0       0
  1222 ;;Total ram usage:        0 bytes
  1223 ;; Hardware stack levels used:    1
  1224 ;; Hardware stack levels required when called:    1
  1225 ;; This function calls:
  1226 ;;		Nothing
  1227 ;; This function is called by:
  1228 ;;		_shiftBitColumna
  1229 ;;		_setColumnas
  1230 ;; This function uses a non-reentrant model
  1231 ;;
  1232                           
  1233                           
  1234                           ;psect for function _shiftClock_Col
  1235  0502                     _shiftClock_Col:	
  1236  0502                     l1073:	
  1237                           ;incstack = 0
  1238                           ; Regs used in _shiftClock_Col: []
  1239                           
  1240                           
  1241                           ;columnas.c: 13:     PORTDbits.RD7 = 0;
  1242  0502  1283               	bcf	3,5	;RP0=0, select bank0
  1243  0503  1303               	bcf	3,6	;RP1=0, select bank0
  1244  0504  1388               	bcf	8,7	;volatile
  1245                           
  1246                           ;columnas.c: 14:     PORTDbits.RD7 = 1;
  1247  0505  1788               	bsf	8,7	;volatile
  1248                           
  1249                           ;columnas.c: 15:     PORTDbits.RD7 = 0;
  1250  0506  1388               	bcf	8,7	;volatile
  1251  0507                     l123:	
  1252  0507  0008               	return
  1253  0508                     __end_of_shiftClock_Col:	
  1254                           
  1255                           	psect	text4
  1256  0508                     __ptext4:	
  1257 ;; *************** function _latchClock_Fil *****************
  1258 ;; Defined at:
  1259 ;;		line 7 in file "filas.c"
  1260 ;; Parameters:    Size  Location     Type
  1261 ;;		None
  1262 ;; Auto vars:     Size  Location     Type
  1263 ;;		None
  1264 ;; Return value:  Size  Location     Type
  1265 ;;                  1    wreg      void 
  1266 ;; Registers used:
  1267 ;;		None
  1268 ;; Tracked objects:
  1269 ;;		On entry : 0/0
  1270 ;;		On exit  : 0/0
  1271 ;;		Unchanged: 0/0
  1272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1273 ;;      Params:         0       0       0       0       0
  1274 ;;      Locals:         0       0       0       0       0
  1275 ;;      Temps:          0       0       0       0       0
  1276 ;;      Totals:         0       0       0       0       0
  1277 ;;Total ram usage:        0 bytes
  1278 ;; Hardware stack levels used:    1
  1279 ;; Hardware stack levels required when called:    1
  1280 ;; This function calls:
  1281 ;;		Nothing
  1282 ;; This function is called by:
  1283 ;;		_shiftBitColumna
  1284 ;; This function uses a non-reentrant model
  1285 ;;
  1286                           
  1287                           
  1288                           ;psect for function _latchClock_Fil
  1289  0508                     _latchClock_Fil:	
  1290  0508                     l1067:	
  1291                           ;incstack = 0
  1292                           ; Regs used in _latchClock_Fil: []
  1293                           
  1294                           
  1295                           ;filas.c: 8:     PORTCbits.RC6 = 0;
  1296  0508  1283               	bcf	3,5	;RP0=0, select bank0
  1297  0509  1303               	bcf	3,6	;RP1=0, select bank0
  1298  050A  1307               	bcf	7,6	;volatile
  1299                           
  1300                           ;filas.c: 9:     PORTCbits.RC6 = 1;
  1301  050B  1707               	bsf	7,6	;volatile
  1302                           
  1303                           ;filas.c: 10:     PORTCbits.RC6 = 0;
  1304  050C  1307               	bcf	7,6	;volatile
  1305  050D                     l105:	
  1306  050D  0008               	return
  1307  050E                     __end_of_latchClock_Fil:	
  1308                           
  1309                           	psect	text5
  1310  0514                     __ptext5:	
  1311 ;; *************** function _latchClock_Col *****************
  1312 ;; Defined at:
  1313 ;;		line 7 in file "columnas.c"
  1314 ;; Parameters:    Size  Location     Type
  1315 ;;		None
  1316 ;; Auto vars:     Size  Location     Type
  1317 ;;		None
  1318 ;; Return value:  Size  Location     Type
  1319 ;;                  1    wreg      void 
  1320 ;; Registers used:
  1321 ;;		None
  1322 ;; Tracked objects:
  1323 ;;		On entry : 0/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1327 ;;      Params:         0       0       0       0       0
  1328 ;;      Locals:         0       0       0       0       0
  1329 ;;      Temps:          0       0       0       0       0
  1330 ;;      Totals:         0       0       0       0       0
  1331 ;;Total ram usage:        0 bytes
  1332 ;; Hardware stack levels used:    1
  1333 ;; Hardware stack levels required when called:    1
  1334 ;; This function calls:
  1335 ;;		Nothing
  1336 ;; This function is called by:
  1337 ;;		_shiftBitColumna
  1338 ;;		_setColumnas
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342                           
  1343                           ;psect for function _latchClock_Col
  1344  0514                     _latchClock_Col:	
  1345  0514                     l1071:	
  1346                           ;incstack = 0
  1347                           ; Regs used in _latchClock_Col: []
  1348                           
  1349                           
  1350                           ;columnas.c: 8:     PORTDbits.RD6 = 1;
  1351  0514  1283               	bcf	3,5	;RP0=0, select bank0
  1352  0515  1303               	bcf	3,6	;RP1=0, select bank0
  1353  0516  1708               	bsf	8,6	;volatile
  1354                           
  1355                           ;columnas.c: 9:     PORTDbits.RD6 = 0;
  1356  0517  1308               	bcf	8,6	;volatile
  1357  0518                     l120:	
  1358  0518  0008               	return
  1359  0519                     __end_of_latchClock_Col:	
  1360                           
  1361                           	psect	text6
  1362  0369                     __ptext6:	
  1363 ;; *************** function _setFilas *****************
  1364 ;; Defined at:
  1365 ;;		line 19 in file "filas.c"
  1366 ;; Parameters:    Size  Location     Type
  1367 ;;  reg_value       2    2[COMMON] unsigned int 
  1368 ;; Auto vars:     Size  Location     Type
  1369 ;;  i               2   10[COMMON] int 
  1370 ;; Return value:  Size  Location     Type
  1371 ;;                  1    wreg      void 
  1372 ;; Registers used:
  1373 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1374 ;; Tracked objects:
  1375 ;;		On entry : 0/0
  1376 ;;		On exit  : 0/0
  1377 ;;		Unchanged: 0/0
  1378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1379 ;;      Params:         2       0       0       0       0
  1380 ;;      Locals:         2       0       0       0       0
  1381 ;;      Temps:          6       0       0       0       0
  1382 ;;      Totals:        10       0       0       0       0
  1383 ;;Total ram usage:       10 bytes
  1384 ;; Hardware stack levels used:    1
  1385 ;; Hardware stack levels required when called:    2
  1386 ;; This function calls:
  1387 ;;		_shiftClock_Fil
  1388 ;; This function is called by:
  1389 ;;		_updateScreen
  1390 ;; This function uses a non-reentrant model
  1391 ;;
  1392                           
  1393                           
  1394                           ;psect for function _setFilas
  1395  0369                     _setFilas:	
  1396  0369                     l1137:	
  1397                           ;incstack = 0
  1398                           ; Regs used in _setFilas: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1399                           
  1400                           
  1401                           ;filas.c: 20:     int i = 0;
  1402  0369  01FA               	clrf	setFilas@i
  1403  036A  01FB               	clrf	setFilas@i+1
  1404                           
  1405                           ;filas.c: 21:     for(i=0;i<16;i++){
  1406  036B  01FA               	clrf	setFilas@i
  1407  036C  01FB               	clrf	setFilas@i+1
  1408  036D                     l1139:	
  1409  036D  087B               	movf	setFilas@i+1,w
  1410  036E  3A80               	xorlw	128
  1411  036F  00FF               	movwf	btemp+1
  1412  0370  3080               	movlw	128
  1413  0371  027F               	subwf	btemp+1,w
  1414  0372  1D03               	skipz
  1415  0373  2B76               	goto	u665
  1416  0374  3010               	movlw	16
  1417  0375  027A               	subwf	setFilas@i,w
  1418  0376                     u665:	
  1419  0376  1C03               	skipc
  1420  0377  2B79               	goto	u661
  1421  0378  2B7A               	goto	u660
  1422  0379                     u661:	
  1423  0379  2B7B               	goto	l1143
  1424  037A                     u660:	
  1425  037A  2BAB               	goto	l113
  1426  037B                     l1143:	
  1427                           
  1428                           ;filas.c: 22:         PORTCbits.RC4 = (reg_value & (1<<i) )>>i;
  1429  037B  0A7A               	incf	setFilas@i,w
  1430  037C  00F4               	movwf	??_setFilas
  1431  037D  3001               	movlw	1
  1432  037E  00F5               	movwf	??_setFilas+1
  1433  037F  3000               	movlw	0
  1434  0380  00F6               	movwf	??_setFilas+2
  1435  0381  2B85               	goto	u674
  1436  0382                     u675:	
  1437  0382  1003               	clrc
  1438  0383  0DF5               	rlf	??_setFilas+1,f
  1439  0384  0DF6               	rlf	??_setFilas+2,f
  1440  0385                     u674:	
  1441  0385  0BF4               	decfsz	??_setFilas,f
  1442  0386  2B82               	goto	u675
  1443  0387  0872               	movf	setFilas@reg_value,w
  1444  0388  0575               	andwf	??_setFilas+1,w
  1445  0389  00F7               	movwf	??_setFilas+3
  1446  038A  0873               	movf	setFilas@reg_value+1,w
  1447  038B  0576               	andwf	??_setFilas+2,w
  1448  038C  00F8               	movwf	??_setFilas+4
  1449  038D  0A7A               	incf	setFilas@i,w
  1450  038E  2B92               	goto	u684
  1451  038F                     u685:	
  1452  038F  1003               	clrc
  1453  0390  0CF8               	rrf	??_setFilas+4,f
  1454  0391  0CF7               	rrf	??_setFilas+3,f
  1455  0392                     u684:	
  1456  0392  3EFF               	addlw	-1
  1457  0393  1D03               	skipz
  1458  0394  2B8F               	goto	u685
  1459  0395  0877               	movf	??_setFilas+3,w
  1460  0396  00F9               	movwf	??_setFilas+5
  1461  0397  0EF9               	swapf	??_setFilas+5,f
  1462  0398  1283               	bcf	3,5	;RP0=0, select bank0
  1463  0399  1303               	bcf	3,6	;RP1=0, select bank0
  1464  039A  0807               	movf	7,w	;volatile
  1465  039B  0679               	xorwf	??_setFilas+5,w
  1466  039C  39EF               	andlw	-17
  1467  039D  0679               	xorwf	??_setFilas+5,w
  1468  039E  0087               	movwf	7	;volatile
  1469  039F                     l1145:	
  1470                           
  1471                           ;filas.c: 23:         shiftClock_Fil();
  1472  039F  120A  118A  250E  120A  118A  	fcall	_shiftClock_Fil
  1473  03A4                     l1147:	
  1474                           
  1475                           ;filas.c: 24:     }
  1476  03A4  3001               	movlw	1
  1477  03A5  07FA               	addwf	setFilas@i,f
  1478  03A6  1803               	skipnc
  1479  03A7  0AFB               	incf	setFilas@i+1,f
  1480  03A8  3000               	movlw	0
  1481  03A9  07FB               	addwf	setFilas@i+1,f
  1482  03AA  2B6D               	goto	l1139
  1483  03AB                     l113:	
  1484  03AB  0008               	return
  1485  03AC                     __end_of_setFilas:	
  1486                           
  1487                           	psect	text7
  1488  050E                     __ptext7:	
  1489 ;; *************** function _shiftClock_Fil *****************
  1490 ;; Defined at:
  1491 ;;		line 13 in file "filas.c"
  1492 ;; Parameters:    Size  Location     Type
  1493 ;;		None
  1494 ;; Auto vars:     Size  Location     Type
  1495 ;;		None
  1496 ;; Return value:  Size  Location     Type
  1497 ;;                  1    wreg      void 
  1498 ;; Registers used:
  1499 ;;		None
  1500 ;; Tracked objects:
  1501 ;;		On entry : 0/0
  1502 ;;		On exit  : 0/0
  1503 ;;		Unchanged: 0/0
  1504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1505 ;;      Params:         0       0       0       0       0
  1506 ;;      Locals:         0       0       0       0       0
  1507 ;;      Temps:          0       0       0       0       0
  1508 ;;      Totals:         0       0       0       0       0
  1509 ;;Total ram usage:        0 bytes
  1510 ;; Hardware stack levels used:    1
  1511 ;; Hardware stack levels required when called:    1
  1512 ;; This function calls:
  1513 ;;		Nothing
  1514 ;; This function is called by:
  1515 ;;		_setFilas
  1516 ;; This function uses a non-reentrant model
  1517 ;;
  1518                           
  1519                           
  1520                           ;psect for function _shiftClock_Fil
  1521  050E                     _shiftClock_Fil:	
  1522  050E                     l1069:	
  1523                           ;incstack = 0
  1524                           ; Regs used in _shiftClock_Fil: []
  1525                           
  1526                           
  1527                           ;filas.c: 14:     PORTCbits.RC7 = 0;
  1528  050E  1283               	bcf	3,5	;RP0=0, select bank0
  1529  050F  1303               	bcf	3,6	;RP1=0, select bank0
  1530  0510  1387               	bcf	7,7	;volatile
  1531                           
  1532                           ;filas.c: 15:     PORTCbits.RC7 = 1;
  1533  0511  1787               	bsf	7,7	;volatile
  1534                           
  1535                           ;filas.c: 16:     PORTCbits.RC7 = 0;
  1536  0512  1387               	bcf	7,7	;volatile
  1537  0513                     l108:	
  1538  0513  0008               	return
  1539  0514                     __end_of_shiftClock_Fil:	
  1540                           
  1541                           	psect	text8
  1542  04CC                     __ptext8:	
  1543 ;; *************** function _init_timer *****************
  1544 ;; Defined at:
  1545 ;;		line 59 in file "init.c"
  1546 ;; Parameters:    Size  Location     Type
  1547 ;;		None
  1548 ;; Auto vars:     Size  Location     Type
  1549 ;;		None
  1550 ;; Return value:  Size  Location     Type
  1551 ;;                  1    wreg      void 
  1552 ;; Registers used:
  1553 ;;		status,2
  1554 ;; Tracked objects:
  1555 ;;		On entry : 0/0
  1556 ;;		On exit  : 0/0
  1557 ;;		Unchanged: 0/0
  1558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1559 ;;      Params:         0       0       0       0       0
  1560 ;;      Locals:         0       0       0       0       0
  1561 ;;      Temps:          0       0       0       0       0
  1562 ;;      Totals:         0       0       0       0       0
  1563 ;;Total ram usage:        0 bytes
  1564 ;; Hardware stack levels used:    1
  1565 ;; Hardware stack levels required when called:    1
  1566 ;; This function calls:
  1567 ;;		Nothing
  1568 ;; This function is called by:
  1569 ;;		_main
  1570 ;; This function uses a non-reentrant model
  1571 ;;
  1572                           
  1573                           
  1574                           ;psect for function _init_timer
  1575  04CC                     _init_timer:	
  1576  04CC                     l1201:	
  1577                           ;incstack = 0
  1578                           ; Regs used in _init_timer: [status,2]
  1579                           
  1580                           
  1581                           ;init.c: 61:     TMR0=0;
  1582  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  1583  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  1584  04CE  0181               	clrf	1	;volatile
  1585  04CF                     l1203:	
  1586                           
  1587                           ;init.c: 69:     INTCONbits.GIE = 1;
  1588  04CF  178B               	bsf	11,7	;volatile
  1589  04D0                     l1205:	
  1590                           
  1591                           ;init.c: 70:     INTCONbits.TMR0IE = 1;
  1592  04D0  168B               	bsf	11,5	;volatile
  1593  04D1                     l1207:	
  1594                           
  1595                           ;init.c: 71:     INTCONbits.TMR0IF = 0;
  1596  04D1  110B               	bcf	11,2	;volatile
  1597  04D2                     l1209:	
  1598                           
  1599                           ;init.c: 80:     OPTION_REGbits.PSA = 1;
  1600  04D2  1683               	bsf	3,5	;RP0=1, select bank1
  1601  04D3  1303               	bcf	3,6	;RP1=0, select bank1
  1602  04D4  1581               	bsf	1,3	;volatile
  1603  04D5                     l1211:	
  1604                           
  1605                           ;init.c: 81:     OPTION_REGbits.PS0 = 1;
  1606  04D5  1401               	bsf	1,0	;volatile
  1607  04D6                     l1213:	
  1608                           
  1609                           ;init.c: 82:     OPTION_REGbits.PS1 = 1;
  1610  04D6  1481               	bsf	1,1	;volatile
  1611  04D7                     l1215:	
  1612                           
  1613                           ;init.c: 83:     OPTION_REGbits.PS2 = 1;
  1614  04D7  1501               	bsf	1,2	;volatile
  1615  04D8                     l1217:	
  1616                           
  1617                           ;init.c: 84:     OPTION_REGbits.T0CS = 0;
  1618  04D8  1281               	bcf	1,5	;volatile
  1619  04D9                     l36:	
  1620  04D9  0008               	return
  1621  04DA                     __end_of_init_timer:	
  1622                           
  1623                           	psect	text9
  1624  04BC                     __ptext9:	
  1625 ;; *************** function _init_pines *****************
  1626 ;; Defined at:
  1627 ;;		line 43 in file "init.c"
  1628 ;; Parameters:    Size  Location     Type
  1629 ;;		None
  1630 ;; Auto vars:     Size  Location     Type
  1631 ;;		None
  1632 ;; Return value:  Size  Location     Type
  1633 ;;                  1    wreg      void 
  1634 ;; Registers used:
  1635 ;;		status,2, status,0, pclath, cstack
  1636 ;; Tracked objects:
  1637 ;;		On entry : 0/0
  1638 ;;		On exit  : 0/0
  1639 ;;		Unchanged: 0/0
  1640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1641 ;;      Params:         0       0       0       0       0
  1642 ;;      Locals:         0       0       0       0       0
  1643 ;;      Temps:          0       0       0       0       0
  1644 ;;      Totals:         0       0       0       0       0
  1645 ;;Total ram usage:        0 bytes
  1646 ;; Hardware stack levels used:    1
  1647 ;; Hardware stack levels required when called:    2
  1648 ;; This function calls:
  1649 ;;		_init_pines_col
  1650 ;;		_init_pines_fil
  1651 ;;		_init_pines_in
  1652 ;; This function is called by:
  1653 ;;		_main
  1654 ;; This function uses a non-reentrant model
  1655 ;;
  1656                           
  1657                           
  1658                           ;psect for function _init_pines
  1659  04BC                     _init_pines:	
  1660  04BC                     l1197:	
  1661                           ;incstack = 0
  1662                           ; Regs used in _init_pines: [status,2+status,0+pclath+cstack]
  1663                           
  1664                           
  1665                           ;init.c: 45:     init_pines_fil();
  1666  04BC  120A  118A  24DA  120A  118A  	fcall	_init_pines_fil
  1667                           
  1668                           ;init.c: 46:     init_pines_col();
  1669  04C1  120A  118A  24A9  120A  118A  	fcall	_init_pines_col
  1670                           
  1671                           ;init.c: 47:     init_pines_in();
  1672  04C6  120A  118A  24E7  120A  118A  	fcall	_init_pines_in
  1673  04CB                     l30:	
  1674  04CB  0008               	return
  1675  04CC                     __end_of_init_pines:	
  1676                           
  1677                           	psect	text10
  1678  04E7                     __ptext10:	
  1679 ;; *************** function _init_pines_in *****************
  1680 ;; Defined at:
  1681 ;;		line 4 in file "init.c"
  1682 ;; Parameters:    Size  Location     Type
  1683 ;;		None
  1684 ;; Auto vars:     Size  Location     Type
  1685 ;;		None
  1686 ;; Return value:  Size  Location     Type
  1687 ;;                  1    wreg      void 
  1688 ;; Registers used:
  1689 ;;		None
  1690 ;; Tracked objects:
  1691 ;;		On entry : 0/0
  1692 ;;		On exit  : 0/0
  1693 ;;		Unchanged: 0/0
  1694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1695 ;;      Params:         0       0       0       0       0
  1696 ;;      Locals:         0       0       0       0       0
  1697 ;;      Temps:          0       0       0       0       0
  1698 ;;      Totals:         0       0       0       0       0
  1699 ;;Total ram usage:        0 bytes
  1700 ;; Hardware stack levels used:    1
  1701 ;; Hardware stack levels required when called:    1
  1702 ;; This function calls:
  1703 ;;		Nothing
  1704 ;; This function is called by:
  1705 ;;		_init_pines
  1706 ;; This function uses a non-reentrant model
  1707 ;;
  1708                           
  1709                           
  1710                           ;psect for function _init_pines_in
  1711  04E7                     _init_pines_in:	
  1712  04E7                     l1097:	
  1713                           ;incstack = 0
  1714                           ; Regs used in _init_pines_in: []
  1715                           
  1716                           
  1717                           ;init.c: 6:     TRISBbits.TRISB5 = 1;
  1718  04E7  1683               	bsf	3,5	;RP0=1, select bank1
  1719  04E8  1303               	bcf	3,6	;RP1=0, select bank1
  1720  04E9  1686               	bsf	6,5	;volatile
  1721                           
  1722                           ;init.c: 7:     TRISBbits.TRISB4 = 1;
  1723  04EA  1606               	bsf	6,4	;volatile
  1724                           
  1725                           ;init.c: 9:     TRISBbits.TRISB6 = 0;
  1726  04EB  1306               	bcf	6,6	;volatile
  1727                           
  1728                           ;init.c: 10:     TRISBbits.TRISB7 = 0;
  1729  04EC  1386               	bcf	6,7	;volatile
  1730                           
  1731                           ;init.c: 12:     PORTBbits.RB6 = 0;
  1732  04ED  1283               	bcf	3,5	;RP0=0, select bank0
  1733  04EE  1303               	bcf	3,6	;RP1=0, select bank0
  1734  04EF  1306               	bcf	6,6	;volatile
  1735                           
  1736                           ;init.c: 13:     PORTBbits.RB7 = 0;
  1737  04F0  1386               	bcf	6,7	;volatile
  1738  04F1                     l21:	
  1739  04F1  0008               	return
  1740  04F2                     __end_of_init_pines_in:	
  1741                           
  1742                           	psect	text11
  1743  04DA                     __ptext11:	
  1744 ;; *************** function _init_pines_fil *****************
  1745 ;; Defined at:
  1746 ;;		line 16 in file "init.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;		None
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;		None
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  1    wreg      void 
  1753 ;; Registers used:
  1754 ;;		None
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1760 ;;      Params:         0       0       0       0       0
  1761 ;;      Locals:         0       0       0       0       0
  1762 ;;      Temps:          0       0       0       0       0
  1763 ;;      Totals:         0       0       0       0       0
  1764 ;;Total ram usage:        0 bytes
  1765 ;; Hardware stack levels used:    1
  1766 ;; Hardware stack levels required when called:    1
  1767 ;; This function calls:
  1768 ;;		Nothing
  1769 ;; This function is called by:
  1770 ;;		_init_pines
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           
  1774                           
  1775                           ;psect for function _init_pines_fil
  1776  04DA                     _init_pines_fil:	
  1777  04DA                     l1099:	
  1778                           ;incstack = 0
  1779                           ; Regs used in _init_pines_fil: []
  1780                           
  1781                           
  1782                           ;init.c: 18:     TRISCbits.TRISC4 = 0;
  1783  04DA  1683               	bsf	3,5	;RP0=1, select bank1
  1784  04DB  1303               	bcf	3,6	;RP1=0, select bank1
  1785  04DC  1207               	bcf	7,4	;volatile
  1786                           
  1787                           ;init.c: 19:     TRISCbits.TRISC5 = 0;
  1788  04DD  1287               	bcf	7,5	;volatile
  1789                           
  1790                           ;init.c: 20:     TRISCbits.TRISC6 = 0;
  1791  04DE  1307               	bcf	7,6	;volatile
  1792                           
  1793                           ;init.c: 21:     TRISCbits.TRISC7 = 0;
  1794  04DF  1387               	bcf	7,7	;volatile
  1795                           
  1796                           ;init.c: 23:     PORTCbits.RC4 = 0;
  1797  04E0  1283               	bcf	3,5	;RP0=0, select bank0
  1798  04E1  1303               	bcf	3,6	;RP1=0, select bank0
  1799  04E2  1207               	bcf	7,4	;volatile
  1800                           
  1801                           ;init.c: 24:     PORTCbits.RC5 = 0;
  1802  04E3  1287               	bcf	7,5	;volatile
  1803                           
  1804                           ;init.c: 25:     PORTCbits.RC6 = 0;
  1805  04E4  1307               	bcf	7,6	;volatile
  1806                           
  1807                           ;init.c: 26:     PORTCbits.RC7 = 0;
  1808  04E5  1387               	bcf	7,7	;volatile
  1809  04E6                     l24:	
  1810  04E6  0008               	return
  1811  04E7                     __end_of_init_pines_fil:	
  1812                           
  1813                           	psect	text12
  1814  04A9                     __ptext12:	
  1815 ;; *************** function _init_pines_col *****************
  1816 ;; Defined at:
  1817 ;;		line 29 in file "init.c"
  1818 ;; Parameters:    Size  Location     Type
  1819 ;;		None
  1820 ;; Auto vars:     Size  Location     Type
  1821 ;;		None
  1822 ;; Return value:  Size  Location     Type
  1823 ;;                  1    wreg      void 
  1824 ;; Registers used:
  1825 ;;		None
  1826 ;; Tracked objects:
  1827 ;;		On entry : 0/0
  1828 ;;		On exit  : 0/0
  1829 ;;		Unchanged: 0/0
  1830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1831 ;;      Params:         0       0       0       0       0
  1832 ;;      Locals:         0       0       0       0       0
  1833 ;;      Temps:          0       0       0       0       0
  1834 ;;      Totals:         0       0       0       0       0
  1835 ;;Total ram usage:        0 bytes
  1836 ;; Hardware stack levels used:    1
  1837 ;; Hardware stack levels required when called:    1
  1838 ;; This function calls:
  1839 ;;		Nothing
  1840 ;; This function is called by:
  1841 ;;		_init_pines
  1842 ;; This function uses a non-reentrant model
  1843 ;;
  1844                           
  1845                           
  1846                           ;psect for function _init_pines_col
  1847  04A9                     _init_pines_col:	
  1848  04A9                     l1101:	
  1849                           ;incstack = 0
  1850                           ; Regs used in _init_pines_col: []
  1851                           
  1852                           
  1853                           ;init.c: 30:     TRISBbits.TRISB0 = 0;
  1854  04A9  1683               	bsf	3,5	;RP0=1, select bank1
  1855  04AA  1303               	bcf	3,6	;RP1=0, select bank1
  1856  04AB  1006               	bcf	6,0	;volatile
  1857                           
  1858                           ;init.c: 31:     PORTBbits.RB0 = 0;
  1859  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  1860  04AD  1303               	bcf	3,6	;RP1=0, select bank0
  1861  04AE  1006               	bcf	6,0	;volatile
  1862                           
  1863                           ;init.c: 33:     TRISDbits.TRISD4 = 0;
  1864  04AF  1683               	bsf	3,5	;RP0=1, select bank1
  1865  04B0  1303               	bcf	3,6	;RP1=0, select bank1
  1866  04B1  1208               	bcf	8,4	;volatile
  1867                           
  1868                           ;init.c: 34:     TRISDbits.TRISD5 = 0;
  1869  04B2  1288               	bcf	8,5	;volatile
  1870                           
  1871                           ;init.c: 35:     TRISDbits.TRISD6 = 0;
  1872  04B3  1308               	bcf	8,6	;volatile
  1873                           
  1874                           ;init.c: 36:     TRISDbits.TRISD7 = 0;
  1875  04B4  1388               	bcf	8,7	;volatile
  1876                           
  1877                           ;init.c: 38:     PORTDbits.RD4 = 0;
  1878  04B5  1283               	bcf	3,5	;RP0=0, select bank0
  1879  04B6  1303               	bcf	3,6	;RP1=0, select bank0
  1880  04B7  1208               	bcf	8,4	;volatile
  1881                           
  1882                           ;init.c: 39:     PORTDbits.RD5 = 0;
  1883  04B8  1288               	bcf	8,5	;volatile
  1884                           
  1885                           ;init.c: 40:     PORTDbits.RD6 = 0;
  1886  04B9  1308               	bcf	8,6	;volatile
  1887                           
  1888                           ;init.c: 41:     PORTDbits.RD7 = 0;
  1889  04BA  1388               	bcf	8,7	;volatile
  1890  04BB                     l27:	
  1891  04BB  0008               	return
  1892  04BC                     __end_of_init_pines_col:	
  1893                           
  1894                           	psect	text13
  1895  04FA                     __ptext13:	
  1896 ;; *************** function _init_interrupt *****************
  1897 ;; Defined at:
  1898 ;;		line 50 in file "init.c"
  1899 ;; Parameters:    Size  Location     Type
  1900 ;;		None
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;		None
  1903 ;; Return value:  Size  Location     Type
  1904 ;;                  1    wreg      void 
  1905 ;; Registers used:
  1906 ;;		None
  1907 ;; Tracked objects:
  1908 ;;		On entry : 0/0
  1909 ;;		On exit  : 0/0
  1910 ;;		Unchanged: 0/0
  1911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1912 ;;      Params:         0       0       0       0       0
  1913 ;;      Locals:         0       0       0       0       0
  1914 ;;      Temps:          0       0       0       0       0
  1915 ;;      Totals:         0       0       0       0       0
  1916 ;;Total ram usage:        0 bytes
  1917 ;; Hardware stack levels used:    1
  1918 ;; Hardware stack levels required when called:    1
  1919 ;; This function calls:
  1920 ;;		Nothing
  1921 ;; This function is called by:
  1922 ;;		_main
  1923 ;; This function uses a non-reentrant model
  1924 ;;
  1925                           
  1926                           
  1927                           ;psect for function _init_interrupt
  1928  04FA                     _init_interrupt:	
  1929  04FA                     l1199:	
  1930                           ;incstack = 0
  1931                           ; Regs used in _init_interrupt: []
  1932                           
  1933                           
  1934                           ;init.c: 51:     INTCONbits.GIE = 1;
  1935  04FA  178B               	bsf	11,7	;volatile
  1936                           
  1937                           ;init.c: 52:     INTCONbits.PEIE = 1;
  1938  04FB  170B               	bsf	11,6	;volatile
  1939                           
  1940                           ;init.c: 53:     INTCONbits.RBIE = 1;
  1941  04FC  158B               	bsf	11,3	;volatile
  1942                           
  1943                           ;init.c: 54:     INTCONbits.RBIF = 0;
  1944  04FD  100B               	bcf	11,0	;volatile
  1945                           
  1946                           ;init.c: 56:     OPTION_REGbits.nRBPU = 0;
  1947  04FE  1683               	bsf	3,5	;RP0=1, select bank1
  1948  04FF  1303               	bcf	3,6	;RP1=0, select bank1
  1949  0500  1381               	bcf	1,7	;volatile
  1950  0501                     l33:	
  1951  0501  0008               	return
  1952  0502                     __end_of_init_interrupt:	
  1953                           
  1954                           	psect	text14
  1955  0437                     __ptext14:	
  1956 ;; *************** function _drawBground *****************
  1957 ;; Defined at:
  1958 ;;		line 25 in file "screen.c"
  1959 ;; Parameters:    Size  Location     Type
  1960 ;;		None
  1961 ;; Auto vars:     Size  Location     Type
  1962 ;;		None
  1963 ;; Return value:  Size  Location     Type
  1964 ;;                  1    wreg      void 
  1965 ;; Registers used:
  1966 ;;		wreg
  1967 ;; Tracked objects:
  1968 ;;		On entry : 0/0
  1969 ;;		On exit  : 0/0
  1970 ;;		Unchanged: 0/0
  1971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1972 ;;      Params:         0       0       0       0       0
  1973 ;;      Locals:         0       0       0       0       0
  1974 ;;      Temps:          0       0       0       0       0
  1975 ;;      Totals:         0       0       0       0       0
  1976 ;;Total ram usage:        0 bytes
  1977 ;; Hardware stack levels used:    1
  1978 ;; Hardware stack levels required when called:    1
  1979 ;; This function calls:
  1980 ;;		Nothing
  1981 ;; This function is called by:
  1982 ;;		_main
  1983 ;; This function uses a non-reentrant model
  1984 ;;
  1985                           
  1986                           
  1987                           ;psect for function _drawBground
  1988  0437                     _drawBground:	
  1989  0437                     l1219:	
  1990                           ;incstack = 0
  1991                           ; Regs used in _drawBground: [wreg]
  1992                           
  1993                           
  1994                           ;screen.c: 26:     fondo[0] = 0x0003;
  1995  0437  3003               	movlw	3
  1996  0438  1283               	bcf	3,5	;RP0=0, select bank0
  1997  0439  1303               	bcf	3,6	;RP1=0, select bank0
  1998  043A  00C5               	movwf	_fondo
  1999  043B  3000               	movlw	0
  2000  043C  00C6               	movwf	_fondo+1
  2001                           
  2002                           ;screen.c: 27:     fondo[1] = 0x0003;
  2003  043D  3003               	movlw	3
  2004  043E  00C7               	movwf	_fondo+2
  2005  043F  3000               	movlw	0
  2006  0440  00C8               	movwf	_fondo+3
  2007                           
  2008                           ;screen.c: 28:     fondo[2] = 0x0003;
  2009  0441  3003               	movlw	3
  2010  0442  00C9               	movwf	_fondo+4
  2011  0443  3000               	movlw	0
  2012  0444  00CA               	movwf	_fondo+5
  2013                           
  2014                           ;screen.c: 29:     fondo[3] = 0x0003;
  2015  0445  3003               	movlw	3
  2016  0446  00CB               	movwf	_fondo+6
  2017  0447  3000               	movlw	0
  2018  0448  00CC               	movwf	_fondo+7
  2019                           
  2020                           ;screen.c: 30:     fondo[4] = 0x0003;
  2021  0449  3003               	movlw	3
  2022  044A  00CD               	movwf	_fondo+8
  2023  044B  3000               	movlw	0
  2024  044C  00CE               	movwf	_fondo+9
  2025                           
  2026                           ;screen.c: 31:     fondo[5] = 0x0003;
  2027  044D  3003               	movlw	3
  2028  044E  00CF               	movwf	_fondo+10
  2029  044F  3000               	movlw	0
  2030  0450  00D0               	movwf	_fondo+11
  2031                           
  2032                           ;screen.c: 32:     fondo[6] = 0x0003;
  2033  0451  3003               	movlw	3
  2034  0452  00D1               	movwf	_fondo+12
  2035  0453  3000               	movlw	0
  2036  0454  00D2               	movwf	_fondo+13
  2037                           
  2038                           ;screen.c: 33:     fondo[7] = 0x0003;
  2039  0455  3003               	movlw	3
  2040  0456  00D3               	movwf	_fondo+14
  2041  0457  3000               	movlw	0
  2042  0458  00D4               	movwf	_fondo+15
  2043  0459                     l157:	
  2044  0459  0008               	return
  2045  045A                     __end_of_drawBground:	
  2046                           
  2047                           	psect	text15
  2048  003E                     __ptext15:	
  2049 ;; *************** function _checkCount *****************
  2050 ;; Defined at:
  2051 ;;		line 65 in file "mainsource.c"
  2052 ;; Parameters:    Size  Location     Type
  2053 ;;		None
  2054 ;; Auto vars:     Size  Location     Type
  2055 ;;  i               2   30[BANK0 ] int 
  2056 ;;  j               2   28[BANK0 ] int 
  2057 ;;  condicion       2   26[BANK0 ] unsigned int 
  2058 ;; Return value:  Size  Location     Type
  2059 ;;                  1    wreg      void 
  2060 ;; Registers used:
  2061 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2062 ;; Tracked objects:
  2063 ;;		On entry : 0/0
  2064 ;;		On exit  : 0/0
  2065 ;;		Unchanged: 0/0
  2066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2067 ;;      Params:         0       0       0       0       0
  2068 ;;      Locals:         0       6       0       0       0
  2069 ;;      Temps:          0       9       0       0       0
  2070 ;;      Totals:         0      15       0       0       0
  2071 ;;Total ram usage:       15 bytes
  2072 ;; Hardware stack levels used:    1
  2073 ;; Hardware stack levels required when called:    3
  2074 ;; This function calls:
  2075 ;;		___awmod
  2076 ;;		_drawFigure
  2077 ;;		_rand
  2078 ;; This function is called by:
  2079 ;;		_main
  2080 ;; This function uses a non-reentrant model
  2081 ;;
  2082                           
  2083                           
  2084                           ;psect for function _checkCount
  2085  003E                     _checkCount:	
  2086  003E                     l1221:	
  2087                           ;incstack = 0
  2088                           ; Regs used in _checkCount: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2089                           
  2090                           
  2091                           ;mainsource.c: 66:     if(con.check_count == 1){
  2092  003E  1283               	bcf	3,5	;RP0=0, select bank0
  2093  003F  1303               	bcf	3,6	;RP1=0, select bank0
  2094  0040  035D               	decf	_con+8,w
  2095  0041  1D03               	btfss	3,2
  2096  0042  2844               	goto	u781
  2097  0043  2845               	goto	u780
  2098  0044                     u781:	
  2099  0044  296C               	goto	l90
  2100  0045                     u780:	
  2101  0045                     l1223:	
  2102                           
  2103                           ;mainsource.c: 67:         if(timerCount >= 3906){
  2104  0045  300F               	movlw	15
  2105  0046  025F               	subwf	_timerCount+1,w
  2106  0047  3042               	movlw	66
  2107  0048  1903               	skipnz
  2108  0049  025E               	subwf	_timerCount,w
  2109  004A  1C03               	skipc
  2110  004B  284D               	goto	u791
  2111  004C  284E               	goto	u790
  2112  004D                     u791:	
  2113  004D  2969               	goto	l1283
  2114  004E                     u790:	
  2115  004E                     l1225:	
  2116                           
  2117                           ;mainsource.c: 68:             PORTBbits.RB0 = con.led;
  2118  004E  0C57               	rrf	_con+2,w
  2119  004F  1C03               	skipc
  2120  0050  1006               	bcf	6,0	;volatile
  2121  0051  1803               	skipnc
  2122  0052  1406               	bsf	6,0	;volatile
  2123  0053                     l1227:	
  2124                           
  2125                           ;mainsource.c: 69:             con.led= ~con.led;
  2126  0053  0957               	comf	_con+2,w
  2127  0054  00B1               	movwf	??_checkCount
  2128  0055  0831               	movf	??_checkCount,w
  2129  0056  00D7               	movwf	_con+2
  2130  0057                     l1229:	
  2131                           
  2132                           ;mainsource.c: 70:             con.ficha_Vpos--;
  2133  0057  3001               	movlw	1
  2134  0058  02D8               	subwf	_con+3,f
  2135  0059                     l1231:	
  2136                           
  2137                           ;mainsource.c: 71:             timerCount = 0;
  2138  0059  01DE               	clrf	_timerCount
  2139  005A  01DF               	clrf	_timerCount+1
  2140  005B                     l1233:	
  2141                           
  2142                           ;mainsource.c: 72:             if(con.ficha_Vpos==0){
  2143  005B  0858               	movf	_con+3,w
  2144  005C  1D03               	btfss	3,2
  2145  005D  285F               	goto	u801
  2146  005E  2860               	goto	u800
  2147  005F                     u801:	
  2148  005F  287E               	goto	l1239
  2149  0060                     u800:	
  2150  0060                     l1235:	
  2151                           
  2152                           ;mainsource.c: 73:                 con.ficha_Vpos = 16;
  2153  0060  3010               	movlw	16
  2154  0061  00B1               	movwf	??_checkCount
  2155  0062  0831               	movf	??_checkCount,w
  2156  0063  00D8               	movwf	_con+3
  2157  0064                     l1237:	
  2158                           
  2159                           ;mainsource.c: 74:                 con.ficha_actual = rand() % 5;
  2160  0064  3005               	movlw	5
  2161  0065  00AB               	movwf	___awmod@divisor
  2162  0066  3000               	movlw	0
  2163  0067  00AC               	movwf	___awmod@divisor+1
  2164  0068  120A  118A  2322  120A  118A  	fcall	_rand
  2165  006D  1283               	bcf	3,5	;RP0=0, select bank0
  2166  006E  1303               	bcf	3,6	;RP1=0, select bank0
  2167  006F  0825               	movf	?_rand+1,w
  2168  0070  00AE               	movwf	___awmod@dividend+1
  2169  0071  0824               	movf	?_rand,w
  2170  0072  00AD               	movwf	___awmod@dividend
  2171  0073  120A  118A  2230  120A  118A  	fcall	___awmod
  2172  0078  1283               	bcf	3,5	;RP0=0, select bank0
  2173  0079  1303               	bcf	3,6	;RP1=0, select bank0
  2174  007A  082B               	movf	?___awmod,w
  2175  007B  00B1               	movwf	??_checkCount
  2176  007C  0831               	movf	??_checkCount,w
  2177  007D  00DA               	movwf	_con+5
  2178  007E                     l1239:	
  2179                           
  2180                           ;mainsource.c: 77:             drawFigure();
  2181  007E  120A  118A  216D  120A  118A  	fcall	_drawFigure
  2182  0083                     l1241:	
  2183  0083                     l1243:	
  2184  0083                     l1245:	
  2185  0083                     l1247:	
  2186                           
  2187                           ;mainsource.c: 81:             for(i=0; i<8; i++){
  2188  0083  1283               	bcf	3,5	;RP0=0, select bank0
  2189  0084  1303               	bcf	3,6	;RP1=0, select bank0
  2190  0085  01BE               	clrf	checkCount@i
  2191  0086  01BF               	clrf	checkCount@i+1
  2192  0087                     l1253:	
  2193                           
  2194                           ;mainsource.c: 82:                 pantalla[i] = ficha[i] | fondo[i];
  2195  0087  1283               	bcf	3,5	;RP0=0, select bank0
  2196  0088  1303               	bcf	3,6	;RP1=0, select bank0
  2197  0089  083E               	movf	checkCount@i,w
  2198  008A  00B1               	movwf	??_checkCount
  2199  008B  0731               	addwf	??_checkCount,w
  2200  008C  3E45               	addlw	(low (_fondo| 0))& (0+255)
  2201  008D  0084               	movwf	4
  2202  008E  1383               	bcf	3,7	;select IRP bank0
  2203  008F  0800               	movf	0,w
  2204  0090  00B2               	movwf	??_checkCount+1
  2205  0091  0A84               	incf	4,f
  2206  0092  0800               	movf	0,w
  2207  0093  00B3               	movwf	??_checkCount+2
  2208  0094  083E               	movf	checkCount@i,w
  2209  0095  00B4               	movwf	??_checkCount+3
  2210  0096  0734               	addwf	??_checkCount+3,w
  2211  0097  3ED0               	addlw	(low (_ficha| 0))& (0+255)
  2212  0098  0084               	movwf	4
  2213  0099  0800               	movf	0,w
  2214  009A  00B5               	movwf	??_checkCount+4
  2215  009B  0A84               	incf	4,f
  2216  009C  0800               	movf	0,w
  2217  009D  00B6               	movwf	??_checkCount+5
  2218  009E  0832               	movf	??_checkCount+1,w
  2219  009F  0435               	iorwf	??_checkCount+4,w
  2220  00A0  00B7               	movwf	??_checkCount+6
  2221  00A1  0833               	movf	??_checkCount+2,w
  2222  00A2  0436               	iorwf	??_checkCount+5,w
  2223  00A3  00B8               	movwf	??_checkCount+7
  2224  00A4  083E               	movf	checkCount@i,w
  2225  00A5  00B9               	movwf	??_checkCount+8
  2226  00A6  0739               	addwf	??_checkCount+8,w
  2227  00A7  3EE0               	addlw	(low (_pantalla| 0))& (0+255)
  2228  00A8  0084               	movwf	4
  2229  00A9  0837               	movf	??_checkCount+6,w
  2230  00AA  0080               	movwf	0
  2231  00AB  0A84               	incf	4,f
  2232  00AC  0838               	movf	??_checkCount+7,w
  2233  00AD  0080               	movwf	0
  2234  00AE                     l1255:	
  2235                           
  2236                           ;mainsource.c: 83:             }
  2237  00AE  3001               	movlw	1
  2238  00AF  07BE               	addwf	checkCount@i,f
  2239  00B0  1803               	skipnc
  2240  00B1  0ABF               	incf	checkCount@i+1,f
  2241  00B2  3000               	movlw	0
  2242  00B3  07BF               	addwf	checkCount@i+1,f
  2243  00B4                     l1257:	
  2244  00B4  083F               	movf	checkCount@i+1,w
  2245  00B5  3A80               	xorlw	128
  2246  00B6  00FF               	movwf	btemp+1
  2247  00B7  3080               	movlw	128
  2248  00B8  027F               	subwf	btemp+1,w
  2249  00B9  1D03               	skipz
  2250  00BA  28BD               	goto	u815
  2251  00BB  3008               	movlw	8
  2252  00BC  023E               	subwf	checkCount@i,w
  2253  00BD                     u815:	
  2254  00BD  1C03               	skipc
  2255  00BE  28C0               	goto	u811
  2256  00BF  28C1               	goto	u810
  2257  00C0                     u811:	
  2258  00C0  2887               	goto	l1253
  2259  00C1                     u810:	
  2260  00C1                     l1259:	
  2261                           
  2262                           ;mainsource.c: 85:             for(i=con.ficha_Hpos; i<(con.ficha_Hpos+4); i++){
  2263  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  2264  00C2  1303               	bcf	3,6	;RP1=0, select bank0
  2265  00C3  0859               	movf	_con+4,w
  2266  00C4  00B1               	movwf	??_checkCount
  2267  00C5  01B2               	clrf	??_checkCount+1
  2268  00C6  0831               	movf	??_checkCount,w
  2269  00C7  00BE               	movwf	checkCount@i
  2270  00C8  0832               	movf	??_checkCount+1,w
  2271  00C9  00BF               	movwf	checkCount@i+1
  2272  00CA  2954               	goto	l84
  2273  00CB                     l1261:	
  2274                           
  2275                           ;mainsource.c: 86:                 condicion = ficha[i]>>1 & fondo[i];
  2276  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  2277  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  2278  00CD  083E               	movf	checkCount@i,w
  2279  00CE  00B1               	movwf	??_checkCount
  2280  00CF  0731               	addwf	??_checkCount,w
  2281  00D0  3E45               	addlw	(low (_fondo| 0))& (0+255)
  2282  00D1  0084               	movwf	4
  2283  00D2  1383               	bcf	3,7	;select IRP bank0
  2284  00D3  0800               	movf	0,w
  2285  00D4  00B2               	movwf	??_checkCount+1
  2286  00D5  0A84               	incf	4,f
  2287  00D6  0800               	movf	0,w
  2288  00D7  00B3               	movwf	??_checkCount+2
  2289  00D8  083E               	movf	checkCount@i,w
  2290  00D9  00B4               	movwf	??_checkCount+3
  2291  00DA  0734               	addwf	??_checkCount+3,w
  2292  00DB  3ED0               	addlw	(low (_ficha| 0))& (0+255)
  2293  00DC  0084               	movwf	4
  2294  00DD  0800               	movf	0,w
  2295  00DE  00B5               	movwf	??_checkCount+4
  2296  00DF  0A84               	incf	4,f
  2297  00E0  0800               	movf	0,w
  2298  00E1  00B6               	movwf	??_checkCount+5
  2299  00E2  1003               	clrc
  2300  00E3  0CB6               	rrf	??_checkCount+5,f
  2301  00E4  0CB5               	rrf	??_checkCount+4,f
  2302  00E5  0832               	movf	??_checkCount+1,w
  2303  00E6  0535               	andwf	??_checkCount+4,w
  2304  00E7  00BA               	movwf	checkCount@condicion
  2305  00E8  0833               	movf	??_checkCount+2,w
  2306  00E9  0536               	andwf	??_checkCount+5,w
  2307  00EA  00BB               	movwf	checkCount@condicion+1
  2308  00EB                     l1263:	
  2309                           
  2310                           ;mainsource.c: 87:                 if(condicion != 0){
  2311  00EB  083A               	movf	checkCount@condicion,w
  2312  00EC  043B               	iorwf	checkCount@condicion+1,w
  2313  00ED  1903               	btfsc	3,2
  2314  00EE  28F0               	goto	u821
  2315  00EF  28F1               	goto	u820
  2316  00F0                     u821:	
  2317  00F0  294E               	goto	l1281
  2318  00F1                     u820:	
  2319  00F1                     l1265:	
  2320                           
  2321                           ;mainsource.c: 88:                     for(j=0; j<8; j++){
  2322  00F1  01BC               	clrf	checkCount@j
  2323  00F2  01BD               	clrf	checkCount@j+1
  2324  00F3                     l1271:	
  2325                           
  2326                           ;mainsource.c: 89:                         fondo[j] = fondo[j] | ficha[j];
  2327  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  2328  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  2329  00F5  083C               	movf	checkCount@j,w
  2330  00F6  00B1               	movwf	??_checkCount
  2331  00F7  0731               	addwf	??_checkCount,w
  2332  00F8  3ED0               	addlw	(low (_ficha| 0))& (0+255)
  2333  00F9  0084               	movwf	4
  2334  00FA  1383               	bcf	3,7	;select IRP bank1
  2335  00FB  0800               	movf	0,w
  2336  00FC  00B2               	movwf	??_checkCount+1
  2337  00FD  0A84               	incf	4,f
  2338  00FE  0800               	movf	0,w
  2339  00FF  00B3               	movwf	??_checkCount+2
  2340  0100  083C               	movf	checkCount@j,w
  2341  0101  00B4               	movwf	??_checkCount+3
  2342  0102  0734               	addwf	??_checkCount+3,w
  2343  0103  3E45               	addlw	(low (_fondo| 0))& (0+255)
  2344  0104  0084               	movwf	4
  2345  0105  0800               	movf	0,w
  2346  0106  00B5               	movwf	??_checkCount+4
  2347  0107  0A84               	incf	4,f
  2348  0108  0800               	movf	0,w
  2349  0109  00B6               	movwf	??_checkCount+5
  2350  010A  0832               	movf	??_checkCount+1,w
  2351  010B  0435               	iorwf	??_checkCount+4,w
  2352  010C  00B7               	movwf	??_checkCount+6
  2353  010D  0833               	movf	??_checkCount+2,w
  2354  010E  0436               	iorwf	??_checkCount+5,w
  2355  010F  00B8               	movwf	??_checkCount+7
  2356  0110  083C               	movf	checkCount@j,w
  2357  0111  00B9               	movwf	??_checkCount+8
  2358  0112  0739               	addwf	??_checkCount+8,w
  2359  0113  3E45               	addlw	(low (_fondo| 0))& (0+255)
  2360  0114  0084               	movwf	4
  2361  0115  0837               	movf	??_checkCount+6,w
  2362  0116  0080               	movwf	0
  2363  0117  0A84               	incf	4,f
  2364  0118  0838               	movf	??_checkCount+7,w
  2365  0119  0080               	movwf	0
  2366  011A                     l1273:	
  2367                           
  2368                           ;mainsource.c: 90:                     }
  2369  011A  3001               	movlw	1
  2370  011B  07BC               	addwf	checkCount@j,f
  2371  011C  1803               	skipnc
  2372  011D  0ABD               	incf	checkCount@j+1,f
  2373  011E  3000               	movlw	0
  2374  011F  07BD               	addwf	checkCount@j+1,f
  2375  0120                     l1275:	
  2376  0120  083D               	movf	checkCount@j+1,w
  2377  0121  3A80               	xorlw	128
  2378  0122  00FF               	movwf	btemp+1
  2379  0123  3080               	movlw	128
  2380  0124  027F               	subwf	btemp+1,w
  2381  0125  1D03               	skipz
  2382  0126  2929               	goto	u835
  2383  0127  3008               	movlw	8
  2384  0128  023C               	subwf	checkCount@j,w
  2385  0129                     u835:	
  2386  0129  1C03               	skipc
  2387  012A  292C               	goto	u831
  2388  012B  292D               	goto	u830
  2389  012C                     u831:	
  2390  012C  28F3               	goto	l1271
  2391  012D                     u830:	
  2392  012D                     l1277:	
  2393                           
  2394                           ;mainsource.c: 91:                     con.ficha_Vpos = 16;
  2395  012D  3010               	movlw	16
  2396  012E  1283               	bcf	3,5	;RP0=0, select bank0
  2397  012F  1303               	bcf	3,6	;RP1=0, select bank0
  2398  0130  00B1               	movwf	??_checkCount
  2399  0131  0831               	movf	??_checkCount,w
  2400  0132  00D8               	movwf	_con+3
  2401  0133                     l1279:	
  2402                           
  2403                           ;mainsource.c: 92:                     con.ficha_actual = rand() % 5;
  2404  0133  3005               	movlw	5
  2405  0134  00AB               	movwf	___awmod@divisor
  2406  0135  3000               	movlw	0
  2407  0136  00AC               	movwf	___awmod@divisor+1
  2408  0137  120A  118A  2322  120A  118A  	fcall	_rand
  2409  013C  1283               	bcf	3,5	;RP0=0, select bank0
  2410  013D  1303               	bcf	3,6	;RP1=0, select bank0
  2411  013E  0825               	movf	?_rand+1,w
  2412  013F  00AE               	movwf	___awmod@dividend+1
  2413  0140  0824               	movf	?_rand,w
  2414  0141  00AD               	movwf	___awmod@dividend
  2415  0142  120A  118A  2230  120A  118A  	fcall	___awmod
  2416  0147  1283               	bcf	3,5	;RP0=0, select bank0
  2417  0148  1303               	bcf	3,6	;RP1=0, select bank0
  2418  0149  082B               	movf	?___awmod,w
  2419  014A  00B1               	movwf	??_checkCount
  2420  014B  0831               	movf	??_checkCount,w
  2421  014C  00DA               	movwf	_con+5
  2422                           
  2423                           ;mainsource.c: 93:                     break;
  2424  014D  2969               	goto	l1283
  2425  014E                     l1281:	
  2426                           
  2427                           ;mainsource.c: 95:             }
  2428  014E  3001               	movlw	1
  2429  014F  07BE               	addwf	checkCount@i,f
  2430  0150  1803               	skipnc
  2431  0151  0ABF               	incf	checkCount@i+1,f
  2432  0152  3000               	movlw	0
  2433  0153  07BF               	addwf	checkCount@i+1,f
  2434  0154                     l84:	
  2435  0154  0859               	movf	_con+4,w
  2436  0155  3E04               	addlw	4
  2437  0156  00B1               	movwf	??_checkCount
  2438  0157  3000               	movlw	0
  2439  0158  1803               	skipnc
  2440  0159  3001               	movlw	1
  2441  015A  00B2               	movwf	??_checkCount+1
  2442  015B  083F               	movf	checkCount@i+1,w
  2443  015C  3A80               	xorlw	128
  2444  015D  00B3               	movwf	??_checkCount+2
  2445  015E  0832               	movf	??_checkCount+1,w
  2446  015F  3A80               	xorlw	128
  2447  0160  0233               	subwf	??_checkCount+2,w
  2448  0161  1D03               	skipz
  2449  0162  2965               	goto	u845
  2450  0163  0831               	movf	??_checkCount,w
  2451  0164  023E               	subwf	checkCount@i,w
  2452  0165                     u845:	
  2453  0165  1C03               	skipc
  2454  0166  2968               	goto	u841
  2455  0167  2969               	goto	u840
  2456  0168                     u841:	
  2457  0168  28CB               	goto	l1261
  2458  0169                     u840:	
  2459  0169                     l1283:	
  2460                           
  2461                           ;mainsource.c: 98:         con.check_count = 0;
  2462  0169  1283               	bcf	3,5	;RP0=0, select bank0
  2463  016A  1303               	bcf	3,6	;RP1=0, select bank0
  2464  016B  01DD               	clrf	_con+8
  2465  016C                     l90:	
  2466  016C  0008               	return
  2467  016D                     __end_of_checkCount:	
  2468                           
  2469                           	psect	text16
  2470  0322                     __ptext16:	
  2471 ;; *************** function _rand *****************
  2472 ;; Defined at:
  2473 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  2474 ;; Parameters:    Size  Location     Type
  2475 ;;		None
  2476 ;; Auto vars:     Size  Location     Type
  2477 ;;		None
  2478 ;; Return value:  Size  Location     Type
  2479 ;;                  2    4[BANK0 ] int 
  2480 ;; Registers used:
  2481 ;;		wreg, status,2, status,0, pclath, cstack
  2482 ;; Tracked objects:
  2483 ;;		On entry : 0/0
  2484 ;;		On exit  : 0/0
  2485 ;;		Unchanged: 0/0
  2486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2487 ;;      Params:         0       2       0       0       0
  2488 ;;      Locals:         0       0       0       0       0
  2489 ;;      Temps:          0       5       0       0       0
  2490 ;;      Totals:         0       7       0       0       0
  2491 ;;Total ram usage:        7 bytes
  2492 ;; Hardware stack levels used:    1
  2493 ;; Hardware stack levels required when called:    2
  2494 ;; This function calls:
  2495 ;;		___lmul
  2496 ;; This function is called by:
  2497 ;;		_checkCount
  2498 ;; This function uses a non-reentrant model
  2499 ;;
  2500                           
  2501                           
  2502                           ;psect for function _rand
  2503  0322                     _rand:	
  2504  0322                     l1103:	
  2505                           ;incstack = 0
  2506                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  2507                           
  2508  0322  1283               	bcf	3,5	;RP0=0, select bank0
  2509  0323  1303               	bcf	3,6	;RP1=0, select bank0
  2510  0324  0863               	movf	_randx+3,w
  2511  0325  00F5               	movwf	___lmul@multiplier+3
  2512  0326  0862               	movf	_randx+2,w
  2513  0327  00F4               	movwf	___lmul@multiplier+2
  2514  0328  0861               	movf	_randx+1,w
  2515  0329  00F3               	movwf	___lmul@multiplier+1
  2516  032A  0860               	movf	_randx,w
  2517  032B  00F2               	movwf	___lmul@multiplier
  2518  032C  3041               	movlw	65
  2519  032D  00F9               	movwf	___lmul@multiplicand+3
  2520  032E  30C6               	movlw	198
  2521  032F  00F8               	movwf	___lmul@multiplicand+2
  2522  0330  304E               	movlw	78
  2523  0331  00F7               	movwf	___lmul@multiplicand+1
  2524  0332  306D               	movlw	109
  2525  0333  00F6               	movwf	___lmul@multiplicand
  2526  0334  120A  118A  228B  120A  118A  	fcall	___lmul
  2527  0339  0875               	movf	?___lmul+3,w
  2528  033A  1283               	bcf	3,5	;RP0=0, select bank0
  2529  033B  1303               	bcf	3,6	;RP1=0, select bank0
  2530  033C  00E3               	movwf	_randx+3
  2531  033D  0874               	movf	?___lmul+2,w
  2532  033E  00E2               	movwf	_randx+2
  2533  033F  0873               	movf	?___lmul+1,w
  2534  0340  00E1               	movwf	_randx+1
  2535  0341  0872               	movf	?___lmul,w
  2536  0342  00E0               	movwf	_randx
  2537  0343                     l1105:	
  2538  0343  3039               	movlw	57
  2539  0344  07E0               	addwf	_randx,f
  2540  0345  3030               	movlw	48
  2541  0346  1803               	skipnc
  2542  0347  3031               	movlw	49
  2543  0348  07E1               	addwf	_randx+1,f
  2544  0349  3000               	movlw	0
  2545  034A  1803               	skipnc
  2546  034B  3001               	movlw	1
  2547  034C  07E2               	addwf	_randx+2,f
  2548  034D  3000               	movlw	0
  2549  034E  1803               	skipnc
  2550  034F  3001               	movlw	1
  2551  0350  07E3               	addwf	_randx+3,f
  2552  0351                     l1107:	
  2553  0351  0860               	movf	_randx,w
  2554  0352  00A6               	movwf	??_rand
  2555  0353  0861               	movf	_randx+1,w
  2556  0354  00A7               	movwf	??_rand+1
  2557  0355  0862               	movf	_randx+2,w
  2558  0356  00A8               	movwf	??_rand+2
  2559  0357  0863               	movf	_randx+3,w
  2560  0358  00A9               	movwf	??_rand+3
  2561  0359  3010               	movlw	16
  2562  035A  00AA               	movwf	??_rand+4
  2563  035B                     u535:	
  2564  035B  0D29               	rlf	??_rand+3,w
  2565  035C  0CA9               	rrf	??_rand+3,f
  2566  035D  0CA8               	rrf	??_rand+2,f
  2567  035E  0CA7               	rrf	??_rand+1,f
  2568  035F  0CA6               	rrf	??_rand,f
  2569  0360                     u530:	
  2570  0360  0BAA               	decfsz	??_rand+4,f
  2571  0361  2B5B               	goto	u535
  2572  0362  30FF               	movlw	255
  2573  0363  0526               	andwf	??_rand,w
  2574  0364  00A4               	movwf	?_rand
  2575  0365  307F               	movlw	127
  2576  0366  0527               	andwf	??_rand+1,w
  2577  0367  00A5               	movwf	?_rand+1
  2578  0368                     l705:	
  2579  0368  0008               	return
  2580  0369                     __end_of_rand:	
  2581                           
  2582                           	psect	text17
  2583  028B                     __ptext17:	
  2584 ;; *************** function ___lmul *****************
  2585 ;; Defined at:
  2586 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;  multiplier      4    2[COMMON] unsigned long 
  2589 ;;  multiplicand    4    6[COMMON] unsigned long 
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;  product         4    0[BANK0 ] unsigned long 
  2592 ;; Return value:  Size  Location     Type
  2593 ;;                  4    2[COMMON] unsigned long 
  2594 ;; Registers used:
  2595 ;;		wreg, status,2, status,0
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2601 ;;      Params:         8       0       0       0       0
  2602 ;;      Locals:         0       4       0       0       0
  2603 ;;      Temps:          1       0       0       0       0
  2604 ;;      Totals:         9       4       0       0       0
  2605 ;;Total ram usage:       13 bytes
  2606 ;; Hardware stack levels used:    1
  2607 ;; Hardware stack levels required when called:    1
  2608 ;; This function calls:
  2609 ;;		Nothing
  2610 ;; This function is called by:
  2611 ;;		_rand
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615                           
  2616                           ;psect for function ___lmul
  2617  028B                     ___lmul:	
  2618  028B                     l1083:	
  2619                           ;incstack = 0
  2620                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2621                           
  2622  028B  3000               	movlw	0
  2623  028C  1283               	bcf	3,5	;RP0=0, select bank0
  2624  028D  1303               	bcf	3,6	;RP1=0, select bank0
  2625  028E  00A3               	movwf	___lmul@product+3
  2626  028F  3000               	movlw	0
  2627  0290  00A2               	movwf	___lmul@product+2
  2628  0291  3000               	movlw	0
  2629  0292  00A1               	movwf	___lmul@product+1
  2630  0293  3000               	movlw	0
  2631  0294  00A0               	movwf	___lmul@product
  2632  0295                     l1085:	
  2633  0295  1C72               	btfss	___lmul@multiplier,0
  2634  0296  2A98               	goto	u481
  2635  0297  2A99               	goto	u480
  2636  0298                     u481:	
  2637  0298  2AB2               	goto	l1089
  2638  0299                     u480:	
  2639  0299                     l1087:	
  2640  0299  0876               	movf	___lmul@multiplicand,w
  2641  029A  1283               	bcf	3,5	;RP0=0, select bank0
  2642  029B  1303               	bcf	3,6	;RP1=0, select bank0
  2643  029C  07A0               	addwf	___lmul@product,f
  2644  029D  0877               	movf	___lmul@multiplicand+1,w
  2645  029E  1103               	clrz
  2646  029F  1803               	skipnc
  2647  02A0  3E01               	addlw	1
  2648  02A1  1903               	skipnz
  2649  02A2  2AA4               	goto	u491
  2650  02A3  07A1               	addwf	___lmul@product+1,f
  2651  02A4                     u491:	
  2652  02A4  0878               	movf	___lmul@multiplicand+2,w
  2653  02A5  1103               	clrz
  2654  02A6  1803               	skipnc
  2655  02A7  3E01               	addlw	1
  2656  02A8  1903               	skipnz
  2657  02A9  2AAB               	goto	u492
  2658  02AA  07A2               	addwf	___lmul@product+2,f
  2659  02AB                     u492:	
  2660  02AB  0879               	movf	___lmul@multiplicand+3,w
  2661  02AC  1103               	clrz
  2662  02AD  1803               	skipnc
  2663  02AE  3E01               	addlw	1
  2664  02AF  1903               	skipnz
  2665  02B0  2AB2               	goto	u493
  2666  02B1  07A3               	addwf	___lmul@product+3,f
  2667  02B2                     u493:	
  2668  02B2                     l1089:	
  2669  02B2  3001               	movlw	1
  2670  02B3  00FA               	movwf	??___lmul
  2671  02B4                     u505:	
  2672  02B4  1003               	clrc
  2673  02B5  0DF6               	rlf	___lmul@multiplicand,f
  2674  02B6  0DF7               	rlf	___lmul@multiplicand+1,f
  2675  02B7  0DF8               	rlf	___lmul@multiplicand+2,f
  2676  02B8  0DF9               	rlf	___lmul@multiplicand+3,f
  2677  02B9  0BFA               	decfsz	??___lmul,f
  2678  02BA  2AB4               	goto	u505
  2679  02BB                     l1091:	
  2680  02BB  3001               	movlw	1
  2681  02BC                     u515:	
  2682  02BC  1003               	clrc
  2683  02BD  0CF5               	rrf	___lmul@multiplier+3,f
  2684  02BE  0CF4               	rrf	___lmul@multiplier+2,f
  2685  02BF  0CF3               	rrf	___lmul@multiplier+1,f
  2686  02C0  0CF2               	rrf	___lmul@multiplier,f
  2687  02C1  3EFF               	addlw	-1
  2688  02C2  1D03               	skipz
  2689  02C3  2ABC               	goto	u515
  2690  02C4  0875               	movf	___lmul@multiplier+3,w
  2691  02C5  0474               	iorwf	___lmul@multiplier+2,w
  2692  02C6  0473               	iorwf	___lmul@multiplier+1,w
  2693  02C7  0472               	iorwf	___lmul@multiplier,w
  2694  02C8  1D03               	skipz
  2695  02C9  2ACB               	goto	u521
  2696  02CA  2ACC               	goto	u520
  2697  02CB                     u521:	
  2698  02CB  2A95               	goto	l1085
  2699  02CC                     u520:	
  2700  02CC                     l1093:	
  2701  02CC  1283               	bcf	3,5	;RP0=0, select bank0
  2702  02CD  1303               	bcf	3,6	;RP1=0, select bank0
  2703  02CE  0823               	movf	___lmul@product+3,w
  2704  02CF  00F5               	movwf	?___lmul+3
  2705  02D0  0822               	movf	___lmul@product+2,w
  2706  02D1  00F4               	movwf	?___lmul+2
  2707  02D2  0821               	movf	___lmul@product+1,w
  2708  02D3  00F3               	movwf	?___lmul+1
  2709  02D4  0820               	movf	___lmul@product,w
  2710  02D5  00F2               	movwf	?___lmul
  2711  02D6                     l263:	
  2712  02D6  0008               	return
  2713  02D7                     __end_of___lmul:	
  2714                           
  2715                           	psect	text18
  2716  016D                     __ptext18:	
  2717 ;; *************** function _drawFigure *****************
  2718 ;; Defined at:
  2719 ;;		line 36 in file "screen.c"
  2720 ;; Parameters:    Size  Location     Type
  2721 ;;		None
  2722 ;; Auto vars:     Size  Location     Type
  2723 ;;		None
  2724 ;; Return value:  Size  Location     Type
  2725 ;;                  1    wreg      void 
  2726 ;; Registers used:
  2727 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2728 ;; Tracked objects:
  2729 ;;		On entry : 0/0
  2730 ;;		On exit  : 0/0
  2731 ;;		Unchanged: 0/0
  2732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2733 ;;      Params:         0       0       0       0       0
  2734 ;;      Locals:         0       0       0       0       0
  2735 ;;      Temps:          0       5       0       0       0
  2736 ;;      Totals:         0       5       0       0       0
  2737 ;;Total ram usage:        5 bytes
  2738 ;; Hardware stack levels used:    1
  2739 ;; Hardware stack levels required when called:    2
  2740 ;; This function calls:
  2741 ;;		_memset
  2742 ;; This function is called by:
  2743 ;;		_checkCount
  2744 ;; This function uses a non-reentrant model
  2745 ;;
  2746                           
  2747                           
  2748                           ;psect for function _drawFigure
  2749  016D                     _drawFigure:	
  2750  016D                     l1111:	
  2751                           ;incstack = 0
  2752                           ; Regs used in _drawFigure: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2753                           
  2754                           
  2755                           ;screen.c: 37:     memset(ficha, 0, sizeof(ficha));
  2756  016D  3000               	movlw	0
  2757  016E  00F2               	movwf	memset@c
  2758  016F  00F3               	movwf	memset@c+1
  2759  0170  3010               	movlw	16
  2760  0171  00F4               	movwf	memset@n
  2761  0172  3000               	movlw	0
  2762  0173  00F5               	movwf	memset@n+1
  2763  0174  30D0               	movlw	(low (_ficha| 0))& (0+255)
  2764  0175  120A  118A  245A  120A  118A  	fcall	_memset
  2765  017A                     l1113:	
  2766                           
  2767                           ;screen.c: 38:     if(con.derecha == 1 && con.ficha_Hpos<4){
  2768  017A  1283               	bcf	3,5	;RP0=0, select bank0
  2769  017B  1303               	bcf	3,6	;RP1=0, select bank0
  2770  017C  035B               	decf	_con+6,w
  2771  017D  1D03               	btfss	3,2
  2772  017E  2980               	goto	u541
  2773  017F  2981               	goto	u540
  2774  0180                     u541:	
  2775  0180  298D               	goto	l1121
  2776  0181                     u540:	
  2777  0181                     l1115:	
  2778  0181  3004               	movlw	4
  2779  0182  0259               	subwf	_con+4,w
  2780  0183  1803               	skipnc
  2781  0184  2986               	goto	u551
  2782  0185  2987               	goto	u550
  2783  0186                     u551:	
  2784  0186  298D               	goto	l1121
  2785  0187                     u550:	
  2786  0187                     l1117:	
  2787                           
  2788                           ;screen.c: 39:         con.ficha_Hpos++;
  2789  0187  3001               	movlw	1
  2790  0188  00A0               	movwf	??_drawFigure
  2791  0189  0820               	movf	??_drawFigure,w
  2792  018A  07D9               	addwf	_con+4,f
  2793  018B                     l1119:	
  2794                           
  2795                           ;screen.c: 40:         con.derecha = 0;
  2796  018B  01DB               	clrf	_con+6
  2797                           
  2798                           ;screen.c: 41:     }else if (con.izquierda == 1 && con.ficha_Hpos>0){
  2799  018C  299A               	goto	l1129
  2800  018D                     l1121:	
  2801  018D  035C               	decf	_con+7,w
  2802  018E  1D03               	btfss	3,2
  2803  018F  2991               	goto	u561
  2804  0190  2992               	goto	u560
  2805  0191                     u561:	
  2806  0191  299A               	goto	l1129
  2807  0192                     u560:	
  2808  0192                     l1123:	
  2809  0192  0859               	movf	_con+4,w
  2810  0193  1903               	btfsc	3,2
  2811  0194  2996               	goto	u571
  2812  0195  2997               	goto	u570
  2813  0196                     u571:	
  2814  0196  299A               	goto	l1129
  2815  0197                     u570:	
  2816  0197                     l1125:	
  2817                           
  2818                           ;screen.c: 42:         con.ficha_Hpos--;
  2819  0197  3001               	movlw	1
  2820  0198  02D9               	subwf	_con+4,f
  2821  0199                     l1127:	
  2822                           
  2823                           ;screen.c: 43:         con.izquierda = 0;
  2824  0199  01DC               	clrf	_con+7
  2825  019A                     l1129:	
  2826                           
  2827                           ;screen.c: 46:     ficha[con.ficha_Hpos ] = figuras[con.ficha_actual][0] << (con.ficha_V
      +                          pos -1);
  2828  019A  0858               	movf	_con+3,w
  2829  019B  3EFF               	addlw	-1
  2830  019C  00A0               	movwf	??_drawFigure
  2831  019D  0AA0               	incf	??_drawFigure,f
  2832  019E  085A               	movf	_con+5,w
  2833  019F  00A1               	movwf	??_drawFigure+1
  2834  01A0  3002               	movlw	2
  2835  01A1                     u585:	
  2836  01A1  1003               	clrc
  2837  01A2  0DA1               	rlf	??_drawFigure+1,f
  2838  01A3  3EFF               	addlw	-1
  2839  01A4  1D03               	skipz
  2840  01A5  29A1               	goto	u585
  2841  01A6  1003               	clrc
  2842  01A7  0D21               	rlf	??_drawFigure+1,w
  2843  01A8  3EA0               	addlw	(low (_figuras| 0))& (0+255)
  2844  01A9  0084               	movwf	4
  2845  01AA  1383               	bcf	3,7	;select IRP bank1
  2846  01AB  0800               	movf	0,w
  2847  01AC  00A2               	movwf	??_drawFigure+2
  2848  01AD  0A84               	incf	4,f
  2849  01AE  0800               	movf	0,w
  2850  01AF  00A3               	movwf	??_drawFigure+3
  2851  01B0  29B4               	goto	u594
  2852  01B1                     u595:	
  2853  01B1  1003               	clrc
  2854  01B2  0DA2               	rlf	??_drawFigure+2,f
  2855  01B3  0DA3               	rlf	??_drawFigure+3,f
  2856  01B4                     u594:	
  2857  01B4  0BA0               	decfsz	??_drawFigure,f
  2858  01B5  29B1               	goto	u595
  2859  01B6  0859               	movf	_con+4,w
  2860  01B7  00A4               	movwf	??_drawFigure+4
  2861  01B8  0724               	addwf	??_drawFigure+4,w
  2862  01B9  3ED0               	addlw	(low (_ficha| 0))& (0+255)
  2863  01BA  0084               	movwf	4
  2864  01BB  0822               	movf	??_drawFigure+2,w
  2865  01BC  0080               	movwf	0
  2866  01BD  0A84               	incf	4,f
  2867  01BE  0823               	movf	??_drawFigure+3,w
  2868  01BF  0080               	movwf	0
  2869  01C0                     l1131:	
  2870                           
  2871                           ;screen.c: 47:     ficha[con.ficha_Hpos +1] = figuras[con.ficha_actual][1] << (con.ficha
      +                          _Vpos -1);
  2872  01C0  0858               	movf	_con+3,w
  2873  01C1  3EFF               	addlw	-1
  2874  01C2  00A0               	movwf	??_drawFigure
  2875  01C3  0AA0               	incf	??_drawFigure,f
  2876  01C4  085A               	movf	_con+5,w
  2877  01C5  00A1               	movwf	??_drawFigure+1
  2878  01C6  3002               	movlw	2
  2879  01C7                     u605:	
  2880  01C7  1003               	clrc
  2881  01C8  0DA1               	rlf	??_drawFigure+1,f
  2882  01C9  3EFF               	addlw	-1
  2883  01CA  1D03               	skipz
  2884  01CB  29C7               	goto	u605
  2885  01CC  1003               	clrc
  2886  01CD  0D21               	rlf	??_drawFigure+1,w
  2887  01CE  3EA2               	addlw	(low ((_figuras| 0+2)))& (0+255)
  2888  01CF  0084               	movwf	4
  2889  01D0  0800               	movf	0,w
  2890  01D1  00A2               	movwf	??_drawFigure+2
  2891  01D2  0A84               	incf	4,f
  2892  01D3  0800               	movf	0,w
  2893  01D4  00A3               	movwf	??_drawFigure+3
  2894  01D5  29D9               	goto	u614
  2895  01D6                     u615:	
  2896  01D6  1003               	clrc
  2897  01D7  0DA2               	rlf	??_drawFigure+2,f
  2898  01D8  0DA3               	rlf	??_drawFigure+3,f
  2899  01D9                     u614:	
  2900  01D9  0BA0               	decfsz	??_drawFigure,f
  2901  01DA  29D6               	goto	u615
  2902  01DB  0859               	movf	_con+4,w
  2903  01DC  00A4               	movwf	??_drawFigure+4
  2904  01DD  0724               	addwf	??_drawFigure+4,w
  2905  01DE  3ED2               	addlw	(low ((_ficha| 0+2)))& (0+255)
  2906  01DF  0084               	movwf	4
  2907  01E0  0822               	movf	??_drawFigure+2,w
  2908  01E1  0080               	movwf	0
  2909  01E2  0A84               	incf	4,f
  2910  01E3  0823               	movf	??_drawFigure+3,w
  2911  01E4  0080               	movwf	0
  2912  01E5                     l1133:	
  2913                           
  2914                           ;screen.c: 48:     ficha[con.ficha_Hpos +2] = figuras[con.ficha_actual][2] << (con.ficha
      +                          _Vpos -1);
  2915  01E5  0858               	movf	_con+3,w
  2916  01E6  3EFF               	addlw	-1
  2917  01E7  00A0               	movwf	??_drawFigure
  2918  01E8  0AA0               	incf	??_drawFigure,f
  2919  01E9  085A               	movf	_con+5,w
  2920  01EA  00A1               	movwf	??_drawFigure+1
  2921  01EB  3002               	movlw	2
  2922  01EC                     u625:	
  2923  01EC  1003               	clrc
  2924  01ED  0DA1               	rlf	??_drawFigure+1,f
  2925  01EE  3EFF               	addlw	-1
  2926  01EF  1D03               	skipz
  2927  01F0  29EC               	goto	u625
  2928  01F1  1003               	clrc
  2929  01F2  0D21               	rlf	??_drawFigure+1,w
  2930  01F3  3EA4               	addlw	(low ((_figuras| 0+4)))& (0+255)
  2931  01F4  0084               	movwf	4
  2932  01F5  0800               	movf	0,w
  2933  01F6  00A2               	movwf	??_drawFigure+2
  2934  01F7  0A84               	incf	4,f
  2935  01F8  0800               	movf	0,w
  2936  01F9  00A3               	movwf	??_drawFigure+3
  2937  01FA  29FE               	goto	u634
  2938  01FB                     u635:	
  2939  01FB  1003               	clrc
  2940  01FC  0DA2               	rlf	??_drawFigure+2,f
  2941  01FD  0DA3               	rlf	??_drawFigure+3,f
  2942  01FE                     u634:	
  2943  01FE  0BA0               	decfsz	??_drawFigure,f
  2944  01FF  29FB               	goto	u635
  2945  0200  0859               	movf	_con+4,w
  2946  0201  00A4               	movwf	??_drawFigure+4
  2947  0202  0724               	addwf	??_drawFigure+4,w
  2948  0203  3ED4               	addlw	(low ((_ficha| 0+4)))& (0+255)
  2949  0204  0084               	movwf	4
  2950  0205  0822               	movf	??_drawFigure+2,w
  2951  0206  0080               	movwf	0
  2952  0207  0A84               	incf	4,f
  2953  0208  0823               	movf	??_drawFigure+3,w
  2954  0209  0080               	movwf	0
  2955  020A                     l1135:	
  2956                           
  2957                           ;screen.c: 49:     ficha[con.ficha_Hpos +3] = figuras[con.ficha_actual][3] << (con.ficha
      +                          _Vpos -1);
  2958  020A  0858               	movf	_con+3,w
  2959  020B  3EFF               	addlw	-1
  2960  020C  00A0               	movwf	??_drawFigure
  2961  020D  0AA0               	incf	??_drawFigure,f
  2962  020E  085A               	movf	_con+5,w
  2963  020F  00A1               	movwf	??_drawFigure+1
  2964  0210  3002               	movlw	2
  2965  0211                     u645:	
  2966  0211  1003               	clrc
  2967  0212  0DA1               	rlf	??_drawFigure+1,f
  2968  0213  3EFF               	addlw	-1
  2969  0214  1D03               	skipz
  2970  0215  2A11               	goto	u645
  2971  0216  1003               	clrc
  2972  0217  0D21               	rlf	??_drawFigure+1,w
  2973  0218  3EA6               	addlw	(low ((_figuras| 0+6)))& (0+255)
  2974  0219  0084               	movwf	4
  2975  021A  0800               	movf	0,w
  2976  021B  00A2               	movwf	??_drawFigure+2
  2977  021C  0A84               	incf	4,f
  2978  021D  0800               	movf	0,w
  2979  021E  00A3               	movwf	??_drawFigure+3
  2980  021F  2A23               	goto	u654
  2981  0220                     u655:	
  2982  0220  1003               	clrc
  2983  0221  0DA2               	rlf	??_drawFigure+2,f
  2984  0222  0DA3               	rlf	??_drawFigure+3,f
  2985  0223                     u654:	
  2986  0223  0BA0               	decfsz	??_drawFigure,f
  2987  0224  2A20               	goto	u655
  2988  0225  0859               	movf	_con+4,w
  2989  0226  00A4               	movwf	??_drawFigure+4
  2990  0227  0724               	addwf	??_drawFigure+4,w
  2991  0228  3ED6               	addlw	(low ((_ficha| 0+6)))& (0+255)
  2992  0229  0084               	movwf	4
  2993  022A  0822               	movf	??_drawFigure+2,w
  2994  022B  0080               	movwf	0
  2995  022C  0A84               	incf	4,f
  2996  022D  0823               	movf	??_drawFigure+3,w
  2997  022E  0080               	movwf	0
  2998  022F                     l163:	
  2999  022F  0008               	return
  3000  0230                     __end_of_drawFigure:	
  3001                           
  3002                           	psect	text19
  3003  045A                     __ptext19:	
  3004 ;; *************** function _memset *****************
  3005 ;; Defined at:
  3006 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\memset.c"
  3007 ;; Parameters:    Size  Location     Type
  3008 ;;  p1              1    wreg     PTR void 
  3009 ;;		 -> ficha(16), 
  3010 ;;  c               2    2[COMMON] int 
  3011 ;;  n               2    4[COMMON] unsigned int 
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;  p1              1    7[COMMON] PTR void 
  3014 ;;		 -> ficha(16), 
  3015 ;;  p               1    8[COMMON] PTR unsigned char 
  3016 ;;		 -> ficha(16), 
  3017 ;; Return value:  Size  Location     Type
  3018 ;;                  1    wreg      PTR void 
  3019 ;; Registers used:
  3020 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3021 ;; Tracked objects:
  3022 ;;		On entry : 0/0
  3023 ;;		On exit  : 0/0
  3024 ;;		Unchanged: 0/0
  3025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3026 ;;      Params:         4       0       0       0       0
  3027 ;;      Locals:         2       0       0       0       0
  3028 ;;      Temps:          1       0       0       0       0
  3029 ;;      Totals:         7       0       0       0       0
  3030 ;;Total ram usage:        7 bytes
  3031 ;; Hardware stack levels used:    1
  3032 ;; Hardware stack levels required when called:    1
  3033 ;; This function calls:
  3034 ;;		Nothing
  3035 ;; This function is called by:
  3036 ;;		_drawFigure
  3037 ;; This function uses a non-reentrant model
  3038 ;;
  3039                           
  3040                           
  3041                           ;psect for function _memset
  3042  045A                     _memset:	
  3043                           
  3044                           ;incstack = 0
  3045                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0]
  3046                           ;memset@p1 stored from wreg
  3047  045A  00F7               	movwf	memset@p1
  3048  045B                     l1075:	
  3049  045B  0877               	movf	memset@p1,w
  3050  045C  00F6               	movwf	??_memset
  3051  045D  0876               	movf	??_memset,w
  3052  045E  00F8               	movwf	memset@p
  3053  045F  2C6B               	goto	l1081
  3054  0460                     l1077:	
  3055  0460  0872               	movf	memset@c,w
  3056  0461  00F6               	movwf	??_memset
  3057  0462  0878               	movf	memset@p,w
  3058  0463  0084               	movwf	4
  3059  0464  0876               	movf	??_memset,w
  3060  0465  1383               	bcf	3,7	;select IRP bank0
  3061  0466  0080               	movwf	0
  3062  0467                     l1079:	
  3063  0467  3001               	movlw	1
  3064  0468  00F6               	movwf	??_memset
  3065  0469  0876               	movf	??_memset,w
  3066  046A  07F8               	addwf	memset@p,f
  3067  046B                     l1081:	
  3068  046B  3001               	movlw	1
  3069  046C  02F4               	subwf	memset@n,f
  3070  046D  3000               	movlw	0
  3071  046E  1C03               	skipc
  3072  046F  03F5               	decf	memset@n+1,f
  3073  0470  02F5               	subwf	memset@n+1,f
  3074  0471  0A74               	incf	memset@n,w
  3075  0472  1D03               	skipz
  3076  0473  2C78               	goto	u471
  3077  0474  0A75               	incf	memset@n+1,w
  3078  0475  1D03               	btfss	3,2
  3079  0476  2C78               	goto	u471
  3080  0477  2C79               	goto	u470
  3081  0478                     u471:	
  3082  0478  2C60               	goto	l1077
  3083  0479                     u470:	
  3084  0479                     l697:	
  3085  0479  0008               	return
  3086  047A                     __end_of_memset:	
  3087                           
  3088                           	psect	text20
  3089  0230                     __ptext20:	
  3090 ;; *************** function ___awmod *****************
  3091 ;; Defined at:
  3092 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  3093 ;; Parameters:    Size  Location     Type
  3094 ;;  divisor         2   11[BANK0 ] int 
  3095 ;;  dividend        2   13[BANK0 ] int 
  3096 ;; Auto vars:     Size  Location     Type
  3097 ;;  sign            1   16[BANK0 ] unsigned char 
  3098 ;;  counter         1   15[BANK0 ] unsigned char 
  3099 ;; Return value:  Size  Location     Type
  3100 ;;                  2   11[BANK0 ] int 
  3101 ;; Registers used:
  3102 ;;		wreg, status,2, status,0
  3103 ;; Tracked objects:
  3104 ;;		On entry : 0/0
  3105 ;;		On exit  : 0/0
  3106 ;;		Unchanged: 0/0
  3107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3108 ;;      Params:         0       4       0       0       0
  3109 ;;      Locals:         0       2       0       0       0
  3110 ;;      Temps:          1       0       0       0       0
  3111 ;;      Totals:         1       6       0       0       0
  3112 ;;Total ram usage:        7 bytes
  3113 ;; Hardware stack levels used:    1
  3114 ;; Hardware stack levels required when called:    1
  3115 ;; This function calls:
  3116 ;;		Nothing
  3117 ;; This function is called by:
  3118 ;;		_checkCount
  3119 ;; This function uses a non-reentrant model
  3120 ;;
  3121                           
  3122                           
  3123                           ;psect for function ___awmod
  3124  0230                     ___awmod:	
  3125  0230                     l1159:	
  3126                           ;incstack = 0
  3127                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3128                           
  3129  0230  1283               	bcf	3,5	;RP0=0, select bank0
  3130  0231  1303               	bcf	3,6	;RP1=0, select bank0
  3131  0232  01B0               	clrf	___awmod@sign
  3132  0233                     l1161:	
  3133  0233  1FAE               	btfss	___awmod@dividend+1,7
  3134  0234  2A36               	goto	u691
  3135  0235  2A37               	goto	u690
  3136  0236                     u691:	
  3137  0236  2A3E               	goto	l1167
  3138  0237                     u690:	
  3139  0237                     l1163:	
  3140  0237  09AD               	comf	___awmod@dividend,f
  3141  0238  09AE               	comf	___awmod@dividend+1,f
  3142  0239  0AAD               	incf	___awmod@dividend,f
  3143  023A  1903               	skipnz
  3144  023B  0AAE               	incf	___awmod@dividend+1,f
  3145  023C                     l1165:	
  3146  023C  01B0               	clrf	___awmod@sign
  3147  023D  0AB0               	incf	___awmod@sign,f
  3148  023E                     l1167:	
  3149  023E  1FAC               	btfss	___awmod@divisor+1,7
  3150  023F  2A41               	goto	u701
  3151  0240  2A42               	goto	u700
  3152  0241                     u701:	
  3153  0241  2A47               	goto	l1171
  3154  0242                     u700:	
  3155  0242                     l1169:	
  3156  0242  09AB               	comf	___awmod@divisor,f
  3157  0243  09AC               	comf	___awmod@divisor+1,f
  3158  0244  0AAB               	incf	___awmod@divisor,f
  3159  0245  1903               	skipnz
  3160  0246  0AAC               	incf	___awmod@divisor+1,f
  3161  0247                     l1171:	
  3162  0247  082B               	movf	___awmod@divisor,w
  3163  0248  042C               	iorwf	___awmod@divisor+1,w
  3164  0249  1903               	btfsc	3,2
  3165  024A  2A4C               	goto	u711
  3166  024B  2A4D               	goto	u710
  3167  024C                     u711:	
  3168  024C  2A7C               	goto	l1189
  3169  024D                     u710:	
  3170  024D                     l1173:	
  3171  024D  01AF               	clrf	___awmod@counter
  3172  024E  0AAF               	incf	___awmod@counter,f
  3173  024F  2A5B               	goto	l1179
  3174  0250                     l1175:	
  3175  0250  3001               	movlw	1
  3176  0251                     u725:	
  3177  0251  1003               	clrc
  3178  0252  0DAB               	rlf	___awmod@divisor,f
  3179  0253  0DAC               	rlf	___awmod@divisor+1,f
  3180  0254  3EFF               	addlw	-1
  3181  0255  1D03               	skipz
  3182  0256  2A51               	goto	u725
  3183  0257                     l1177:	
  3184  0257  3001               	movlw	1
  3185  0258  00FB               	movwf	??___awmod
  3186  0259  087B               	movf	??___awmod,w
  3187  025A  07AF               	addwf	___awmod@counter,f
  3188  025B                     l1179:	
  3189  025B  1FAC               	btfss	___awmod@divisor+1,7
  3190  025C  2A5E               	goto	u731
  3191  025D  2A5F               	goto	u730
  3192  025E                     u731:	
  3193  025E  2A50               	goto	l1175
  3194  025F                     u730:	
  3195  025F                     l1181:	
  3196  025F  082C               	movf	___awmod@divisor+1,w
  3197  0260  022E               	subwf	___awmod@dividend+1,w
  3198  0261  1D03               	skipz
  3199  0262  2A65               	goto	u745
  3200  0263  082B               	movf	___awmod@divisor,w
  3201  0264  022D               	subwf	___awmod@dividend,w
  3202  0265                     u745:	
  3203  0265  1C03               	skipc
  3204  0266  2A68               	goto	u741
  3205  0267  2A69               	goto	u740
  3206  0268                     u741:	
  3207  0268  2A6F               	goto	l1185
  3208  0269                     u740:	
  3209  0269                     l1183:	
  3210  0269  082B               	movf	___awmod@divisor,w
  3211  026A  02AD               	subwf	___awmod@dividend,f
  3212  026B  082C               	movf	___awmod@divisor+1,w
  3213  026C  1C03               	skipc
  3214  026D  03AE               	decf	___awmod@dividend+1,f
  3215  026E  02AE               	subwf	___awmod@dividend+1,f
  3216  026F                     l1185:	
  3217  026F  3001               	movlw	1
  3218  0270                     u755:	
  3219  0270  1003               	clrc
  3220  0271  0CAC               	rrf	___awmod@divisor+1,f
  3221  0272  0CAB               	rrf	___awmod@divisor,f
  3222  0273  3EFF               	addlw	-1
  3223  0274  1D03               	skipz
  3224  0275  2A70               	goto	u755
  3225  0276                     l1187:	
  3226  0276  3001               	movlw	1
  3227  0277  02AF               	subwf	___awmod@counter,f
  3228  0278  1D03               	btfss	3,2
  3229  0279  2A7B               	goto	u761
  3230  027A  2A7C               	goto	u760
  3231  027B                     u761:	
  3232  027B  2A5F               	goto	l1181
  3233  027C                     u760:	
  3234  027C                     l1189:	
  3235  027C  0830               	movf	___awmod@sign,w
  3236  027D  1903               	btfsc	3,2
  3237  027E  2A80               	goto	u771
  3238  027F  2A81               	goto	u770
  3239  0280                     u771:	
  3240  0280  2A86               	goto	l1193
  3241  0281                     u770:	
  3242  0281                     l1191:	
  3243  0281  09AD               	comf	___awmod@dividend,f
  3244  0282  09AE               	comf	___awmod@dividend+1,f
  3245  0283  0AAD               	incf	___awmod@dividend,f
  3246  0284  1903               	skipnz
  3247  0285  0AAE               	incf	___awmod@dividend+1,f
  3248  0286                     l1193:	
  3249  0286  082E               	movf	___awmod@dividend+1,w
  3250  0287  00AC               	movwf	?___awmod+1
  3251  0288  082D               	movf	___awmod@dividend,w
  3252  0289  00AB               	movwf	?___awmod
  3253  028A                     l415:	
  3254  028A  0008               	return
  3255  028B                     __end_of___awmod:	
  3256                           
  3257                           	psect	text21
  3258  040B                     __ptext21:	
  3259 ;; *************** function _Timer0_ISR *****************
  3260 ;; Defined at:
  3261 ;;		line 101 in file "mainsource.c"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;		None
  3264 ;; Auto vars:     Size  Location     Type
  3265 ;;		None
  3266 ;; Return value:  Size  Location     Type
  3267 ;;                  1    wreg      void 
  3268 ;; Registers used:
  3269 ;;		wreg, status,2
  3270 ;; Tracked objects:
  3271 ;;		On entry : 0/0
  3272 ;;		On exit  : 0/0
  3273 ;;		Unchanged: 0/0
  3274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3275 ;;      Params:         0       0       0       0       0
  3276 ;;      Locals:         0       0       0       0       0
  3277 ;;      Temps:          2       0       0       0       0
  3278 ;;      Totals:         2       0       0       0       0
  3279 ;;Total ram usage:        2 bytes
  3280 ;; Hardware stack levels used:    1
  3281 ;; This function calls:
  3282 ;;		Nothing
  3283 ;; This function is called by:
  3284 ;;		Interrupt level 1
  3285 ;; This function uses a non-reentrant model
  3286 ;;
  3287                           
  3288                           
  3289                           ;psect for function _Timer0_ISR
  3290  040B                     _Timer0_ISR:	
  3291  040B                     i1l1317:	
  3292                           
  3293                           ;mainsource.c: 103:     if(INTCONbits.TMR0IF){
  3294  040B  1D0B               	btfss	11,2	;volatile
  3295  040C  2C0E               	goto	u86_21
  3296  040D  2C0F               	goto	u86_20
  3297  040E                     u86_21:	
  3298  040E  2C1B               	goto	i1l95
  3299  040F                     u86_20:	
  3300  040F                     i1l1319:	
  3301                           
  3302                           ;mainsource.c: 104:         INTCONbits.TMR0IF=0;
  3303  040F  110B               	bcf	11,2	;volatile
  3304  0410                     i1l1321:	
  3305                           
  3306                           ;mainsource.c: 105:         timerCount ++;
  3307  0410  3001               	movlw	1
  3308  0411  1283               	bcf	3,5	;RP0=0, select bank0
  3309  0412  1303               	bcf	3,6	;RP1=0, select bank0
  3310  0413  07DE               	addwf	_timerCount,f
  3311  0414  1803               	skipnc
  3312  0415  0ADF               	incf	_timerCount+1,f
  3313  0416  3000               	movlw	0
  3314  0417  07DF               	addwf	_timerCount+1,f
  3315  0418                     i1l1323:	
  3316                           
  3317                           ;mainsource.c: 106:         con.check_count = 1;
  3318  0418  01DD               	clrf	_con+8
  3319  0419  0ADD               	incf	_con+8,f
  3320                           
  3321                           ;mainsource.c: 107:     }
  3322  041A  2C30               	goto	i1l100
  3323  041B                     i1l95:	
  3324                           ;mainsource.c: 108:     else if(INTCONbits.RBIF){
  3325                           
  3326  041B  1C0B               	btfss	11,0	;volatile
  3327  041C  2C1E               	goto	u87_21
  3328  041D  2C1F               	goto	u87_20
  3329  041E                     u87_21:	
  3330  041E  2C30               	goto	i1l100
  3331  041F                     u87_20:	
  3332  041F                     i1l1325:	
  3333                           
  3334                           ;mainsource.c: 109:         if(PORTBbits.RB5 == 0){
  3335  041F  1283               	bcf	3,5	;RP0=0, select bank0
  3336  0420  1303               	bcf	3,6	;RP1=0, select bank0
  3337  0421  1A86               	btfsc	6,5	;volatile
  3338  0422  2C24               	goto	u88_21
  3339  0423  2C25               	goto	u88_20
  3340  0424                     u88_21:	
  3341  0424  2C28               	goto	i1l1331
  3342  0425                     u88_20:	
  3343  0425                     i1l1327:	
  3344                           
  3345                           ;mainsource.c: 110:             con.derecha = 1;
  3346  0425  01DB               	clrf	_con+6
  3347  0426  0ADB               	incf	_con+6,f
  3348  0427                     i1l1329:	
  3349                           
  3350                           ;mainsource.c: 111:             con.izquierda = 0;
  3351  0427  01DC               	clrf	_con+7
  3352  0428                     i1l1331:	
  3353                           
  3354                           ;mainsource.c: 113:         if(PORTBbits.RB4 == 0){
  3355  0428  1A06               	btfsc	6,4	;volatile
  3356  0429  2C2B               	goto	u89_21
  3357  042A  2C2C               	goto	u89_20
  3358  042B                     u89_21:	
  3359  042B  2C2F               	goto	i1l1337
  3360  042C                     u89_20:	
  3361  042C                     i1l1333:	
  3362                           
  3363                           ;mainsource.c: 114:             con.derecha = 0;
  3364  042C  01DB               	clrf	_con+6
  3365  042D                     i1l1335:	
  3366                           
  3367                           ;mainsource.c: 115:             con.izquierda = 1;
  3368  042D  01DC               	clrf	_con+7
  3369  042E  0ADC               	incf	_con+7,f
  3370  042F                     i1l1337:	
  3371                           
  3372                           ;mainsource.c: 117:         INTCONbits.RBIF=0;
  3373  042F  100B               	bcf	11,0	;volatile
  3374  0430                     i1l100:	
  3375  0430  0871               	movf	??_Timer0_ISR+1,w
  3376  0431  008A               	movwf	10
  3377  0432  0E70               	swapf	??_Timer0_ISR^(0+4294967168),w
  3378  0433  0083               	movwf	3
  3379  0434  0EFE               	swapf	btemp,f
  3380  0435  0E7E               	swapf	btemp,w
  3381  0436  0009               	retfie
  3382  0437                     __end_of_Timer0_ISR:	
  3383  007E                     btemp	set	126	;btemp
  3384  007E                     wtemp0	set	126
  3385                           
  3386                           	psect	intentry
  3387  0004                     __pintentry:	
  3388                           ;incstack = 0
  3389                           ; Regs used in _Timer0_ISR: [wreg+status,2]
  3390                           
  3391  0004                     interrupt_function:	
  3392  007E                     saved_w	set	btemp
  3393  0004  00FE               	movwf	btemp
  3394  0005  0E03               	swapf	3,w
  3395  0006  00F0               	movwf	??_Timer0_ISR
  3396  0007  080A               	movf	10,w
  3397  0008  00F1               	movwf	??_Timer0_ISR+1
  3398  0009  120A  118A  2C0B   	ljmp	_Timer0_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        52
    BSS         59
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     41      72
    BANK1            80      0      80
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(1) Largest target is 16
		 -> ficha(BANK1[16]), 

    memset@p	PTR unsigned char  size(1) Largest target is 16
		 -> ficha(BANK1[16]), 

    sp__memset	PTR void  size(1) Largest target is 16
		 -> ficha(BANK1[16]), 

    updateScreen@screen	PTR unsigned int  size(1) Largest target is 16
		 -> pantalla(BANK1[16]), 


Critical Paths under _main in COMMON

    _updateScreen->_setFilas
    _checkCount->___awmod
    _rand->___lmul
    _drawFigure->_memset

Critical Paths under _Timer0_ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_checkCount
    _checkCount->___awmod
    _rand->___lmul
    ___awmod->_rand

Critical Paths under _Timer0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer0_ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     5      4    1809
                                             32 BANK0      9     5      4
                         _checkCount
                        _drawBground
                     _init_interrupt
                         _init_pines
                         _init_timer
                       _updateScreen
 ---------------------------------------------------------------------------------
 (1) _updateScreen                                         5     5      0     364
                                              0 BANK0      5     5      0
                           _setFilas
                    _shiftBitColumna
 ---------------------------------------------------------------------------------
 (2) _shiftBitColumna                                      2     2      0      22
                                              2 COMMON     2     2      0
                     _latchClock_Col
                     _latchClock_Fil
                     _shiftClock_Col
 ---------------------------------------------------------------------------------
 (3) _shiftClock_Col                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _latchClock_Fil                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _latchClock_Col                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setFilas                                            10     8      2     265
                                              2 COMMON    10     8      2
                     _shiftClock_Fil
 ---------------------------------------------------------------------------------
 (3) _shiftClock_Fil                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_timer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_pines                                           0     0      0       0
                     _init_pines_col
                     _init_pines_fil
                      _init_pines_in
 ---------------------------------------------------------------------------------
 (2) _init_pines_in                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_pines_fil                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_pines_col                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_interrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _drawBground                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkCount                                          15    15      0    1443
                                             17 BANK0     15    15      0
                            ___awmod
                         _drawFigure
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 7     5      2     244
                                              4 BANK0      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8     244
                                              2 COMMON     9     1      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _drawFigure                                           5     5      0     281
                                              0 BANK0      5     5      0
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               7     3      4     281
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     600
                                             11 COMMON     1     1      0
                                             11 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Timer0_ISR                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _checkCount
     ___awmod
       _rand (ARG)
         ___lmul
     _drawFigure
       _memset
     _rand
       ___lmul
   _drawBground
   _init_interrupt
   _init_pines
     _init_pines_col
     _init_pines_fil
     _init_pines_in
   _init_timer
   _updateScreen
     _setFilas
       _shiftClock_Fil
     _shiftBitColumna
       _latchClock_Col
       _latchClock_Fil
       _shiftClock_Col

 _Timer0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      50       7      100.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     29      48       5       90.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      A4      12        0.0%
ABS                  0      0      A4       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat May 02 23:45:25 2020

                       pc 0002               __CFG_CP$OFF 0000          ??_init_interrupt 0072  
                      l21 04F1                        l30 04CB                        l24 04E6  
                      l33 0501                        l27 04BB                        l36 04D9  
                      l90 016C                        l84 0154                        fsr 0004  
        ??_init_pines_col 0072          ??_init_pines_fil 0072                       l120 0518  
                     l113 03AB                       l105 050D                       l123 0507  
                     l131 0495                       l108 0513                       l154 0321  
                     l163 022F                       l157 0459                       l415 028A  
                     l263 02D6                       l705 0368                       l697 0479  
                     u520 02CC                       u521 02CB                       u505 02B4  
                     u530 0360              __CFG_CPD$OFF 0000                       u515 02BC  
                     u700 0242                       u540 0181                       u701 0241  
                     u605 01C7                       u541 0180                       u710 024D  
                     u470 0479                       u614 01D9                       u550 0187  
                     u711 024C                       u471 0478                       u615 01D6  
                     u551 0186                       u535 035B                       u560 0192  
                     u480 0299                       u800 0060                       u625 01EC  
                     u561 0191                       u481 0298                       u801 005F  
                     u730 025F                       u634 01FE                       u570 0197  
                     u810 00C1                       u731 025E                       u635 01FB  
                     u571 0196                       u491 02A4                       u811 00C0  
                     u740 0269                       u492 02AB                       u820 00F1  
                     u660 037A                       u741 0268                       u725 0251  
                     u645 0211                       u493 02B2                       u821 00F0  
                     u661 0379                       u654 0223                       u830 012D  
                     u655 0220                       u831 012C                       u815 00BD  
                     u760 027C                       u840 0169                       u761 027B  
                     u745 0265                       u585 01A1                       u841 0168  
                     u665 0376                       u770 0281                       u690 0237  
                     u594 01B4                       u674 0385                       u850 02E0  
                     u771 0280                       u755 0270                       u691 0236  
                     u595 01B1                       u835 0129                       u675 0382  
                     u851 02DF                       u780 0045                       u684 0392  
                     u845 0165                       u781 0044                       u685 038F  
                     u790 004E                       u791 004D                       _con 0055  
                     fsr0 0004                       indf 0000              ___awmod@sign 0030  
            __CFG_FOSC$XT 0000              __CFG_LVP$OFF 0000                      l1101 04A9  
                    l1111 016D                      l1103 0322                      l1121 018D  
                    l1113 017A                      l1105 0343                      l1201 04CC  
                    l1131 01C0                      l1123 0192                      l1115 0181  
                    l1107 0351                      l1211 04D5                      l1203 04CF  
                    l1133 01E5                      l1125 0197                      l1117 0187  
                    l1221 003E                      l1213 04D6                      l1205 04D0  
                    l1301 03EB                      l1135 020A                      l1127 0199  
                    l1119 018B                      l1231 0059                      l1223 0045  
                    l1215 04D7                      l1207 04D1                      l1143 037B  
                    l1071 0514                      l1151 047B                      l1311 03F7  
                    l1303 03EB                      l1161 0233                      l1081 046B  
                    l1129 019A                      l1241 0083                      l1233 005B  
                    l1225 004E                      l1217 04D8                      l1209 04D2  
                    l1145 039F                      l1137 0369                      l1073 0502  
                    l1153 0486                      l1313 03FC                      l1305 03EB  
                    l1171 0247                      l1163 0237                      l1075 045B  
                    l1091 02BB                      l1083 028B                      l1243 0083  
                    l1235 0060                      l1227 0053                      l1219 0437  
                    l1147 03A4                      l1139 036D                      l1067 0508  
                    l1155 048B                      l1315 0401                      l1307 03EF  
                    l1181 025F                      l1173 024D                      l1165 023C  
                    l1077 0460                      l1093 02CC                      l1085 0295  
                    l1261 00CB                      l1253 0087                      l1245 0083  
                    l1237 0064                      l1229 0057                      l1069 050E  
                    l1157 0490                      l1309 03F3                      l1191 0281  
                    l1183 0269                      l1175 0250                      l1167 023E  
                    l1159 0230                      l1079 0467                      l1087 0299  
                    l1271 00F3                      l1263 00EB                      l1255 00AE  
                    l1247 0083                      l1239 007E                      l1193 0286  
                    l1185 026F                      l1177 0257                      l1169 0242  
                    l1089 02B2                      l1273 011A                      l1265 00F1  
                    l1281 014E                      l1257 00B4                      l1097 04E7  
                    l1187 0276                      l1179 025B                      l1275 0120  
                    l1259 00C1                      l1283 0169                      l1099 04DA  
                    l1291 02F9                      l1189 027C                      l1277 012D  
                    l1197 04BC                      l1293 0300                      l1285 02DA  
                    l1279 0133                      l1199 04FA                      l1295 0304  
                    l1287 02E0                      l1297 031B                      l1289 02E2  
                    l1299 03DC                      i1l95 041B                      _TMR0 0001  
            __CFG_WRT$OFF 0000                      _main 03DC                      _rand 0322  
                    btemp 007E             __CFG_BOREN$ON 0000                      start 000C  
      shiftBitColumna@bit 0073                     ?_main 0040                     ?_rand 0024  
           __CFG_WDTE$OFF 0000           __end_of___awmod 028B                     i1l100 0430  
                   u86_20 040F                     u86_21 040E                     u87_20 041F  
                   u87_21 041E                     u88_20 0425                     u88_21 0424  
                   u89_20 042C                     u89_21 042B       ___lmul@multiplicand 0076  
                   _ficha 00D0                     _fondo 0045                     _randx 0060  
                   pclath 000A                     status 0003                     wtemp0 007E  
         __initialization 000F              __end_of_main 040B              __end_of_rand 0369  
          _latchClock_Fil 0508            _latchClock_Col 0514   __size_of_shiftClock_Fil 0006  
 __size_of_shiftClock_Col 0006                    ??_main 0044                    ??_rand 0026  
                  i1l1321 0410                    i1l1331 0428                    i1l1323 0418  
                  i1l1333 042C                    i1l1325 041F                    i1l1317 040B  
                  i1l1335 042D                    i1l1327 0425                    i1l1319 040F  
                  i1l1337 042F                    i1l1329 0427            __CFG_PWRTE$OFF 0000  
    __size_of_drawBground 0023                _Timer0_ISR 040B    __end_of_latchClock_Col 0519  
  __end_of_latchClock_Fil 050E                    ___lmul 028B                 ??___awmod 007B  
                  _memset 045A           ___awmod@divisor 002B           ___awmod@counter 002F  
        __end_of_setFilas 03AC    __size_of_init_pines_in 000B                    saved_w 007E  
 __end_of__initialization 003A  __size_of_shiftBitColumna 001C        updateScreen@screen 0024  
         ?_latchClock_Col 0070           ?_latchClock_Fil 0070            __pcstackCOMMON 0070  
            __pidataBANK0 0519              __pidataBANK1 03AC            _OPTION_REGbits 0081  
              _checkCount 003E                __pbssBANK0 0045                __pbssBANK1 00D0  
           _init_pines_in 04E7               ?_Timer0_ISR 0070                __pmaintext 03DC  
                 ?___lmul 0072                __pintentry 0004            _shiftClock_Fil 050E  
          _shiftClock_Col 0502                   ?_memset 0072            ___lmul@product 0020  
              _drawFigure 016D            ?_init_pines_in 0070                 ?_setFilas 0072  
  __end_of_shiftClock_Fil 0514    __end_of_shiftClock_Col 0508           __size_of___lmul 004C  
                 ___awmod 0230         ??_shiftBitColumna 0072                _init_pines 04BC  
              _init_timer 04CC           __size_of_memset 0020                   __ptext1 02D7  
                 __ptext2 047A                   __ptext3 0502                   __ptext4 0508  
                 __ptext5 0514                   __ptext6 0369                   __ptext7 050E  
                 __ptext8 04CC                   __ptext9 04BC                   _figuras 00A0  
        ___awmod@dividend 002D       __size_of_Timer0_ISR 002C   __size_of_init_interrupt 0008  
                 clrloop0 04F3               ?_checkCount 0070      end_of_initialization 003A  
 __size_of_init_pines_col 0013   __size_of_init_pines_fil 000D                   memset@c 0072  
                 memset@n 0074                   memset@p 0078                ??_setFilas 0074  
         ?_shiftClock_Col 0070           ?_shiftClock_Fil 0070                _timerCount 005E  
               _PORTBbits 0006                 _PORTCbits 0007                 _PORTDbits 0008  
             ?_drawFigure 0070                 _TRISBbits 0086                 _TRISCbits 0087  
               _TRISDbits 0088           ??_init_pines_in 0072             ??_drawBground 0072  
        ??_latchClock_Col 0072          ??_latchClock_Fil 0072             ?_updateScreen 0070  
          __end_of___lmul 02D7       __size_of_checkCount 012F               ?_init_pines 0070  
             ?_init_timer 0070            __end_of_memset 047A       start_initialization 000F  
          ??_updateScreen 0020              ??_Timer0_ISR 0070       __size_of_drawFigure 00C3  
     __end_of_drawBground 045A                  ??___lmul 007A         setFilas@reg_value 0072  
              init_fetch0 0496               __pdataBANK0 0060               __pdataBANK1 00A0  
                ??_memset 0076                 ___latbits 0002             __pcstackBANK0 0020  
          _init_interrupt 04FA        __end_of_Timer0_ISR 0437            _init_pines_fil 04DA  
          _init_pines_col 04A9       __size_of_init_pines 0010           _shiftBitColumna 047A  
     __size_of_init_timer 000E         __size_of_setFilas 0043                  ?___awmod 002B  
  __end_of_init_interrupt 0502    __end_of_init_pines_col 04BC    __end_of_init_pines_fil 04E7  
            ??_checkCount 0031         interrupt_function 0004               _drawBground 0437  
        ??_shiftClock_Col 0072          ??_shiftClock_Fil 0072                 clear_ram0 04F2  
      __end_of_checkCount 016D           ?_init_interrupt 0070              ??_drawFigure 0020  
    __end_of_updateScreen 0322           ?_init_pines_col 0070           ?_init_pines_fil 0070  
 __end_of_shiftBitColumna 0496         ___lmul@multiplier 0072               checkCount@i 003E  
             checkCount@j 003C        __end_of_drawFigure 0230          __size_of___awmod 005B  
            ??_init_pines 0072              ??_init_timer 0072                 setFilas@i 007A  
                __ptext10 04E7                  __ptext11 04DA                  __ptext20 0230  
                __ptext12 04A9                  __ptext21 040B                  __ptext13 04FA  
                __ptext14 0437                  __ptext15 003E                  __ptext16 0322  
                __ptext17 028B                  __ptext18 016D                  __ptext19 045A  
   __end_of_init_pines_in 04F2             __size_of_main 002F             __size_of_rand 0047  
      __end_of_init_pines 04CC        __end_of_init_timer 04DA                  _pantalla 00E0  
                _setFilas 0369                  main@argc 0040                  main@argv 0042  
              _INTCONbits 000B                  init_ram0 049A                  memset@p1 0077  
        ?_shiftBitColumna 0070                  intlevel1 0000   __size_of_latchClock_Col 0005  
 __size_of_latchClock_Fil 0006     __size_of_updateScreen 004B       checkCount@condicion 003A  
            ?_drawBground 0070              _updateScreen 02D7  
