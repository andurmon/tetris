

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu May 14 13:41:25 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	intentry,global,class=CODE,delta=2
    44                           	dabs	1,0x7E,2
    45  0000                     
    46                           ; Version 2.10
    47                           ; Generated 31/07/2019 GMT
    48                           ; 
    49                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F877A Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     	;# 
    81  0001                     	;# 
    82  0002                     	;# 
    83  0003                     	;# 
    84  0004                     	;# 
    85  0005                     	;# 
    86  0006                     	;# 
    87  0007                     	;# 
    88  0008                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000D                     	;# 
    94  000E                     	;# 
    95  000E                     	;# 
    96  000F                     	;# 
    97  0010                     	;# 
    98  0011                     	;# 
    99  0012                     	;# 
   100  0013                     	;# 
   101  0014                     	;# 
   102  0015                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001B                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  001D                     	;# 
   113  001E                     	;# 
   114  001F                     	;# 
   115  0081                     	;# 
   116  0085                     	;# 
   117  0086                     	;# 
   118  0087                     	;# 
   119  0088                     	;# 
   120  0089                     	;# 
   121  008C                     	;# 
   122  008D                     	;# 
   123  008E                     	;# 
   124  0091                     	;# 
   125  0092                     	;# 
   126  0093                     	;# 
   127  0094                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  009F                     	;# 
   134  010C                     	;# 
   135  010D                     	;# 
   136  010E                     	;# 
   137  010F                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  0000                     	;# 
   141  0001                     	;# 
   142  0002                     	;# 
   143  0003                     	;# 
   144  0004                     	;# 
   145  0005                     	;# 
   146  0006                     	;# 
   147  0007                     	;# 
   148  0008                     	;# 
   149  0009                     	;# 
   150  000A                     	;# 
   151  000B                     	;# 
   152  000C                     	;# 
   153  000D                     	;# 
   154  000E                     	;# 
   155  000E                     	;# 
   156  000F                     	;# 
   157  0010                     	;# 
   158  0011                     	;# 
   159  0012                     	;# 
   160  0013                     	;# 
   161  0014                     	;# 
   162  0015                     	;# 
   163  0015                     	;# 
   164  0016                     	;# 
   165  0017                     	;# 
   166  0018                     	;# 
   167  0019                     	;# 
   168  001A                     	;# 
   169  001B                     	;# 
   170  001B                     	;# 
   171  001C                     	;# 
   172  001D                     	;# 
   173  001E                     	;# 
   174  001F                     	;# 
   175  0081                     	;# 
   176  0085                     	;# 
   177  0086                     	;# 
   178  0087                     	;# 
   179  0088                     	;# 
   180  0089                     	;# 
   181  008C                     	;# 
   182  008D                     	;# 
   183  008E                     	;# 
   184  0091                     	;# 
   185  0092                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  018C                     	;# 
   199  018D                     	;# 
   200  0000                     	;# 
   201  0001                     	;# 
   202  0002                     	;# 
   203  0003                     	;# 
   204  0004                     	;# 
   205  0005                     	;# 
   206  0006                     	;# 
   207  0007                     	;# 
   208  0008                     	;# 
   209  0009                     	;# 
   210  000A                     	;# 
   211  000B                     	;# 
   212  000C                     	;# 
   213  000D                     	;# 
   214  000E                     	;# 
   215  000E                     	;# 
   216  000F                     	;# 
   217  0010                     	;# 
   218  0011                     	;# 
   219  0012                     	;# 
   220  0013                     	;# 
   221  0014                     	;# 
   222  0015                     	;# 
   223  0015                     	;# 
   224  0016                     	;# 
   225  0017                     	;# 
   226  0018                     	;# 
   227  0019                     	;# 
   228  001A                     	;# 
   229  001B                     	;# 
   230  001B                     	;# 
   231  001C                     	;# 
   232  001D                     	;# 
   233  001E                     	;# 
   234  001F                     	;# 
   235  0081                     	;# 
   236  0085                     	;# 
   237  0086                     	;# 
   238  0087                     	;# 
   239  0088                     	;# 
   240  0089                     	;# 
   241  008C                     	;# 
   242  008D                     	;# 
   243  008E                     	;# 
   244  0091                     	;# 
   245  0092                     	;# 
   246  0093                     	;# 
   247  0094                     	;# 
   248  0098                     	;# 
   249  0099                     	;# 
   250  009C                     	;# 
   251  009D                     	;# 
   252  009E                     	;# 
   253  009F                     	;# 
   254  010C                     	;# 
   255  010D                     	;# 
   256  010E                     	;# 
   257  010F                     	;# 
   258  018C                     	;# 
   259  018D                     	;# 
   260  0000                     	;# 
   261  0001                     	;# 
   262  0002                     	;# 
   263  0003                     	;# 
   264  0004                     	;# 
   265  0005                     	;# 
   266  0006                     	;# 
   267  0007                     	;# 
   268  0008                     	;# 
   269  0009                     	;# 
   270  000A                     	;# 
   271  000B                     	;# 
   272  000C                     	;# 
   273  000D                     	;# 
   274  000E                     	;# 
   275  000E                     	;# 
   276  000F                     	;# 
   277  0010                     	;# 
   278  0011                     	;# 
   279  0012                     	;# 
   280  0013                     	;# 
   281  0014                     	;# 
   282  0015                     	;# 
   283  0015                     	;# 
   284  0016                     	;# 
   285  0017                     	;# 
   286  0018                     	;# 
   287  0019                     	;# 
   288  001A                     	;# 
   289  001B                     	;# 
   290  001B                     	;# 
   291  001C                     	;# 
   292  001D                     	;# 
   293  001E                     	;# 
   294  001F                     	;# 
   295  0081                     	;# 
   296  0085                     	;# 
   297  0086                     	;# 
   298  0087                     	;# 
   299  0088                     	;# 
   300  0089                     	;# 
   301  008C                     	;# 
   302  008D                     	;# 
   303  008E                     	;# 
   304  0091                     	;# 
   305  0092                     	;# 
   306  0093                     	;# 
   307  0094                     	;# 
   308  0098                     	;# 
   309  0099                     	;# 
   310  009C                     	;# 
   311  009D                     	;# 
   312  009E                     	;# 
   313  009F                     	;# 
   314  010C                     	;# 
   315  010D                     	;# 
   316  010E                     	;# 
   317  010F                     	;# 
   318  018C                     	;# 
   319  018D                     	;# 
   320  0000                     	;# 
   321  0001                     	;# 
   322  0002                     	;# 
   323  0003                     	;# 
   324  0004                     	;# 
   325  0005                     	;# 
   326  0006                     	;# 
   327  0007                     	;# 
   328  0008                     	;# 
   329  0009                     	;# 
   330  000A                     	;# 
   331  000B                     	;# 
   332  000C                     	;# 
   333  000D                     	;# 
   334  000E                     	;# 
   335  000E                     	;# 
   336  000F                     	;# 
   337  0010                     	;# 
   338  0011                     	;# 
   339  0012                     	;# 
   340  0013                     	;# 
   341  0014                     	;# 
   342  0015                     	;# 
   343  0015                     	;# 
   344  0016                     	;# 
   345  0017                     	;# 
   346  0018                     	;# 
   347  0019                     	;# 
   348  001A                     	;# 
   349  001B                     	;# 
   350  001B                     	;# 
   351  001C                     	;# 
   352  001D                     	;# 
   353  001E                     	;# 
   354  001F                     	;# 
   355  0081                     	;# 
   356  0085                     	;# 
   357  0086                     	;# 
   358  0087                     	;# 
   359  0088                     	;# 
   360  0089                     	;# 
   361  008C                     	;# 
   362  008D                     	;# 
   363  008E                     	;# 
   364  0091                     	;# 
   365  0092                     	;# 
   366  0093                     	;# 
   367  0094                     	;# 
   368  0098                     	;# 
   369  0099                     	;# 
   370  009C                     	;# 
   371  009D                     	;# 
   372  009E                     	;# 
   373  009F                     	;# 
   374  010C                     	;# 
   375  010D                     	;# 
   376  010E                     	;# 
   377  010F                     	;# 
   378  018C                     	;# 
   379  018D                     	;# 
   380  0000                     	;# 
   381  0001                     	;# 
   382  0002                     	;# 
   383  0003                     	;# 
   384  0004                     	;# 
   385  0005                     	;# 
   386  0006                     	;# 
   387  0007                     	;# 
   388  0008                     	;# 
   389  0009                     	;# 
   390  000A                     	;# 
   391  000B                     	;# 
   392  000C                     	;# 
   393  000D                     	;# 
   394  000E                     	;# 
   395  000E                     	;# 
   396  000F                     	;# 
   397  0010                     	;# 
   398  0011                     	;# 
   399  0012                     	;# 
   400  0013                     	;# 
   401  0014                     	;# 
   402  0015                     	;# 
   403  0015                     	;# 
   404  0016                     	;# 
   405  0017                     	;# 
   406  0018                     	;# 
   407  0019                     	;# 
   408  001A                     	;# 
   409  001B                     	;# 
   410  001B                     	;# 
   411  001C                     	;# 
   412  001D                     	;# 
   413  001E                     	;# 
   414  001F                     	;# 
   415  0081                     	;# 
   416  0085                     	;# 
   417  0086                     	;# 
   418  0087                     	;# 
   419  0088                     	;# 
   420  0089                     	;# 
   421  008C                     	;# 
   422  008D                     	;# 
   423  008E                     	;# 
   424  0091                     	;# 
   425  0092                     	;# 
   426  0093                     	;# 
   427  0094                     	;# 
   428  0098                     	;# 
   429  0099                     	;# 
   430  009C                     	;# 
   431  009D                     	;# 
   432  009E                     	;# 
   433  009F                     	;# 
   434  010C                     	;# 
   435  010D                     	;# 
   436  010E                     	;# 
   437  010F                     	;# 
   438  018C                     	;# 
   439  018D                     	;# 
   440  0000                     	;# 
   441  0001                     	;# 
   442  0002                     	;# 
   443  0003                     	;# 
   444  0004                     	;# 
   445  0005                     	;# 
   446  0006                     	;# 
   447  0007                     	;# 
   448  0008                     	;# 
   449  0009                     	;# 
   450  000A                     	;# 
   451  000B                     	;# 
   452  000C                     	;# 
   453  000D                     	;# 
   454  000E                     	;# 
   455  000E                     	;# 
   456  000F                     	;# 
   457  0010                     	;# 
   458  0011                     	;# 
   459  0012                     	;# 
   460  0013                     	;# 
   461  0014                     	;# 
   462  0015                     	;# 
   463  0015                     	;# 
   464  0016                     	;# 
   465  0017                     	;# 
   466  0018                     	;# 
   467  0019                     	;# 
   468  001A                     	;# 
   469  001B                     	;# 
   470  001B                     	;# 
   471  001C                     	;# 
   472  001D                     	;# 
   473  001E                     	;# 
   474  001F                     	;# 
   475  0081                     	;# 
   476  0085                     	;# 
   477  0086                     	;# 
   478  0087                     	;# 
   479  0088                     	;# 
   480  0089                     	;# 
   481  008C                     	;# 
   482  008D                     	;# 
   483  008E                     	;# 
   484  0091                     	;# 
   485  0092                     	;# 
   486  0093                     	;# 
   487  0094                     	;# 
   488  0098                     	;# 
   489  0099                     	;# 
   490  009C                     	;# 
   491  009D                     	;# 
   492  009E                     	;# 
   493  009F                     	;# 
   494  010C                     	;# 
   495  010D                     	;# 
   496  010E                     	;# 
   497  010F                     	;# 
   498  018C                     	;# 
   499  018D                     	;# 
   500  0000                     	;# 
   501  0001                     	;# 
   502  0002                     	;# 
   503  0003                     	;# 
   504  0004                     	;# 
   505  0005                     	;# 
   506  0006                     	;# 
   507  0007                     	;# 
   508  0008                     	;# 
   509  0009                     	;# 
   510  000A                     	;# 
   511  000B                     	;# 
   512  000C                     	;# 
   513  000D                     	;# 
   514  000E                     	;# 
   515  000E                     	;# 
   516  000F                     	;# 
   517  0010                     	;# 
   518  0011                     	;# 
   519  0012                     	;# 
   520  0013                     	;# 
   521  0014                     	;# 
   522  0015                     	;# 
   523  0015                     	;# 
   524  0016                     	;# 
   525  0017                     	;# 
   526  0018                     	;# 
   527  0019                     	;# 
   528  001A                     	;# 
   529  001B                     	;# 
   530  001B                     	;# 
   531  001C                     	;# 
   532  001D                     	;# 
   533  001E                     	;# 
   534  001F                     	;# 
   535  0081                     	;# 
   536  0085                     	;# 
   537  0086                     	;# 
   538  0087                     	;# 
   539  0088                     	;# 
   540  0089                     	;# 
   541  008C                     	;# 
   542  008D                     	;# 
   543  008E                     	;# 
   544  0091                     	;# 
   545  0092                     	;# 
   546  0093                     	;# 
   547  0094                     	;# 
   548  0098                     	;# 
   549  0099                     	;# 
   550  009C                     	;# 
   551  009D                     	;# 
   552  009E                     	;# 
   553  009F                     	;# 
   554  010C                     	;# 
   555  010D                     	;# 
   556  010E                     	;# 
   557  010F                     	;# 
   558  018C                     	;# 
   559  018D                     	;# 
   560  0000                     	;# 
   561  0001                     	;# 
   562  0002                     	;# 
   563  0003                     	;# 
   564  0004                     	;# 
   565  0005                     	;# 
   566  0006                     	;# 
   567  0007                     	;# 
   568  0008                     	;# 
   569  0009                     	;# 
   570  000A                     	;# 
   571  000B                     	;# 
   572  000C                     	;# 
   573  000D                     	;# 
   574  000E                     	;# 
   575  000E                     	;# 
   576  000F                     	;# 
   577  0010                     	;# 
   578  0011                     	;# 
   579  0012                     	;# 
   580  0013                     	;# 
   581  0014                     	;# 
   582  0015                     	;# 
   583  0015                     	;# 
   584  0016                     	;# 
   585  0017                     	;# 
   586  0018                     	;# 
   587  0019                     	;# 
   588  001A                     	;# 
   589  001B                     	;# 
   590  001B                     	;# 
   591  001C                     	;# 
   592  001D                     	;# 
   593  001E                     	;# 
   594  001F                     	;# 
   595  0081                     	;# 
   596  0085                     	;# 
   597  0086                     	;# 
   598  0087                     	;# 
   599  0088                     	;# 
   600  0089                     	;# 
   601  008C                     	;# 
   602  008D                     	;# 
   603  008E                     	;# 
   604  0091                     	;# 
   605  0092                     	;# 
   606  0093                     	;# 
   607  0094                     	;# 
   608  0098                     	;# 
   609  0099                     	;# 
   610  009C                     	;# 
   611  009D                     	;# 
   612  009E                     	;# 
   613  009F                     	;# 
   614  010C                     	;# 
   615  010D                     	;# 
   616  010E                     	;# 
   617  010F                     	;# 
   618  018C                     	;# 
   619  018D                     	;# 
   620                           
   621                           	psect	idataBANK0
   622  07B2                     __pidataBANK0:	
   623                           
   624                           ;initializer for _randx
   625  07B2  3401               	retlw	1
   626  07B3  3400               	retlw	0
   627  07B4  3400               	retlw	0
   628  07B5  3400               	retlw	0
   629                           
   630                           	psect	idataBANK1
   631  06FB                     __pidataBANK1:	
   632                           
   633                           ;initializer for _figuras
   634  06FB  3402               	retlw	2
   635  06FC  3402               	retlw	2
   636  06FD  3403               	retlw	3
   637  06FE  3400               	retlw	0
   638  06FF  3403               	retlw	3
   639  0700  3402               	retlw	2
   640  0701  3402               	retlw	2
   641  0702  3400               	retlw	0
   642  0703  3401               	retlw	1
   643  0704  3403               	retlw	3
   644  0705  3402               	retlw	2
   645  0706  3400               	retlw	0
   646  0707  3402               	retlw	2
   647  0708  3403               	retlw	3
   648  0709  3401               	retlw	1
   649  070A  3400               	retlw	0
   650  070B  3401               	retlw	1
   651  070C  3401               	retlw	1
   652  070D  3401               	retlw	1
   653  070E  3401               	retlw	1
   654  070F  3403               	retlw	3
   655  0710  3403               	retlw	3
   656  0711  3400               	retlw	0
   657  0712  3400               	retlw	0
   658  0713  3401               	retlw	1
   659  0714  3403               	retlw	3
   660  0715  3401               	retlw	1
   661  0716  3400               	retlw	0
   662  0001                     _TMR0	set	1
   663  000B                     _INTCONbits	set	11
   664  0008                     _PORTDbits	set	8
   665  0006                     _PORTBbits	set	6
   666  0007                     _PORTCbits	set	7
   667  0081                     _OPTION_REGbits	set	129
   668  0088                     _TRISDbits	set	136
   669  0087                     _TRISCbits	set	135
   670  0086                     _TRISBbits	set	134
   671                           
   672                           ; #config settings
   673  0000                     
   674                           	psect	cinit
   675  000F                     start_initialization:	
   676  000F                     __initialization:	
   677                           
   678                           ; Initialize objects allocated to BANK1
   679  000F  1383               	bcf	3,7	;select IRP bank0
   680  0010  30DC               	movlw	low (__pdataBANK1+28)
   681  0011  00FD               	movwf	btemp+-1
   682  0012  3006               	movlw	high __pidataBANK1
   683  0013  00FE               	movwf	btemp
   684  0014  30FB               	movlw	low __pidataBANK1
   685  0015  00FF               	movwf	btemp+1
   686  0016  30C0               	movlw	low __pdataBANK1
   687  0017  0084               	movwf	4
   688  0018  120A  118A  2737  120A  118A  	fcall	init_ram0
   689                           
   690                           ; Initialize objects allocated to BANK0
   691  001D  3069               	movlw	low (__pdataBANK0+4)
   692  001E  00FD               	movwf	btemp+-1
   693  001F  3007               	movlw	high __pidataBANK0
   694  0020  00FE               	movwf	btemp
   695  0021  30B2               	movlw	low __pidataBANK0
   696  0022  00FF               	movwf	btemp+1
   697  0023  3065               	movlw	low __pdataBANK0
   698  0024  0084               	movwf	4
   699  0025  120A  118A  2737  120A  118A  	fcall	init_ram0
   700                           
   701                           ; Clear objects allocated to BANK1
   702  002A  30A0               	movlw	low __pbssBANK1
   703  002B  0084               	movwf	4
   704  002C  30C0               	movlw	low (__pbssBANK1+32)
   705  002D  120A  118A  278D  120A  118A  	fcall	clear_ram0
   706                           
   707                           ; Clear objects allocated to BANK0
   708  0032  3045               	movlw	low __pbssBANK0
   709  0033  0084               	movwf	4
   710  0034  3065               	movlw	low (__pbssBANK0+32)
   711  0035  120A  118A  278D  120A  118A  	fcall	clear_ram0
   712  003A                     end_of_initialization:	
   713                           ;End of C runtime variable initialization code
   714                           
   715  003A                     __end_of__initialization:	
   716  003A  0183               	clrf	3
   717  003B  120A  118A  2D25   	ljmp	_main	;jump to C main() function
   718                           
   719                           	psect	bssBANK0
   720  0045                     __pbssBANK0:	
   721  0045                     _con:	
   722  0045                     	ds	8
   723  004D                     leerEntradas@F1195:	
   724  004D                     	ds	4
   725  0051                     _timerCount:	
   726  0051                     	ds	4
   727  0055                     _ficha:	
   728  0055                     	ds	16
   729                           
   730                           	psect	dataBANK0
   731  0065                     __pdataBANK0:	
   732  0065                     _randx:	
   733  0065                     	ds	4
   734                           
   735                           	psect	bssBANK1
   736  00A0                     __pbssBANK1:	
   737  00A0                     _fondo:	
   738  00A0                     	ds	16
   739  00B0                     _pantalla:	
   740  00B0                     	ds	16
   741                           
   742                           	psect	dataBANK1
   743  00C0                     __pdataBANK1:	
   744  00C0                     _figuras:	
   745  00C0                     	ds	28
   746                           
   747                           	psect	inittext
   748  0733                     init_fetch0:	
   749                           ;	Called with low address in FSR and high address in W
   750                           
   751  0733  087E               	movf	btemp,w
   752  0734  008A               	movwf	10
   753  0735  087F               	movf	btemp+1,w
   754  0736  0082               	movwf	2
   755  0737                     init_ram0:	
   756                           ;Called with:
   757                           ;	high address of idata address in btemp 
   758                           ;	low address of idata address in btemp+1 
   759                           ;	low address of data in FSR
   760                           ;	high address + 1 of data in btemp-1
   761                           
   762  0737  120A  118A  2733  120A  118A  	fcall	init_fetch0
   763  073C  0080               	movwf	0
   764  073D  0A84               	incf	4,f
   765  073E  0804               	movf	4,w
   766  073F  067D               	xorwf	btemp+-1,w
   767  0740  1903               	btfsc	3,2
   768  0741  3400               	retlw	0
   769  0742  0AFF               	incf	btemp+1,f
   770  0743  1903               	btfsc	3,2
   771  0744  0AFE               	incf	btemp,f
   772  0745  2F37               	goto	init_ram0
   773                           
   774                           	psect	clrtext
   775  078D                     clear_ram0:	
   776                           ;	Called with FSR containing the base address, and
   777                           ;	W with the last address+1
   778                           
   779  078D  0064               	clrwdt	;clear the watchdog before getting into this loop
   780  078E                     clrloop0:	
   781  078E  0180               	clrf	0	;clear RAM location pointed to by FSR
   782  078F  0A84               	incf	4,f	;increment pointer
   783  0790  0604               	xorwf	4,w	;XOR with final address
   784  0791  1903               	btfsc	3,2	;have we reached the end yet?
   785  0792  3400               	retlw	0	;all done for this memory range, return
   786  0793  0604               	xorwf	4,w	;XOR again to restore value
   787  0794  2F8E               	goto	clrloop0	;do the next byte
   788                           
   789                           	psect	cstackCOMMON
   790  0070                     __pcstackCOMMON:	
   791  0070                     ?_checkCount:	
   792  0070                     ?_updateScreen:	
   793                           ; 1 bytes @ 0x0
   794                           
   795  0070                     ?_drawFigure:	
   796                           ; 1 bytes @ 0x0
   797                           
   798  0070                     ?_checkBottom:	
   799                           ; 1 bytes @ 0x0
   800                           
   801  0070                     ?_checkColission:	
   802                           ; 1 bytes @ 0x0
   803                           
   804  0070                     ?_perdio:	
   805                           ; 1 bytes @ 0x0
   806                           
   807  0070                     ?_sumaPuntos:	
   808                           ; 1 bytes @ 0x0
   809                           
   810  0070                     ?_addToScreen:	
   811                           ; 1 bytes @ 0x0
   812                           
   813  0070                     ?_init_pines_in:	
   814                           ; 1 bytes @ 0x0
   815                           
   816  0070                     ?_init_pines_fil:	
   817                           ; 1 bytes @ 0x0
   818                           
   819  0070                     ?_init_pines_col:	
   820                           ; 1 bytes @ 0x0
   821                           
   822  0070                     ?_init_pines:	
   823                           ; 1 bytes @ 0x0
   824                           
   825  0070                     ?_init_timer:	
   826                           ; 1 bytes @ 0x0
   827                           
   828  0070                     ?_leerEntradas:	
   829                           ; 1 bytes @ 0x0
   830                           
   831  0070                     ?_Timer0_ISR:	
   832                           ; 1 bytes @ 0x0
   833                           
   834  0070                     ??_Timer0_ISR:	
   835                           ; 1 bytes @ 0x0
   836                           
   837  0070                     ?_latchClock_Fil:	
   838                           ; 1 bytes @ 0x0
   839                           
   840  0070                     ?_shiftClock_Fil:	
   841                           ; 1 bytes @ 0x0
   842                           
   843  0070                     ?_latchClock_Col:	
   844                           ; 1 bytes @ 0x0
   845                           
   846  0070                     ?_shiftClock_Col:	
   847                           ; 1 bytes @ 0x0
   848                           
   849  0070                     ?_shiftBitColumna:	
   850                           ; 1 bytes @ 0x0
   851                           
   852  0070                     ?_drawBground:	
   853                           ; 1 bytes @ 0x0
   854                           
   855                           
   856                           ; 1 bytes @ 0x0
   857  0070                     	ds	2
   858  0072                     ?_srand:	
   859  0072                     ??_sumaPuntos:	
   860                           ; 1 bytes @ 0x2
   861                           
   862  0072                     ??_addToScreen:	
   863                           ; 1 bytes @ 0x2
   864                           
   865  0072                     ?_memset:	
   866                           ; 1 bytes @ 0x2
   867                           
   868  0072                     ??_init_pines_in:	
   869                           ; 1 bytes @ 0x2
   870                           
   871  0072                     ??_init_pines_fil:	
   872                           ; 1 bytes @ 0x2
   873                           
   874  0072                     ??_init_pines_col:	
   875                           ; 1 bytes @ 0x2
   876                           
   877  0072                     ??_init_pines:	
   878                           ; 1 bytes @ 0x2
   879                           
   880  0072                     ??_init_timer:	
   881                           ; 1 bytes @ 0x2
   882                           
   883  0072                     ??_latchClock_Fil:	
   884                           ; 1 bytes @ 0x2
   885                           
   886  0072                     ??_shiftClock_Fil:	
   887                           ; 1 bytes @ 0x2
   888                           
   889  0072                     ?_setFilas:	
   890                           ; 1 bytes @ 0x2
   891                           
   892  0072                     ??_latchClock_Col:	
   893                           ; 1 bytes @ 0x2
   894                           
   895  0072                     ??_shiftClock_Col:	
   896                           ; 1 bytes @ 0x2
   897                           
   898  0072                     ??_shiftBitColumna:	
   899                           ; 1 bytes @ 0x2
   900                           
   901  0072                     ??_drawBground:	
   902                           ; 1 bytes @ 0x2
   903                           
   904  0072                     ?___lmul:	
   905                           ; 1 bytes @ 0x2
   906                           
   907  0072                     setFilas@reg_value:	
   908                           ; 4 bytes @ 0x2
   909                           
   910  0072                     memset@c:	
   911                           ; 2 bytes @ 0x2
   912                           
   913  0072                     srand@x:	
   914                           ; 2 bytes @ 0x2
   915                           
   916  0072                     ___lmul@multiplier:	
   917                           ; 2 bytes @ 0x2
   918                           
   919                           
   920                           ; 4 bytes @ 0x2
   921  0072                     	ds	1
   922  0073                     shiftBitColumna@bit:	
   923                           
   924                           ; 1 bytes @ 0x3
   925  0073                     	ds	1
   926  0074                     ??_srand:	
   927  0074                     ??_setFilas:	
   928                           ; 1 bytes @ 0x4
   929                           
   930  0074                     memset@n:	
   931                           ; 1 bytes @ 0x4
   932                           
   933                           
   934                           ; 2 bytes @ 0x4
   935  0074                     	ds	2
   936  0076                     ??_memset:	
   937  0076                     ___lmul@multiplicand:	
   938                           ; 1 bytes @ 0x6
   939                           
   940                           
   941                           ; 4 bytes @ 0x6
   942  0076                     	ds	1
   943  0077                     memset@p:	
   944                           
   945                           ; 1 bytes @ 0x7
   946  0077                     	ds	1
   947  0078                     memset@p1:	
   948                           
   949                           ; 1 bytes @ 0x8
   950  0078                     	ds	2
   951  007A                     ??___lmul:	
   952  007A                     setFilas@i:	
   953                           ; 1 bytes @ 0xA
   954                           
   955                           
   956                           ; 2 bytes @ 0xA
   957  007A                     	ds	1
   958  007B                     ??___awmod:	
   959                           
   960                           ; 1 bytes @ 0xB
   961  007B                     	ds	1
   962                           
   963                           	psect	cstackBANK0
   964  0020                     __pcstackBANK0:	
   965  0020                     ??_drawFigure:	
   966  0020                     addToScreen@i:	
   967                           ; 1 bytes @ 0x0
   968                           
   969  0020                     drawBground@i:	
   970                           ; 2 bytes @ 0x0
   971                           
   972  0020                     sumaPuntos@i:	
   973                           ; 2 bytes @ 0x0
   974                           
   975  0020                     ___lmul@product:	
   976                           ; 2 bytes @ 0x0
   977                           
   978                           
   979                           ; 4 bytes @ 0x0
   980  0020                     	ds	2
   981  0022                     ??_updateScreen:	
   982  0022                     sumaPuntos@j:	
   983                           ; 1 bytes @ 0x2
   984                           
   985                           
   986                           ; 2 bytes @ 0x2
   987  0022                     	ds	2
   988  0024                     ?_rand:	
   989                           
   990                           ; 2 bytes @ 0x4
   991  0024                     	ds	1
   992  0025                     ??_leerEntradas:	
   993                           
   994                           ; 1 bytes @ 0x5
   995  0025                     	ds	1
   996  0026                     ??_rand:	
   997  0026                     updateScreen@screen:	
   998                           ; 1 bytes @ 0x6
   999                           
  1000                           
  1001                           ; 1 bytes @ 0x6
  1002  0026                     	ds	1
  1003  0027                     updateScreen@i:	
  1004                           
  1005                           ; 2 bytes @ 0x7
  1006  0027                     	ds	4
  1007  002B                     ?___awmod:	
  1008  002B                     ___awmod@divisor:	
  1009                           ; 2 bytes @ 0xB
  1010                           
  1011                           
  1012                           ; 2 bytes @ 0xB
  1013  002B                     	ds	2
  1014  002D                     leerEntradas@k:	
  1015  002D                     ___awmod@dividend:	
  1016                           ; 2 bytes @ 0xD
  1017                           
  1018                           
  1019                           ; 2 bytes @ 0xD
  1020  002D                     	ds	2
  1021  002F                     leerEntradas@mask:	
  1022  002F                     ___awmod@counter:	
  1023                           ; 1 bytes @ 0xF
  1024                           
  1025                           
  1026                           ; 1 bytes @ 0xF
  1027  002F                     	ds	1
  1028  0030                     ___awmod@sign:	
  1029  0030                     leerEntradas@aux:	
  1030                           ; 1 bytes @ 0x10
  1031                           
  1032                           
  1033                           ; 4 bytes @ 0x10
  1034  0030                     	ds	1
  1035  0031                     ??_checkBottom:	
  1036  0031                     ??_checkColission:	
  1037                           ; 1 bytes @ 0x11
  1038                           
  1039  0031                     ??_perdio:	
  1040                           ; 1 bytes @ 0x11
  1041                           
  1042                           
  1043                           ; 1 bytes @ 0x11
  1044  0031                     	ds	3
  1045  0034                     leerEntradas@j:	
  1046  0034                     perdio@i:	
  1047                           ; 2 bytes @ 0x14
  1048                           
  1049                           
  1050                           ; 2 bytes @ 0x14
  1051  0034                     	ds	2
  1052  0036                     leerEntradas@i:	
  1053                           
  1054                           ; 2 bytes @ 0x16
  1055  0036                     	ds	3
  1056  0039                     checkColission@i:	
  1057                           
  1058                           ; 2 bytes @ 0x19
  1059  0039                     	ds	2
  1060  003B                     ??_checkCount:	
  1061                           
  1062                           ; 1 bytes @ 0x1B
  1063  003B                     	ds	3
  1064  003E                     checkCount@j:	
  1065                           
  1066                           ; 2 bytes @ 0x1E
  1067  003E                     	ds	2
  1068  0040                     ?_main:	
  1069  0040                     main@argc:	
  1070                           ; 2 bytes @ 0x20
  1071                           
  1072                           
  1073                           ; 2 bytes @ 0x20
  1074  0040                     	ds	2
  1075  0042                     main@argv:	
  1076                           
  1077                           ; 2 bytes @ 0x22
  1078  0042                     	ds	2
  1079  0044                     ??_main:	
  1080                           
  1081                           ; 1 bytes @ 0x24
  1082  0044                     	ds	1
  1083                           
  1084                           	psect	maintext
  1085  0525                     __pmaintext:	
  1086 ;;
  1087 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1088 ;;
  1089 ;; *************** function _main *****************
  1090 ;; Defined at:
  1091 ;;		line 43 in file "mainsource.c"
  1092 ;; Parameters:    Size  Location     Type
  1093 ;;  argc            2   32[BANK0 ] int 
  1094 ;;  argv            2   34[BANK0 ] PTR PTR unsigned char 
  1095 ;; Auto vars:     Size  Location     Type
  1096 ;;  j               2    0        int 
  1097 ;;  i               2    0        int 
  1098 ;; Return value:  Size  Location     Type
  1099 ;;                  2   32[BANK0 ] int 
  1100 ;; Registers used:
  1101 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1102 ;; Tracked objects:
  1103 ;;		On entry : B00/0
  1104 ;;		On exit  : 0/0
  1105 ;;		Unchanged: 0/0
  1106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1107 ;;      Params:         0       4       0       0       0
  1108 ;;      Locals:         0       4       0       0       0
  1109 ;;      Temps:          0       1       0       0       0
  1110 ;;      Totals:         0       9       0       0       0
  1111 ;;Total ram usage:        9 bytes
  1112 ;; Hardware stack levels required when called:    5
  1113 ;; This function calls:
  1114 ;;		___awmod
  1115 ;;		_checkCount
  1116 ;;		_init_pines
  1117 ;;		_init_timer
  1118 ;;		_rand
  1119 ;;		_srand
  1120 ;;		_updateScreen
  1121 ;; This function is called by:
  1122 ;;		Startup code after reset
  1123 ;; This function uses a non-reentrant model
  1124 ;;
  1125                           
  1126                           
  1127                           ;psect for function _main
  1128  0525                     _main:	
  1129  0525                     l1714:	
  1130                           ;incstack = 0
  1131                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1132                           
  1133                           
  1134                           ;mainsource.c: 47:     init_timer();
  1135  0525  120A  118A  2769  120A  118A  	fcall	_init_timer
  1136                           
  1137                           ;mainsource.c: 48:     init_pines();
  1138  052A  120A  118A  2759  120A  118A  	fcall	_init_pines
  1139  052F                     l1716:	
  1140  052F                     l1718:	
  1141  052F                     l1720:	
  1142                           
  1143                           ;mainsource.c: 52:     con.girar =0;
  1144  052F  1283               	bcf	3,5	;RP0=0, select bank0
  1145  0530  1303               	bcf	3,6	;RP1=0, select bank0
  1146  0531  01C5               	clrf	_con
  1147  0532                     l1722:	
  1148                           
  1149                           ;mainsource.c: 53:     con.ficha_Vpos = 16;
  1150  0532  3010               	movlw	16
  1151  0533  00C4               	movwf	??_main
  1152  0534  0844               	movf	??_main,w
  1153  0535  00C7               	movwf	_con+2
  1154  0536                     l1724:	
  1155                           
  1156                           ;mainsource.c: 54:     con.ficha_Hpos = 2;
  1157  0536  3002               	movlw	2
  1158  0537  00C4               	movwf	??_main
  1159  0538  0844               	movf	??_main,w
  1160  0539  00C8               	movwf	_con+3
  1161                           
  1162                           ;mainsource.c: 55:     srand(1);
  1163  053A  3001               	movlw	1
  1164  053B  00F2               	movwf	srand@x
  1165  053C  3000               	movlw	0
  1166  053D  00F3               	movwf	srand@x+1
  1167  053E  120A  118A  2784  120A  118A  	fcall	_srand
  1168                           
  1169                           ;mainsource.c: 56:     con.ficha_actual = rand() % 7;
  1170  0543  3007               	movlw	7
  1171  0544  1283               	bcf	3,5	;RP0=0, select bank0
  1172  0545  1303               	bcf	3,6	;RP1=0, select bank0
  1173  0546  00AB               	movwf	___awmod@divisor
  1174  0547  3000               	movlw	0
  1175  0548  00AC               	movwf	___awmod@divisor+1
  1176  0549  120A  118A  256E  120A  118A  	fcall	_rand
  1177  054E  1283               	bcf	3,5	;RP0=0, select bank0
  1178  054F  1303               	bcf	3,6	;RP1=0, select bank0
  1179  0550  0825               	movf	?_rand+1,w
  1180  0551  00AE               	movwf	___awmod@dividend+1
  1181  0552  0824               	movf	?_rand,w
  1182  0553  00AD               	movwf	___awmod@dividend
  1183  0554  120A  118A  23D6  120A  118A  	fcall	___awmod
  1184  0559  1283               	bcf	3,5	;RP0=0, select bank0
  1185  055A  1303               	bcf	3,6	;RP1=0, select bank0
  1186  055B  082B               	movf	?___awmod,w
  1187  055C  00C4               	movwf	??_main
  1188  055D  0844               	movf	??_main,w
  1189  055E  00C9               	movwf	_con+4
  1190  055F                     l1726:	
  1191                           
  1192                           ;mainsource.c: 60:         checkCount();
  1193  055F  120A  118A  248A  120A  118A  	fcall	_checkCount
  1194  0564                     l1728:	
  1195                           
  1196                           ;mainsource.c: 61:         updateScreen(pantalla);
  1197  0564  30B0               	movlw	(low (_pantalla| 0))& (0+255)
  1198  0565  120A  118A  2373  120A  118A  	fcall	_updateScreen
  1199  056A  2D5F               	goto	l1726
  1200  056B  120A  118A  280C   	ljmp	start
  1201  056E                     __end_of_main:	
  1202                           
  1203                           	psect	text1
  1204  0373                     __ptext1:	
  1205 ;; *************** function _updateScreen *****************
  1206 ;; Defined at:
  1207 ;;		line 17 in file "screen.c"
  1208 ;; Parameters:    Size  Location     Type
  1209 ;;  screen          1    wreg     PTR unsigned int 
  1210 ;;		 -> pantalla(16), 
  1211 ;; Auto vars:     Size  Location     Type
  1212 ;;  screen          1    6[BANK0 ] PTR unsigned int 
  1213 ;;		 -> pantalla(16), 
  1214 ;;  i               2    7[BANK0 ] int 
  1215 ;; Return value:  Size  Location     Type
  1216 ;;                  1    wreg      void 
  1217 ;; Registers used:
  1218 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1219 ;; Tracked objects:
  1220 ;;		On entry : 0/0
  1221 ;;		On exit  : 0/0
  1222 ;;		Unchanged: 0/0
  1223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1224 ;;      Params:         0       0       0       0       0
  1225 ;;      Locals:         0       3       0       0       0
  1226 ;;      Temps:          0       4       0       0       0
  1227 ;;      Totals:         0       7       0       0       0
  1228 ;;Total ram usage:        7 bytes
  1229 ;; Hardware stack levels used:    1
  1230 ;; Hardware stack levels required when called:    3
  1231 ;; This function calls:
  1232 ;;		_addToScreen
  1233 ;;		_setFilas
  1234 ;;		_shiftBitColumna
  1235 ;; This function is called by:
  1236 ;;		_main
  1237 ;; This function uses a non-reentrant model
  1238 ;;
  1239                           
  1240                           
  1241                           ;psect for function _updateScreen
  1242  0373                     _updateScreen:	
  1243                           
  1244                           ;incstack = 0
  1245                           ; Regs used in _updateScreen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1246                           ;updateScreen@screen stored from wreg
  1247  0373  1283               	bcf	3,5	;RP0=0, select bank0
  1248  0374  1303               	bcf	3,6	;RP1=0, select bank0
  1249  0375  00A6               	movwf	updateScreen@screen
  1250  0376                     l1690:	
  1251  0376                     l1692:	
  1252                           
  1253                           ;screen.c: 20:     addToScreen();
  1254  0376  120A  118A  25F8  120A  118A  	fcall	_addToScreen
  1255  037B                     l1694:	
  1256                           
  1257                           ;screen.c: 22:     for(i=0; i<=7;i++){
  1258  037B  1283               	bcf	3,5	;RP0=0, select bank0
  1259  037C  1303               	bcf	3,6	;RP1=0, select bank0
  1260  037D  01A7               	clrf	updateScreen@i
  1261  037E  01A8               	clrf	updateScreen@i+1
  1262  037F                     l1700:	
  1263                           
  1264                           ;screen.c: 23:        if(i == 0){
  1265  037F  1283               	bcf	3,5	;RP0=0, select bank0
  1266  0380  1303               	bcf	3,6	;RP1=0, select bank0
  1267  0381  0827               	movf	updateScreen@i,w
  1268  0382  0428               	iorwf	updateScreen@i+1,w
  1269  0383  1D03               	btfss	3,2
  1270  0384  2B86               	goto	u1321
  1271  0385  2B87               	goto	u1320
  1272  0386                     u1321:	
  1273  0386  2BA4               	goto	l1706
  1274  0387                     u1320:	
  1275  0387                     l1702:	
  1276                           
  1277                           ;screen.c: 24:             setFilas(~screen[i]);
  1278  0387  0827               	movf	updateScreen@i,w
  1279  0388  00A2               	movwf	??_updateScreen
  1280  0389  0722               	addwf	??_updateScreen,w
  1281  038A  0726               	addwf	updateScreen@screen,w
  1282  038B  00A3               	movwf	??_updateScreen+1
  1283  038C  0823               	movf	??_updateScreen+1,w
  1284  038D  0084               	movwf	4
  1285  038E  1383               	bcf	3,7	;select IRP bank0
  1286  038F  0800               	movf	0,w
  1287  0390  00A4               	movwf	??_updateScreen+2
  1288  0391  0A84               	incf	4,f
  1289  0392  0800               	movf	0,w
  1290  0393  00A5               	movwf	??_updateScreen+3
  1291  0394  0924               	comf	??_updateScreen+2,w
  1292  0395  00F2               	movwf	setFilas@reg_value
  1293  0396  0925               	comf	??_updateScreen+3,w
  1294  0397  00F3               	movwf	setFilas@reg_value+1
  1295  0398  120A  118A  25B5  120A  118A  	fcall	_setFilas
  1296  039D                     l1704:	
  1297                           
  1298                           ;screen.c: 25:             shiftBitColumna(1);
  1299  039D  3001               	movlw	1
  1300  039E  120A  118A  2717  120A  118A  	fcall	_shiftBitColumna
  1301                           
  1302                           ;screen.c: 26:         }
  1303  03A3  2BC0               	goto	l1710
  1304  03A4                     l1706:	
  1305                           
  1306                           ;screen.c: 28:             setFilas(~screen[i]);
  1307  03A4  0827               	movf	updateScreen@i,w
  1308  03A5  00A2               	movwf	??_updateScreen
  1309  03A6  0722               	addwf	??_updateScreen,w
  1310  03A7  0726               	addwf	updateScreen@screen,w
  1311  03A8  00A3               	movwf	??_updateScreen+1
  1312  03A9  0823               	movf	??_updateScreen+1,w
  1313  03AA  0084               	movwf	4
  1314  03AB  1383               	bcf	3,7	;select IRP bank0
  1315  03AC  0800               	movf	0,w
  1316  03AD  00A4               	movwf	??_updateScreen+2
  1317  03AE  0A84               	incf	4,f
  1318  03AF  0800               	movf	0,w
  1319  03B0  00A5               	movwf	??_updateScreen+3
  1320  03B1  0924               	comf	??_updateScreen+2,w
  1321  03B2  00F2               	movwf	setFilas@reg_value
  1322  03B3  0925               	comf	??_updateScreen+3,w
  1323  03B4  00F3               	movwf	setFilas@reg_value+1
  1324  03B5  120A  118A  25B5  120A  118A  	fcall	_setFilas
  1325  03BA                     l1708:	
  1326                           
  1327                           ;screen.c: 29:             shiftBitColumna(0);
  1328  03BA  3000               	movlw	0
  1329  03BB  120A  118A  2717  120A  118A  	fcall	_shiftBitColumna
  1330  03C0                     l1710:	
  1331                           
  1332                           ;screen.c: 31:     }
  1333  03C0  3001               	movlw	1
  1334  03C1  1283               	bcf	3,5	;RP0=0, select bank0
  1335  03C2  1303               	bcf	3,6	;RP1=0, select bank0
  1336  03C3  07A7               	addwf	updateScreen@i,f
  1337  03C4  1803               	skipnc
  1338  03C5  0AA8               	incf	updateScreen@i+1,f
  1339  03C6  3000               	movlw	0
  1340  03C7  07A8               	addwf	updateScreen@i+1,f
  1341  03C8                     l1712:	
  1342  03C8  0828               	movf	updateScreen@i+1,w
  1343  03C9  3A80               	xorlw	128
  1344  03CA  00FF               	movwf	btemp+1
  1345  03CB  3080               	movlw	128
  1346  03CC  027F               	subwf	btemp+1,w
  1347  03CD  1D03               	skipz
  1348  03CE  2BD1               	goto	u1335
  1349  03CF  3008               	movlw	8
  1350  03D0  0227               	subwf	updateScreen@i,w
  1351  03D1                     u1335:	
  1352  03D1  1C03               	skipc
  1353  03D2  2BD4               	goto	u1331
  1354  03D3  2BD5               	goto	u1330
  1355  03D4                     u1331:	
  1356  03D4  2B7F               	goto	l1700
  1357  03D5                     u1330:	
  1358  03D5                     l186:	
  1359  03D5  0008               	return
  1360  03D6                     __end_of_updateScreen:	
  1361                           
  1362                           	psect	text2
  1363  0717                     __ptext2:	
  1364 ;; *************** function _shiftBitColumna *****************
  1365 ;; Defined at:
  1366 ;;		line 33 in file "columnas.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;  bit             1    wreg     unsigned char 
  1369 ;; Auto vars:     Size  Location     Type
  1370 ;;  bit             1    3[COMMON] unsigned char 
  1371 ;; Return value:  Size  Location     Type
  1372 ;;                  1    wreg      void 
  1373 ;; Registers used:
  1374 ;;		wreg, status,2, status,0, pclath, cstack
  1375 ;; Tracked objects:
  1376 ;;		On entry : 0/0
  1377 ;;		On exit  : 0/0
  1378 ;;		Unchanged: 0/0
  1379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1380 ;;      Params:         0       0       0       0       0
  1381 ;;      Locals:         1       0       0       0       0
  1382 ;;      Temps:          1       0       0       0       0
  1383 ;;      Totals:         2       0       0       0       0
  1384 ;;Total ram usage:        2 bytes
  1385 ;; Hardware stack levels used:    1
  1386 ;; Hardware stack levels required when called:    2
  1387 ;; This function calls:
  1388 ;;		_latchClock_Col
  1389 ;;		_latchClock_Fil
  1390 ;;		_shiftClock_Col
  1391 ;; This function is called by:
  1392 ;;		_updateScreen
  1393 ;; This function uses a non-reentrant model
  1394 ;;
  1395                           
  1396                           
  1397                           ;psect for function _shiftBitColumna
  1398  0717                     _shiftBitColumna:	
  1399                           
  1400                           ;incstack = 0
  1401                           ; Regs used in _shiftBitColumna: [wreg+status,2+status,0+pclath+cstack]
  1402                           ;shiftBitColumna@bit stored from wreg
  1403  0717  00F3               	movwf	shiftBitColumna@bit
  1404  0718                     l1624:	
  1405                           
  1406                           ;columnas.c: 34:     PORTDbits.RD4= bit & 0x01;
  1407  0718  0873               	movf	shiftBitColumna@bit,w
  1408  0719  3901               	andlw	1
  1409  071A  00F2               	movwf	??_shiftBitColumna
  1410  071B  0EF2               	swapf	??_shiftBitColumna,f
  1411  071C  1283               	bcf	3,5	;RP0=0, select bank0
  1412  071D  1303               	bcf	3,6	;RP1=0, select bank0
  1413  071E  0808               	movf	8,w	;volatile
  1414  071F  0672               	xorwf	??_shiftBitColumna,w
  1415  0720  39EF               	andlw	-17
  1416  0721  0672               	xorwf	??_shiftBitColumna,w
  1417  0722  0088               	movwf	8	;volatile
  1418  0723                     l1626:	
  1419                           
  1420                           ;columnas.c: 35:     shiftClock_Col();
  1421  0723  120A  118A  2795  120A  118A  	fcall	_shiftClock_Col
  1422  0728                     l1628:	
  1423                           
  1424                           ;columnas.c: 36:     latchClock_Col();
  1425  0728  120A  118A  27AD  120A  118A  	fcall	_latchClock_Col
  1426  072D                     l1630:	
  1427                           
  1428                           ;columnas.c: 37:     latchClock_Fil();
  1429  072D  120A  118A  279B  120A  118A  	fcall	_latchClock_Fil
  1430  0732                     l159:	
  1431  0732  0008               	return
  1432  0733                     __end_of_shiftBitColumna:	
  1433                           
  1434                           	psect	text3
  1435  0795                     __ptext3:	
  1436 ;; *************** function _shiftClock_Col *****************
  1437 ;; Defined at:
  1438 ;;		line 13 in file "columnas.c"
  1439 ;; Parameters:    Size  Location     Type
  1440 ;;		None
  1441 ;; Auto vars:     Size  Location     Type
  1442 ;;		None
  1443 ;; Return value:  Size  Location     Type
  1444 ;;                  1    wreg      void 
  1445 ;; Registers used:
  1446 ;;		None
  1447 ;; Tracked objects:
  1448 ;;		On entry : 0/0
  1449 ;;		On exit  : 0/0
  1450 ;;		Unchanged: 0/0
  1451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1452 ;;      Params:         0       0       0       0       0
  1453 ;;      Locals:         0       0       0       0       0
  1454 ;;      Temps:          0       0       0       0       0
  1455 ;;      Totals:         0       0       0       0       0
  1456 ;;Total ram usage:        0 bytes
  1457 ;; Hardware stack levels used:    1
  1458 ;; Hardware stack levels required when called:    1
  1459 ;; This function calls:
  1460 ;;		Nothing
  1461 ;; This function is called by:
  1462 ;;		_shiftBitColumna
  1463 ;;		_setColumnas
  1464 ;; This function uses a non-reentrant model
  1465 ;;
  1466                           
  1467                           
  1468                           ;psect for function _shiftClock_Col
  1469  0795                     _shiftClock_Col:	
  1470  0795                     l1368:	
  1471                           ;incstack = 0
  1472                           ; Regs used in _shiftClock_Col: []
  1473                           
  1474                           
  1475                           ;columnas.c: 14:     PORTDbits.RD7 = 0;
  1476  0795  1283               	bcf	3,5	;RP0=0, select bank0
  1477  0796  1303               	bcf	3,6	;RP1=0, select bank0
  1478  0797  1388               	bcf	8,7	;volatile
  1479                           
  1480                           ;columnas.c: 15:     PORTDbits.RD7 = 1;
  1481  0798  1788               	bsf	8,7	;volatile
  1482                           
  1483                           ;columnas.c: 16:     PORTDbits.RD7 = 0;
  1484  0799  1388               	bcf	8,7	;volatile
  1485  079A                     l151:	
  1486  079A  0008               	return
  1487  079B                     __end_of_shiftClock_Col:	
  1488                           
  1489                           	psect	text4
  1490  079B                     __ptext4:	
  1491 ;; *************** function _latchClock_Fil *****************
  1492 ;; Defined at:
  1493 ;;		line 7 in file "filas.c"
  1494 ;; Parameters:    Size  Location     Type
  1495 ;;		None
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;		None
  1498 ;; Return value:  Size  Location     Type
  1499 ;;                  1    wreg      void 
  1500 ;; Registers used:
  1501 ;;		None
  1502 ;; Tracked objects:
  1503 ;;		On entry : 0/0
  1504 ;;		On exit  : 0/0
  1505 ;;		Unchanged: 0/0
  1506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1507 ;;      Params:         0       0       0       0       0
  1508 ;;      Locals:         0       0       0       0       0
  1509 ;;      Temps:          0       0       0       0       0
  1510 ;;      Totals:         0       0       0       0       0
  1511 ;;Total ram usage:        0 bytes
  1512 ;; Hardware stack levels used:    1
  1513 ;; Hardware stack levels required when called:    1
  1514 ;; This function calls:
  1515 ;;		Nothing
  1516 ;; This function is called by:
  1517 ;;		_shiftBitColumna
  1518 ;; This function uses a non-reentrant model
  1519 ;;
  1520                           
  1521                           
  1522                           ;psect for function _latchClock_Fil
  1523  079B                     _latchClock_Fil:	
  1524  079B                     l1362:	
  1525                           ;incstack = 0
  1526                           ; Regs used in _latchClock_Fil: []
  1527                           
  1528                           
  1529                           ;filas.c: 8:     PORTCbits.RC6 = 0;
  1530  079B  1283               	bcf	3,5	;RP0=0, select bank0
  1531  079C  1303               	bcf	3,6	;RP1=0, select bank0
  1532  079D  1307               	bcf	7,6	;volatile
  1533                           
  1534                           ;filas.c: 9:     PORTCbits.RC6 = 1;
  1535  079E  1707               	bsf	7,6	;volatile
  1536                           
  1537                           ;filas.c: 10:     PORTCbits.RC6 = 0;
  1538  079F  1307               	bcf	7,6	;volatile
  1539  07A0                     l133:	
  1540  07A0  0008               	return
  1541  07A1                     __end_of_latchClock_Fil:	
  1542                           
  1543                           	psect	text5
  1544  07AD                     __ptext5:	
  1545 ;; *************** function _latchClock_Col *****************
  1546 ;; Defined at:
  1547 ;;		line 8 in file "columnas.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;		None
  1550 ;; Auto vars:     Size  Location     Type
  1551 ;;		None
  1552 ;; Return value:  Size  Location     Type
  1553 ;;                  1    wreg      void 
  1554 ;; Registers used:
  1555 ;;		None
  1556 ;; Tracked objects:
  1557 ;;		On entry : 0/0
  1558 ;;		On exit  : 0/0
  1559 ;;		Unchanged: 0/0
  1560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1561 ;;      Params:         0       0       0       0       0
  1562 ;;      Locals:         0       0       0       0       0
  1563 ;;      Temps:          0       0       0       0       0
  1564 ;;      Totals:         0       0       0       0       0
  1565 ;;Total ram usage:        0 bytes
  1566 ;; Hardware stack levels used:    1
  1567 ;; Hardware stack levels required when called:    1
  1568 ;; This function calls:
  1569 ;;		Nothing
  1570 ;; This function is called by:
  1571 ;;		_shiftBitColumna
  1572 ;;		_setColumnas
  1573 ;; This function uses a non-reentrant model
  1574 ;;
  1575                           
  1576                           
  1577                           ;psect for function _latchClock_Col
  1578  07AD                     _latchClock_Col:	
  1579  07AD                     l1366:	
  1580                           ;incstack = 0
  1581                           ; Regs used in _latchClock_Col: []
  1582                           
  1583                           
  1584                           ;columnas.c: 9:     PORTDbits.RD6 = 1;
  1585  07AD  1283               	bcf	3,5	;RP0=0, select bank0
  1586  07AE  1303               	bcf	3,6	;RP1=0, select bank0
  1587  07AF  1708               	bsf	8,6	;volatile
  1588                           
  1589                           ;columnas.c: 10:     PORTDbits.RD6 = 0;
  1590  07B0  1308               	bcf	8,6	;volatile
  1591  07B1                     l148:	
  1592  07B1  0008               	return
  1593  07B2                     __end_of_latchClock_Col:	
  1594                           
  1595                           	psect	text6
  1596  05B5                     __ptext6:	
  1597 ;; *************** function _setFilas *****************
  1598 ;; Defined at:
  1599 ;;		line 19 in file "filas.c"
  1600 ;; Parameters:    Size  Location     Type
  1601 ;;  reg_value       2    2[COMMON] unsigned int 
  1602 ;; Auto vars:     Size  Location     Type
  1603 ;;  i               2   10[COMMON] int 
  1604 ;; Return value:  Size  Location     Type
  1605 ;;                  1    wreg      void 
  1606 ;; Registers used:
  1607 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1608 ;; Tracked objects:
  1609 ;;		On entry : 0/0
  1610 ;;		On exit  : 0/0
  1611 ;;		Unchanged: 0/0
  1612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1613 ;;      Params:         2       0       0       0       0
  1614 ;;      Locals:         2       0       0       0       0
  1615 ;;      Temps:          6       0       0       0       0
  1616 ;;      Totals:        10       0       0       0       0
  1617 ;;Total ram usage:       10 bytes
  1618 ;; Hardware stack levels used:    1
  1619 ;; Hardware stack levels required when called:    2
  1620 ;; This function calls:
  1621 ;;		_shiftClock_Fil
  1622 ;; This function is called by:
  1623 ;;		_updateScreen
  1624 ;; This function uses a non-reentrant model
  1625 ;;
  1626                           
  1627                           
  1628                           ;psect for function _setFilas
  1629  05B5                     _setFilas:	
  1630  05B5                     l1610:	
  1631                           ;incstack = 0
  1632                           ; Regs used in _setFilas: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1633                           
  1634                           
  1635                           ;filas.c: 20:     int i = 0;
  1636  05B5  01FA               	clrf	setFilas@i
  1637  05B6  01FB               	clrf	setFilas@i+1
  1638                           
  1639                           ;filas.c: 21:     for(i=0;i<16;i++){
  1640  05B7  01FA               	clrf	setFilas@i
  1641  05B8  01FB               	clrf	setFilas@i+1
  1642  05B9                     l1612:	
  1643  05B9  087B               	movf	setFilas@i+1,w
  1644  05BA  3A80               	xorlw	128
  1645  05BB  00FF               	movwf	btemp+1
  1646  05BC  3080               	movlw	128
  1647  05BD  027F               	subwf	btemp+1,w
  1648  05BE  1D03               	skipz
  1649  05BF  2DC2               	goto	u1265
  1650  05C0  3010               	movlw	16
  1651  05C1  027A               	subwf	setFilas@i,w
  1652  05C2                     u1265:	
  1653  05C2  1C03               	skipc
  1654  05C3  2DC5               	goto	u1261
  1655  05C4  2DC6               	goto	u1260
  1656  05C5                     u1261:	
  1657  05C5  2DC7               	goto	l1616
  1658  05C6                     u1260:	
  1659  05C6  2DF7               	goto	l141
  1660  05C7                     l1616:	
  1661                           
  1662                           ;filas.c: 22:         PORTCbits.RC4 = (reg_value & (1<<i) )>>i;
  1663  05C7  0A7A               	incf	setFilas@i,w
  1664  05C8  00F4               	movwf	??_setFilas
  1665  05C9  3001               	movlw	1
  1666  05CA  00F5               	movwf	??_setFilas+1
  1667  05CB  3000               	movlw	0
  1668  05CC  00F6               	movwf	??_setFilas+2
  1669  05CD  2DD1               	goto	u1274
  1670  05CE                     u1275:	
  1671  05CE  1003               	clrc
  1672  05CF  0DF5               	rlf	??_setFilas+1,f
  1673  05D0  0DF6               	rlf	??_setFilas+2,f
  1674  05D1                     u1274:	
  1675  05D1  0BF4               	decfsz	??_setFilas,f
  1676  05D2  2DCE               	goto	u1275
  1677  05D3  0872               	movf	setFilas@reg_value,w
  1678  05D4  0575               	andwf	??_setFilas+1,w
  1679  05D5  00F7               	movwf	??_setFilas+3
  1680  05D6  0873               	movf	setFilas@reg_value+1,w
  1681  05D7  0576               	andwf	??_setFilas+2,w
  1682  05D8  00F8               	movwf	??_setFilas+4
  1683  05D9  0A7A               	incf	setFilas@i,w
  1684  05DA  2DDE               	goto	u1284
  1685  05DB                     u1285:	
  1686  05DB  1003               	clrc
  1687  05DC  0CF8               	rrf	??_setFilas+4,f
  1688  05DD  0CF7               	rrf	??_setFilas+3,f
  1689  05DE                     u1284:	
  1690  05DE  3EFF               	addlw	-1
  1691  05DF  1D03               	skipz
  1692  05E0  2DDB               	goto	u1285
  1693  05E1  0877               	movf	??_setFilas+3,w
  1694  05E2  00F9               	movwf	??_setFilas+5
  1695  05E3  0EF9               	swapf	??_setFilas+5,f
  1696  05E4  1283               	bcf	3,5	;RP0=0, select bank0
  1697  05E5  1303               	bcf	3,6	;RP1=0, select bank0
  1698  05E6  0807               	movf	7,w	;volatile
  1699  05E7  0679               	xorwf	??_setFilas+5,w
  1700  05E8  39EF               	andlw	-17
  1701  05E9  0679               	xorwf	??_setFilas+5,w
  1702  05EA  0087               	movwf	7	;volatile
  1703  05EB                     l1618:	
  1704                           
  1705                           ;filas.c: 23:         shiftClock_Fil();
  1706  05EB  120A  118A  27A1  120A  118A  	fcall	_shiftClock_Fil
  1707  05F0                     l1620:	
  1708                           
  1709                           ;filas.c: 24:     }
  1710  05F0  3001               	movlw	1
  1711  05F1  07FA               	addwf	setFilas@i,f
  1712  05F2  1803               	skipnc
  1713  05F3  0AFB               	incf	setFilas@i+1,f
  1714  05F4  3000               	movlw	0
  1715  05F5  07FB               	addwf	setFilas@i+1,f
  1716  05F6  2DB9               	goto	l1612
  1717  05F7                     l141:	
  1718  05F7  0008               	return
  1719  05F8                     __end_of_setFilas:	
  1720                           
  1721                           	psect	text7
  1722  07A1                     __ptext7:	
  1723 ;; *************** function _shiftClock_Fil *****************
  1724 ;; Defined at:
  1725 ;;		line 13 in file "filas.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;		None
  1728 ;; Auto vars:     Size  Location     Type
  1729 ;;		None
  1730 ;; Return value:  Size  Location     Type
  1731 ;;                  1    wreg      void 
  1732 ;; Registers used:
  1733 ;;		None
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1739 ;;      Params:         0       0       0       0       0
  1740 ;;      Locals:         0       0       0       0       0
  1741 ;;      Temps:          0       0       0       0       0
  1742 ;;      Totals:         0       0       0       0       0
  1743 ;;Total ram usage:        0 bytes
  1744 ;; Hardware stack levels used:    1
  1745 ;; Hardware stack levels required when called:    1
  1746 ;; This function calls:
  1747 ;;		Nothing
  1748 ;; This function is called by:
  1749 ;;		_setFilas
  1750 ;; This function uses a non-reentrant model
  1751 ;;
  1752                           
  1753                           
  1754                           ;psect for function _shiftClock_Fil
  1755  07A1                     _shiftClock_Fil:	
  1756  07A1                     l1364:	
  1757                           ;incstack = 0
  1758                           ; Regs used in _shiftClock_Fil: []
  1759                           
  1760                           
  1761                           ;filas.c: 14:     PORTCbits.RC7 = 0;
  1762  07A1  1283               	bcf	3,5	;RP0=0, select bank0
  1763  07A2  1303               	bcf	3,6	;RP1=0, select bank0
  1764  07A3  1387               	bcf	7,7	;volatile
  1765                           
  1766                           ;filas.c: 15:     PORTCbits.RC7 = 1;
  1767  07A4  1787               	bsf	7,7	;volatile
  1768                           
  1769                           ;filas.c: 16:     PORTCbits.RC7 = 0;
  1770  07A5  1387               	bcf	7,7	;volatile
  1771  07A6                     l136:	
  1772  07A6  0008               	return
  1773  07A7                     __end_of_shiftClock_Fil:	
  1774                           
  1775                           	psect	text8
  1776  05F8                     __ptext8:	
  1777 ;; *************** function _addToScreen *****************
  1778 ;; Defined at:
  1779 ;;		line 39 in file "screen.c"
  1780 ;; Parameters:    Size  Location     Type
  1781 ;;		None
  1782 ;; Auto vars:     Size  Location     Type
  1783 ;;  i               2    0[BANK0 ] int 
  1784 ;; Return value:  Size  Location     Type
  1785 ;;                  1    wreg      void 
  1786 ;; Registers used:
  1787 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1788 ;; Tracked objects:
  1789 ;;		On entry : 0/0
  1790 ;;		On exit  : 0/0
  1791 ;;		Unchanged: 0/0
  1792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1793 ;;      Params:         0       0       0       0       0
  1794 ;;      Locals:         0       2       0       0       0
  1795 ;;      Temps:          9       0       0       0       0
  1796 ;;      Totals:         9       2       0       0       0
  1797 ;;Total ram usage:       11 bytes
  1798 ;; Hardware stack levels used:    1
  1799 ;; Hardware stack levels required when called:    1
  1800 ;; This function calls:
  1801 ;;		Nothing
  1802 ;; This function is called by:
  1803 ;;		_updateScreen
  1804 ;; This function uses a non-reentrant model
  1805 ;;
  1806                           
  1807                           
  1808                           ;psect for function _addToScreen
  1809  05F8                     _addToScreen:	
  1810  05F8                     l1632:	
  1811                           ;incstack = 0
  1812                           ; Regs used in _addToScreen: [wreg-fsr0h+status,2+status,0+btemp+1]
  1813                           
  1814                           
  1815                           ;screen.c: 40:     int i=0;
  1816  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  1817  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  1818  05FA  01A0               	clrf	addToScreen@i
  1819  05FB  01A1               	clrf	addToScreen@i+1
  1820                           
  1821                           ;screen.c: 41:     for(i=0; i<8; i++){
  1822  05FC  01A0               	clrf	addToScreen@i
  1823  05FD  01A1               	clrf	addToScreen@i+1
  1824  05FE                     l1638:	
  1825                           
  1826                           ;screen.c: 42:         pantalla[i] = ficha[i] | fondo[i];
  1827  05FE  1283               	bcf	3,5	;RP0=0, select bank0
  1828  05FF  1303               	bcf	3,6	;RP1=0, select bank0
  1829  0600  0820               	movf	addToScreen@i,w
  1830  0601  00F2               	movwf	??_addToScreen
  1831  0602  0772               	addwf	??_addToScreen,w
  1832  0603  3EA0               	addlw	(low (_fondo| 0))& (0+255)
  1833  0604  0084               	movwf	4
  1834  0605  1383               	bcf	3,7	;select IRP bank1
  1835  0606  0800               	movf	0,w
  1836  0607  00F3               	movwf	??_addToScreen+1
  1837  0608  0A84               	incf	4,f
  1838  0609  0800               	movf	0,w
  1839  060A  00F4               	movwf	??_addToScreen+2
  1840  060B  0820               	movf	addToScreen@i,w
  1841  060C  00F5               	movwf	??_addToScreen+3
  1842  060D  0775               	addwf	??_addToScreen+3,w
  1843  060E  3E55               	addlw	(low (_ficha| 0))& (0+255)
  1844  060F  0084               	movwf	4
  1845  0610  0800               	movf	0,w
  1846  0611  00F6               	movwf	??_addToScreen+4
  1847  0612  0A84               	incf	4,f
  1848  0613  0800               	movf	0,w
  1849  0614  00F7               	movwf	??_addToScreen+5
  1850  0615  0873               	movf	??_addToScreen+1,w
  1851  0616  0476               	iorwf	??_addToScreen+4,w
  1852  0617  00F8               	movwf	??_addToScreen+6
  1853  0618  0874               	movf	??_addToScreen+2,w
  1854  0619  0477               	iorwf	??_addToScreen+5,w
  1855  061A  00F9               	movwf	??_addToScreen+7
  1856  061B  0820               	movf	addToScreen@i,w
  1857  061C  00FA               	movwf	??_addToScreen+8
  1858  061D  077A               	addwf	??_addToScreen+8,w
  1859  061E  3EB0               	addlw	(low (_pantalla| 0))& (0+255)
  1860  061F  0084               	movwf	4
  1861  0620  0878               	movf	??_addToScreen+6,w
  1862  0621  0080               	movwf	0
  1863  0622  0A84               	incf	4,f
  1864  0623  0879               	movf	??_addToScreen+7,w
  1865  0624  0080               	movwf	0
  1866  0625                     l1640:	
  1867                           
  1868                           ;screen.c: 43:     }
  1869  0625  3001               	movlw	1
  1870  0626  07A0               	addwf	addToScreen@i,f
  1871  0627  1803               	skipnc
  1872  0628  0AA1               	incf	addToScreen@i+1,f
  1873  0629  3000               	movlw	0
  1874  062A  07A1               	addwf	addToScreen@i+1,f
  1875  062B                     l1642:	
  1876  062B  0821               	movf	addToScreen@i+1,w
  1877  062C  3A80               	xorlw	128
  1878  062D  00FF               	movwf	btemp+1
  1879  062E  3080               	movlw	128
  1880  062F  027F               	subwf	btemp+1,w
  1881  0630  1D03               	skipz
  1882  0631  2E34               	goto	u1295
  1883  0632  3008               	movlw	8
  1884  0633  0220               	subwf	addToScreen@i,w
  1885  0634                     u1295:	
  1886  0634  1C03               	skipc
  1887  0635  2E37               	goto	u1291
  1888  0636  2E38               	goto	u1290
  1889  0637                     u1291:	
  1890  0637  2DFE               	goto	l1638
  1891  0638                     u1290:	
  1892  0638                     l191:	
  1893  0638  0008               	return
  1894  0639                     __end_of_addToScreen:	
  1895                           
  1896                           	psect	text9
  1897  0784                     __ptext9:	
  1898 ;; *************** function _srand *****************
  1899 ;; Defined at:
  1900 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;  x               2    2[COMMON] unsigned int 
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;		None
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  1    wreg      void 
  1907 ;; Registers used:
  1908 ;;		wreg
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1914 ;;      Params:         2       0       0       0       0
  1915 ;;      Locals:         0       0       0       0       0
  1916 ;;      Temps:          0       0       0       0       0
  1917 ;;      Totals:         2       0       0       0       0
  1918 ;;Total ram usage:        2 bytes
  1919 ;; Hardware stack levels used:    1
  1920 ;; Hardware stack levels required when called:    1
  1921 ;; This function calls:
  1922 ;;		Nothing
  1923 ;; This function is called by:
  1924 ;;		_main
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928                           
  1929                           ;psect for function _srand
  1930  0784                     _srand:	
  1931  0784                     l1664:	
  1932                           ;incstack = 0
  1933                           ; Regs used in _srand: [wreg]
  1934                           
  1935  0784  0872               	movf	srand@x,w
  1936  0785  1283               	bcf	3,5	;RP0=0, select bank0
  1937  0786  1303               	bcf	3,6	;RP1=0, select bank0
  1938  0787  00E5               	movwf	_randx
  1939  0788  0873               	movf	srand@x+1,w
  1940  0789  00E6               	movwf	_randx+1
  1941  078A  01E7               	clrf	_randx+2
  1942  078B  01E8               	clrf	_randx+3
  1943  078C                     l795:	
  1944  078C  0008               	return
  1945  078D                     __end_of_srand:	
  1946                           
  1947                           	psect	text10
  1948  0769                     __ptext10:	
  1949 ;; *************** function _init_timer *****************
  1950 ;; Defined at:
  1951 ;;		line 55 in file "init.c"
  1952 ;; Parameters:    Size  Location     Type
  1953 ;;		None
  1954 ;; Auto vars:     Size  Location     Type
  1955 ;;		None
  1956 ;; Return value:  Size  Location     Type
  1957 ;;                  1    wreg      void 
  1958 ;; Registers used:
  1959 ;;		status,2
  1960 ;; Tracked objects:
  1961 ;;		On entry : 0/0
  1962 ;;		On exit  : 0/0
  1963 ;;		Unchanged: 0/0
  1964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1965 ;;      Params:         0       0       0       0       0
  1966 ;;      Locals:         0       0       0       0       0
  1967 ;;      Temps:          0       0       0       0       0
  1968 ;;      Totals:         0       0       0       0       0
  1969 ;;Total ram usage:        0 bytes
  1970 ;; Hardware stack levels used:    1
  1971 ;; Hardware stack levels required when called:    1
  1972 ;; This function calls:
  1973 ;;		Nothing
  1974 ;; This function is called by:
  1975 ;;		_main
  1976 ;; This function uses a non-reentrant model
  1977 ;;
  1978                           
  1979                           
  1980                           ;psect for function _init_timer
  1981  0769                     _init_timer:	
  1982  0769                     l1646:	
  1983                           ;incstack = 0
  1984                           ; Regs used in _init_timer: [status,2]
  1985                           
  1986                           
  1987                           ;init.c: 57:     TMR0=0;
  1988  0769  1283               	bcf	3,5	;RP0=0, select bank0
  1989  076A  1303               	bcf	3,6	;RP1=0, select bank0
  1990  076B  0181               	clrf	1	;volatile
  1991  076C                     l1648:	
  1992                           
  1993                           ;init.c: 65:     INTCONbits.GIE = 1;
  1994  076C  178B               	bsf	11,7	;volatile
  1995  076D                     l1650:	
  1996                           
  1997                           ;init.c: 66:     INTCONbits.TMR0IE = 1;
  1998  076D  168B               	bsf	11,5	;volatile
  1999  076E                     l1652:	
  2000                           
  2001                           ;init.c: 67:     INTCONbits.TMR0IF = 0;
  2002  076E  110B               	bcf	11,2	;volatile
  2003  076F                     l1654:	
  2004                           
  2005                           ;init.c: 76:     OPTION_REGbits.PSA = 0;
  2006  076F  1683               	bsf	3,5	;RP0=1, select bank1
  2007  0770  1303               	bcf	3,6	;RP1=0, select bank1
  2008  0771  1181               	bcf	1,3	;volatile
  2009  0772                     l1656:	
  2010                           
  2011                           ;init.c: 77:     OPTION_REGbits.PS0 = 1;
  2012  0772  1401               	bsf	1,0	;volatile
  2013  0773                     l1658:	
  2014                           
  2015                           ;init.c: 78:     OPTION_REGbits.PS1 = 1;
  2016  0773  1481               	bsf	1,1	;volatile
  2017  0774                     l1660:	
  2018                           
  2019                           ;init.c: 79:     OPTION_REGbits.PS2 = 1;
  2020  0774  1501               	bsf	1,2	;volatile
  2021  0775                     l1662:	
  2022                           
  2023                           ;init.c: 80:     OPTION_REGbits.T0CS = 0;
  2024  0775  1281               	bcf	1,5	;volatile
  2025  0776                     l36:	
  2026  0776  0008               	return
  2027  0777                     __end_of_init_timer:	
  2028                           
  2029                           	psect	text11
  2030  0759                     __ptext11:	
  2031 ;; *************** function _init_pines *****************
  2032 ;; Defined at:
  2033 ;;		line 39 in file "init.c"
  2034 ;; Parameters:    Size  Location     Type
  2035 ;;		None
  2036 ;; Auto vars:     Size  Location     Type
  2037 ;;		None
  2038 ;; Return value:  Size  Location     Type
  2039 ;;                  1    wreg      void 
  2040 ;; Registers used:
  2041 ;;		status,2, status,0, pclath, cstack
  2042 ;; Tracked objects:
  2043 ;;		On entry : 0/0
  2044 ;;		On exit  : 0/0
  2045 ;;		Unchanged: 0/0
  2046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2047 ;;      Params:         0       0       0       0       0
  2048 ;;      Locals:         0       0       0       0       0
  2049 ;;      Temps:          0       0       0       0       0
  2050 ;;      Totals:         0       0       0       0       0
  2051 ;;Total ram usage:        0 bytes
  2052 ;; Hardware stack levels used:    1
  2053 ;; Hardware stack levels required when called:    2
  2054 ;; This function calls:
  2055 ;;		_init_pines_col
  2056 ;;		_init_pines_fil
  2057 ;;		_init_pines_in
  2058 ;; This function is called by:
  2059 ;;		_main
  2060 ;; This function uses a non-reentrant model
  2061 ;;
  2062                           
  2063                           
  2064                           ;psect for function _init_pines
  2065  0759                     _init_pines:	
  2066  0759                     l1644:	
  2067                           ;incstack = 0
  2068                           ; Regs used in _init_pines: [status,2+status,0+pclath+cstack]
  2069                           
  2070                           
  2071                           ;init.c: 41:     init_pines_fil();
  2072  0759  120A  118A  2777  120A  118A  	fcall	_init_pines_fil
  2073                           
  2074                           ;init.c: 42:     init_pines_col();
  2075  075E  120A  118A  2746  120A  118A  	fcall	_init_pines_col
  2076                           
  2077                           ;init.c: 43:     init_pines_in();
  2078  0763  120A  118A  27A7  120A  118A  	fcall	_init_pines_in
  2079  0768                     l30:	
  2080  0768  0008               	return
  2081  0769                     __end_of_init_pines:	
  2082                           
  2083                           	psect	text12
  2084  07A7                     __ptext12:	
  2085 ;; *************** function _init_pines_in *****************
  2086 ;; Defined at:
  2087 ;;		line 4 in file "init.c"
  2088 ;; Parameters:    Size  Location     Type
  2089 ;;		None
  2090 ;; Auto vars:     Size  Location     Type
  2091 ;;		None
  2092 ;; Return value:  Size  Location     Type
  2093 ;;                  1    wreg      void 
  2094 ;; Registers used:
  2095 ;;		None
  2096 ;; Tracked objects:
  2097 ;;		On entry : 0/0
  2098 ;;		On exit  : 0/0
  2099 ;;		Unchanged: 0/0
  2100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2101 ;;      Params:         0       0       0       0       0
  2102 ;;      Locals:         0       0       0       0       0
  2103 ;;      Temps:          0       0       0       0       0
  2104 ;;      Totals:         0       0       0       0       0
  2105 ;;Total ram usage:        0 bytes
  2106 ;; Hardware stack levels used:    1
  2107 ;; Hardware stack levels required when called:    1
  2108 ;; This function calls:
  2109 ;;		Nothing
  2110 ;; This function is called by:
  2111 ;;		_init_pines
  2112 ;; This function uses a non-reentrant model
  2113 ;;
  2114                           
  2115                           
  2116                           ;psect for function _init_pines_in
  2117  07A7                     _init_pines_in:	
  2118  07A7                     l1420:	
  2119                           ;incstack = 0
  2120                           ; Regs used in _init_pines_in: []
  2121                           
  2122                           
  2123                           ;init.c: 5:     TRISBbits.TRISB5 = 1;
  2124  07A7  1683               	bsf	3,5	;RP0=1, select bank1
  2125  07A8  1303               	bcf	3,6	;RP1=0, select bank1
  2126  07A9  1686               	bsf	6,5	;volatile
  2127                           
  2128                           ;init.c: 6:     TRISBbits.TRISB4 = 1;
  2129  07AA  1606               	bsf	6,4	;volatile
  2130                           
  2131                           ;init.c: 7:     TRISBbits.TRISB3 = 1;
  2132  07AB  1586               	bsf	6,3	;volatile
  2133  07AC                     l21:	
  2134  07AC  0008               	return
  2135  07AD                     __end_of_init_pines_in:	
  2136                           
  2137                           	psect	text13
  2138  0777                     __ptext13:	
  2139 ;; *************** function _init_pines_fil *****************
  2140 ;; Defined at:
  2141 ;;		line 12 in file "init.c"
  2142 ;; Parameters:    Size  Location     Type
  2143 ;;		None
  2144 ;; Auto vars:     Size  Location     Type
  2145 ;;		None
  2146 ;; Return value:  Size  Location     Type
  2147 ;;                  1    wreg      void 
  2148 ;; Registers used:
  2149 ;;		None
  2150 ;; Tracked objects:
  2151 ;;		On entry : 0/0
  2152 ;;		On exit  : 0/0
  2153 ;;		Unchanged: 0/0
  2154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2155 ;;      Params:         0       0       0       0       0
  2156 ;;      Locals:         0       0       0       0       0
  2157 ;;      Temps:          0       0       0       0       0
  2158 ;;      Totals:         0       0       0       0       0
  2159 ;;Total ram usage:        0 bytes
  2160 ;; Hardware stack levels used:    1
  2161 ;; Hardware stack levels required when called:    1
  2162 ;; This function calls:
  2163 ;;		Nothing
  2164 ;; This function is called by:
  2165 ;;		_init_pines
  2166 ;; This function uses a non-reentrant model
  2167 ;;
  2168                           
  2169                           
  2170                           ;psect for function _init_pines_fil
  2171  0777                     _init_pines_fil:	
  2172  0777                     l1422:	
  2173                           ;incstack = 0
  2174                           ; Regs used in _init_pines_fil: []
  2175                           
  2176                           
  2177                           ;init.c: 14:     TRISCbits.TRISC4 = 0;
  2178  0777  1683               	bsf	3,5	;RP0=1, select bank1
  2179  0778  1303               	bcf	3,6	;RP1=0, select bank1
  2180  0779  1207               	bcf	7,4	;volatile
  2181                           
  2182                           ;init.c: 15:     TRISCbits.TRISC5 = 0;
  2183  077A  1287               	bcf	7,5	;volatile
  2184                           
  2185                           ;init.c: 16:     TRISCbits.TRISC6 = 0;
  2186  077B  1307               	bcf	7,6	;volatile
  2187                           
  2188                           ;init.c: 17:     TRISCbits.TRISC7 = 0;
  2189  077C  1387               	bcf	7,7	;volatile
  2190                           
  2191                           ;init.c: 19:     PORTCbits.RC4 = 0;
  2192  077D  1283               	bcf	3,5	;RP0=0, select bank0
  2193  077E  1303               	bcf	3,6	;RP1=0, select bank0
  2194  077F  1207               	bcf	7,4	;volatile
  2195                           
  2196                           ;init.c: 20:     PORTCbits.RC5 = 0;
  2197  0780  1287               	bcf	7,5	;volatile
  2198                           
  2199                           ;init.c: 21:     PORTCbits.RC6 = 0;
  2200  0781  1307               	bcf	7,6	;volatile
  2201                           
  2202                           ;init.c: 22:     PORTCbits.RC7 = 0;
  2203  0782  1387               	bcf	7,7	;volatile
  2204  0783                     l24:	
  2205  0783  0008               	return
  2206  0784                     __end_of_init_pines_fil:	
  2207                           
  2208                           	psect	text14
  2209  0746                     __ptext14:	
  2210 ;; *************** function _init_pines_col *****************
  2211 ;; Defined at:
  2212 ;;		line 25 in file "init.c"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;		None
  2215 ;; Auto vars:     Size  Location     Type
  2216 ;;		None
  2217 ;; Return value:  Size  Location     Type
  2218 ;;                  1    wreg      void 
  2219 ;; Registers used:
  2220 ;;		None
  2221 ;; Tracked objects:
  2222 ;;		On entry : 0/0
  2223 ;;		On exit  : 0/0
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2226 ;;      Params:         0       0       0       0       0
  2227 ;;      Locals:         0       0       0       0       0
  2228 ;;      Temps:          0       0       0       0       0
  2229 ;;      Totals:         0       0       0       0       0
  2230 ;;Total ram usage:        0 bytes
  2231 ;; Hardware stack levels used:    1
  2232 ;; Hardware stack levels required when called:    1
  2233 ;; This function calls:
  2234 ;;		Nothing
  2235 ;; This function is called by:
  2236 ;;		_init_pines
  2237 ;; This function uses a non-reentrant model
  2238 ;;
  2239                           
  2240                           
  2241                           ;psect for function _init_pines_col
  2242  0746                     _init_pines_col:	
  2243  0746                     l1424:	
  2244                           ;incstack = 0
  2245                           ; Regs used in _init_pines_col: []
  2246                           
  2247                           
  2248                           ;init.c: 26:     TRISBbits.TRISB0 = 0;
  2249  0746  1683               	bsf	3,5	;RP0=1, select bank1
  2250  0747  1303               	bcf	3,6	;RP1=0, select bank1
  2251  0748  1006               	bcf	6,0	;volatile
  2252                           
  2253                           ;init.c: 27:     PORTBbits.RB0 = 0;
  2254  0749  1283               	bcf	3,5	;RP0=0, select bank0
  2255  074A  1303               	bcf	3,6	;RP1=0, select bank0
  2256  074B  1006               	bcf	6,0	;volatile
  2257                           
  2258                           ;init.c: 29:     TRISDbits.TRISD4 = 0;
  2259  074C  1683               	bsf	3,5	;RP0=1, select bank1
  2260  074D  1303               	bcf	3,6	;RP1=0, select bank1
  2261  074E  1208               	bcf	8,4	;volatile
  2262                           
  2263                           ;init.c: 30:     TRISDbits.TRISD5 = 0;
  2264  074F  1288               	bcf	8,5	;volatile
  2265                           
  2266                           ;init.c: 31:     TRISDbits.TRISD6 = 0;
  2267  0750  1308               	bcf	8,6	;volatile
  2268                           
  2269                           ;init.c: 32:     TRISDbits.TRISD7 = 0;
  2270  0751  1388               	bcf	8,7	;volatile
  2271                           
  2272                           ;init.c: 34:     PORTDbits.RD4 = 0;
  2273  0752  1283               	bcf	3,5	;RP0=0, select bank0
  2274  0753  1303               	bcf	3,6	;RP1=0, select bank0
  2275  0754  1208               	bcf	8,4	;volatile
  2276                           
  2277                           ;init.c: 35:     PORTDbits.RD5 = 0;
  2278  0755  1288               	bcf	8,5	;volatile
  2279                           
  2280                           ;init.c: 36:     PORTDbits.RD6 = 0;
  2281  0756  1308               	bcf	8,6	;volatile
  2282                           
  2283                           ;init.c: 37:     PORTDbits.RD7 = 0;
  2284  0757  1388               	bcf	8,7	;volatile
  2285  0758                     l27:	
  2286  0758  0008               	return
  2287  0759                     __end_of_init_pines_col:	
  2288                           
  2289                           	psect	text15
  2290  048A                     __ptext15:	
  2291 ;; *************** function _checkCount *****************
  2292 ;; Defined at:
  2293 ;;		line 131 in file "mainsource.c"
  2294 ;; Parameters:    Size  Location     Type
  2295 ;;		None
  2296 ;; Auto vars:     Size  Location     Type
  2297 ;;  j               2   30[BANK0 ] int 
  2298 ;;  i               2    0        int 
  2299 ;; Return value:  Size  Location     Type
  2300 ;;                  1    wreg      void 
  2301 ;; Registers used:
  2302 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2303 ;; Tracked objects:
  2304 ;;		On entry : 0/0
  2305 ;;		On exit  : 0/0
  2306 ;;		Unchanged: 0/0
  2307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2308 ;;      Params:         0       0       0       0       0
  2309 ;;      Locals:         0       4       0       0       0
  2310 ;;      Temps:          0       1       0       0       0
  2311 ;;      Totals:         0       5       0       0       0
  2312 ;;Total ram usage:        5 bytes
  2313 ;; Hardware stack levels used:    1
  2314 ;; Hardware stack levels required when called:    4
  2315 ;; This function calls:
  2316 ;;		_checkBottom
  2317 ;;		_checkColission
  2318 ;;		_drawFigure
  2319 ;;		_leerEntradas
  2320 ;;		_perdio
  2321 ;;		_sumaPuntos
  2322 ;; This function is called by:
  2323 ;;		_main
  2324 ;; This function uses a non-reentrant model
  2325 ;;
  2326                           
  2327                           
  2328                           ;psect for function _checkCount
  2329  048A                     _checkCount:	
  2330  048A                     l1666:	
  2331                           ;incstack = 0
  2332                           ; Regs used in _checkCount: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2333                           
  2334                           
  2335                           ;mainsource.c: 132:     if(con.check_count == 1){
  2336  048A  1283               	bcf	3,5	;RP0=0, select bank0
  2337  048B  1303               	bcf	3,6	;RP1=0, select bank0
  2338  048C  034C               	decf	_con+7,w
  2339  048D  1D03               	btfss	3,2
  2340  048E  2C90               	goto	u1301
  2341  048F  2C91               	goto	u1300
  2342  0490                     u1301:	
  2343  0490  2CD8               	goto	l119
  2344  0491                     u1300:	
  2345  0491                     l1668:	
  2346  0491  01BE               	clrf	checkCount@j
  2347  0492  01BF               	clrf	checkCount@j+1
  2348                           
  2349                           ;mainsource.c: 134:         con.check_count = 0;
  2350  0493  01CC               	clrf	_con+7
  2351  0494                     l1670:	
  2352                           
  2353                           ;mainsource.c: 136:         leerEntradas();
  2354  0494  120A  118A  203E  120A  118A  	fcall	_leerEntradas
  2355  0499                     l1672:	
  2356                           
  2357                           ;mainsource.c: 139:         if(timerCount >= 15 ){
  2358  0499  1283               	bcf	3,5	;RP0=0, select bank0
  2359  049A  1303               	bcf	3,6	;RP1=0, select bank0
  2360  049B  0854               	movf	_timerCount+3,w
  2361  049C  1D03               	btfss	3,2
  2362  049D  2CAC               	goto	u1310
  2363  049E  0853               	movf	_timerCount+2,w
  2364  049F  1D03               	btfss	3,2
  2365  04A0  2CAC               	goto	u1310
  2366  04A1  0852               	movf	_timerCount+1,w
  2367  04A2  1D03               	btfss	3,2
  2368  04A3  2CAC               	goto	u1310
  2369  04A4  300F               	movlw	15
  2370  04A5  0251               	subwf	_timerCount,w
  2371  04A6  1D03               	skipz
  2372  04A7  2CA8               	goto	u1313
  2373  04A8                     u1313:	
  2374  04A8  1C03               	btfss	3,0
  2375  04A9  2CAB               	goto	u1311
  2376  04AA  2CAC               	goto	u1310
  2377  04AB                     u1311:	
  2378  04AB  2CD8               	goto	l119
  2379  04AC                     u1310:	
  2380  04AC                     l1674:	
  2381                           
  2382                           ;mainsource.c: 140:             timerCount = 0;
  2383  04AC  3000               	movlw	0
  2384  04AD  00D4               	movwf	_timerCount+3
  2385  04AE  3000               	movlw	0
  2386  04AF  00D3               	movwf	_timerCount+2
  2387  04B0  3000               	movlw	0
  2388  04B1  00D2               	movwf	_timerCount+1
  2389  04B2  3000               	movlw	0
  2390  04B3  00D1               	movwf	_timerCount
  2391  04B4                     l1676:	
  2392                           
  2393                           ;mainsource.c: 142:             PORTBbits.RB0 = con.led;
  2394  04B4  0C46               	rrf	_con+1,w
  2395  04B5  1C03               	skipc
  2396  04B6  1006               	bcf	6,0	;volatile
  2397  04B7  1803               	skipnc
  2398  04B8  1406               	bsf	6,0	;volatile
  2399  04B9                     l1678:	
  2400                           
  2401                           ;mainsource.c: 143:             con.led= ~con.led;
  2402  04B9  0946               	comf	_con+1,w
  2403  04BA  00BB               	movwf	??_checkCount
  2404  04BB  083B               	movf	??_checkCount,w
  2405  04BC  00C6               	movwf	_con+1
  2406                           
  2407                           ;mainsource.c: 144:             con.ficha_Vpos--;
  2408  04BD  3001               	movlw	1
  2409  04BE  02C7               	subwf	_con+2,f
  2410  04BF                     l1680:	
  2411                           
  2412                           ;mainsource.c: 146:             checkBottom();
  2413  04BF  120A  118A  26AE  120A  118A  	fcall	_checkBottom
  2414  04C4                     l1682:	
  2415                           
  2416                           ;mainsource.c: 147:             checkColission();
  2417  04C4  120A  118A  229B  120A  118A  	fcall	_checkColission
  2418  04C9                     l1684:	
  2419                           
  2420                           ;mainsource.c: 148:             drawFigure();
  2421  04C9  120A  118A  21FE  120A  118A  	fcall	_drawFigure
  2422  04CE                     l1686:	
  2423                           
  2424                           ;mainsource.c: 150:             perdio();
  2425  04CE  120A  118A  230D  120A  118A  	fcall	_perdio
  2426  04D3                     l1688:	
  2427                           
  2428                           ;mainsource.c: 151:             sumaPuntos();
  2429  04D3  120A  118A  2431  120A  118A  	fcall	_sumaPuntos
  2430  04D8                     l119:	
  2431  04D8  0008               	return
  2432  04D9                     __end_of_checkCount:	
  2433                           
  2434                           	psect	text16
  2435  0431                     __ptext16:	
  2436 ;; *************** function _sumaPuntos *****************
  2437 ;; Defined at:
  2438 ;;		line 30 in file "puntuacion.c"
  2439 ;; Parameters:    Size  Location     Type
  2440 ;;		None
  2441 ;; Auto vars:     Size  Location     Type
  2442 ;;  j               2    2[BANK0 ] int 
  2443 ;;  i               2    0[BANK0 ] int 
  2444 ;; Return value:  Size  Location     Type
  2445 ;;                  1    wreg      void 
  2446 ;; Registers used:
  2447 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2448 ;; Tracked objects:
  2449 ;;		On entry : 0/0
  2450 ;;		On exit  : 0/0
  2451 ;;		Unchanged: 0/0
  2452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2453 ;;      Params:         0       0       0       0       0
  2454 ;;      Locals:         0       4       0       0       0
  2455 ;;      Temps:          8       0       0       0       0
  2456 ;;      Totals:         8       4       0       0       0
  2457 ;;Total ram usage:       12 bytes
  2458 ;; Hardware stack levels used:    1
  2459 ;; Hardware stack levels required when called:    1
  2460 ;; This function calls:
  2461 ;;		Nothing
  2462 ;; This function is called by:
  2463 ;;		_checkCount
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466                           
  2467                           
  2468                           ;psect for function _sumaPuntos
  2469  0431                     _sumaPuntos:	
  2470  0431                     l1586:	
  2471                           ;incstack = 0
  2472                           ; Regs used in _sumaPuntos: [wreg-fsr0h+status,2+status,0+btemp+1]
  2473                           
  2474                           
  2475                           ;puntuacion.c: 31:     int i=0, j=0;
  2476  0431  1283               	bcf	3,5	;RP0=0, select bank0
  2477  0432  1303               	bcf	3,6	;RP1=0, select bank0
  2478  0433  01A0               	clrf	sumaPuntos@i
  2479  0434  01A1               	clrf	sumaPuntos@i+1
  2480                           
  2481                           ;puntuacion.c: 32:     for (i=0; i<16; i++){
  2482  0435  01A0               	clrf	sumaPuntos@i
  2483  0436  01A1               	clrf	sumaPuntos@i+1
  2484  0437                     l1592:	
  2485                           
  2486                           ;puntuacion.c: 33:         for(j=0; j<8; j++){
  2487  0437  1283               	bcf	3,5	;RP0=0, select bank0
  2488  0438  1303               	bcf	3,6	;RP1=0, select bank0
  2489  0439  01A2               	clrf	sumaPuntos@j
  2490  043A  01A3               	clrf	sumaPuntos@j+1
  2491  043B                     l1598:	
  2492                           
  2493                           ;puntuacion.c: 34:            if( (fondo[i] & (1<<j)) == 0){
  2494  043B  1283               	bcf	3,5	;RP0=0, select bank0
  2495  043C  1303               	bcf	3,6	;RP1=0, select bank0
  2496  043D  0820               	movf	sumaPuntos@i,w
  2497  043E  00F2               	movwf	??_sumaPuntos
  2498  043F  0772               	addwf	??_sumaPuntos,w
  2499  0440  3EA0               	addlw	(low (_fondo| 0))& (0+255)
  2500  0441  0084               	movwf	4
  2501  0442  1383               	bcf	3,7	;select IRP bank1
  2502  0443  0800               	movf	0,w
  2503  0444  00F3               	movwf	??_sumaPuntos+1
  2504  0445  0A84               	incf	4,f
  2505  0446  0800               	movf	0,w
  2506  0447  00F4               	movwf	??_sumaPuntos+2
  2507  0448  0A22               	incf	sumaPuntos@j,w
  2508  0449  00F5               	movwf	??_sumaPuntos+3
  2509  044A  3001               	movlw	1
  2510  044B  00F6               	movwf	??_sumaPuntos+4
  2511  044C  3000               	movlw	0
  2512  044D  00F7               	movwf	??_sumaPuntos+5
  2513  044E  2C52               	goto	u1224
  2514  044F                     u1225:	
  2515  044F  1003               	clrc
  2516  0450  0DF6               	rlf	??_sumaPuntos+4,f
  2517  0451  0DF7               	rlf	??_sumaPuntos+5,f
  2518  0452                     u1224:	
  2519  0452  0BF5               	decfsz	??_sumaPuntos+3,f
  2520  0453  2C4F               	goto	u1225
  2521  0454  0873               	movf	??_sumaPuntos+1,w
  2522  0455  0576               	andwf	??_sumaPuntos+4,w
  2523  0456  00F8               	movwf	??_sumaPuntos+6
  2524  0457  0874               	movf	??_sumaPuntos+2,w
  2525  0458  0577               	andwf	??_sumaPuntos+5,w
  2526  0459  00F9               	movwf	??_sumaPuntos+7
  2527  045A  0878               	movf	??_sumaPuntos+6,w
  2528  045B  0479               	iorwf	??_sumaPuntos+7,w
  2529  045C  1D03               	btfss	3,2
  2530  045D  2C5F               	goto	u1231
  2531  045E  2C60               	goto	u1230
  2532  045F                     u1231:	
  2533  045F  2C61               	goto	l1602
  2534  0460                     u1230:	
  2535  0460  2C74               	goto	l1606
  2536  0461                     l1602:	
  2537                           
  2538                           ;puntuacion.c: 37:         }
  2539  0461  3001               	movlw	1
  2540  0462  07A2               	addwf	sumaPuntos@j,f
  2541  0463  1803               	skipnc
  2542  0464  0AA3               	incf	sumaPuntos@j+1,f
  2543  0465  3000               	movlw	0
  2544  0466  07A3               	addwf	sumaPuntos@j+1,f
  2545  0467                     l1604:	
  2546  0467  0823               	movf	sumaPuntos@j+1,w
  2547  0468  3A80               	xorlw	128
  2548  0469  00FF               	movwf	btemp+1
  2549  046A  3080               	movlw	128
  2550  046B  027F               	subwf	btemp+1,w
  2551  046C  1D03               	skipz
  2552  046D  2C70               	goto	u1245
  2553  046E  3008               	movlw	8
  2554  046F  0222               	subwf	sumaPuntos@j,w
  2555  0470                     u1245:	
  2556  0470  1C03               	skipc
  2557  0471  2C73               	goto	u1241
  2558  0472  2C74               	goto	u1240
  2559  0473                     u1241:	
  2560  0473  2C3B               	goto	l1598
  2561  0474                     u1240:	
  2562  0474                     l1606:	
  2563                           
  2564                           ;puntuacion.c: 38:     }
  2565  0474  3001               	movlw	1
  2566  0475  1283               	bcf	3,5	;RP0=0, select bank0
  2567  0476  1303               	bcf	3,6	;RP1=0, select bank0
  2568  0477  07A0               	addwf	sumaPuntos@i,f
  2569  0478  1803               	skipnc
  2570  0479  0AA1               	incf	sumaPuntos@i+1,f
  2571  047A  3000               	movlw	0
  2572  047B  07A1               	addwf	sumaPuntos@i+1,f
  2573  047C                     l1608:	
  2574  047C  0821               	movf	sumaPuntos@i+1,w
  2575  047D  3A80               	xorlw	128
  2576  047E  00FF               	movwf	btemp+1
  2577  047F  3080               	movlw	128
  2578  0480  027F               	subwf	btemp+1,w
  2579  0481  1D03               	skipz
  2580  0482  2C85               	goto	u1255
  2581  0483  3010               	movlw	16
  2582  0484  0220               	subwf	sumaPuntos@i,w
  2583  0485                     u1255:	
  2584  0485  1C03               	skipc
  2585  0486  2C88               	goto	u1251
  2586  0487  2C89               	goto	u1250
  2587  0488                     u1251:	
  2588  0488  2C37               	goto	l1592
  2589  0489                     u1250:	
  2590  0489                     l256:	
  2591  0489  0008               	return
  2592  048A                     __end_of_sumaPuntos:	
  2593                           
  2594                           	psect	text17
  2595  030D                     __ptext17:	
  2596 ;; *************** function _perdio *****************
  2597 ;; Defined at:
  2598 ;;		line 13 in file "puntuacion.c"
  2599 ;; Parameters:    Size  Location     Type
  2600 ;;		None
  2601 ;; Auto vars:     Size  Location     Type
  2602 ;;  i               2   20[BANK0 ] int 
  2603 ;; Return value:  Size  Location     Type
  2604 ;;                  1    wreg      void 
  2605 ;; Registers used:
  2606 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2607 ;; Tracked objects:
  2608 ;;		On entry : 0/0
  2609 ;;		On exit  : 0/0
  2610 ;;		Unchanged: 0/0
  2611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2612 ;;      Params:         0       0       0       0       0
  2613 ;;      Locals:         0       2       0       0       0
  2614 ;;      Temps:          0       3       0       0       0
  2615 ;;      Totals:         0       5       0       0       0
  2616 ;;Total ram usage:        5 bytes
  2617 ;; Hardware stack levels used:    1
  2618 ;; Hardware stack levels required when called:    3
  2619 ;; This function calls:
  2620 ;;		___awmod
  2621 ;;		_memset
  2622 ;;		_rand
  2623 ;; This function is called by:
  2624 ;;		_checkCount
  2625 ;; This function uses a non-reentrant model
  2626 ;;
  2627                           
  2628                           
  2629                           ;psect for function _perdio
  2630  030D                     _perdio:	
  2631  030D                     l1568:	
  2632                           ;incstack = 0
  2633                           ; Regs used in _perdio: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2634                           
  2635                           
  2636                           ;puntuacion.c: 14:     int i = 0;
  2637  030D  1283               	bcf	3,5	;RP0=0, select bank0
  2638  030E  1303               	bcf	3,6	;RP1=0, select bank0
  2639  030F  01B4               	clrf	perdio@i
  2640  0310  01B5               	clrf	perdio@i+1
  2641                           
  2642                           ;puntuacion.c: 15:     for(i=0; i<8; i++){
  2643  0311  01B4               	clrf	perdio@i
  2644  0312  01B5               	clrf	perdio@i+1
  2645  0313                     l1574:	
  2646                           
  2647                           ;puntuacion.c: 16:         if((fondo[i] & 0x8000) != 0){
  2648  0313  1283               	bcf	3,5	;RP0=0, select bank0
  2649  0314  1303               	bcf	3,6	;RP1=0, select bank0
  2650  0315  0834               	movf	perdio@i,w
  2651  0316  00B1               	movwf	??_perdio
  2652  0317  0731               	addwf	??_perdio,w
  2653  0318  3EA0               	addlw	(low (_fondo| 0))& (0+255)
  2654  0319  0084               	movwf	4
  2655  031A  1383               	bcf	3,7	;select IRP bank1
  2656  031B  0800               	movf	0,w
  2657  031C  00B2               	movwf	??_perdio+1
  2658  031D  0A84               	incf	4,f
  2659  031E  0800               	movf	0,w
  2660  031F  00B3               	movwf	??_perdio+2
  2661  0320  1FB3               	btfss	??_perdio+2,7
  2662  0321  2B23               	goto	u1201
  2663  0322  2B24               	goto	u1200
  2664  0323                     u1201:	
  2665  0323  2B5F               	goto	l1582
  2666  0324                     u1200:	
  2667  0324                     l1576:	
  2668                           
  2669                           ;puntuacion.c: 17:             memset(ficha, 0, sizeof(ficha));
  2670  0324  3000               	movlw	0
  2671  0325  00F2               	movwf	memset@c
  2672  0326  00F3               	movwf	memset@c+1
  2673  0327  3010               	movlw	16
  2674  0328  00F4               	movwf	memset@n
  2675  0329  3000               	movlw	0
  2676  032A  00F5               	movwf	memset@n+1
  2677  032B  3055               	movlw	(low (_ficha| 0))& (0+255)
  2678  032C  120A  118A  26DB  120A  118A  	fcall	_memset
  2679                           
  2680                           ;puntuacion.c: 18:             memset(fondo, 0, sizeof(fondo));
  2681  0331  3000               	movlw	0
  2682  0332  00F2               	movwf	memset@c
  2683  0333  00F3               	movwf	memset@c+1
  2684  0334  3010               	movlw	16
  2685  0335  00F4               	movwf	memset@n
  2686  0336  3000               	movlw	0
  2687  0337  00F5               	movwf	memset@n+1
  2688  0338  30A0               	movlw	(low (_fondo| 0))& (0+255)
  2689  0339  120A  118A  26DB  120A  118A  	fcall	_memset
  2690  033E                     l1578:	
  2691                           
  2692                           ;puntuacion.c: 19:             con.ficha_Vpos = 16;
  2693  033E  3010               	movlw	16
  2694  033F  1283               	bcf	3,5	;RP0=0, select bank0
  2695  0340  1303               	bcf	3,6	;RP1=0, select bank0
  2696  0341  00B1               	movwf	??_perdio
  2697  0342  0831               	movf	??_perdio,w
  2698  0343  00C7               	movwf	_con+2
  2699  0344                     l1580:	
  2700                           
  2701                           ;puntuacion.c: 20:             con.ficha_actual = rand() % 7;
  2702  0344  3007               	movlw	7
  2703  0345  00AB               	movwf	___awmod@divisor
  2704  0346  3000               	movlw	0
  2705  0347  00AC               	movwf	___awmod@divisor+1
  2706  0348  120A  118A  256E  120A  118A  	fcall	_rand
  2707  034D  1283               	bcf	3,5	;RP0=0, select bank0
  2708  034E  1303               	bcf	3,6	;RP1=0, select bank0
  2709  034F  0825               	movf	?_rand+1,w
  2710  0350  00AE               	movwf	___awmod@dividend+1
  2711  0351  0824               	movf	?_rand,w
  2712  0352  00AD               	movwf	___awmod@dividend
  2713  0353  120A  118A  23D6  120A  118A  	fcall	___awmod
  2714  0358  1283               	bcf	3,5	;RP0=0, select bank0
  2715  0359  1303               	bcf	3,6	;RP1=0, select bank0
  2716  035A  082B               	movf	?___awmod,w
  2717  035B  00B1               	movwf	??_perdio
  2718  035C  0831               	movf	??_perdio,w
  2719  035D  00C9               	movwf	_con+4
  2720                           
  2721                           ;puntuacion.c: 21:             break;
  2722  035E  2B72               	goto	l248
  2723  035F                     l1582:	
  2724                           
  2725                           ;puntuacion.c: 23:     }
  2726  035F  3001               	movlw	1
  2727  0360  07B4               	addwf	perdio@i,f
  2728  0361  1803               	skipnc
  2729  0362  0AB5               	incf	perdio@i+1,f
  2730  0363  3000               	movlw	0
  2731  0364  07B5               	addwf	perdio@i+1,f
  2732  0365                     l1584:	
  2733  0365  0835               	movf	perdio@i+1,w
  2734  0366  3A80               	xorlw	128
  2735  0367  00FF               	movwf	btemp+1
  2736  0368  3080               	movlw	128
  2737  0369  027F               	subwf	btemp+1,w
  2738  036A  1D03               	skipz
  2739  036B  2B6E               	goto	u1215
  2740  036C  3008               	movlw	8
  2741  036D  0234               	subwf	perdio@i,w
  2742  036E                     u1215:	
  2743  036E  1C03               	skipc
  2744  036F  2B71               	goto	u1211
  2745  0370  2B72               	goto	u1210
  2746  0371                     u1211:	
  2747  0371  2B13               	goto	l1574
  2748  0372                     u1210:	
  2749  0372                     l248:	
  2750  0372  0008               	return
  2751  0373                     __end_of_perdio:	
  2752                           
  2753                           	psect	text18
  2754  003E                     __ptext18:	
  2755 ;; *************** function _leerEntradas *****************
  2756 ;; Defined at:
  2757 ;;		line 67 in file "mainsource.c"
  2758 ;; Parameters:    Size  Location     Type
  2759 ;;		None
  2760 ;; Auto vars:     Size  Location     Type
  2761 ;;  aux             4   16[BANK0 ] unsigned char [4]
  2762 ;;  i               2   22[BANK0 ] int 
  2763 ;;  j               2   20[BANK0 ] int 
  2764 ;;  k               2   13[BANK0 ] int 
  2765 ;;  mask            1   15[BANK0 ] unsigned char 
  2766 ;; Return value:  Size  Location     Type
  2767 ;;                  1    wreg      void 
  2768 ;; Registers used:
  2769 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2770 ;; Tracked objects:
  2771 ;;		On entry : 0/0
  2772 ;;		On exit  : 0/0
  2773 ;;		Unchanged: 0/0
  2774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2775 ;;      Params:         0       0       0       0       0
  2776 ;;      Locals:         0      11       0       0       0
  2777 ;;      Temps:          0       8       0       0       0
  2778 ;;      Totals:         0      19       0       0       0
  2779 ;;Total ram usage:       19 bytes
  2780 ;; Hardware stack levels used:    1
  2781 ;; Hardware stack levels required when called:    3
  2782 ;; This function calls:
  2783 ;;		_drawFigure
  2784 ;; This function is called by:
  2785 ;;		_checkCount
  2786 ;; This function uses a non-reentrant model
  2787 ;;
  2788                           
  2789                           
  2790                           ;psect for function _leerEntradas
  2791  003E                     _leerEntradas:	
  2792  003E                     l1426:	
  2793                           ;incstack = 0
  2794                           ; Regs used in _leerEntradas: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2795                           
  2796  003E  1283               	bcf	3,5	;RP0=0, select bank0
  2797  003F  1303               	bcf	3,6	;RP1=0, select bank0
  2798  0040  01B4               	clrf	leerEntradas@j
  2799  0041  01B5               	clrf	leerEntradas@j+1
  2800  0042  01AD               	clrf	leerEntradas@k
  2801  0043  01AE               	clrf	leerEntradas@k+1
  2802  0044                     l1428:	
  2803                           
  2804                           ;mainsource.c: 70:     uint8_t aux[4]={0x0000};
  2805  0044  3000               	movlw	0
  2806  0045  00B3               	movwf	leerEntradas@aux+3
  2807  0046  3000               	movlw	0
  2808  0047  00B2               	movwf	leerEntradas@aux+2
  2809  0048  3000               	movlw	0
  2810  0049  00B1               	movwf	leerEntradas@aux+1
  2811  004A  3000               	movlw	0
  2812  004B  00B0               	movwf	leerEntradas@aux
  2813  004C                     l1430:	
  2814  004C                     l1432:	
  2815                           
  2816                           ;mainsource.c: 72:     if(con.girar){
  2817  004C  0845               	movf	_con,w
  2818  004D  1903               	btfsc	3,2
  2819  004E  2850               	goto	u961
  2820  004F  2851               	goto	u960
  2821  0050                     u961:	
  2822  0050  2956               	goto	l1504
  2823  0051                     u960:	
  2824  0051                     l1434:	
  2825                           
  2826                           ;mainsource.c: 73:         con.girar=0;
  2827  0051  01C5               	clrf	_con
  2828                           
  2829                           ;mainsource.c: 75:         for(i=0; i<4; i++){
  2830  0052  01B6               	clrf	leerEntradas@i
  2831  0053  01B7               	clrf	leerEntradas@i+1
  2832  0054                     l1440:	
  2833                           
  2834                           ;mainsource.c: 76:             for(j=0; j<4; j++){
  2835  0054  1283               	bcf	3,5	;RP0=0, select bank0
  2836  0055  1303               	bcf	3,6	;RP1=0, select bank0
  2837  0056  01B4               	clrf	leerEntradas@j
  2838  0057  01B5               	clrf	leerEntradas@j+1
  2839  0058                     l1446:	
  2840                           
  2841                           ;mainsource.c: 77:                 mask = (figuras[con.ficha_actual][j] >> i) & 0x01;
  2842  0058  1283               	bcf	3,5	;RP0=0, select bank0
  2843  0059  1303               	bcf	3,6	;RP1=0, select bank0
  2844  005A  0849               	movf	_con+4,w
  2845  005B  00A5               	movwf	??_leerEntradas
  2846  005C  3002               	movlw	2
  2847  005D                     u975:	
  2848  005D  1003               	clrc
  2849  005E  0DA5               	rlf	??_leerEntradas,f
  2850  005F  3EFF               	addlw	-1
  2851  0060  1D03               	skipz
  2852  0061  285D               	goto	u975
  2853  0062  30C0               	movlw	(low (_figuras| 0))& (0+255)
  2854  0063  0725               	addwf	??_leerEntradas,w
  2855  0064  00A6               	movwf	??_leerEntradas+1
  2856  0065  0834               	movf	leerEntradas@j,w
  2857  0066  0726               	addwf	??_leerEntradas+1,w
  2858  0067  00A7               	movwf	??_leerEntradas+2
  2859  0068  0827               	movf	??_leerEntradas+2,w
  2860  0069  0084               	movwf	4
  2861  006A  1383               	bcf	3,7	;select IRP bank1
  2862  006B  0800               	movf	0,w
  2863  006C  00A8               	movwf	??_leerEntradas+3
  2864  006D  0A36               	incf	leerEntradas@i,w
  2865  006E  2871               	goto	u984
  2866  006F                     u985:	
  2867  006F  1003               	clrc
  2868  0070  0CA8               	rrf	??_leerEntradas+3,f
  2869  0071                     u984:	
  2870  0071  3EFF               	addlw	-1
  2871  0072  1D03               	skipz
  2872  0073  286F               	goto	u985
  2873  0074  0828               	movf	??_leerEntradas+3,w
  2874  0075  3901               	andlw	1
  2875  0076  00A9               	movwf	??_leerEntradas+4
  2876  0077  0829               	movf	??_leerEntradas+4,w
  2877  0078  00AF               	movwf	leerEntradas@mask
  2878                           
  2879                           ;mainsource.c: 78:                 aux[i] = aux[i] | (mask<<(3-j));
  2880  0079  0836               	movf	leerEntradas@i,w
  2881  007A  3E30               	addlw	(low (leerEntradas@aux| 0))& (0+255)
  2882  007B  0084               	movwf	4
  2883  007C  082F               	movf	leerEntradas@mask,w
  2884  007D  00A5               	movwf	??_leerEntradas
  2885  007E  0834               	movf	leerEntradas@j,w
  2886  007F  3C03               	sublw	3
  2887  0080  3E01               	addlw	1
  2888  0081  2884               	goto	u994
  2889  0082                     u995:	
  2890  0082  1003               	clrc
  2891  0083  0DA5               	rlf	??_leerEntradas,f
  2892  0084                     u994:	
  2893  0084  3EFF               	addlw	-1
  2894  0085  1D03               	skipz
  2895  0086  2882               	goto	u995
  2896  0087  0825               	movf	??_leerEntradas,w
  2897  0088  0400               	iorwf	0,w
  2898  0089  00A6               	movwf	??_leerEntradas+1
  2899  008A  0836               	movf	leerEntradas@i,w
  2900  008B  3E30               	addlw	(low (leerEntradas@aux| 0))& (0+255)
  2901  008C  0084               	movwf	4
  2902  008D  0826               	movf	??_leerEntradas+1,w
  2903  008E  0080               	movwf	0
  2904  008F                     l1448:	
  2905                           
  2906                           ;mainsource.c: 79:             }
  2907  008F  3001               	movlw	1
  2908  0090  07B4               	addwf	leerEntradas@j,f
  2909  0091  1803               	skipnc
  2910  0092  0AB5               	incf	leerEntradas@j+1,f
  2911  0093  3000               	movlw	0
  2912  0094  07B5               	addwf	leerEntradas@j+1,f
  2913  0095                     l1450:	
  2914  0095  0835               	movf	leerEntradas@j+1,w
  2915  0096  3A80               	xorlw	128
  2916  0097  00FF               	movwf	btemp+1
  2917  0098  3080               	movlw	128
  2918  0099  027F               	subwf	btemp+1,w
  2919  009A  1D03               	skipz
  2920  009B  289E               	goto	u1005
  2921  009C  3004               	movlw	4
  2922  009D  0234               	subwf	leerEntradas@j,w
  2923  009E                     u1005:	
  2924  009E  1C03               	skipc
  2925  009F  28A1               	goto	u1001
  2926  00A0  28A2               	goto	u1000
  2927  00A1                     u1001:	
  2928  00A1  2858               	goto	l1446
  2929  00A2                     u1000:	
  2930  00A2                     l1452:	
  2931                           
  2932                           ;mainsource.c: 80:         }
  2933  00A2  3001               	movlw	1
  2934  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  2935  00A4  1303               	bcf	3,6	;RP1=0, select bank0
  2936  00A5  07B6               	addwf	leerEntradas@i,f
  2937  00A6  1803               	skipnc
  2938  00A7  0AB7               	incf	leerEntradas@i+1,f
  2939  00A8  3000               	movlw	0
  2940  00A9  07B7               	addwf	leerEntradas@i+1,f
  2941  00AA                     l1454:	
  2942  00AA  0837               	movf	leerEntradas@i+1,w
  2943  00AB  3A80               	xorlw	128
  2944  00AC  00FF               	movwf	btemp+1
  2945  00AD  3080               	movlw	128
  2946  00AE  027F               	subwf	btemp+1,w
  2947  00AF  1D03               	skipz
  2948  00B0  28B3               	goto	u1015
  2949  00B1  3004               	movlw	4
  2950  00B2  0236               	subwf	leerEntradas@i,w
  2951  00B3                     u1015:	
  2952  00B3  1C03               	skipc
  2953  00B4  28B6               	goto	u1011
  2954  00B5  28B7               	goto	u1010
  2955  00B6                     u1011:	
  2956  00B6  2854               	goto	l1440
  2957  00B7                     u1010:	
  2958  00B7  2910               	goto	l1486
  2959  00B8                     l1456:	
  2960                           
  2961                           ;mainsource.c: 86:             for(i=0; i<4; i++){
  2962  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  2963  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  2964  00BA  01B6               	clrf	leerEntradas@i
  2965  00BB  01B7               	clrf	leerEntradas@i+1
  2966  00BC                     l1462:	
  2967                           
  2968                           ;mainsource.c: 87:                 if( aux[i] & 0x01 ){
  2969  00BC  1283               	bcf	3,5	;RP0=0, select bank0
  2970  00BD  1303               	bcf	3,6	;RP1=0, select bank0
  2971  00BE  0836               	movf	leerEntradas@i,w
  2972  00BF  3E30               	addlw	(low (leerEntradas@aux| 0))& (0+255)
  2973  00C0  0084               	movwf	4
  2974  00C1  1383               	bcf	3,7	;select IRP bank0
  2975  00C2  1C00               	btfss	0,0
  2976  00C3  28C5               	goto	u1021
  2977  00C4  28C6               	goto	u1020
  2978  00C5                     u1021:	
  2979  00C5  28C7               	goto	l1466
  2980  00C6                     u1020:	
  2981  00C6  2908               	goto	l1484
  2982  00C7                     l1466:	
  2983                           
  2984                           ;mainsource.c: 90:                 if(i==3){
  2985  00C7  3003               	movlw	3
  2986  00C8  0636               	xorwf	leerEntradas@i,w
  2987  00C9  0437               	iorwf	leerEntradas@i+1,w
  2988  00CA  1D03               	btfss	3,2
  2989  00CB  28CD               	goto	u1031
  2990  00CC  28CE               	goto	u1030
  2991  00CD                     u1031:	
  2992  00CD  28F3               	goto	l1480
  2993  00CE                     u1030:	
  2994  00CE                     l1468:	
  2995                           
  2996                           ;mainsource.c: 91:                     for(j=0; j<4; j++){
  2997  00CE  01B4               	clrf	leerEntradas@j
  2998  00CF  01B5               	clrf	leerEntradas@j+1
  2999  00D0                     l1474:	
  3000                           
  3001                           ;mainsource.c: 92:                         aux[j] = aux[j]>>1;
  3002  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  3003  00D1  1303               	bcf	3,6	;RP1=0, select bank0
  3004  00D2  0834               	movf	leerEntradas@j,w
  3005  00D3  3E30               	addlw	(low (leerEntradas@aux| 0))& (0+255)
  3006  00D4  0084               	movwf	4
  3007  00D5  1383               	bcf	3,7	;select IRP bank0
  3008  00D6  0800               	movf	0,w
  3009  00D7  00A5               	movwf	??_leerEntradas
  3010  00D8  1003               	clrc
  3011  00D9  0C25               	rrf	??_leerEntradas,w
  3012  00DA  00A6               	movwf	??_leerEntradas+1
  3013  00DB  0834               	movf	leerEntradas@j,w
  3014  00DC  3E30               	addlw	(low (leerEntradas@aux| 0))& (0+255)
  3015  00DD  0084               	movwf	4
  3016  00DE  0826               	movf	??_leerEntradas+1,w
  3017  00DF  0080               	movwf	0
  3018  00E0                     l1476:	
  3019                           
  3020                           ;mainsource.c: 93:                     }
  3021  00E0  3001               	movlw	1
  3022  00E1  07B4               	addwf	leerEntradas@j,f
  3023  00E2  1803               	skipnc
  3024  00E3  0AB5               	incf	leerEntradas@j+1,f
  3025  00E4  3000               	movlw	0
  3026  00E5  07B5               	addwf	leerEntradas@j+1,f
  3027  00E6                     l1478:	
  3028  00E6  0835               	movf	leerEntradas@j+1,w
  3029  00E7  3A80               	xorlw	128
  3030  00E8  00FF               	movwf	btemp+1
  3031  00E9  3080               	movlw	128
  3032  00EA  027F               	subwf	btemp+1,w
  3033  00EB  1D03               	skipz
  3034  00EC  28EF               	goto	u1045
  3035  00ED  3004               	movlw	4
  3036  00EE  0234               	subwf	leerEntradas@j,w
  3037  00EF                     u1045:	
  3038  00EF  1C03               	skipc
  3039  00F0  28F2               	goto	u1041
  3040  00F1  28F3               	goto	u1040
  3041  00F2                     u1041:	
  3042  00F2  28D0               	goto	l1474
  3043  00F3                     u1040:	
  3044  00F3                     l1480:	
  3045                           
  3046                           ;mainsource.c: 95:             }
  3047  00F3  3001               	movlw	1
  3048  00F4  1283               	bcf	3,5	;RP0=0, select bank0
  3049  00F5  1303               	bcf	3,6	;RP1=0, select bank0
  3050  00F6  07B6               	addwf	leerEntradas@i,f
  3051  00F7  1803               	skipnc
  3052  00F8  0AB7               	incf	leerEntradas@i+1,f
  3053  00F9  3000               	movlw	0
  3054  00FA  07B7               	addwf	leerEntradas@i+1,f
  3055  00FB                     l1482:	
  3056  00FB  0837               	movf	leerEntradas@i+1,w
  3057  00FC  3A80               	xorlw	128
  3058  00FD  00FF               	movwf	btemp+1
  3059  00FE  3080               	movlw	128
  3060  00FF  027F               	subwf	btemp+1,w
  3061  0100  1D03               	skipz
  3062  0101  2904               	goto	u1055
  3063  0102  3004               	movlw	4
  3064  0103  0236               	subwf	leerEntradas@i,w
  3065  0104                     u1055:	
  3066  0104  1C03               	skipc
  3067  0105  2907               	goto	u1051
  3068  0106  2908               	goto	u1050
  3069  0107                     u1051:	
  3070  0107  28BC               	goto	l1462
  3071  0108                     u1050:	
  3072  0108                     l1484:	
  3073                           
  3074                           ;mainsource.c: 96:             k++;
  3075  0108  3001               	movlw	1
  3076  0109  1283               	bcf	3,5	;RP0=0, select bank0
  3077  010A  1303               	bcf	3,6	;RP1=0, select bank0
  3078  010B  07AD               	addwf	leerEntradas@k,f
  3079  010C  1803               	skipnc
  3080  010D  0AAE               	incf	leerEntradas@k+1,f
  3081  010E  3000               	movlw	0
  3082  010F  07AE               	addwf	leerEntradas@k+1,f
  3083  0110                     l1486:	
  3084                           
  3085                           ;mainsource.c: 85:         while(k<2){
  3086  0110  1283               	bcf	3,5	;RP0=0, select bank0
  3087  0111  1303               	bcf	3,6	;RP1=0, select bank0
  3088  0112  082E               	movf	leerEntradas@k+1,w
  3089  0113  3A80               	xorlw	128
  3090  0114  00FF               	movwf	btemp+1
  3091  0115  3080               	movlw	128
  3092  0116  027F               	subwf	btemp+1,w
  3093  0117  1D03               	skipz
  3094  0118  291B               	goto	u1065
  3095  0119  3002               	movlw	2
  3096  011A  022D               	subwf	leerEntradas@k,w
  3097  011B                     u1065:	
  3098  011B  1C03               	skipc
  3099  011C  291E               	goto	u1061
  3100  011D  291F               	goto	u1060
  3101  011E                     u1061:	
  3102  011E  28B8               	goto	l1456
  3103  011F                     u1060:	
  3104  011F                     l1488:	
  3105                           
  3106                           ;mainsource.c: 100:         for(i=0; i<4; i++){
  3107  011F  1283               	bcf	3,5	;RP0=0, select bank0
  3108  0120  1303               	bcf	3,6	;RP1=0, select bank0
  3109  0121  01B6               	clrf	leerEntradas@i
  3110  0122  01B7               	clrf	leerEntradas@i+1
  3111  0123                     l1494:	
  3112                           
  3113                           ;mainsource.c: 101:             figuras[con.ficha_actual][i] = aux[i];
  3114  0123  1283               	bcf	3,5	;RP0=0, select bank0
  3115  0124  1303               	bcf	3,6	;RP1=0, select bank0
  3116  0125  0836               	movf	leerEntradas@i,w
  3117  0126  3E30               	addlw	(low (leerEntradas@aux| 0))& (0+255)
  3118  0127  0084               	movwf	4
  3119  0128  1383               	bcf	3,7	;select IRP bank0
  3120  0129  0800               	movf	0,w
  3121  012A  00A5               	movwf	??_leerEntradas
  3122  012B  0849               	movf	_con+4,w
  3123  012C  00A6               	movwf	??_leerEntradas+1
  3124  012D  3002               	movlw	2
  3125  012E                     u1075:	
  3126  012E  1003               	clrc
  3127  012F  0DA6               	rlf	??_leerEntradas+1,f
  3128  0130  3EFF               	addlw	-1
  3129  0131  1D03               	skipz
  3130  0132  292E               	goto	u1075
  3131  0133  30C0               	movlw	(low (_figuras| 0))& (0+255)
  3132  0134  0726               	addwf	??_leerEntradas+1,w
  3133  0135  00A7               	movwf	??_leerEntradas+2
  3134  0136  0836               	movf	leerEntradas@i,w
  3135  0137  0727               	addwf	??_leerEntradas+2,w
  3136  0138  00A8               	movwf	??_leerEntradas+3
  3137  0139  0828               	movf	??_leerEntradas+3,w
  3138  013A  0084               	movwf	4
  3139  013B  0825               	movf	??_leerEntradas,w
  3140  013C  0080               	movwf	0
  3141  013D                     l1496:	
  3142                           
  3143                           ;mainsource.c: 102:         }
  3144  013D  3001               	movlw	1
  3145  013E  07B6               	addwf	leerEntradas@i,f
  3146  013F  1803               	skipnc
  3147  0140  0AB7               	incf	leerEntradas@i+1,f
  3148  0141  3000               	movlw	0
  3149  0142  07B7               	addwf	leerEntradas@i+1,f
  3150  0143                     l1498:	
  3151  0143  0837               	movf	leerEntradas@i+1,w
  3152  0144  3A80               	xorlw	128
  3153  0145  00FF               	movwf	btemp+1
  3154  0146  3080               	movlw	128
  3155  0147  027F               	subwf	btemp+1,w
  3156  0148  1D03               	skipz
  3157  0149  294C               	goto	u1085
  3158  014A  3004               	movlw	4
  3159  014B  0236               	subwf	leerEntradas@i,w
  3160  014C                     u1085:	
  3161  014C  1C03               	skipc
  3162  014D  294F               	goto	u1081
  3163  014E  2950               	goto	u1080
  3164  014F                     u1081:	
  3165  014F  2923               	goto	l1494
  3166  0150                     u1080:	
  3167  0150                     l1500:	
  3168                           
  3169                           ;mainsource.c: 103:         drawFigure();
  3170  0150  120A  118A  21FE  120A  118A  	fcall	_drawFigure
  3171  0155  29FD               	goto	l103
  3172  0156                     l1504:	
  3173                           
  3174                           ;mainsource.c: 107:     if(con.derecha == 1 && con.ficha_Hpos<4){
  3175  0156  034A               	decf	_con+5,w
  3176  0157  1D03               	btfss	3,2
  3177  0158  295A               	goto	u1091
  3178  0159  295B               	goto	u1090
  3179  015A                     u1091:	
  3180  015A  29A6               	goto	l1526
  3181  015B                     u1090:	
  3182  015B                     l1506:	
  3183  015B  3004               	movlw	4
  3184  015C  0248               	subwf	_con+3,w
  3185  015D  1803               	skipnc
  3186  015E  2960               	goto	u1101
  3187  015F  2961               	goto	u1100
  3188  0160                     u1101:	
  3189  0160  29A6               	goto	l1526
  3190  0161                     u1100:	
  3191  0161                     l1508:	
  3192                           
  3193                           ;mainsource.c: 108:         con.derecha = 0;
  3194  0161  01CA               	clrf	_con+5
  3195  0162                     l1510:	
  3196                           
  3197                           ;mainsource.c: 109:         for(i=(con.ficha_Hpos+4); i>con.ficha_Hpos; i--){
  3198  0162  0848               	movf	_con+3,w
  3199  0163  3E04               	addlw	4
  3200  0164  00B6               	movwf	leerEntradas@i
  3201  0165  3000               	movlw	0
  3202  0166  1803               	skipnc
  3203  0167  3001               	movlw	1
  3204  0168  00B7               	movwf	leerEntradas@i+1
  3205  0169  2994               	goto	l105
  3206  016A                     l1512:	
  3207                           
  3208                           ;mainsource.c: 110:             if((ficha[i] & fondo[i+1]) != 0){
  3209  016A  1283               	bcf	3,5	;RP0=0, select bank0
  3210  016B  1303               	bcf	3,6	;RP1=0, select bank0
  3211  016C  0836               	movf	leerEntradas@i,w
  3212  016D  00A5               	movwf	??_leerEntradas
  3213  016E  0725               	addwf	??_leerEntradas,w
  3214  016F  3EA2               	addlw	(low ((_fondo| 0+2)))& (0+255)
  3215  0170  0084               	movwf	4
  3216  0171  1383               	bcf	3,7	;select IRP bank1
  3217  0172  0800               	movf	0,w
  3218  0173  00A6               	movwf	??_leerEntradas+1
  3219  0174  0A84               	incf	4,f
  3220  0175  0800               	movf	0,w
  3221  0176  00A7               	movwf	??_leerEntradas+2
  3222  0177  0836               	movf	leerEntradas@i,w
  3223  0178  00A8               	movwf	??_leerEntradas+3
  3224  0179  0728               	addwf	??_leerEntradas+3,w
  3225  017A  3E55               	addlw	(low (_ficha| 0))& (0+255)
  3226  017B  0084               	movwf	4
  3227  017C  0800               	movf	0,w
  3228  017D  00A9               	movwf	??_leerEntradas+4
  3229  017E  0A84               	incf	4,f
  3230  017F  0800               	movf	0,w
  3231  0180  00AA               	movwf	??_leerEntradas+5
  3232  0181  0826               	movf	??_leerEntradas+1,w
  3233  0182  0529               	andwf	??_leerEntradas+4,w
  3234  0183  00AB               	movwf	??_leerEntradas+6
  3235  0184  0827               	movf	??_leerEntradas+2,w
  3236  0185  052A               	andwf	??_leerEntradas+5,w
  3237  0186  00AC               	movwf	??_leerEntradas+7
  3238  0187  082B               	movf	??_leerEntradas+6,w
  3239  0188  042C               	iorwf	??_leerEntradas+7,w
  3240  0189  1903               	btfsc	3,2
  3241  018A  298C               	goto	u1111
  3242  018B  298D               	goto	u1110
  3243  018C                     u1111:	
  3244  018C  298E               	goto	l1516
  3245  018D                     u1110:	
  3246  018D  29FD               	goto	l103
  3247  018E                     l1516:	
  3248                           
  3249                           ;mainsource.c: 113:         }
  3250  018E  30FF               	movlw	255
  3251  018F  07B6               	addwf	leerEntradas@i,f
  3252  0190  1803               	skipnc
  3253  0191  0AB7               	incf	leerEntradas@i+1,f
  3254  0192  30FF               	movlw	255
  3255  0193  07B7               	addwf	leerEntradas@i+1,f
  3256  0194                     l105:	
  3257  0194  0837               	movf	leerEntradas@i+1,w
  3258  0195  3A80               	xorlw	128
  3259  0196  3C80               	sublw	128
  3260  0197  1D03               	skipz
  3261  0198  299B               	goto	u1125
  3262  0199  0836               	movf	leerEntradas@i,w
  3263  019A  0248               	subwf	_con+3,w
  3264  019B                     u1125:	
  3265  019B  1C03               	skipc
  3266  019C  299E               	goto	u1121
  3267  019D  299F               	goto	u1120
  3268  019E                     u1121:	
  3269  019E  296A               	goto	l1512
  3270  019F                     u1120:	
  3271  019F                     l1518:	
  3272                           
  3273                           ;mainsource.c: 114:         con.ficha_Hpos++;
  3274  019F  3001               	movlw	1
  3275  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  3276  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  3277  01A2  00A5               	movwf	??_leerEntradas
  3278  01A3  0825               	movf	??_leerEntradas,w
  3279  01A4  07C8               	addwf	_con+3,f
  3280  01A5  2950               	goto	l1500
  3281  01A6                     l1526:	
  3282  01A6  034B               	decf	_con+6,w
  3283  01A7  1D03               	btfss	3,2
  3284  01A8  29AA               	goto	u1131
  3285  01A9  29AB               	goto	u1130
  3286  01AA                     u1131:	
  3287  01AA  29FD               	goto	l103
  3288  01AB                     u1130:	
  3289  01AB                     l1528:	
  3290  01AB  0848               	movf	_con+3,w
  3291  01AC  1903               	btfsc	3,2
  3292  01AD  29AF               	goto	u1141
  3293  01AE  29B0               	goto	u1140
  3294  01AF                     u1141:	
  3295  01AF  29FD               	goto	l103
  3296  01B0                     u1140:	
  3297  01B0                     l1530:	
  3298                           
  3299                           ;mainsource.c: 119:         con.izquierda = 0;
  3300  01B0  01CB               	clrf	_con+6
  3301  01B1                     l1532:	
  3302                           
  3303                           ;mainsource.c: 120:         for(i=con.ficha_Hpos; i<(con.ficha_Hpos+4); i++){
  3304  01B1  0848               	movf	_con+3,w
  3305  01B2  00A5               	movwf	??_leerEntradas
  3306  01B3  01A6               	clrf	??_leerEntradas+1
  3307  01B4  0825               	movf	??_leerEntradas,w
  3308  01B5  00B6               	movwf	leerEntradas@i
  3309  01B6  0826               	movf	??_leerEntradas+1,w
  3310  01B7  00B7               	movwf	leerEntradas@i+1
  3311  01B8  29E3               	goto	l111
  3312  01B9                     l1534:	
  3313                           
  3314                           ;mainsource.c: 121:             if((ficha[i] & fondo[i-1]) != 0){
  3315  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  3316  01BA  1303               	bcf	3,6	;RP1=0, select bank0
  3317  01BB  0836               	movf	leerEntradas@i,w
  3318  01BC  00A5               	movwf	??_leerEntradas
  3319  01BD  0725               	addwf	??_leerEntradas,w
  3320  01BE  3E9E               	addlw	(low ((_fondo| 0+254)))& (0+255)
  3321  01BF  0084               	movwf	4
  3322  01C0  1383               	bcf	3,7	;select IRP bank1
  3323  01C1  0800               	movf	0,w
  3324  01C2  00A6               	movwf	??_leerEntradas+1
  3325  01C3  0A84               	incf	4,f
  3326  01C4  0800               	movf	0,w
  3327  01C5  00A7               	movwf	??_leerEntradas+2
  3328  01C6  0836               	movf	leerEntradas@i,w
  3329  01C7  00A8               	movwf	??_leerEntradas+3
  3330  01C8  0728               	addwf	??_leerEntradas+3,w
  3331  01C9  3E55               	addlw	(low (_ficha| 0))& (0+255)
  3332  01CA  0084               	movwf	4
  3333  01CB  0800               	movf	0,w
  3334  01CC  00A9               	movwf	??_leerEntradas+4
  3335  01CD  0A84               	incf	4,f
  3336  01CE  0800               	movf	0,w
  3337  01CF  00AA               	movwf	??_leerEntradas+5
  3338  01D0  0826               	movf	??_leerEntradas+1,w
  3339  01D1  0529               	andwf	??_leerEntradas+4,w
  3340  01D2  00AB               	movwf	??_leerEntradas+6
  3341  01D3  0827               	movf	??_leerEntradas+2,w
  3342  01D4  052A               	andwf	??_leerEntradas+5,w
  3343  01D5  00AC               	movwf	??_leerEntradas+7
  3344  01D6  082B               	movf	??_leerEntradas+6,w
  3345  01D7  042C               	iorwf	??_leerEntradas+7,w
  3346  01D8  1903               	btfsc	3,2
  3347  01D9  29DB               	goto	u1151
  3348  01DA  29DC               	goto	u1150
  3349  01DB                     u1151:	
  3350  01DB  29DD               	goto	l1538
  3351  01DC                     u1150:	
  3352  01DC  29FD               	goto	l103
  3353  01DD                     l1538:	
  3354                           
  3355                           ;mainsource.c: 124:         }
  3356  01DD  3001               	movlw	1
  3357  01DE  07B6               	addwf	leerEntradas@i,f
  3358  01DF  1803               	skipnc
  3359  01E0  0AB7               	incf	leerEntradas@i+1,f
  3360  01E1  3000               	movlw	0
  3361  01E2  07B7               	addwf	leerEntradas@i+1,f
  3362  01E3                     l111:	
  3363  01E3  0848               	movf	_con+3,w
  3364  01E4  3E04               	addlw	4
  3365  01E5  00A5               	movwf	??_leerEntradas
  3366  01E6  3000               	movlw	0
  3367  01E7  1803               	skipnc
  3368  01E8  3001               	movlw	1
  3369  01E9  00A6               	movwf	??_leerEntradas+1
  3370  01EA  0837               	movf	leerEntradas@i+1,w
  3371  01EB  3A80               	xorlw	128
  3372  01EC  00A7               	movwf	??_leerEntradas+2
  3373  01ED  0826               	movf	??_leerEntradas+1,w
  3374  01EE  3A80               	xorlw	128
  3375  01EF  0227               	subwf	??_leerEntradas+2,w
  3376  01F0  1D03               	skipz
  3377  01F1  29F4               	goto	u1165
  3378  01F2  0825               	movf	??_leerEntradas,w
  3379  01F3  0236               	subwf	leerEntradas@i,w
  3380  01F4                     u1165:	
  3381  01F4  1C03               	skipc
  3382  01F5  29F7               	goto	u1161
  3383  01F6  29F8               	goto	u1160
  3384  01F7                     u1161:	
  3385  01F7  29B9               	goto	l1534
  3386  01F8                     u1160:	
  3387  01F8                     l1540:	
  3388                           
  3389                           ;mainsource.c: 125:         con.ficha_Hpos--;
  3390  01F8  3001               	movlw	1
  3391  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  3392  01FA  1303               	bcf	3,6	;RP1=0, select bank0
  3393  01FB  02C8               	subwf	_con+3,f
  3394  01FC  2950               	goto	l1500
  3395  01FD                     l103:	
  3396  01FD  0008               	return
  3397  01FE                     __end_of_leerEntradas:	
  3398                           
  3399                           	psect	text19
  3400  01FE                     __ptext19:	
  3401 ;; *************** function _drawFigure *****************
  3402 ;; Defined at:
  3403 ;;		line 57 in file "screen.c"
  3404 ;; Parameters:    Size  Location     Type
  3405 ;;		None
  3406 ;; Auto vars:     Size  Location     Type
  3407 ;;		None
  3408 ;; Return value:  Size  Location     Type
  3409 ;;                  1    wreg      void 
  3410 ;; Registers used:
  3411 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3412 ;; Tracked objects:
  3413 ;;		On entry : 0/0
  3414 ;;		On exit  : 0/0
  3415 ;;		Unchanged: 0/0
  3416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3417 ;;      Params:         0       0       0       0       0
  3418 ;;      Locals:         0       0       0       0       0
  3419 ;;      Temps:          0       5       0       0       0
  3420 ;;      Totals:         0       5       0       0       0
  3421 ;;Total ram usage:        5 bytes
  3422 ;; Hardware stack levels used:    1
  3423 ;; Hardware stack levels required when called:    2
  3424 ;; This function calls:
  3425 ;;		_memset
  3426 ;; This function is called by:
  3427 ;;		_leerEntradas
  3428 ;;		_checkCount
  3429 ;; This function uses a non-reentrant model
  3430 ;;
  3431                           
  3432                           
  3433                           ;psect for function _drawFigure
  3434  01FE                     _drawFigure:	
  3435  01FE                     l1352:	
  3436                           ;incstack = 0
  3437                           ; Regs used in _drawFigure: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3438                           
  3439                           
  3440                           ;screen.c: 58:     memset(ficha, 0, sizeof(ficha));
  3441  01FE  3000               	movlw	0
  3442  01FF  00F2               	movwf	memset@c
  3443  0200  00F3               	movwf	memset@c+1
  3444  0201  3010               	movlw	16
  3445  0202  00F4               	movwf	memset@n
  3446  0203  3000               	movlw	0
  3447  0204  00F5               	movwf	memset@n+1
  3448  0205  3055               	movlw	(low (_ficha| 0))& (0+255)
  3449  0206  120A  118A  26DB  120A  118A  	fcall	_memset
  3450  020B                     l1354:	
  3451                           
  3452                           ;screen.c: 59:     ficha[con.ficha_Hpos ] = figuras[con.ficha_actual][0] << (con.ficha_V
      +                          pos-1);
  3453  020B  1283               	bcf	3,5	;RP0=0, select bank0
  3454  020C  1303               	bcf	3,6	;RP1=0, select bank0
  3455  020D  0847               	movf	_con+2,w
  3456  020E  3EFF               	addlw	-1
  3457  020F  00A0               	movwf	??_drawFigure
  3458  0210  0AA0               	incf	??_drawFigure,f
  3459  0211  0849               	movf	_con+4,w
  3460  0212  00A1               	movwf	??_drawFigure+1
  3461  0213  3001               	movlw	1
  3462  0214                     u785:	
  3463  0214  1003               	clrc
  3464  0215  0DA1               	rlf	??_drawFigure+1,f
  3465  0216  3EFF               	addlw	-1
  3466  0217  1D03               	skipz
  3467  0218  2A14               	goto	u785
  3468  0219  1003               	clrc
  3469  021A  0D21               	rlf	??_drawFigure+1,w
  3470  021B  3EC0               	addlw	(low (_figuras| 0))& (0+255)
  3471  021C  0084               	movwf	4
  3472  021D  1383               	bcf	3,7	;select IRP bank1
  3473  021E  0800               	movf	0,w
  3474  021F  00A2               	movwf	??_drawFigure+2
  3475  0220  01A3               	clrf	??_drawFigure+3
  3476  0221  2A25               	goto	u794
  3477  0222                     u795:	
  3478  0222  1003               	clrc
  3479  0223  0DA2               	rlf	??_drawFigure+2,f
  3480  0224  0DA3               	rlf	??_drawFigure+3,f
  3481  0225                     u794:	
  3482  0225  0BA0               	decfsz	??_drawFigure,f
  3483  0226  2A22               	goto	u795
  3484  0227  0848               	movf	_con+3,w
  3485  0228  00A4               	movwf	??_drawFigure+4
  3486  0229  0724               	addwf	??_drawFigure+4,w
  3487  022A  3E55               	addlw	(low (_ficha| 0))& (0+255)
  3488  022B  0084               	movwf	4
  3489  022C  0822               	movf	??_drawFigure+2,w
  3490  022D  0080               	movwf	0
  3491  022E  0A84               	incf	4,f
  3492  022F  0823               	movf	??_drawFigure+3,w
  3493  0230  0080               	movwf	0
  3494  0231                     l1356:	
  3495                           
  3496                           ;screen.c: 60:     ficha[con.ficha_Hpos +1] = figuras[con.ficha_actual][1] << (con.ficha
      +                          _Vpos-1);
  3497  0231  0847               	movf	_con+2,w
  3498  0232  3EFF               	addlw	-1
  3499  0233  00A0               	movwf	??_drawFigure
  3500  0234  0AA0               	incf	??_drawFigure,f
  3501  0235  0849               	movf	_con+4,w
  3502  0236  00A1               	movwf	??_drawFigure+1
  3503  0237  3001               	movlw	1
  3504  0238                     u805:	
  3505  0238  1003               	clrc
  3506  0239  0DA1               	rlf	??_drawFigure+1,f
  3507  023A  3EFF               	addlw	-1
  3508  023B  1D03               	skipz
  3509  023C  2A38               	goto	u805
  3510  023D  1003               	clrc
  3511  023E  0D21               	rlf	??_drawFigure+1,w
  3512  023F  3EC1               	addlw	(low ((_figuras| 0+1)))& (0+255)
  3513  0240  0084               	movwf	4
  3514  0241  0800               	movf	0,w
  3515  0242  00A2               	movwf	??_drawFigure+2
  3516  0243  01A3               	clrf	??_drawFigure+3
  3517  0244  2A48               	goto	u814
  3518  0245                     u815:	
  3519  0245  1003               	clrc
  3520  0246  0DA2               	rlf	??_drawFigure+2,f
  3521  0247  0DA3               	rlf	??_drawFigure+3,f
  3522  0248                     u814:	
  3523  0248  0BA0               	decfsz	??_drawFigure,f
  3524  0249  2A45               	goto	u815
  3525  024A  0848               	movf	_con+3,w
  3526  024B  00A4               	movwf	??_drawFigure+4
  3527  024C  0724               	addwf	??_drawFigure+4,w
  3528  024D  3E57               	addlw	(low ((_ficha| 0+2)))& (0+255)
  3529  024E  0084               	movwf	4
  3530  024F  0822               	movf	??_drawFigure+2,w
  3531  0250  0080               	movwf	0
  3532  0251  0A84               	incf	4,f
  3533  0252  0823               	movf	??_drawFigure+3,w
  3534  0253  0080               	movwf	0
  3535  0254                     l1358:	
  3536                           
  3537                           ;screen.c: 61:     ficha[con.ficha_Hpos +2] = figuras[con.ficha_actual][2] << (con.ficha
      +                          _Vpos-1);
  3538  0254  0847               	movf	_con+2,w
  3539  0255  3EFF               	addlw	-1
  3540  0256  00A0               	movwf	??_drawFigure
  3541  0257  0AA0               	incf	??_drawFigure,f
  3542  0258  0849               	movf	_con+4,w
  3543  0259  00A1               	movwf	??_drawFigure+1
  3544  025A  3001               	movlw	1
  3545  025B                     u825:	
  3546  025B  1003               	clrc
  3547  025C  0DA1               	rlf	??_drawFigure+1,f
  3548  025D  3EFF               	addlw	-1
  3549  025E  1D03               	skipz
  3550  025F  2A5B               	goto	u825
  3551  0260  1003               	clrc
  3552  0261  0D21               	rlf	??_drawFigure+1,w
  3553  0262  3EC2               	addlw	(low ((_figuras| 0+2)))& (0+255)
  3554  0263  0084               	movwf	4
  3555  0264  0800               	movf	0,w
  3556  0265  00A2               	movwf	??_drawFigure+2
  3557  0266  01A3               	clrf	??_drawFigure+3
  3558  0267  2A6B               	goto	u834
  3559  0268                     u835:	
  3560  0268  1003               	clrc
  3561  0269  0DA2               	rlf	??_drawFigure+2,f
  3562  026A  0DA3               	rlf	??_drawFigure+3,f
  3563  026B                     u834:	
  3564  026B  0BA0               	decfsz	??_drawFigure,f
  3565  026C  2A68               	goto	u835
  3566  026D  0848               	movf	_con+3,w
  3567  026E  00A4               	movwf	??_drawFigure+4
  3568  026F  0724               	addwf	??_drawFigure+4,w
  3569  0270  3E59               	addlw	(low ((_ficha| 0+4)))& (0+255)
  3570  0271  0084               	movwf	4
  3571  0272  0822               	movf	??_drawFigure+2,w
  3572  0273  0080               	movwf	0
  3573  0274  0A84               	incf	4,f
  3574  0275  0823               	movf	??_drawFigure+3,w
  3575  0276  0080               	movwf	0
  3576  0277                     l1360:	
  3577                           
  3578                           ;screen.c: 62:     ficha[con.ficha_Hpos +3] = figuras[con.ficha_actual][3] << (con.ficha
      +                          _Vpos-1);
  3579  0277  0847               	movf	_con+2,w
  3580  0278  3EFF               	addlw	-1
  3581  0279  00A0               	movwf	??_drawFigure
  3582  027A  0AA0               	incf	??_drawFigure,f
  3583  027B  0849               	movf	_con+4,w
  3584  027C  00A1               	movwf	??_drawFigure+1
  3585  027D  3001               	movlw	1
  3586  027E                     u845:	
  3587  027E  1003               	clrc
  3588  027F  0DA1               	rlf	??_drawFigure+1,f
  3589  0280  3EFF               	addlw	-1
  3590  0281  1D03               	skipz
  3591  0282  2A7E               	goto	u845
  3592  0283  1003               	clrc
  3593  0284  0D21               	rlf	??_drawFigure+1,w
  3594  0285  3EC3               	addlw	(low ((_figuras| 0+3)))& (0+255)
  3595  0286  0084               	movwf	4
  3596  0287  0800               	movf	0,w
  3597  0288  00A2               	movwf	??_drawFigure+2
  3598  0289  01A3               	clrf	??_drawFigure+3
  3599  028A  2A8E               	goto	u854
  3600  028B                     u855:	
  3601  028B  1003               	clrc
  3602  028C  0DA2               	rlf	??_drawFigure+2,f
  3603  028D  0DA3               	rlf	??_drawFigure+3,f
  3604  028E                     u854:	
  3605  028E  0BA0               	decfsz	??_drawFigure,f
  3606  028F  2A8B               	goto	u855
  3607  0290  0848               	movf	_con+3,w
  3608  0291  00A4               	movwf	??_drawFigure+4
  3609  0292  0724               	addwf	??_drawFigure+4,w
  3610  0293  3E5B               	addlw	(low ((_ficha| 0+6)))& (0+255)
  3611  0294  0084               	movwf	4
  3612  0295  0822               	movf	??_drawFigure+2,w
  3613  0296  0080               	movwf	0
  3614  0297  0A84               	incf	4,f
  3615  0298  0823               	movf	??_drawFigure+3,w
  3616  0299  0080               	movwf	0
  3617  029A                     l199:	
  3618  029A  0008               	return
  3619  029B                     __end_of_drawFigure:	
  3620                           
  3621                           	psect	text20
  3622  06DB                     __ptext20:	
  3623 ;; *************** function _memset *****************
  3624 ;; Defined at:
  3625 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\memset.c"
  3626 ;; Parameters:    Size  Location     Type
  3627 ;;  p1              1    wreg     PTR void 
  3628 ;;		 -> fondo(16), ficha(16), 
  3629 ;;  c               2    2[COMMON] int 
  3630 ;;  n               2    4[COMMON] unsigned int 
  3631 ;; Auto vars:     Size  Location     Type
  3632 ;;  p1              1    8[COMMON] PTR void 
  3633 ;;		 -> fondo(16), ficha(16), 
  3634 ;;  p               1    7[COMMON] PTR unsigned char 
  3635 ;;		 -> fondo(16), ficha(16), 
  3636 ;; Return value:  Size  Location     Type
  3637 ;;                  1    wreg      PTR void 
  3638 ;; Registers used:
  3639 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3640 ;; Tracked objects:
  3641 ;;		On entry : 0/0
  3642 ;;		On exit  : 0/0
  3643 ;;		Unchanged: 0/0
  3644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3645 ;;      Params:         4       0       0       0       0
  3646 ;;      Locals:         2       0       0       0       0
  3647 ;;      Temps:          1       0       0       0       0
  3648 ;;      Totals:         7       0       0       0       0
  3649 ;;Total ram usage:        7 bytes
  3650 ;; Hardware stack levels used:    1
  3651 ;; Hardware stack levels required when called:    1
  3652 ;; This function calls:
  3653 ;;		Nothing
  3654 ;; This function is called by:
  3655 ;;		_drawFigure
  3656 ;;		_perdio
  3657 ;; This function uses a non-reentrant model
  3658 ;;
  3659                           
  3660                           
  3661                           ;psect for function _memset
  3662  06DB                     _memset:	
  3663                           
  3664                           ;incstack = 0
  3665                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0]
  3666                           ;memset@p1 stored from wreg
  3667  06DB  00F8               	movwf	memset@p1
  3668  06DC                     l1322:	
  3669  06DC  0878               	movf	memset@p1,w
  3670  06DD  00F6               	movwf	??_memset
  3671  06DE  0876               	movf	??_memset,w
  3672  06DF  00F7               	movwf	memset@p
  3673  06E0  2EEC               	goto	l1328
  3674  06E1                     l1324:	
  3675  06E1  0872               	movf	memset@c,w
  3676  06E2  00F6               	movwf	??_memset
  3677  06E3  0877               	movf	memset@p,w
  3678  06E4  0084               	movwf	4
  3679  06E5  0876               	movf	??_memset,w
  3680  06E6  1383               	bcf	3,7	;select IRP bank0
  3681  06E7  0080               	movwf	0
  3682  06E8                     l1326:	
  3683  06E8  3001               	movlw	1
  3684  06E9  00F6               	movwf	??_memset
  3685  06EA  0876               	movf	??_memset,w
  3686  06EB  07F7               	addwf	memset@p,f
  3687  06EC                     l1328:	
  3688  06EC  3001               	movlw	1
  3689  06ED  02F4               	subwf	memset@n,f
  3690  06EE  3000               	movlw	0
  3691  06EF  1C03               	skipc
  3692  06F0  03F5               	decf	memset@n+1,f
  3693  06F1  02F5               	subwf	memset@n+1,f
  3694  06F2  0A74               	incf	memset@n,w
  3695  06F3  1D03               	skipz
  3696  06F4  2EF9               	goto	u711
  3697  06F5  0A75               	incf	memset@n+1,w
  3698  06F6  1D03               	btfss	3,2
  3699  06F7  2EF9               	goto	u711
  3700  06F8  2EFA               	goto	u710
  3701  06F9                     u711:	
  3702  06F9  2EE1               	goto	l1324
  3703  06FA                     u710:	
  3704  06FA                     l790:	
  3705  06FA  0008               	return
  3706  06FB                     __end_of_memset:	
  3707                           
  3708                           	psect	text21
  3709  029B                     __ptext21:	
  3710 ;; *************** function _checkColission *****************
  3711 ;; Defined at:
  3712 ;;		line 29 in file "colisiones.c"
  3713 ;; Parameters:    Size  Location     Type
  3714 ;;		None
  3715 ;; Auto vars:     Size  Location     Type
  3716 ;;  i               2   25[BANK0 ] int 
  3717 ;; Return value:  Size  Location     Type
  3718 ;;                  1    wreg      void 
  3719 ;; Registers used:
  3720 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3721 ;; Tracked objects:
  3722 ;;		On entry : 0/0
  3723 ;;		On exit  : 0/0
  3724 ;;		Unchanged: 0/0
  3725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3726 ;;      Params:         0       0       0       0       0
  3727 ;;      Locals:         0       2       0       0       0
  3728 ;;      Temps:          0       8       0       0       0
  3729 ;;      Totals:         0      10       0       0       0
  3730 ;;Total ram usage:       10 bytes
  3731 ;; Hardware stack levels used:    1
  3732 ;; Hardware stack levels required when called:    3
  3733 ;; This function calls:
  3734 ;;		___awmod
  3735 ;;		_drawBground
  3736 ;;		_rand
  3737 ;; This function is called by:
  3738 ;;		_checkCount
  3739 ;; This function uses a non-reentrant model
  3740 ;;
  3741                           
  3742                           
  3743                           ;psect for function _checkColission
  3744  029B                     _checkColission:	
  3745  029B                     l1554:	
  3746                           ;incstack = 0
  3747                           ; Regs used in _checkColission: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3748                           
  3749  029B                     l1556:	
  3750                           
  3751                           ;colisiones.c: 31:     for(i=con.ficha_Hpos; i<(con.ficha_Hpos+4); i++){
  3752  029B  1283               	bcf	3,5	;RP0=0, select bank0
  3753  029C  1303               	bcf	3,6	;RP1=0, select bank0
  3754  029D  0848               	movf	_con+3,w
  3755  029E  00B1               	movwf	??_checkColission
  3756  029F  01B2               	clrf	??_checkColission+1
  3757  02A0  0831               	movf	??_checkColission,w
  3758  02A1  00B9               	movwf	checkColission@i
  3759  02A2  0832               	movf	??_checkColission+1,w
  3760  02A3  00BA               	movwf	checkColission@i+1
  3761  02A4  2AF7               	goto	l222
  3762  02A5                     l1558:	
  3763                           
  3764                           ;colisiones.c: 32:         if((ficha[i]>>1 & fondo[i]) != 0){
  3765  02A5  1283               	bcf	3,5	;RP0=0, select bank0
  3766  02A6  1303               	bcf	3,6	;RP1=0, select bank0
  3767  02A7  0839               	movf	checkColission@i,w
  3768  02A8  00B1               	movwf	??_checkColission
  3769  02A9  0731               	addwf	??_checkColission,w
  3770  02AA  3EA0               	addlw	(low (_fondo| 0))& (0+255)
  3771  02AB  0084               	movwf	4
  3772  02AC  1383               	bcf	3,7	;select IRP bank1
  3773  02AD  0800               	movf	0,w
  3774  02AE  00B2               	movwf	??_checkColission+1
  3775  02AF  0A84               	incf	4,f
  3776  02B0  0800               	movf	0,w
  3777  02B1  00B3               	movwf	??_checkColission+2
  3778  02B2  0839               	movf	checkColission@i,w
  3779  02B3  00B4               	movwf	??_checkColission+3
  3780  02B4  0734               	addwf	??_checkColission+3,w
  3781  02B5  3E55               	addlw	(low (_ficha| 0))& (0+255)
  3782  02B6  0084               	movwf	4
  3783  02B7  0800               	movf	0,w
  3784  02B8  00B5               	movwf	??_checkColission+4
  3785  02B9  0A84               	incf	4,f
  3786  02BA  0800               	movf	0,w
  3787  02BB  00B6               	movwf	??_checkColission+5
  3788  02BC  1003               	clrc
  3789  02BD  0CB6               	rrf	??_checkColission+5,f
  3790  02BE  0CB5               	rrf	??_checkColission+4,f
  3791  02BF  0832               	movf	??_checkColission+1,w
  3792  02C0  0535               	andwf	??_checkColission+4,w
  3793  02C1  00B7               	movwf	??_checkColission+6
  3794  02C2  0833               	movf	??_checkColission+2,w
  3795  02C3  0536               	andwf	??_checkColission+5,w
  3796  02C4  00B8               	movwf	??_checkColission+7
  3797  02C5  0837               	movf	??_checkColission+6,w
  3798  02C6  0438               	iorwf	??_checkColission+7,w
  3799  02C7  1903               	btfsc	3,2
  3800  02C8  2ACA               	goto	u1181
  3801  02C9  2ACB               	goto	u1180
  3802  02CA                     u1181:	
  3803  02CA  2AF1               	goto	l1566
  3804  02CB                     u1180:	
  3805  02CB                     l1560:	
  3806                           
  3807                           ;colisiones.c: 33:             drawBground();
  3808  02CB  120A  118A  2639  120A  118A  	fcall	_drawBground
  3809  02D0                     l1562:	
  3810                           
  3811                           ;colisiones.c: 34:             con.ficha_Vpos = 16;
  3812  02D0  3010               	movlw	16
  3813  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  3814  02D2  1303               	bcf	3,6	;RP1=0, select bank0
  3815  02D3  00B1               	movwf	??_checkColission
  3816  02D4  0831               	movf	??_checkColission,w
  3817  02D5  00C7               	movwf	_con+2
  3818  02D6                     l1564:	
  3819                           
  3820                           ;colisiones.c: 35:             con.ficha_actual = rand() % 7;
  3821  02D6  3007               	movlw	7
  3822  02D7  00AB               	movwf	___awmod@divisor
  3823  02D8  3000               	movlw	0
  3824  02D9  00AC               	movwf	___awmod@divisor+1
  3825  02DA  120A  118A  256E  120A  118A  	fcall	_rand
  3826  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  3827  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  3828  02E1  0825               	movf	?_rand+1,w
  3829  02E2  00AE               	movwf	___awmod@dividend+1
  3830  02E3  0824               	movf	?_rand,w
  3831  02E4  00AD               	movwf	___awmod@dividend
  3832  02E5  120A  118A  23D6  120A  118A  	fcall	___awmod
  3833  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  3834  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  3835  02EC  082B               	movf	?___awmod,w
  3836  02ED  00B1               	movwf	??_checkColission
  3837  02EE  0831               	movf	??_checkColission,w
  3838  02EF  00C9               	movwf	_con+4
  3839                           
  3840                           ;colisiones.c: 36:             break;
  3841  02F0  2B0C               	goto	l226
  3842  02F1                     l1566:	
  3843                           
  3844                           ;colisiones.c: 38:     }
  3845  02F1  3001               	movlw	1
  3846  02F2  07B9               	addwf	checkColission@i,f
  3847  02F3  1803               	skipnc
  3848  02F4  0ABA               	incf	checkColission@i+1,f
  3849  02F5  3000               	movlw	0
  3850  02F6  07BA               	addwf	checkColission@i+1,f
  3851  02F7                     l222:	
  3852  02F7  0848               	movf	_con+3,w
  3853  02F8  3E04               	addlw	4
  3854  02F9  00B1               	movwf	??_checkColission
  3855  02FA  3000               	movlw	0
  3856  02FB  1803               	skipnc
  3857  02FC  3001               	movlw	1
  3858  02FD  00B2               	movwf	??_checkColission+1
  3859  02FE  083A               	movf	checkColission@i+1,w
  3860  02FF  3A80               	xorlw	128
  3861  0300  00B3               	movwf	??_checkColission+2
  3862  0301  0832               	movf	??_checkColission+1,w
  3863  0302  3A80               	xorlw	128
  3864  0303  0233               	subwf	??_checkColission+2,w
  3865  0304  1D03               	skipz
  3866  0305  2B08               	goto	u1195
  3867  0306  0831               	movf	??_checkColission,w
  3868  0307  0239               	subwf	checkColission@i,w
  3869  0308                     u1195:	
  3870  0308  1C03               	skipc
  3871  0309  2B0B               	goto	u1191
  3872  030A  2B0C               	goto	u1190
  3873  030B                     u1191:	
  3874  030B  2AA5               	goto	l1558
  3875  030C                     u1190:	
  3876  030C                     l226:	
  3877  030C  0008               	return
  3878  030D                     __end_of_checkColission:	
  3879                           
  3880                           	psect	text22
  3881  06AE                     __ptext22:	
  3882 ;; *************** function _checkBottom *****************
  3883 ;; Defined at:
  3884 ;;		line 16 in file "colisiones.c"
  3885 ;; Parameters:    Size  Location     Type
  3886 ;;		None
  3887 ;; Auto vars:     Size  Location     Type
  3888 ;;		None
  3889 ;; Return value:  Size  Location     Type
  3890 ;;                  1    wreg      void 
  3891 ;; Registers used:
  3892 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3893 ;; Tracked objects:
  3894 ;;		On entry : 0/0
  3895 ;;		On exit  : 0/0
  3896 ;;		Unchanged: 0/0
  3897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3898 ;;      Params:         0       0       0       0       0
  3899 ;;      Locals:         0       0       0       0       0
  3900 ;;      Temps:          0       1       0       0       0
  3901 ;;      Totals:         0       1       0       0       0
  3902 ;;Total ram usage:        1 bytes
  3903 ;; Hardware stack levels used:    1
  3904 ;; Hardware stack levels required when called:    3
  3905 ;; This function calls:
  3906 ;;		___awmod
  3907 ;;		_drawBground
  3908 ;;		_rand
  3909 ;; This function is called by:
  3910 ;;		_checkCount
  3911 ;; This function uses a non-reentrant model
  3912 ;;
  3913                           
  3914                           
  3915                           ;psect for function _checkBottom
  3916  06AE                     _checkBottom:	
  3917  06AE                     l1546:	
  3918                           ;incstack = 0
  3919                           ; Regs used in _checkBottom: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3920                           
  3921                           
  3922                           ;colisiones.c: 17:     if(con.ficha_Vpos==0){
  3923  06AE  1283               	bcf	3,5	;RP0=0, select bank0
  3924  06AF  1303               	bcf	3,6	;RP1=0, select bank0
  3925  06B0  0847               	movf	_con+2,w
  3926  06B1  1D03               	btfss	3,2
  3927  06B2  2EB4               	goto	u1171
  3928  06B3  2EB5               	goto	u1170
  3929  06B4                     u1171:	
  3930  06B4  2EDA               	goto	l219
  3931  06B5                     u1170:	
  3932  06B5                     l1548:	
  3933                           
  3934                           ;colisiones.c: 18:         drawBground();
  3935  06B5  120A  118A  2639  120A  118A  	fcall	_drawBground
  3936  06BA                     l1550:	
  3937                           
  3938                           ;colisiones.c: 19:         con.ficha_Vpos = 16;
  3939  06BA  3010               	movlw	16
  3940  06BB  1283               	bcf	3,5	;RP0=0, select bank0
  3941  06BC  1303               	bcf	3,6	;RP1=0, select bank0
  3942  06BD  00B1               	movwf	??_checkBottom
  3943  06BE  0831               	movf	??_checkBottom,w
  3944  06BF  00C7               	movwf	_con+2
  3945  06C0                     l1552:	
  3946                           
  3947                           ;colisiones.c: 20:         con.ficha_actual = rand() % 7;
  3948  06C0  3007               	movlw	7
  3949  06C1  00AB               	movwf	___awmod@divisor
  3950  06C2  3000               	movlw	0
  3951  06C3  00AC               	movwf	___awmod@divisor+1
  3952  06C4  120A  118A  256E  120A  118A  	fcall	_rand
  3953  06C9  1283               	bcf	3,5	;RP0=0, select bank0
  3954  06CA  1303               	bcf	3,6	;RP1=0, select bank0
  3955  06CB  0825               	movf	?_rand+1,w
  3956  06CC  00AE               	movwf	___awmod@dividend+1
  3957  06CD  0824               	movf	?_rand,w
  3958  06CE  00AD               	movwf	___awmod@dividend
  3959  06CF  120A  118A  23D6  120A  118A  	fcall	___awmod
  3960  06D4  1283               	bcf	3,5	;RP0=0, select bank0
  3961  06D5  1303               	bcf	3,6	;RP1=0, select bank0
  3962  06D6  082B               	movf	?___awmod,w
  3963  06D7  00B1               	movwf	??_checkBottom
  3964  06D8  0831               	movf	??_checkBottom,w
  3965  06D9  00C9               	movwf	_con+4
  3966  06DA                     l219:	
  3967  06DA  0008               	return
  3968  06DB                     __end_of_checkBottom:	
  3969                           
  3970                           	psect	text23
  3971  056E                     __ptext23:	
  3972 ;; *************** function _rand *****************
  3973 ;; Defined at:
  3974 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  3975 ;; Parameters:    Size  Location     Type
  3976 ;;		None
  3977 ;; Auto vars:     Size  Location     Type
  3978 ;;		None
  3979 ;; Return value:  Size  Location     Type
  3980 ;;                  2    4[BANK0 ] int 
  3981 ;; Registers used:
  3982 ;;		wreg, status,2, status,0, pclath, cstack
  3983 ;; Tracked objects:
  3984 ;;		On entry : 0/0
  3985 ;;		On exit  : 0/0
  3986 ;;		Unchanged: 0/0
  3987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3988 ;;      Params:         0       2       0       0       0
  3989 ;;      Locals:         0       0       0       0       0
  3990 ;;      Temps:          0       5       0       0       0
  3991 ;;      Totals:         0       7       0       0       0
  3992 ;;Total ram usage:        7 bytes
  3993 ;; Hardware stack levels used:    1
  3994 ;; Hardware stack levels required when called:    2
  3995 ;; This function calls:
  3996 ;;		___lmul
  3997 ;; This function is called by:
  3998 ;;		_main
  3999 ;;		_checkBottom
  4000 ;;		_checkColission
  4001 ;;		_perdio
  4002 ;; This function uses a non-reentrant model
  4003 ;;
  4004                           
  4005                           
  4006                           ;psect for function _rand
  4007  056E                     _rand:	
  4008  056E                     l1344:	
  4009                           ;incstack = 0
  4010                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  4011                           
  4012  056E  1283               	bcf	3,5	;RP0=0, select bank0
  4013  056F  1303               	bcf	3,6	;RP1=0, select bank0
  4014  0570  0868               	movf	_randx+3,w
  4015  0571  00F5               	movwf	___lmul@multiplier+3
  4016  0572  0867               	movf	_randx+2,w
  4017  0573  00F4               	movwf	___lmul@multiplier+2
  4018  0574  0866               	movf	_randx+1,w
  4019  0575  00F3               	movwf	___lmul@multiplier+1
  4020  0576  0865               	movf	_randx,w
  4021  0577  00F2               	movwf	___lmul@multiplier
  4022  0578  3041               	movlw	65
  4023  0579  00F9               	movwf	___lmul@multiplicand+3
  4024  057A  30C6               	movlw	198
  4025  057B  00F8               	movwf	___lmul@multiplicand+2
  4026  057C  304E               	movlw	78
  4027  057D  00F7               	movwf	___lmul@multiplicand+1
  4028  057E  306D               	movlw	109
  4029  057F  00F6               	movwf	___lmul@multiplicand
  4030  0580  120A  118A  24D9  120A  118A  	fcall	___lmul
  4031  0585  0875               	movf	?___lmul+3,w
  4032  0586  1283               	bcf	3,5	;RP0=0, select bank0
  4033  0587  1303               	bcf	3,6	;RP1=0, select bank0
  4034  0588  00E8               	movwf	_randx+3
  4035  0589  0874               	movf	?___lmul+2,w
  4036  058A  00E7               	movwf	_randx+2
  4037  058B  0873               	movf	?___lmul+1,w
  4038  058C  00E6               	movwf	_randx+1
  4039  058D  0872               	movf	?___lmul,w
  4040  058E  00E5               	movwf	_randx
  4041  058F                     l1346:	
  4042  058F  3039               	movlw	57
  4043  0590  07E5               	addwf	_randx,f
  4044  0591  3030               	movlw	48
  4045  0592  1803               	skipnc
  4046  0593  3031               	movlw	49
  4047  0594  07E6               	addwf	_randx+1,f
  4048  0595  3000               	movlw	0
  4049  0596  1803               	skipnc
  4050  0597  3001               	movlw	1
  4051  0598  07E7               	addwf	_randx+2,f
  4052  0599  3000               	movlw	0
  4053  059A  1803               	skipnc
  4054  059B  3001               	movlw	1
  4055  059C  07E8               	addwf	_randx+3,f
  4056  059D                     l1348:	
  4057  059D  0865               	movf	_randx,w
  4058  059E  00A6               	movwf	??_rand
  4059  059F  0866               	movf	_randx+1,w
  4060  05A0  00A7               	movwf	??_rand+1
  4061  05A1  0867               	movf	_randx+2,w
  4062  05A2  00A8               	movwf	??_rand+2
  4063  05A3  0868               	movf	_randx+3,w
  4064  05A4  00A9               	movwf	??_rand+3
  4065  05A5  3010               	movlw	16
  4066  05A6  00AA               	movwf	??_rand+4
  4067  05A7                     u775:	
  4068  05A7  0D29               	rlf	??_rand+3,w
  4069  05A8  0CA9               	rrf	??_rand+3,f
  4070  05A9  0CA8               	rrf	??_rand+2,f
  4071  05AA  0CA7               	rrf	??_rand+1,f
  4072  05AB  0CA6               	rrf	??_rand,f
  4073  05AC                     u770:	
  4074  05AC  0BAA               	decfsz	??_rand+4,f
  4075  05AD  2DA7               	goto	u775
  4076  05AE  30FF               	movlw	255
  4077  05AF  0526               	andwf	??_rand,w
  4078  05B0  00A4               	movwf	?_rand
  4079  05B1  307F               	movlw	127
  4080  05B2  0527               	andwf	??_rand+1,w
  4081  05B3  00A5               	movwf	?_rand+1
  4082  05B4                     l798:	
  4083  05B4  0008               	return
  4084  05B5                     __end_of_rand:	
  4085                           
  4086                           	psect	text24
  4087  04D9                     __ptext24:	
  4088 ;; *************** function ___lmul *****************
  4089 ;; Defined at:
  4090 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  4091 ;; Parameters:    Size  Location     Type
  4092 ;;  multiplier      4    2[COMMON] unsigned long 
  4093 ;;  multiplicand    4    6[COMMON] unsigned long 
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;  product         4    0[BANK0 ] unsigned long 
  4096 ;; Return value:  Size  Location     Type
  4097 ;;                  4    2[COMMON] unsigned long 
  4098 ;; Registers used:
  4099 ;;		wreg, status,2, status,0
  4100 ;; Tracked objects:
  4101 ;;		On entry : 0/0
  4102 ;;		On exit  : 0/0
  4103 ;;		Unchanged: 0/0
  4104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4105 ;;      Params:         8       0       0       0       0
  4106 ;;      Locals:         0       4       0       0       0
  4107 ;;      Temps:          1       0       0       0       0
  4108 ;;      Totals:         9       4       0       0       0
  4109 ;;Total ram usage:       13 bytes
  4110 ;; Hardware stack levels used:    1
  4111 ;; Hardware stack levels required when called:    1
  4112 ;; This function calls:
  4113 ;;		Nothing
  4114 ;; This function is called by:
  4115 ;;		_rand
  4116 ;; This function uses a non-reentrant model
  4117 ;;
  4118                           
  4119                           
  4120                           ;psect for function ___lmul
  4121  04D9                     ___lmul:	
  4122  04D9                     l1330:	
  4123                           ;incstack = 0
  4124                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4125                           
  4126  04D9  3000               	movlw	0
  4127  04DA  1283               	bcf	3,5	;RP0=0, select bank0
  4128  04DB  1303               	bcf	3,6	;RP1=0, select bank0
  4129  04DC  00A3               	movwf	___lmul@product+3
  4130  04DD  3000               	movlw	0
  4131  04DE  00A2               	movwf	___lmul@product+2
  4132  04DF  3000               	movlw	0
  4133  04E0  00A1               	movwf	___lmul@product+1
  4134  04E1  3000               	movlw	0
  4135  04E2  00A0               	movwf	___lmul@product
  4136  04E3                     l1332:	
  4137  04E3  1C72               	btfss	___lmul@multiplier,0
  4138  04E4  2CE6               	goto	u721
  4139  04E5  2CE7               	goto	u720
  4140  04E6                     u721:	
  4141  04E6  2D00               	goto	l1336
  4142  04E7                     u720:	
  4143  04E7                     l1334:	
  4144  04E7  0876               	movf	___lmul@multiplicand,w
  4145  04E8  1283               	bcf	3,5	;RP0=0, select bank0
  4146  04E9  1303               	bcf	3,6	;RP1=0, select bank0
  4147  04EA  07A0               	addwf	___lmul@product,f
  4148  04EB  0877               	movf	___lmul@multiplicand+1,w
  4149  04EC  1103               	clrz
  4150  04ED  1803               	skipnc
  4151  04EE  3E01               	addlw	1
  4152  04EF  1903               	skipnz
  4153  04F0  2CF2               	goto	u731
  4154  04F1  07A1               	addwf	___lmul@product+1,f
  4155  04F2                     u731:	
  4156  04F2  0878               	movf	___lmul@multiplicand+2,w
  4157  04F3  1103               	clrz
  4158  04F4  1803               	skipnc
  4159  04F5  3E01               	addlw	1
  4160  04F6  1903               	skipnz
  4161  04F7  2CF9               	goto	u732
  4162  04F8  07A2               	addwf	___lmul@product+2,f
  4163  04F9                     u732:	
  4164  04F9  0879               	movf	___lmul@multiplicand+3,w
  4165  04FA  1103               	clrz
  4166  04FB  1803               	skipnc
  4167  04FC  3E01               	addlw	1
  4168  04FD  1903               	skipnz
  4169  04FE  2D00               	goto	u733
  4170  04FF  07A3               	addwf	___lmul@product+3,f
  4171  0500                     u733:	
  4172  0500                     l1336:	
  4173  0500  3001               	movlw	1
  4174  0501  00FA               	movwf	??___lmul
  4175  0502                     u745:	
  4176  0502  1003               	clrc
  4177  0503  0DF6               	rlf	___lmul@multiplicand,f
  4178  0504  0DF7               	rlf	___lmul@multiplicand+1,f
  4179  0505  0DF8               	rlf	___lmul@multiplicand+2,f
  4180  0506  0DF9               	rlf	___lmul@multiplicand+3,f
  4181  0507  0BFA               	decfsz	??___lmul,f
  4182  0508  2D02               	goto	u745
  4183  0509                     l1338:	
  4184  0509  3001               	movlw	1
  4185  050A                     u755:	
  4186  050A  1003               	clrc
  4187  050B  0CF5               	rrf	___lmul@multiplier+3,f
  4188  050C  0CF4               	rrf	___lmul@multiplier+2,f
  4189  050D  0CF3               	rrf	___lmul@multiplier+1,f
  4190  050E  0CF2               	rrf	___lmul@multiplier,f
  4191  050F  3EFF               	addlw	-1
  4192  0510  1D03               	skipz
  4193  0511  2D0A               	goto	u755
  4194  0512  0875               	movf	___lmul@multiplier+3,w
  4195  0513  0474               	iorwf	___lmul@multiplier+2,w
  4196  0514  0473               	iorwf	___lmul@multiplier+1,w
  4197  0515  0472               	iorwf	___lmul@multiplier,w
  4198  0516  1D03               	skipz
  4199  0517  2D19               	goto	u761
  4200  0518  2D1A               	goto	u760
  4201  0519                     u761:	
  4202  0519  2CE3               	goto	l1332
  4203  051A                     u760:	
  4204  051A                     l1340:	
  4205  051A  1283               	bcf	3,5	;RP0=0, select bank0
  4206  051B  1303               	bcf	3,6	;RP1=0, select bank0
  4207  051C  0823               	movf	___lmul@product+3,w
  4208  051D  00F5               	movwf	?___lmul+3
  4209  051E  0822               	movf	___lmul@product+2,w
  4210  051F  00F4               	movwf	?___lmul+2
  4211  0520  0821               	movf	___lmul@product+1,w
  4212  0521  00F3               	movwf	?___lmul+1
  4213  0522  0820               	movf	___lmul@product,w
  4214  0523  00F2               	movwf	?___lmul
  4215  0524                     l356:	
  4216  0524  0008               	return
  4217  0525                     __end_of___lmul:	
  4218                           
  4219                           	psect	text25
  4220  0639                     __ptext25:	
  4221 ;; *************** function _drawBground *****************
  4222 ;; Defined at:
  4223 ;;		line 46 in file "screen.c"
  4224 ;; Parameters:    Size  Location     Type
  4225 ;;		None
  4226 ;; Auto vars:     Size  Location     Type
  4227 ;;  i               2    0[BANK0 ] int 
  4228 ;; Return value:  Size  Location     Type
  4229 ;;                  1    wreg      void 
  4230 ;; Registers used:
  4231 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4232 ;; Tracked objects:
  4233 ;;		On entry : 0/0
  4234 ;;		On exit  : 0/0
  4235 ;;		Unchanged: 0/0
  4236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4237 ;;      Params:         0       0       0       0       0
  4238 ;;      Locals:         0       2       0       0       0
  4239 ;;      Temps:          9       0       0       0       0
  4240 ;;      Totals:         9       2       0       0       0
  4241 ;;Total ram usage:       11 bytes
  4242 ;; Hardware stack levels used:    1
  4243 ;; Hardware stack levels required when called:    1
  4244 ;; This function calls:
  4245 ;;		Nothing
  4246 ;; This function is called by:
  4247 ;;		_checkBottom
  4248 ;;		_checkColission
  4249 ;; This function uses a non-reentrant model
  4250 ;;
  4251                           
  4252                           
  4253                           ;psect for function _drawBground
  4254  0639                     _drawBground:	
  4255  0639                     l1370:	
  4256                           ;incstack = 0
  4257                           ; Regs used in _drawBground: [wreg-fsr0h+status,2+status,0+btemp+1]
  4258                           
  4259                           
  4260                           ;screen.c: 47:     int i=0;
  4261  0639  1283               	bcf	3,5	;RP0=0, select bank0
  4262  063A  1303               	bcf	3,6	;RP1=0, select bank0
  4263  063B  01A0               	clrf	drawBground@i
  4264  063C  01A1               	clrf	drawBground@i+1
  4265                           
  4266                           ;screen.c: 48:     for(i=0; i<8; i++){
  4267  063D  01A0               	clrf	drawBground@i
  4268  063E  01A1               	clrf	drawBground@i+1
  4269  063F                     l1376:	
  4270                           
  4271                           ;screen.c: 49:         fondo[i] = fondo[i] | ficha[i];
  4272  063F  1283               	bcf	3,5	;RP0=0, select bank0
  4273  0640  1303               	bcf	3,6	;RP1=0, select bank0
  4274  0641  0820               	movf	drawBground@i,w
  4275  0642  00F2               	movwf	??_drawBground
  4276  0643  0772               	addwf	??_drawBground,w
  4277  0644  3E55               	addlw	(low (_ficha| 0))& (0+255)
  4278  0645  0084               	movwf	4
  4279  0646  1383               	bcf	3,7	;select IRP bank0
  4280  0647  0800               	movf	0,w
  4281  0648  00F3               	movwf	??_drawBground+1
  4282  0649  0A84               	incf	4,f
  4283  064A  0800               	movf	0,w
  4284  064B  00F4               	movwf	??_drawBground+2
  4285  064C  0820               	movf	drawBground@i,w
  4286  064D  00F5               	movwf	??_drawBground+3
  4287  064E  0775               	addwf	??_drawBground+3,w
  4288  064F  3EA0               	addlw	(low (_fondo| 0))& (0+255)
  4289  0650  0084               	movwf	4
  4290  0651  0800               	movf	0,w
  4291  0652  00F6               	movwf	??_drawBground+4
  4292  0653  0A84               	incf	4,f
  4293  0654  0800               	movf	0,w
  4294  0655  00F7               	movwf	??_drawBground+5
  4295  0656  0873               	movf	??_drawBground+1,w
  4296  0657  0476               	iorwf	??_drawBground+4,w
  4297  0658  00F8               	movwf	??_drawBground+6
  4298  0659  0874               	movf	??_drawBground+2,w
  4299  065A  0477               	iorwf	??_drawBground+5,w
  4300  065B  00F9               	movwf	??_drawBground+7
  4301  065C  0820               	movf	drawBground@i,w
  4302  065D  00FA               	movwf	??_drawBground+8
  4303  065E  077A               	addwf	??_drawBground+8,w
  4304  065F  3EA0               	addlw	(low (_fondo| 0))& (0+255)
  4305  0660  0084               	movwf	4
  4306  0661  0878               	movf	??_drawBground+6,w
  4307  0662  0080               	movwf	0
  4308  0663  0A84               	incf	4,f
  4309  0664  0879               	movf	??_drawBground+7,w
  4310  0665  0080               	movwf	0
  4311  0666                     l1378:	
  4312                           
  4313                           ;screen.c: 50:     }
  4314  0666  3001               	movlw	1
  4315  0667  07A0               	addwf	drawBground@i,f
  4316  0668  1803               	skipnc
  4317  0669  0AA1               	incf	drawBground@i+1,f
  4318  066A  3000               	movlw	0
  4319  066B  07A1               	addwf	drawBground@i+1,f
  4320  066C                     l1380:	
  4321  066C  0821               	movf	drawBground@i+1,w
  4322  066D  3A80               	xorlw	128
  4323  066E  00FF               	movwf	btemp+1
  4324  066F  3080               	movlw	128
  4325  0670  027F               	subwf	btemp+1,w
  4326  0671  1D03               	skipz
  4327  0672  2E75               	goto	u865
  4328  0673  3008               	movlw	8
  4329  0674  0220               	subwf	drawBground@i,w
  4330  0675                     u865:	
  4331  0675  1C03               	skipc
  4332  0676  2E78               	goto	u861
  4333  0677  2E79               	goto	u860
  4334  0678                     u861:	
  4335  0678  2E3F               	goto	l1376
  4336  0679                     u860:	
  4337  0679                     l196:	
  4338  0679  0008               	return
  4339  067A                     __end_of_drawBground:	
  4340                           
  4341                           	psect	text26
  4342  03D6                     __ptext26:	
  4343 ;; *************** function ___awmod *****************
  4344 ;; Defined at:
  4345 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  4346 ;; Parameters:    Size  Location     Type
  4347 ;;  divisor         2   11[BANK0 ] int 
  4348 ;;  dividend        2   13[BANK0 ] int 
  4349 ;; Auto vars:     Size  Location     Type
  4350 ;;  sign            1   16[BANK0 ] unsigned char 
  4351 ;;  counter         1   15[BANK0 ] unsigned char 
  4352 ;; Return value:  Size  Location     Type
  4353 ;;                  2   11[BANK0 ] int 
  4354 ;; Registers used:
  4355 ;;		wreg, status,2, status,0
  4356 ;; Tracked objects:
  4357 ;;		On entry : 0/0
  4358 ;;		On exit  : 0/0
  4359 ;;		Unchanged: 0/0
  4360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4361 ;;      Params:         0       4       0       0       0
  4362 ;;      Locals:         0       2       0       0       0
  4363 ;;      Temps:          1       0       0       0       0
  4364 ;;      Totals:         1       6       0       0       0
  4365 ;;Total ram usage:        7 bytes
  4366 ;; Hardware stack levels used:    1
  4367 ;; Hardware stack levels required when called:    1
  4368 ;; This function calls:
  4369 ;;		Nothing
  4370 ;; This function is called by:
  4371 ;;		_main
  4372 ;;		_checkBottom
  4373 ;;		_checkColission
  4374 ;;		_perdio
  4375 ;; This function uses a non-reentrant model
  4376 ;;
  4377                           
  4378                           
  4379                           ;psect for function ___awmod
  4380  03D6                     ___awmod:	
  4381  03D6                     l1382:	
  4382                           ;incstack = 0
  4383                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4384                           
  4385  03D6  1283               	bcf	3,5	;RP0=0, select bank0
  4386  03D7  1303               	bcf	3,6	;RP1=0, select bank0
  4387  03D8  01B0               	clrf	___awmod@sign
  4388  03D9                     l1384:	
  4389  03D9  1FAE               	btfss	___awmod@dividend+1,7
  4390  03DA  2BDC               	goto	u871
  4391  03DB  2BDD               	goto	u870
  4392  03DC                     u871:	
  4393  03DC  2BE4               	goto	l1390
  4394  03DD                     u870:	
  4395  03DD                     l1386:	
  4396  03DD  09AD               	comf	___awmod@dividend,f
  4397  03DE  09AE               	comf	___awmod@dividend+1,f
  4398  03DF  0AAD               	incf	___awmod@dividend,f
  4399  03E0  1903               	skipnz
  4400  03E1  0AAE               	incf	___awmod@dividend+1,f
  4401  03E2                     l1388:	
  4402  03E2  01B0               	clrf	___awmod@sign
  4403  03E3  0AB0               	incf	___awmod@sign,f
  4404  03E4                     l1390:	
  4405  03E4  1FAC               	btfss	___awmod@divisor+1,7
  4406  03E5  2BE7               	goto	u881
  4407  03E6  2BE8               	goto	u880
  4408  03E7                     u881:	
  4409  03E7  2BED               	goto	l1394
  4410  03E8                     u880:	
  4411  03E8                     l1392:	
  4412  03E8  09AB               	comf	___awmod@divisor,f
  4413  03E9  09AC               	comf	___awmod@divisor+1,f
  4414  03EA  0AAB               	incf	___awmod@divisor,f
  4415  03EB  1903               	skipnz
  4416  03EC  0AAC               	incf	___awmod@divisor+1,f
  4417  03ED                     l1394:	
  4418  03ED  082B               	movf	___awmod@divisor,w
  4419  03EE  042C               	iorwf	___awmod@divisor+1,w
  4420  03EF  1903               	btfsc	3,2
  4421  03F0  2BF2               	goto	u891
  4422  03F1  2BF3               	goto	u890
  4423  03F2                     u891:	
  4424  03F2  2C22               	goto	l1412
  4425  03F3                     u890:	
  4426  03F3                     l1396:	
  4427  03F3  01AF               	clrf	___awmod@counter
  4428  03F4  0AAF               	incf	___awmod@counter,f
  4429  03F5  2C01               	goto	l1402
  4430  03F6                     l1398:	
  4431  03F6  3001               	movlw	1
  4432  03F7                     u905:	
  4433  03F7  1003               	clrc
  4434  03F8  0DAB               	rlf	___awmod@divisor,f
  4435  03F9  0DAC               	rlf	___awmod@divisor+1,f
  4436  03FA  3EFF               	addlw	-1
  4437  03FB  1D03               	skipz
  4438  03FC  2BF7               	goto	u905
  4439  03FD                     l1400:	
  4440  03FD  3001               	movlw	1
  4441  03FE  00FB               	movwf	??___awmod
  4442  03FF  087B               	movf	??___awmod,w
  4443  0400  07AF               	addwf	___awmod@counter,f
  4444  0401                     l1402:	
  4445  0401  1FAC               	btfss	___awmod@divisor+1,7
  4446  0402  2C04               	goto	u911
  4447  0403  2C05               	goto	u910
  4448  0404                     u911:	
  4449  0404  2BF6               	goto	l1398
  4450  0405                     u910:	
  4451  0405                     l1404:	
  4452  0405  082C               	movf	___awmod@divisor+1,w
  4453  0406  022E               	subwf	___awmod@dividend+1,w
  4454  0407  1D03               	skipz
  4455  0408  2C0B               	goto	u925
  4456  0409  082B               	movf	___awmod@divisor,w
  4457  040A  022D               	subwf	___awmod@dividend,w
  4458  040B                     u925:	
  4459  040B  1C03               	skipc
  4460  040C  2C0E               	goto	u921
  4461  040D  2C0F               	goto	u920
  4462  040E                     u921:	
  4463  040E  2C15               	goto	l1408
  4464  040F                     u920:	
  4465  040F                     l1406:	
  4466  040F  082B               	movf	___awmod@divisor,w
  4467  0410  02AD               	subwf	___awmod@dividend,f
  4468  0411  082C               	movf	___awmod@divisor+1,w
  4469  0412  1C03               	skipc
  4470  0413  03AE               	decf	___awmod@dividend+1,f
  4471  0414  02AE               	subwf	___awmod@dividend+1,f
  4472  0415                     l1408:	
  4473  0415  3001               	movlw	1
  4474  0416                     u935:	
  4475  0416  1003               	clrc
  4476  0417  0CAC               	rrf	___awmod@divisor+1,f
  4477  0418  0CAB               	rrf	___awmod@divisor,f
  4478  0419  3EFF               	addlw	-1
  4479  041A  1D03               	skipz
  4480  041B  2C16               	goto	u935
  4481  041C                     l1410:	
  4482  041C  3001               	movlw	1
  4483  041D  02AF               	subwf	___awmod@counter,f
  4484  041E  1D03               	btfss	3,2
  4485  041F  2C21               	goto	u941
  4486  0420  2C22               	goto	u940
  4487  0421                     u941:	
  4488  0421  2C05               	goto	l1404
  4489  0422                     u940:	
  4490  0422                     l1412:	
  4491  0422  0830               	movf	___awmod@sign,w
  4492  0423  1903               	btfsc	3,2
  4493  0424  2C26               	goto	u951
  4494  0425  2C27               	goto	u950
  4495  0426                     u951:	
  4496  0426  2C2C               	goto	l1416
  4497  0427                     u950:	
  4498  0427                     l1414:	
  4499  0427  09AD               	comf	___awmod@dividend,f
  4500  0428  09AE               	comf	___awmod@dividend+1,f
  4501  0429  0AAD               	incf	___awmod@dividend,f
  4502  042A  1903               	skipnz
  4503  042B  0AAE               	incf	___awmod@dividend+1,f
  4504  042C                     l1416:	
  4505  042C  082E               	movf	___awmod@dividend+1,w
  4506  042D  00AC               	movwf	?___awmod+1
  4507  042E  082D               	movf	___awmod@dividend,w
  4508  042F  00AB               	movwf	?___awmod
  4509  0430                     l508:	
  4510  0430  0008               	return
  4511  0431                     __end_of___awmod:	
  4512                           
  4513                           	psect	text27
  4514  067A                     __ptext27:	
  4515 ;; *************** function _Timer0_ISR *****************
  4516 ;; Defined at:
  4517 ;;		line 156 in file "mainsource.c"
  4518 ;; Parameters:    Size  Location     Type
  4519 ;;		None
  4520 ;; Auto vars:     Size  Location     Type
  4521 ;;		None
  4522 ;; Return value:  Size  Location     Type
  4523 ;;                  1    wreg      void 
  4524 ;; Registers used:
  4525 ;;		wreg, status,2
  4526 ;; Tracked objects:
  4527 ;;		On entry : 0/0
  4528 ;;		On exit  : 0/0
  4529 ;;		Unchanged: 0/0
  4530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4531 ;;      Params:         0       0       0       0       0
  4532 ;;      Locals:         0       0       0       0       0
  4533 ;;      Temps:          2       0       0       0       0
  4534 ;;      Totals:         2       0       0       0       0
  4535 ;;Total ram usage:        2 bytes
  4536 ;; Hardware stack levels used:    1
  4537 ;; This function calls:
  4538 ;;		Nothing
  4539 ;; This function is called by:
  4540 ;;		Interrupt level 1
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543                           
  4544                           
  4545                           ;psect for function _Timer0_ISR
  4546  067A                     _Timer0_ISR:	
  4547  067A                     i1l1730:	
  4548                           
  4549                           ;mainsource.c: 157:     if(INTCONbits.TMR0IF){
  4550  067A  1D0B               	btfss	11,2	;volatile
  4551  067B  2E7D               	goto	u134_21
  4552  067C  2E7E               	goto	u134_20
  4553  067D                     u134_21:	
  4554  067D  2E91               	goto	i1l1738
  4555  067E                     u134_20:	
  4556  067E                     i1l1732:	
  4557                           
  4558                           ;mainsource.c: 158:         INTCONbits.TMR0IF=0;
  4559  067E  110B               	bcf	11,2	;volatile
  4560  067F                     i1l1734:	
  4561                           
  4562                           ;mainsource.c: 159:         timerCount ++;
  4563  067F  3001               	movlw	1
  4564  0680  1283               	bcf	3,5	;RP0=0, select bank0
  4565  0681  1303               	bcf	3,6	;RP1=0, select bank0
  4566  0682  07D1               	addwf	_timerCount,f
  4567  0683  3000               	movlw	0
  4568  0684  1803               	skipnc
  4569  0685  3001               	movlw	1
  4570  0686  07D2               	addwf	_timerCount+1,f
  4571  0687  3000               	movlw	0
  4572  0688  1803               	skipnc
  4573  0689  3001               	movlw	1
  4574  068A  07D3               	addwf	_timerCount+2,f
  4575  068B  3000               	movlw	0
  4576  068C  1803               	skipnc
  4577  068D  3001               	movlw	1
  4578  068E  07D4               	addwf	_timerCount+3,f
  4579  068F                     i1l1736:	
  4580                           
  4581                           ;mainsource.c: 160:         con.check_count = 1;
  4582  068F  01CC               	clrf	_con+7
  4583  0690  0ACC               	incf	_con+7,f
  4584  0691                     i1l1738:	
  4585                           
  4586                           ;mainsource.c: 163:     if(PORTBbits.RB5 == 0){
  4587  0691  1283               	bcf	3,5	;RP0=0, select bank0
  4588  0692  1303               	bcf	3,6	;RP1=0, select bank0
  4589  0693  1A86               	btfsc	6,5	;volatile
  4590  0694  2E96               	goto	u135_21
  4591  0695  2E97               	goto	u135_20
  4592  0696                     u135_21:	
  4593  0696  2E9A               	goto	i1l1744
  4594  0697                     u135_20:	
  4595  0697                     i1l1740:	
  4596                           
  4597                           ;mainsource.c: 164:         con.derecha = 1;
  4598  0697  01CA               	clrf	_con+5
  4599  0698  0ACA               	incf	_con+5,f
  4600  0699                     i1l1742:	
  4601                           
  4602                           ;mainsource.c: 165:         con.izquierda = 0;
  4603  0699  01CB               	clrf	_con+6
  4604  069A                     i1l1744:	
  4605                           
  4606                           ;mainsource.c: 167:     if(PORTBbits.RB4 == 0){
  4607  069A  1A06               	btfsc	6,4	;volatile
  4608  069B  2E9D               	goto	u136_21
  4609  069C  2E9E               	goto	u136_20
  4610  069D                     u136_21:	
  4611  069D  2EA1               	goto	i1l1750
  4612  069E                     u136_20:	
  4613  069E                     i1l1746:	
  4614                           
  4615                           ;mainsource.c: 168:         con.derecha = 0;
  4616  069E  01CA               	clrf	_con+5
  4617  069F                     i1l1748:	
  4618                           
  4619                           ;mainsource.c: 169:         con.izquierda = 1;
  4620  069F  01CB               	clrf	_con+6
  4621  06A0  0ACB               	incf	_con+6,f
  4622  06A1                     i1l1750:	
  4623                           
  4624                           ;mainsource.c: 171:     if(PORTBbits.RB3== 0){
  4625  06A1  1986               	btfsc	6,3	;volatile
  4626  06A2  2EA4               	goto	u137_21
  4627  06A3  2EA5               	goto	u137_20
  4628  06A4                     u137_21:	
  4629  06A4  2EA7               	goto	i1l128
  4630  06A5                     u137_20:	
  4631  06A5                     i1l1752:	
  4632                           
  4633                           ;mainsource.c: 172:         con.girar = 1;
  4634  06A5  01C5               	clrf	_con
  4635  06A6  0AC5               	incf	_con,f
  4636  06A7                     i1l128:	
  4637  06A7  0871               	movf	??_Timer0_ISR+1,w
  4638  06A8  008A               	movwf	10
  4639  06A9  0E70               	swapf	??_Timer0_ISR^(0+4294967168),w
  4640  06AA  0083               	movwf	3
  4641  06AB  0EFE               	swapf	btemp,f
  4642  06AC  0E7E               	swapf	btemp,w
  4643  06AD  0009               	retfie
  4644  06AE                     __end_of_Timer0_ISR:	
  4645  007E                     btemp	set	126	;btemp
  4646  007E                     wtemp0	set	126
  4647                           
  4648                           	psect	intentry
  4649  0004                     __pintentry:	
  4650                           ;incstack = 0
  4651                           ; Regs used in _Timer0_ISR: [wreg+status,2]
  4652                           
  4653  0004                     interrupt_function:	
  4654  007E                     saved_w	set	btemp
  4655  0004  00FE               	movwf	btemp
  4656  0005  0E03               	swapf	3,w
  4657  0006  00F0               	movwf	??_Timer0_ISR
  4658  0007  080A               	movf	10,w
  4659  0008  00F1               	movwf	??_Timer0_ISR+1
  4660  0009  120A  118A  2E7A   	ljmp	_Timer0_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         64
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     41      77
    BANK1            80      0      60
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(1) Largest target is 16
		 -> fondo(BANK1[16]), ficha(BANK0[16]), 

    memset@p	PTR unsigned char  size(1) Largest target is 16
		 -> fondo(BANK1[16]), ficha(BANK0[16]), 

    sp__memset	PTR void  size(1) Largest target is 16
		 -> fondo(BANK1[16]), ficha(BANK0[16]), 

    updateScreen@screen	PTR unsigned int  size(1) Largest target is 16
		 -> pantalla(BANK1[16]), 


Critical Paths under _main in COMMON

    _main->___awmod
    _updateScreen->_setFilas
    _perdio->___awmod
    _drawFigure->_memset
    _checkColission->___awmod
    _checkBottom->___awmod
    _rand->___lmul

Critical Paths under _Timer0_ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_checkCount
    _updateScreen->_addToScreen
    _checkCount->_checkColission
    _perdio->___awmod
    _leerEntradas->_drawFigure
    _checkColission->___awmod
    _checkBottom->___awmod
    _rand->___lmul
    ___awmod->_rand

Critical Paths under _Timer0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer0_ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     5      4    8538
                                             32 BANK0      9     5      4
                            ___awmod
                         _checkCount
                         _init_pines
                         _init_timer
                               _rand
                              _srand
                       _updateScreen
 ---------------------------------------------------------------------------------
 (1) _updateScreen                                         7     7      0     590
                                              2 BANK0      7     7      0
                        _addToScreen
                           _setFilas
                    _shiftBitColumna
 ---------------------------------------------------------------------------------
 (2) _shiftBitColumna                                      2     2      0      22
                                              2 COMMON     2     2      0
                     _latchClock_Col
                     _latchClock_Fil
                     _shiftClock_Col
 ---------------------------------------------------------------------------------
 (3) _shiftClock_Col                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _latchClock_Fil                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _latchClock_Col                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setFilas                                            10     8      2     265
                                              2 COMMON    10     8      2
                     _shiftClock_Fil
 ---------------------------------------------------------------------------------
 (3) _shiftClock_Fil                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _addToScreen                                         11    11      0     113
                                              2 COMMON     9     9      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_pines                                           0     0      0       0
                     _init_pines_col
                     _init_pines_fil
                      _init_pines_in
 ---------------------------------------------------------------------------------
 (2) _init_pines_in                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_pines_fil                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_pines_col                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkCount                                           5     5      0    6700
                                             27 BANK0      5     5      0
                        _checkBottom
                     _checkColission
                         _drawFigure
                       _leerEntradas
                             _perdio
                         _sumaPuntos
 ---------------------------------------------------------------------------------
 (2) _sumaPuntos                                          12    12      0     138
                                              2 COMMON     8     8      0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _perdio                                               5     5      0    1868
                                             17 BANK0      5     5      0
                            ___awmod
                             _memset
                               _rand
 ---------------------------------------------------------------------------------
 (2) _leerEntradas                                        19    19      0    1450
                                              5 BANK0     19    19      0
                         _drawFigure
 ---------------------------------------------------------------------------------
 (3) _drawFigure                                           5     5      0     651
                                              0 BANK0      5     5      0
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               7     3      4     651
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) _checkColission                                      10    10      0    1330
                                             17 BANK0     10    10      0
                            ___awmod
                        _drawBground
                               _rand
 ---------------------------------------------------------------------------------
 (2) _checkBottom                                          1     1      0    1261
                                             17 BANK0      1     1      0
                            ___awmod
                        _drawBground
                               _rand
 ---------------------------------------------------------------------------------
 (1) _rand                                                 7     5      2     244
                                              4 BANK0      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     244
                                              2 COMMON     9     1      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _drawBground                                         11    11      0     113
                                              2 COMMON     9     9      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     904
                                             11 COMMON     1     1      0
                                             11 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Timer0_ISR                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awmod
     _rand (ARG)
       ___lmul
   _checkCount
     _checkBottom
       ___awmod
         _rand (ARG)
           ___lmul
       _drawBground
       _rand
         ___lmul
     _checkColission
       ___awmod
         _rand (ARG)
           ___lmul
       _drawBground
       _rand
         ___lmul
     _drawFigure
       _memset
     _leerEntradas
       _drawFigure
         _memset
     _perdio
       ___awmod
         _rand (ARG)
           ___lmul
       _memset
       _rand
         ___lmul
     _sumaPuntos
   _init_pines
     _init_pines_col
     _init_pines_fil
     _init_pines_in
   _init_timer
   _rand
     ___lmul
   _srand
   _updateScreen
     _addToScreen
     _setFilas
       _shiftClock_Fil
     _shiftBitColumna
       _latchClock_Col
       _latchClock_Fil
       _shiftClock_Col

 _Timer0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      3C       7       75.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     29      4D       5       96.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      95      12        0.0%
ABS                  0      0      95       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu May 14 13:41:25 2020

                       pc 0002               __CFG_CP$OFF 0000                        l21 07AC  
                      l30 0768                        l24 0783                        l27 0758  
                      l36 0776              drawBground@i 0020                        fsr 0004  
        ??_init_pines_col 0072          ??_init_pines_fil 0072                       l111 01E3  
                     l103 01FD                       l105 0194                       l141 05F7  
                     l133 07A0                       l222 02F7                       l119 04D8  
                     l151 079A                       l136 07A6                       l226 030C  
                     l219 06DA                       l148 07B1                       l191 0638  
                     l159 0732                       l248 0372                       l256 0489  
                     l186 03D5                       l508 0430                       l196 0679  
                     l356 0524                       l199 029A                       l790 06FA  
                     l795 078C                       l798 05B4              __CFG_CPD$OFF 0000  
                     u710 06FA                       u711 06F9                       u720 04E7  
                     u721 04E6                       u731 04F2                       u732 04F9  
                     u733 0500                       u805 0238                       u910 0405  
                     u814 0248                       u911 0404                       u815 0245  
                     u920 040F                       u760 051A                       u921 040E  
                     u905 03F7                       u761 0519                       u745 0502  
                     u825 025B                       u770 05AC                       u834 026B  
                     u755 050A                       u835 0268                       u940 0422  
                     u860 0679                       u941 0421                       u925 040B  
                     u861 0678                       u845 027E                       u950 0427  
                     u870 03DD                       u854 028E                       u951 0426  
                     u935 0416                       u871 03DC                       u775 05A7  
                     u855 028B                       u880 03E8                       u960 0051  
                     u881 03E7                       u865 0675                       u785 0214  
                     u961 0050                       u890 03F3                       u794 0225  
                     u891 03F2                       u795 0222                       u975 005D  
                     u984 0071                       u985 006F                       u994 0084  
                     u995 0082                       _con 0045                       fsr0 0004  
                     indf 0000              ___awmod@sign 0030              __CFG_FOSC$XT 0000  
            __CFG_LVP$OFF 0000                      l1400 03FD                      l1410 041C  
                    l1402 0401                      l1330 04D9                      l1322 06DC  
                    l1404 0405                      l1412 0422                      l1340 051A  
                    l1332 04E3                      l1324 06E1                      l1500 0150  
                    l1420 07A7                      l1414 0427                      l1406 040F  
                    l1334 04E7                      l1326 06E8                      l1510 0162  
                    l1430 004C                      l1422 0777                      l1416 042C  
                    l1408 0415                      l1336 0500                      l1344 056E  
                    l1328 06EC                      l1360 0277                      l1352 01FE  
                    l1512 016A                      l1440 0054                      l1504 0156  
                    l1432 004C                      l1424 0746                      l1370 0639  
                    l1338 0509                      l1346 058F                      l1354 020B  
                    l1530 01B0                      l1506 015B                      l1450 0095  
                    l1434 0051                      l1426 003E                      l1602 0461  
                    l1610 05B5                      l1362 079B                      l1380 066C  
                    l1348 059D                      l1356 0231                      l1540 01F8  
                    l1532 01B1                      l1516 018E                      l1508 0161  
                    l1452 00A2                      l1428 0044                      l1604 0467  
                    l1364 07A1                      l1620 05F0                      l1612 05B9  
                    l1700 037F                      l1390 03E4                      l1382 03D6  
                    l1550 06BA                      l1358 0254                      l1534 01B9  
                    l1518 019F                      l1526 01A6                      l1462 00BC  
                    l1454 00AA                      l1446 0058                      l1606 0474  
                    l1366 07AD                      l1630 072D                      l1710 03C0  
                    l1702 0387                      l1392 03E8                      l1384 03D9  
                    l1376 063F                      l1552 06C0                      l1560 02CB  
                    l1528 01AB                      l1480 00F3                      l1456 00B8  
                    l1448 008F                      l1608 047C                      l1640 0625  
                    l1632 05F8                      l1616 05C7                      l1368 0795  
                    l1624 0718                      l1712 03C8                      l1704 039D  
                    l1720 052F                      l1394 03ED                      l1386 03DD  
                    l1378 0666                      l1546 06AE                      l1562 02D0  
                    l1554 029B                      l1538 01DD                      l1482 00FB  
                    l1474 00D0                      l1466 00C7                      l1650 076D  
                    l1642 062B                      l1618 05EB                      l1626 0723  
                    l1706 03A4                      l1722 0532                      l1714 0525  
                    l1396 03F3                      l1388 03E2                      l1548 06B5  
                    l1564 02D6                      l1556 029B                      l1476 00E0  
                    l1468 00CE                      l1484 0108                      l1580 0344  
                    l1644 0759                      l1660 0774                      l1652 076E  
                    l1628 0728                      l1708 03BA                      l1724 0536  
                    l1716 052F                      l1398 03F6                      l1566 02F1  
                    l1558 02A5                      l1494 0123                      l1478 00E6  
                    l1486 0110                      l1582 035F                      l1574 0313  
                    l1670 0494                      l1662 0775                      l1654 076F  
                    l1646 0769                      l1638 05FE                      l1726 055F  
                    l1718 052F                      l1496 013D                      l1488 011F  
                    l1584 0365                      l1576 0324                      l1568 030D  
                    l1592 0437                      l1680 04BF                      l1672 0499  
                    l1656 0772                      l1648 076C                      l1664 0784  
                    l1728 0564                      l1498 0143                      l1578 033E  
                    l1586 0431                      l1682 04C4                      l1674 04AC  
                    l1666 048A                      l1658 0773                      l1690 0376  
                    l1684 04C9                      l1676 04B4                      l1668 0491  
                    l1692 0376                      l1598 043B                      l1686 04CE  
                    l1678 04B9                      l1694 037B                      l1688 04D3  
                    u1000 00A2                      u1001 00A1                      u1010 00B7  
                    u1011 00B6                      u1100 0161                      u1020 00C6  
                    u1101 0160                      u1021 00C5                      u1005 009E  
                    u1110 018D                      u1030 00CE                      u1111 018C  
                    u1031 00CD                      u1015 00B3                      u1120 019F  
                    u1040 00F3                      u1200 0324                      u1121 019E  
                    u1041 00F2                      u1201 0323                      u1130 01AB  
                    u1050 0108                      u1210 0372                      u1131 01AA  
                    u1051 0107                      u1211 0371                      u1140 01B0  
                    u1060 011F                      u1300 0491                      u1141 01AF  
                    u1125 019B                      u1061 011E                      u1045 00EF  
                    u1301 0490                      u1150 01DC                      u1230 0460  
                    u1310 04AC                      u1151 01DB                      u1055 0104  
                    u1215 036E                      u1231 045F                      u1311 04AB  
                    u1160 01F8                      u1080 0150                      u1240 0474  
                    u1224 0452                      u1320 0387                      u1161 01F7  
                    u1081 014F                      u1065 011B                      u1241 0473  
                    u1225 044F                      u1313 04A8                      u1321 0386  
                    u1170 06B5                      u1090 015B                      u1250 0489  
                    u1330 03D5                      u1171 06B4                      u1091 015A  
                    u1075 012E                      u1251 0488                      u1331 03D4  
                    u1180 02CB                      u1260 05C6                      u1181 02CA  
                    u1165 01F4                      u1085 014C                      u1245 0470  
                    u1261 05C5                      u1190 030C                      u1191 030B  
                    u1255 0485                      u1335 03D1                      u1265 05C2  
                    u1290 0638                      u1274 05D1                      u1195 0308  
                    u1291 0637                      u1275 05CE                      u1284 05DE  
                    u1285 05DB                      u1295 0634                      _TMR0 0001  
           ?_leerEntradas 0070              __CFG_WRT$OFF 0000                      _main 0525  
         ?_checkColission 0070                      _rand 056E                      btemp 007E  
           __CFG_BOREN$ON 0000                      start 000C        shiftBitColumna@bit 0073  
                   ?_main 0040                     ?_rand 0024             __CFG_WDTE$OFF 0000  
         __end_of___awmod 0431                     i1l128 06A7      __size_of_checkBottom 002D  
     ___lmul@multiplicand 0076                     _ficha 0055                     _fondo 00A0  
                   _randx 0065                     _srand 0784            ??_leerEntradas 0025  
                   pclath 000A                     status 0003                     wtemp0 007E  
         __initialization 000F              __end_of_main 056E              __end_of_rand 05B5  
          _latchClock_Fil 079B            _latchClock_Col 07AD   __size_of_shiftClock_Fil 0006  
 __size_of_shiftClock_Col 0006                    ??_main 0044                    ??_rand 0026  
                  ?_srand 0072                    i1l1730 067A                    i1l1740 0697  
                  i1l1732 067E                    i1l1750 06A1                    i1l1742 0699  
                  i1l1734 067F                    i1l1752 06A5                    i1l1744 069A  
                  i1l1736 068F                    i1l1746 069E                    i1l1738 0691  
                  i1l1748 069F                    u134_20 067E                    u134_21 067D  
                  u135_20 0697                    u135_21 0696                    u136_20 069E  
                  u136_21 069D                    u137_20 06A5                    u137_21 06A4  
          __CFG_PWRTE$OFF 0000      __size_of_drawBground 0041                _Timer0_ISR 067A  
  __end_of_latchClock_Col 07B2    __end_of_latchClock_Fil 07A1                    ___lmul 04D9  
               ??___awmod 007B                    _memset 06DB                    _perdio 030D  
         ___awmod@divisor 002B           ___awmod@counter 002F          __end_of_setFilas 05F8  
            addToScreen@i 0020    __size_of_init_pines_in 0006                    saved_w 007E  
                  srand@x 0072   __end_of__initialization 003A             updateScreen@i 0027  
__size_of_shiftBitColumna 001C        updateScreen@screen 0026           ?_latchClock_Col 0070  
         ?_latchClock_Fil 0070            __pcstackCOMMON 0070              __pidataBANK0 07B2  
            __pidataBANK1 06FB             __end_of_srand 078D      __end_of_leerEntradas 01FE  
          _OPTION_REGbits 0081         leerEntradas@F1195 004D          ??_checkColission 0031  
              _checkCount 048A                   ??_srand 0074                __pbssBANK0 0045  
              __pbssBANK1 00A0             ??_addToScreen 0072             _init_pines_in 07A7  
             ?_Timer0_ISR 0070           leerEntradas@aux 0030             leerEntradas@i 0036  
           leerEntradas@j 0034             leerEntradas@k 002D                __pmaintext 0525  
                 ?___lmul 0072                __pintentry 0004            _shiftClock_Fil 07A1  
          _shiftClock_Col 0795                   ?_memset 0072            ___lmul@product 0020  
                 ?_perdio 0070                _drawFigure 01FE            ?_init_pines_in 0070  
               ?_setFilas 0072    __end_of_shiftClock_Fil 07A7    __end_of_shiftClock_Col 079B  
     __end_of_addToScreen 0639           __size_of___lmul 004C                   ___awmod 03D6  
       ??_shiftBitColumna 0072             ??_checkBottom 0031                _init_pines 0759  
              _init_timer 0769           __size_of_memset 0020           __size_of_perdio 0066  
                 __ptext1 0373                   __ptext2 0717                   __ptext3 0795  
                 __ptext4 079B                   __ptext5 07AD                   __ptext6 05B5  
                 __ptext7 07A1                   __ptext8 05F8                   __ptext9 0784  
                 _figuras 00C0          ___awmod@dividend 002D       __size_of_Timer0_ISR 0034  
                 clrloop0 078E               ?_checkCount 0070      end_of_initialization 003A  
 __size_of_init_pines_col 0013   __size_of_init_pines_fil 000D                   memset@c 0072  
                 memset@n 0074                   memset@p 0077                   perdio@i 0034  
              ??_setFilas 0074     __size_of_leerEntradas 01C0           ?_shiftClock_Col 0070  
         ?_shiftClock_Fil 0070                _timerCount 0051                 _PORTBbits 0006  
               _PORTCbits 0007                 _PORTDbits 0008               ?_drawFigure 0070  
               _TRISBbits 0086       __end_of_checkBottom 06DB                 _TRISCbits 0087  
               _TRISDbits 0088           ??_init_pines_in 0072                _sumaPuntos 0431  
            _leerEntradas 003E             ??_drawBground 0072          ??_latchClock_Col 0072  
        ??_latchClock_Fil 0072               _addToScreen 05F8             ?_updateScreen 0070  
          __end_of___lmul 0525       __size_of_checkCount 004F               ?_init_pines 0070  
             ?_init_timer 0070            __end_of_memset 06FB            __end_of_perdio 0373  
     start_initialization 000F            ??_updateScreen 0022              ??_Timer0_ISR 0070  
     __size_of_drawFigure 009D       __end_of_drawBground 067A                  ??___lmul 007A  
       setFilas@reg_value 0072                init_fetch0 0733               __pdataBANK0 0065  
             __pdataBANK1 00C0                  ??_memset 0076                  ??_perdio 0031  
             sumaPuntos@i 0020               sumaPuntos@j 0022               _checkBottom 06AE  
               ___latbits 0002             __pcstackBANK0 0020        __end_of_Timer0_ISR 06AE  
          _init_pines_fil 0777            _init_pines_col 0746               ?_sumaPuntos 0070  
     __size_of_init_pines 0010           _shiftBitColumna 0717       __size_of_init_timer 000E  
        leerEntradas@mask 002F         __size_of_setFilas 0043                  ?___awmod 002B  
  __end_of_init_pines_col 0759    __end_of_init_pines_fil 0784              ??_checkCount 003B  
          __size_of_srand 0009         interrupt_function 0004               _drawBground 0639  
        ??_shiftClock_Col 0072          ??_shiftClock_Fil 0072                 clear_ram0 078D  
 __size_of_checkColission 0072        __end_of_checkCount 04D9       __size_of_sumaPuntos 0059  
            ??_drawFigure 0020      __end_of_updateScreen 03D6           ?_init_pines_col 0070  
         ?_init_pines_fil 0070   __end_of_shiftBitColumna 0733         ___lmul@multiplier 0072  
            ?_addToScreen 0070           checkColission@i 0039               checkCount@j 003E  
      __end_of_drawFigure 029B          __size_of___awmod 005B              ??_init_pines 0072  
            ??_init_timer 0072                 setFilas@i 007A                  __ptext10 0769  
                __ptext11 0759                  __ptext20 06DB                  __ptext12 07A7  
                __ptext21 029B                  __ptext13 0777                  __ptext22 06AE  
                __ptext14 0746                  __ptext23 056E                  __ptext15 048A  
                __ptext24 04D9                  __ptext16 0431                  __ptext25 0639  
                __ptext17 030D                  __ptext26 03D6                  __ptext18 003E  
                __ptext27 067A                  __ptext19 01FE     __end_of_init_pines_in 07AD  
           __size_of_main 0049             __size_of_rand 0047        __end_of_init_pines 0769  
      __end_of_init_timer 0777                  _pantalla 00B0                  _setFilas 05B5  
                main@argc 0040                  main@argv 0042              ?_checkBottom 0070  
              _INTCONbits 000B                  init_ram0 0737                  memset@p1 0078  
        ?_shiftBitColumna 0070              ??_sumaPuntos 0072                  intlevel1 0000  
          _checkColission 029B   __size_of_latchClock_Col 0005   __size_of_latchClock_Fil 0006  
   __size_of_updateScreen 0063        __end_of_sumaPuntos 048A    __end_of_checkColission 030D  
            ?_drawBground 0070      __size_of_addToScreen 0041              _updateScreen 0373  
