

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun May 03 16:15:07 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK3,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.10
    41                           ; Generated 31/07/2019 GMT
    42                           ; 
    43                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F877A Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  000E                     	;# 
    90  000F                     	;# 
    91  0010                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0015                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  001D                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  0081                     	;# 
   110  0085                     	;# 
   111  0086                     	;# 
   112  0087                     	;# 
   113  0088                     	;# 
   114  0089                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0094                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009C                     	;# 
   185  009D                     	;# 
   186  009E                     	;# 
   187  009F                     	;# 
   188  010C                     	;# 
   189  010D                     	;# 
   190  010E                     	;# 
   191  010F                     	;# 
   192  018C                     	;# 
   193  018D                     	;# 
   194  0000                     	;# 
   195  0001                     	;# 
   196  0002                     	;# 
   197  0003                     	;# 
   198  0004                     	;# 
   199  0005                     	;# 
   200  0006                     	;# 
   201  0007                     	;# 
   202  0008                     	;# 
   203  0009                     	;# 
   204  000A                     	;# 
   205  000B                     	;# 
   206  000C                     	;# 
   207  000D                     	;# 
   208  000E                     	;# 
   209  000E                     	;# 
   210  000F                     	;# 
   211  0010                     	;# 
   212  0011                     	;# 
   213  0012                     	;# 
   214  0013                     	;# 
   215  0014                     	;# 
   216  0015                     	;# 
   217  0015                     	;# 
   218  0016                     	;# 
   219  0017                     	;# 
   220  0018                     	;# 
   221  0019                     	;# 
   222  001A                     	;# 
   223  001B                     	;# 
   224  001B                     	;# 
   225  001C                     	;# 
   226  001D                     	;# 
   227  001E                     	;# 
   228  001F                     	;# 
   229  0081                     	;# 
   230  0085                     	;# 
   231  0086                     	;# 
   232  0087                     	;# 
   233  0088                     	;# 
   234  0089                     	;# 
   235  008C                     	;# 
   236  008D                     	;# 
   237  008E                     	;# 
   238  0091                     	;# 
   239  0092                     	;# 
   240  0093                     	;# 
   241  0094                     	;# 
   242  0098                     	;# 
   243  0099                     	;# 
   244  009C                     	;# 
   245  009D                     	;# 
   246  009E                     	;# 
   247  009F                     	;# 
   248  010C                     	;# 
   249  010D                     	;# 
   250  010E                     	;# 
   251  010F                     	;# 
   252  018C                     	;# 
   253  018D                     	;# 
   254  0000                     	;# 
   255  0001                     	;# 
   256  0002                     	;# 
   257  0003                     	;# 
   258  0004                     	;# 
   259  0005                     	;# 
   260  0006                     	;# 
   261  0007                     	;# 
   262  0008                     	;# 
   263  0009                     	;# 
   264  000A                     	;# 
   265  000B                     	;# 
   266  000C                     	;# 
   267  000D                     	;# 
   268  000E                     	;# 
   269  000E                     	;# 
   270  000F                     	;# 
   271  0010                     	;# 
   272  0011                     	;# 
   273  0012                     	;# 
   274  0013                     	;# 
   275  0014                     	;# 
   276  0015                     	;# 
   277  0015                     	;# 
   278  0016                     	;# 
   279  0017                     	;# 
   280  0018                     	;# 
   281  0019                     	;# 
   282  001A                     	;# 
   283  001B                     	;# 
   284  001B                     	;# 
   285  001C                     	;# 
   286  001D                     	;# 
   287  001E                     	;# 
   288  001F                     	;# 
   289  0081                     	;# 
   290  0085                     	;# 
   291  0086                     	;# 
   292  0087                     	;# 
   293  0088                     	;# 
   294  0089                     	;# 
   295  008C                     	;# 
   296  008D                     	;# 
   297  008E                     	;# 
   298  0091                     	;# 
   299  0092                     	;# 
   300  0093                     	;# 
   301  0094                     	;# 
   302  0098                     	;# 
   303  0099                     	;# 
   304  009C                     	;# 
   305  009D                     	;# 
   306  009E                     	;# 
   307  009F                     	;# 
   308  010C                     	;# 
   309  010D                     	;# 
   310  010E                     	;# 
   311  010F                     	;# 
   312  018C                     	;# 
   313  018D                     	;# 
   314  0000                     	;# 
   315  0001                     	;# 
   316  0002                     	;# 
   317  0003                     	;# 
   318  0004                     	;# 
   319  0005                     	;# 
   320  0006                     	;# 
   321  0007                     	;# 
   322  0008                     	;# 
   323  0009                     	;# 
   324  000A                     	;# 
   325  000B                     	;# 
   326  000C                     	;# 
   327  000D                     	;# 
   328  000E                     	;# 
   329  000E                     	;# 
   330  000F                     	;# 
   331  0010                     	;# 
   332  0011                     	;# 
   333  0012                     	;# 
   334  0013                     	;# 
   335  0014                     	;# 
   336  0015                     	;# 
   337  0015                     	;# 
   338  0016                     	;# 
   339  0017                     	;# 
   340  0018                     	;# 
   341  0019                     	;# 
   342  001A                     	;# 
   343  001B                     	;# 
   344  001B                     	;# 
   345  001C                     	;# 
   346  001D                     	;# 
   347  001E                     	;# 
   348  001F                     	;# 
   349  0081                     	;# 
   350  0085                     	;# 
   351  0086                     	;# 
   352  0087                     	;# 
   353  0088                     	;# 
   354  0089                     	;# 
   355  008C                     	;# 
   356  008D                     	;# 
   357  008E                     	;# 
   358  0091                     	;# 
   359  0092                     	;# 
   360  0093                     	;# 
   361  0094                     	;# 
   362  0098                     	;# 
   363  0099                     	;# 
   364  009C                     	;# 
   365  009D                     	;# 
   366  009E                     	;# 
   367  009F                     	;# 
   368  010C                     	;# 
   369  010D                     	;# 
   370  010E                     	;# 
   371  010F                     	;# 
   372  018C                     	;# 
   373  018D                     	;# 
   374  0000                     	;# 
   375  0001                     	;# 
   376  0002                     	;# 
   377  0003                     	;# 
   378  0004                     	;# 
   379  0005                     	;# 
   380  0006                     	;# 
   381  0007                     	;# 
   382  0008                     	;# 
   383  0009                     	;# 
   384  000A                     	;# 
   385  000B                     	;# 
   386  000C                     	;# 
   387  000D                     	;# 
   388  000E                     	;# 
   389  000E                     	;# 
   390  000F                     	;# 
   391  0010                     	;# 
   392  0011                     	;# 
   393  0012                     	;# 
   394  0013                     	;# 
   395  0014                     	;# 
   396  0015                     	;# 
   397  0015                     	;# 
   398  0016                     	;# 
   399  0017                     	;# 
   400  0018                     	;# 
   401  0019                     	;# 
   402  001A                     	;# 
   403  001B                     	;# 
   404  001B                     	;# 
   405  001C                     	;# 
   406  001D                     	;# 
   407  001E                     	;# 
   408  001F                     	;# 
   409  0081                     	;# 
   410  0085                     	;# 
   411  0086                     	;# 
   412  0087                     	;# 
   413  0088                     	;# 
   414  0089                     	;# 
   415  008C                     	;# 
   416  008D                     	;# 
   417  008E                     	;# 
   418  0091                     	;# 
   419  0092                     	;# 
   420  0093                     	;# 
   421  0094                     	;# 
   422  0098                     	;# 
   423  0099                     	;# 
   424  009C                     	;# 
   425  009D                     	;# 
   426  009E                     	;# 
   427  009F                     	;# 
   428  010C                     	;# 
   429  010D                     	;# 
   430  010E                     	;# 
   431  010F                     	;# 
   432  018C                     	;# 
   433  018D                     	;# 
   434  0000                     	;# 
   435  0001                     	;# 
   436  0002                     	;# 
   437  0003                     	;# 
   438  0004                     	;# 
   439  0005                     	;# 
   440  0006                     	;# 
   441  0007                     	;# 
   442  0008                     	;# 
   443  0009                     	;# 
   444  000A                     	;# 
   445  000B                     	;# 
   446  000C                     	;# 
   447  000D                     	;# 
   448  000E                     	;# 
   449  000E                     	;# 
   450  000F                     	;# 
   451  0010                     	;# 
   452  0011                     	;# 
   453  0012                     	;# 
   454  0013                     	;# 
   455  0014                     	;# 
   456  0015                     	;# 
   457  0015                     	;# 
   458  0016                     	;# 
   459  0017                     	;# 
   460  0018                     	;# 
   461  0019                     	;# 
   462  001A                     	;# 
   463  001B                     	;# 
   464  001B                     	;# 
   465  001C                     	;# 
   466  001D                     	;# 
   467  001E                     	;# 
   468  001F                     	;# 
   469  0081                     	;# 
   470  0085                     	;# 
   471  0086                     	;# 
   472  0087                     	;# 
   473  0088                     	;# 
   474  0089                     	;# 
   475  008C                     	;# 
   476  008D                     	;# 
   477  008E                     	;# 
   478  0091                     	;# 
   479  0092                     	;# 
   480  0093                     	;# 
   481  0094                     	;# 
   482  0098                     	;# 
   483  0099                     	;# 
   484  009C                     	;# 
   485  009D                     	;# 
   486  009E                     	;# 
   487  009F                     	;# 
   488  010C                     	;# 
   489  010D                     	;# 
   490  010E                     	;# 
   491  010F                     	;# 
   492  018C                     	;# 
   493  018D                     	;# 
   494                           
   495                           	psect	idataBANK0
   496  063E                     __pidataBANK0:	
   497                           
   498                           ;initializer for _randx
   499  063E  3401               	retlw	1
   500  063F  3400               	retlw	0
   501  0640  3400               	retlw	0
   502  0641  3400               	retlw	0
   503                           
   504                           	psect	idataBANK3
   505  050A                     __pidataBANK3:	
   506                           
   507                           ;initializer for _figuras
   508  050A  3402               	retlw	2
   509  050B  3400               	retlw	0
   510  050C  3402               	retlw	2
   511  050D  3400               	retlw	0
   512  050E  3403               	retlw	3
   513  050F  3400               	retlw	0
   514  0510  3400               	retlw	0
   515  0511  3400               	retlw	0
   516  0512  3403               	retlw	3
   517  0513  3400               	retlw	0
   518  0514  3402               	retlw	2
   519  0515  3400               	retlw	0
   520  0516  3402               	retlw	2
   521  0517  3400               	retlw	0
   522  0518  3400               	retlw	0
   523  0519  3400               	retlw	0
   524  051A  3401               	retlw	1
   525  051B  3400               	retlw	0
   526  051C  3403               	retlw	3
   527  051D  3400               	retlw	0
   528  051E  3402               	retlw	2
   529  051F  3400               	retlw	0
   530  0520  3400               	retlw	0
   531  0521  3400               	retlw	0
   532  0522  3402               	retlw	2
   533  0523  3400               	retlw	0
   534  0524  3403               	retlw	3
   535  0525  3400               	retlw	0
   536  0526  3401               	retlw	1
   537  0527  3400               	retlw	0
   538  0528  3400               	retlw	0
   539  0529  3400               	retlw	0
   540  052A  3401               	retlw	1
   541  052B  3400               	retlw	0
   542  052C  3401               	retlw	1
   543  052D  3400               	retlw	0
   544  052E  3401               	retlw	1
   545  052F  3400               	retlw	0
   546  0530  3401               	retlw	1
   547  0531  3400               	retlw	0
   548  0532  3403               	retlw	3
   549  0533  3400               	retlw	0
   550  0534  3403               	retlw	3
   551  0535  3400               	retlw	0
   552  0536  3400               	retlw	0
   553  0537  3400               	retlw	0
   554  0538  3400               	retlw	0
   555  0539  3400               	retlw	0
   556  053A  3401               	retlw	1
   557  053B  3400               	retlw	0
   558  053C  3403               	retlw	3
   559  053D  3400               	retlw	0
   560  053E  3401               	retlw	1
   561  053F  3400               	retlw	0
   562  0540  3400               	retlw	0
   563  0541  3400               	retlw	0
   564  0001                     _TMR0	set	1
   565  000B                     _INTCONbits	set	11
   566  0008                     _PORTDbits	set	8
   567  0007                     _PORTCbits	set	7
   568  0006                     _PORTBbits	set	6
   569  0081                     _OPTION_REGbits	set	129
   570  0088                     _TRISDbits	set	136
   571  0087                     _TRISCbits	set	135
   572  0086                     _TRISBbits	set	134
   573                           
   574                           ; #config settings
   575  0000                     
   576                           	psect	cinit
   577  000F                     start_initialization:	
   578  000F                     __initialization:	
   579                           
   580                           ; Initialize objects allocated to BANK3
   581  000F  1783               	bsf	3,7	;select IRP bank2
   582  0010  30C8               	movlw	low (__pdataBANK3+56)
   583  0011  00FD               	movwf	btemp+-1
   584  0012  3005               	movlw	high __pidataBANK3
   585  0013  00FE               	movwf	btemp
   586  0014  300A               	movlw	low __pidataBANK3
   587  0015  00FF               	movwf	btemp+1
   588  0016  3090               	movlw	low __pdataBANK3
   589  0017  0084               	movwf	4
   590  0018  120A  118A  25B6  120A  118A  	fcall	init_ram0
   591                           
   592                           ; Initialize objects allocated to BANK0
   593  001D  1383               	bcf	3,7	;select IRP bank0
   594  001E  3064               	movlw	low (__pdataBANK0+4)
   595  001F  00FD               	movwf	btemp+-1
   596  0020  3006               	movlw	high __pidataBANK0
   597  0021  00FE               	movwf	btemp
   598  0022  303E               	movlw	low __pidataBANK0
   599  0023  00FF               	movwf	btemp+1
   600  0024  3060               	movlw	low __pdataBANK0
   601  0025  0084               	movwf	4
   602  0026  120A  118A  25B6  120A  118A  	fcall	init_ram0
   603                           
   604                           ; Clear objects allocated to BANK1
   605  002B  30A0               	movlw	low __pbssBANK1
   606  002C  0084               	movwf	4
   607  002D  30C0               	movlw	low (__pbssBANK1+32)
   608  002E  120A  118A  2617  120A  118A  	fcall	clear_ram0
   609                           
   610                           ; Clear objects allocated to BANK0
   611  0033  3043               	movlw	low __pbssBANK0
   612  0034  0084               	movwf	4
   613  0035  3060               	movlw	low (__pbssBANK0+29)
   614  0036  120A  118A  2617  120A  118A  	fcall	clear_ram0
   615  003B                     end_of_initialization:	
   616                           ;End of C runtime variable initialization code
   617                           
   618  003B                     __end_of__initialization:	
   619  003B  0183               	clrf	3
   620  003C  120A  118A  2B9A   	ljmp	_main	;jump to C main() function
   621                           
   622                           	psect	bssBANK0
   623  0043                     __pbssBANK0:	
   624  0043                     _con:	
   625  0043                     	ds	9
   626  004C                     _timerCount:	
   627  004C                     	ds	4
   628  0050                     _fondo:	
   629  0050                     	ds	16
   630                           
   631                           	psect	dataBANK0
   632  0060                     __pdataBANK0:	
   633  0060                     _randx:	
   634  0060                     	ds	4
   635                           
   636                           	psect	bssBANK1
   637  00A0                     __pbssBANK1:	
   638  00A0                     _ficha:	
   639  00A0                     	ds	16
   640  00B0                     _pantalla:	
   641  00B0                     	ds	16
   642                           
   643                           	psect	dataBANK3
   644  0190                     __pdataBANK3:	
   645  0190                     _figuras:	
   646  0190                     	ds	56
   647                           
   648                           	psect	inittext
   649  05B2                     init_fetch0:	
   650                           ;	Called with low address in FSR and high address in W
   651                           
   652  05B2  087E               	movf	btemp,w
   653  05B3  008A               	movwf	10
   654  05B4  087F               	movf	btemp+1,w
   655  05B5  0082               	movwf	2
   656  05B6                     init_ram0:	
   657                           ;Called with:
   658                           ;	high address of idata address in btemp 
   659                           ;	low address of idata address in btemp+1 
   660                           ;	low address of data in FSR
   661                           ;	high address + 1 of data in btemp-1
   662                           
   663  05B6  120A  118A  25B2  120A  118A  	fcall	init_fetch0
   664  05BB  0080               	movwf	0
   665  05BC  0A84               	incf	4,f
   666  05BD  0804               	movf	4,w
   667  05BE  067D               	xorwf	btemp+-1,w
   668  05BF  1903               	btfsc	3,2
   669  05C0  3400               	retlw	0
   670  05C1  0AFF               	incf	btemp+1,f
   671  05C2  1903               	btfsc	3,2
   672  05C3  0AFE               	incf	btemp,f
   673  05C4  2DB6               	goto	init_ram0
   674                           
   675                           	psect	clrtext
   676  0617                     clear_ram0:	
   677                           ;	Called with FSR containing the base address, and
   678                           ;	W with the last address+1
   679                           
   680  0617  0064               	clrwdt	;clear the watchdog before getting into this loop
   681  0618                     clrloop0:	
   682  0618  0180               	clrf	0	;clear RAM location pointed to by FSR
   683  0619  0A84               	incf	4,f	;increment pointer
   684  061A  0604               	xorwf	4,w	;XOR with final address
   685  061B  1903               	btfsc	3,2	;have we reached the end yet?
   686  061C  3400               	retlw	0	;all done for this memory range, return
   687  061D  0604               	xorwf	4,w	;XOR again to restore value
   688  061E  2E18               	goto	clrloop0	;do the next byte
   689                           
   690                           	psect	cstackCOMMON
   691  0070                     __pcstackCOMMON:	
   692  0070                     ?_checkCount:	
   693  0070                     ?_updateScreen:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0070                     ?_drawFigure:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0070                     ?_init_pines_in:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0070                     ?_init_pines_fil:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0070                     ?_init_pines_col:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0070                     ?_init_pines:	
   709                           ; 1 bytes @ 0x0
   710                           
   711  0070                     ?_init_interrupt:	
   712                           ; 1 bytes @ 0x0
   713                           
   714  0070                     ?_init_timer:	
   715                           ; 1 bytes @ 0x0
   716                           
   717  0070                     ?_Timer0_ISR:	
   718                           ; 1 bytes @ 0x0
   719                           
   720  0070                     ??_Timer0_ISR:	
   721                           ; 1 bytes @ 0x0
   722                           
   723  0070                     ?_latchClock_Fil:	
   724                           ; 1 bytes @ 0x0
   725                           
   726  0070                     ?_shiftClock_Fil:	
   727                           ; 1 bytes @ 0x0
   728                           
   729  0070                     ?_latchClock_Col:	
   730                           ; 1 bytes @ 0x0
   731                           
   732  0070                     ?_shiftClock_Col:	
   733                           ; 1 bytes @ 0x0
   734                           
   735  0070                     ?_shiftBitColumna:	
   736                           ; 1 bytes @ 0x0
   737                           
   738                           
   739                           ; 1 bytes @ 0x0
   740  0070                     	ds	2
   741  0072                     ?_srand:	
   742  0072                     ?_memset:	
   743                           ; 1 bytes @ 0x2
   744                           
   745  0072                     ??_init_pines_in:	
   746                           ; 1 bytes @ 0x2
   747                           
   748  0072                     ??_init_pines_fil:	
   749                           ; 1 bytes @ 0x2
   750                           
   751  0072                     ??_init_pines_col:	
   752                           ; 1 bytes @ 0x2
   753                           
   754  0072                     ??_init_pines:	
   755                           ; 1 bytes @ 0x2
   756                           
   757  0072                     ??_init_interrupt:	
   758                           ; 1 bytes @ 0x2
   759                           
   760  0072                     ??_init_timer:	
   761                           ; 1 bytes @ 0x2
   762                           
   763  0072                     ??_latchClock_Fil:	
   764                           ; 1 bytes @ 0x2
   765                           
   766  0072                     ??_shiftClock_Fil:	
   767                           ; 1 bytes @ 0x2
   768                           
   769  0072                     ?_setFilas:	
   770                           ; 1 bytes @ 0x2
   771                           
   772  0072                     ??_latchClock_Col:	
   773                           ; 1 bytes @ 0x2
   774                           
   775  0072                     ??_shiftClock_Col:	
   776                           ; 1 bytes @ 0x2
   777                           
   778  0072                     ??_shiftBitColumna:	
   779                           ; 1 bytes @ 0x2
   780                           
   781  0072                     ?___lmul:	
   782                           ; 1 bytes @ 0x2
   783                           
   784  0072                     setFilas@reg_value:	
   785                           ; 4 bytes @ 0x2
   786                           
   787  0072                     memset@c:	
   788                           ; 2 bytes @ 0x2
   789                           
   790  0072                     srand@x:	
   791                           ; 2 bytes @ 0x2
   792                           
   793  0072                     ___lmul@multiplier:	
   794                           ; 2 bytes @ 0x2
   795                           
   796                           
   797                           ; 4 bytes @ 0x2
   798  0072                     	ds	1
   799  0073                     shiftBitColumna@bit:	
   800                           
   801                           ; 1 bytes @ 0x3
   802  0073                     	ds	1
   803  0074                     ??_srand:	
   804  0074                     ??_setFilas:	
   805                           ; 1 bytes @ 0x4
   806                           
   807  0074                     memset@n:	
   808                           ; 1 bytes @ 0x4
   809                           
   810                           
   811                           ; 2 bytes @ 0x4
   812  0074                     	ds	2
   813  0076                     ??_memset:	
   814  0076                     ___lmul@multiplicand:	
   815                           ; 1 bytes @ 0x6
   816                           
   817                           
   818                           ; 4 bytes @ 0x6
   819  0076                     	ds	1
   820  0077                     memset@p:	
   821                           
   822                           ; 1 bytes @ 0x7
   823  0077                     	ds	1
   824  0078                     memset@p1:	
   825                           
   826                           ; 1 bytes @ 0x8
   827  0078                     	ds	2
   828  007A                     ??___lmul:	
   829  007A                     setFilas@i:	
   830                           ; 1 bytes @ 0xA
   831                           
   832                           
   833                           ; 2 bytes @ 0xA
   834  007A                     	ds	1
   835  007B                     ??___awmod:	
   836                           
   837                           ; 1 bytes @ 0xB
   838  007B                     	ds	1
   839                           
   840                           	psect	cstackBANK0
   841  0020                     __pcstackBANK0:	
   842  0020                     ??_updateScreen:	
   843  0020                     ??_drawFigure:	
   844                           ; 1 bytes @ 0x0
   845                           
   846  0020                     ___lmul@product:	
   847                           ; 1 bytes @ 0x0
   848                           
   849                           
   850                           ; 4 bytes @ 0x0
   851  0020                     	ds	4
   852  0024                     ?_rand:	
   853  0024                     updateScreen@screen:	
   854                           ; 2 bytes @ 0x4
   855                           
   856                           
   857                           ; 1 bytes @ 0x4
   858  0024                     	ds	2
   859  0026                     ??_rand:	
   860                           
   861                           ; 1 bytes @ 0x6
   862  0026                     	ds	5
   863  002B                     ?___awmod:	
   864  002B                     ___awmod@divisor:	
   865                           ; 2 bytes @ 0xB
   866                           
   867                           
   868                           ; 2 bytes @ 0xB
   869  002B                     	ds	2
   870  002D                     ___awmod@dividend:	
   871                           
   872                           ; 2 bytes @ 0xD
   873  002D                     	ds	2
   874  002F                     ___awmod@counter:	
   875                           
   876                           ; 1 bytes @ 0xF
   877  002F                     	ds	1
   878  0030                     ___awmod@sign:	
   879                           
   880                           ; 1 bytes @ 0x10
   881  0030                     	ds	1
   882  0031                     ??_checkCount:	
   883                           
   884                           ; 1 bytes @ 0x11
   885  0031                     	ds	9
   886  003A                     checkCount@j:	
   887                           
   888                           ; 2 bytes @ 0x1A
   889  003A                     	ds	2
   890  003C                     checkCount@i:	
   891                           
   892                           ; 2 bytes @ 0x1C
   893  003C                     	ds	2
   894  003E                     ?_main:	
   895  003E                     main@argc:	
   896                           ; 2 bytes @ 0x1E
   897                           
   898                           
   899                           ; 2 bytes @ 0x1E
   900  003E                     	ds	2
   901  0040                     main@argv:	
   902                           
   903                           ; 2 bytes @ 0x20
   904  0040                     	ds	2
   905  0042                     ??_main:	
   906                           
   907                           ; 1 bytes @ 0x22
   908  0042                     	ds	1
   909                           
   910                           	psect	maintext
   911  039A                     __pmaintext:	
   912 ;;
   913 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   914 ;;
   915 ;; *************** function _main *****************
   916 ;; Defined at:
   917 ;;		line 41 in file "mainsource.c"
   918 ;; Parameters:    Size  Location     Type
   919 ;;  argc            2   30[BANK0 ] int 
   920 ;;  argv            2   32[BANK0 ] PTR PTR unsigned char 
   921 ;; Auto vars:     Size  Location     Type
   922 ;;  j               2    0        int 
   923 ;;  i               2    0        int 
   924 ;; Return value:  Size  Location     Type
   925 ;;                  2   30[BANK0 ] int 
   926 ;; Registers used:
   927 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   928 ;; Tracked objects:
   929 ;;		On entry : B00/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   933 ;;      Params:         0       4       0       0       0
   934 ;;      Locals:         0       4       0       0       0
   935 ;;      Temps:          0       1       0       0       0
   936 ;;      Totals:         0       9       0       0       0
   937 ;;Total ram usage:        9 bytes
   938 ;; Hardware stack levels required when called:    4
   939 ;; This function calls:
   940 ;;		___awmod
   941 ;;		_checkCount
   942 ;;		_init_interrupt
   943 ;;		_init_pines
   944 ;;		_init_timer
   945 ;;		_rand
   946 ;;		_srand
   947 ;;		_updateScreen
   948 ;; This function is called by:
   949 ;;		Startup code after reset
   950 ;; This function uses a non-reentrant model
   951 ;;
   952                           
   953                           
   954                           ;psect for function _main
   955  039A                     _main:	
   956  039A                     l1407:	
   957                           ;incstack = 0
   958                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   959                           
   960                           
   961                           ;mainsource.c: 45:     init_timer();
   962  039A  120A  118A  25E8  120A  118A  	fcall	_init_timer
   963                           
   964                           ;mainsource.c: 46:     init_pines();
   965  039F  120A  118A  25D8  120A  118A  	fcall	_init_pines
   966                           
   967                           ;mainsource.c: 47:     init_interrupt();
   968  03A4  120A  118A  261F  120A  118A  	fcall	_init_interrupt
   969  03A9                     l1409:	
   970  03A9                     l1411:	
   971  03A9                     l1413:	
   972                           
   973                           ;mainsource.c: 50:     con.columna = 1;
   974  03A9  1283               	bcf	3,5	;RP0=0, select bank0
   975  03AA  1303               	bcf	3,6	;RP1=0, select bank0
   976  03AB  01C3               	clrf	_con
   977  03AC  0AC3               	incf	_con,f
   978  03AD                     l1415:	
   979                           
   980                           ;mainsource.c: 51:     con.ficha_Vpos = 16;
   981  03AD  3010               	movlw	16
   982  03AE  00C2               	movwf	??_main
   983  03AF  0842               	movf	??_main,w
   984  03B0  00C6               	movwf	_con+3
   985  03B1                     l1417:	
   986                           
   987                           ;mainsource.c: 52:     con.ficha_Hpos = 2;
   988  03B1  3002               	movlw	2
   989  03B2  00C2               	movwf	??_main
   990  03B3  0842               	movf	??_main,w
   991  03B4  00C7               	movwf	_con+4
   992  03B5                     l1419:	
   993                           
   994                           ;mainsource.c: 53:     srand(1);
   995  03B5  3001               	movlw	1
   996  03B6  00F2               	movwf	srand@x
   997  03B7  3000               	movlw	0
   998  03B8  00F3               	movwf	srand@x+1
   999  03B9  120A  118A  260E  120A  118A  	fcall	_srand
  1000  03BE                     l1421:	
  1001                           
  1002                           ;mainsource.c: 54:     con.ficha_actual = rand() % 7;
  1003  03BE  3007               	movlw	7
  1004  03BF  1283               	bcf	3,5	;RP0=0, select bank0
  1005  03C0  1303               	bcf	3,6	;RP1=0, select bank0
  1006  03C1  00AB               	movwf	___awmod@divisor
  1007  03C2  3000               	movlw	0
  1008  03C3  00AC               	movwf	___awmod@divisor+1
  1009  03C4  120A  118A  2480  120A  118A  	fcall	_rand
  1010  03C9  1283               	bcf	3,5	;RP0=0, select bank0
  1011  03CA  1303               	bcf	3,6	;RP1=0, select bank0
  1012  03CB  0825               	movf	?_rand+1,w
  1013  03CC  00AE               	movwf	___awmod@dividend+1
  1014  03CD  0824               	movf	?_rand,w
  1015  03CE  00AD               	movwf	___awmod@dividend
  1016  03CF  120A  118A  233F  120A  118A  	fcall	___awmod
  1017  03D4  1283               	bcf	3,5	;RP0=0, select bank0
  1018  03D5  1303               	bcf	3,6	;RP1=0, select bank0
  1019  03D6  082B               	movf	?___awmod,w
  1020  03D7  00C2               	movwf	??_main
  1021  03D8  0842               	movf	??_main,w
  1022  03D9  00C8               	movwf	_con+5
  1023  03DA                     l1423:	
  1024                           
  1025                           ;mainsource.c: 59:         checkCount();
  1026  03DA  120A  118A  203F  120A  118A  	fcall	_checkCount
  1027  03DF                     l1425:	
  1028                           
  1029                           ;mainsource.c: 61:         updateScreen(pantalla);
  1030  03DF  30B0               	movlw	(low (_pantalla| 0))& (0+255)
  1031  03E0  120A  118A  2435  120A  118A  	fcall	_updateScreen
  1032  03E5  2BDA               	goto	l1423
  1033  03E6  120A  118A  280C   	ljmp	start
  1034  03E9                     __end_of_main:	
  1035                           
  1036                           	psect	text1
  1037  0435                     __ptext1:	
  1038 ;; *************** function _updateScreen *****************
  1039 ;; Defined at:
  1040 ;;		line 12 in file "screen.c"
  1041 ;; Parameters:    Size  Location     Type
  1042 ;;  screen          1    wreg     PTR unsigned int 
  1043 ;;		 -> pantalla(16), 
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;  screen          1    4[BANK0 ] PTR unsigned int 
  1046 ;;		 -> pantalla(16), 
  1047 ;; Return value:  Size  Location     Type
  1048 ;;                  1    wreg      void 
  1049 ;; Registers used:
  1050 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1051 ;; Tracked objects:
  1052 ;;		On entry : 0/0
  1053 ;;		On exit  : 0/0
  1054 ;;		Unchanged: 0/0
  1055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1056 ;;      Params:         0       0       0       0       0
  1057 ;;      Locals:         0       1       0       0       0
  1058 ;;      Temps:          0       4       0       0       0
  1059 ;;      Totals:         0       5       0       0       0
  1060 ;;Total ram usage:        5 bytes
  1061 ;; Hardware stack levels used:    1
  1062 ;; Hardware stack levels required when called:    3
  1063 ;; This function calls:
  1064 ;;		_setFilas
  1065 ;;		_shiftBitColumna
  1066 ;; This function is called by:
  1067 ;;		_main
  1068 ;; This function uses a non-reentrant model
  1069 ;;
  1070                           
  1071                           
  1072                           ;psect for function _updateScreen
  1073  0435                     _updateScreen:	
  1074                           
  1075                           ;incstack = 0
  1076                           ; Regs used in _updateScreen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1077                           ;updateScreen@screen stored from wreg
  1078  0435  1283               	bcf	3,5	;RP0=0, select bank0
  1079  0436  1303               	bcf	3,6	;RP1=0, select bank0
  1080  0437  00A4               	movwf	updateScreen@screen
  1081  0438                     l1393:	
  1082                           
  1083                           ;screen.c: 13:     if(con.columna == 9){
  1084  0438  3009               	movlw	9
  1085  0439  0643               	xorwf	_con,w
  1086  043A  1D03               	btfss	3,2
  1087  043B  2C3D               	goto	u991
  1088  043C  2C3E               	goto	u990
  1089  043D                     u991:	
  1090  043D  2C5E               	goto	l1401
  1091  043E                     u990:	
  1092  043E                     l1395:	
  1093                           
  1094                           ;screen.c: 14:         con.columna = 1;
  1095  043E  01C3               	clrf	_con
  1096  043F  0AC3               	incf	_con,f
  1097  0440                     l1397:	
  1098                           
  1099                           ;screen.c: 15:         setFilas(~screen[con.columna-1]);
  1100  0440  0843               	movf	_con,w
  1101  0441  00A0               	movwf	??_updateScreen
  1102  0442  0720               	addwf	??_updateScreen,w
  1103  0443  0724               	addwf	updateScreen@screen,w
  1104  0444  00A1               	movwf	??_updateScreen+1
  1105  0445  0821               	movf	??_updateScreen+1,w
  1106  0446  3EFE               	addlw	-2
  1107  0447  0084               	movwf	4
  1108  0448  1383               	bcf	3,7	;select IRP bank0
  1109  0449  0800               	movf	0,w
  1110  044A  00A2               	movwf	??_updateScreen+2
  1111  044B  0A84               	incf	4,f
  1112  044C  0800               	movf	0,w
  1113  044D  00A3               	movwf	??_updateScreen+3
  1114  044E  0922               	comf	??_updateScreen+2,w
  1115  044F  00F2               	movwf	setFilas@reg_value
  1116  0450  0923               	comf	??_updateScreen+3,w
  1117  0451  00F3               	movwf	setFilas@reg_value+1
  1118  0452  120A  118A  24C7  120A  118A  	fcall	_setFilas
  1119  0457                     l1399:	
  1120                           
  1121                           ;screen.c: 16:         shiftBitColumna(1);
  1122  0457  3001               	movlw	1
  1123  0458  120A  118A  2596  120A  118A  	fcall	_shiftBitColumna
  1124                           
  1125                           ;screen.c: 17:     }
  1126  045D  2C7F               	goto	l166
  1127  045E                     l1401:	
  1128                           
  1129                           ;screen.c: 19:         con.columna++;
  1130  045E  3001               	movlw	1
  1131  045F  00A0               	movwf	??_updateScreen
  1132  0460  0820               	movf	??_updateScreen,w
  1133  0461  07C3               	addwf	_con,f
  1134  0462                     l1403:	
  1135                           
  1136                           ;screen.c: 20:         setFilas(~screen[con.columna-1]);
  1137  0462  0843               	movf	_con,w
  1138  0463  00A0               	movwf	??_updateScreen
  1139  0464  0720               	addwf	??_updateScreen,w
  1140  0465  0724               	addwf	updateScreen@screen,w
  1141  0466  00A1               	movwf	??_updateScreen+1
  1142  0467  0821               	movf	??_updateScreen+1,w
  1143  0468  3EFE               	addlw	-2
  1144  0469  0084               	movwf	4
  1145  046A  1383               	bcf	3,7	;select IRP bank0
  1146  046B  0800               	movf	0,w
  1147  046C  00A2               	movwf	??_updateScreen+2
  1148  046D  0A84               	incf	4,f
  1149  046E  0800               	movf	0,w
  1150  046F  00A3               	movwf	??_updateScreen+3
  1151  0470  0922               	comf	??_updateScreen+2,w
  1152  0471  00F2               	movwf	setFilas@reg_value
  1153  0472  0923               	comf	??_updateScreen+3,w
  1154  0473  00F3               	movwf	setFilas@reg_value+1
  1155  0474  120A  118A  24C7  120A  118A  	fcall	_setFilas
  1156  0479                     l1405:	
  1157                           
  1158                           ;screen.c: 21:         shiftBitColumna(0);
  1159  0479  3000               	movlw	0
  1160  047A  120A  118A  2596  120A  118A  	fcall	_shiftBitColumna
  1161  047F                     l166:	
  1162  047F  0008               	return
  1163  0480                     __end_of_updateScreen:	
  1164                           
  1165                           	psect	text2
  1166  0596                     __ptext2:	
  1167 ;; *************** function _shiftBitColumna *****************
  1168 ;; Defined at:
  1169 ;;		line 32 in file "columnas.c"
  1170 ;; Parameters:    Size  Location     Type
  1171 ;;  bit             1    wreg     unsigned char 
  1172 ;; Auto vars:     Size  Location     Type
  1173 ;;  bit             1    3[COMMON] unsigned char 
  1174 ;; Return value:  Size  Location     Type
  1175 ;;                  1    wreg      void 
  1176 ;; Registers used:
  1177 ;;		wreg, status,2, status,0, pclath, cstack
  1178 ;; Tracked objects:
  1179 ;;		On entry : 0/0
  1180 ;;		On exit  : 0/0
  1181 ;;		Unchanged: 0/0
  1182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1183 ;;      Params:         0       0       0       0       0
  1184 ;;      Locals:         1       0       0       0       0
  1185 ;;      Temps:          1       0       0       0       0
  1186 ;;      Totals:         2       0       0       0       0
  1187 ;;Total ram usage:        2 bytes
  1188 ;; Hardware stack levels used:    1
  1189 ;; Hardware stack levels required when called:    2
  1190 ;; This function calls:
  1191 ;;		_latchClock_Col
  1192 ;;		_latchClock_Fil
  1193 ;;		_shiftClock_Col
  1194 ;; This function is called by:
  1195 ;;		_updateScreen
  1196 ;; This function uses a non-reentrant model
  1197 ;;
  1198                           
  1199                           
  1200                           ;psect for function _shiftBitColumna
  1201  0596                     _shiftBitColumna:	
  1202                           
  1203                           ;incstack = 0
  1204                           ; Regs used in _shiftBitColumna: [wreg+status,2+status,0+pclath+cstack]
  1205                           ;shiftBitColumna@bit stored from wreg
  1206  0596  00F3               	movwf	shiftBitColumna@bit
  1207  0597                     l1213:	
  1208                           
  1209                           ;columnas.c: 33:     PORTDbits.RD4= bit & 0x01;
  1210  0597  0873               	movf	shiftBitColumna@bit,w
  1211  0598  3901               	andlw	1
  1212  0599  00F2               	movwf	??_shiftBitColumna
  1213  059A  0EF2               	swapf	??_shiftBitColumna,f
  1214  059B  1283               	bcf	3,5	;RP0=0, select bank0
  1215  059C  1303               	bcf	3,6	;RP1=0, select bank0
  1216  059D  0808               	movf	8,w	;volatile
  1217  059E  0672               	xorwf	??_shiftBitColumna,w
  1218  059F  39EF               	andlw	-17
  1219  05A0  0672               	xorwf	??_shiftBitColumna,w
  1220  05A1  0088               	movwf	8	;volatile
  1221  05A2                     l1215:	
  1222                           
  1223                           ;columnas.c: 34:     shiftClock_Col();
  1224  05A2  120A  118A  2627  120A  118A  	fcall	_shiftClock_Col
  1225  05A7                     l1217:	
  1226                           
  1227                           ;columnas.c: 35:     latchClock_Col();
  1228  05A7  120A  118A  2639  120A  118A  	fcall	_latchClock_Col
  1229  05AC                     l1219:	
  1230                           
  1231                           ;columnas.c: 36:     latchClock_Fil();
  1232  05AC  120A  118A  262D  120A  118A  	fcall	_latchClock_Fil
  1233  05B1                     l143:	
  1234  05B1  0008               	return
  1235  05B2                     __end_of_shiftBitColumna:	
  1236                           
  1237                           	psect	text3
  1238  0627                     __ptext3:	
  1239 ;; *************** function _shiftClock_Col *****************
  1240 ;; Defined at:
  1241 ;;		line 12 in file "columnas.c"
  1242 ;; Parameters:    Size  Location     Type
  1243 ;;		None
  1244 ;; Auto vars:     Size  Location     Type
  1245 ;;		None
  1246 ;; Return value:  Size  Location     Type
  1247 ;;                  1    wreg      void 
  1248 ;; Registers used:
  1249 ;;		None
  1250 ;; Tracked objects:
  1251 ;;		On entry : 0/0
  1252 ;;		On exit  : 0/0
  1253 ;;		Unchanged: 0/0
  1254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1255 ;;      Params:         0       0       0       0       0
  1256 ;;      Locals:         0       0       0       0       0
  1257 ;;      Temps:          0       0       0       0       0
  1258 ;;      Totals:         0       0       0       0       0
  1259 ;;Total ram usage:        0 bytes
  1260 ;; Hardware stack levels used:    1
  1261 ;; Hardware stack levels required when called:    1
  1262 ;; This function calls:
  1263 ;;		Nothing
  1264 ;; This function is called by:
  1265 ;;		_shiftBitColumna
  1266 ;;		_setColumnas
  1267 ;; This function uses a non-reentrant model
  1268 ;;
  1269                           
  1270                           
  1271                           ;psect for function _shiftClock_Col
  1272  0627                     _shiftClock_Col:	
  1273  0627                     l1143:	
  1274                           ;incstack = 0
  1275                           ; Regs used in _shiftClock_Col: []
  1276                           
  1277                           
  1278                           ;columnas.c: 13:     PORTDbits.RD7 = 0;
  1279  0627  1283               	bcf	3,5	;RP0=0, select bank0
  1280  0628  1303               	bcf	3,6	;RP1=0, select bank0
  1281  0629  1388               	bcf	8,7	;volatile
  1282                           
  1283                           ;columnas.c: 14:     PORTDbits.RD7 = 1;
  1284  062A  1788               	bsf	8,7	;volatile
  1285                           
  1286                           ;columnas.c: 15:     PORTDbits.RD7 = 0;
  1287  062B  1388               	bcf	8,7	;volatile
  1288  062C                     l135:	
  1289  062C  0008               	return
  1290  062D                     __end_of_shiftClock_Col:	
  1291                           
  1292                           	psect	text4
  1293  062D                     __ptext4:	
  1294 ;; *************** function _latchClock_Fil *****************
  1295 ;; Defined at:
  1296 ;;		line 7 in file "filas.c"
  1297 ;; Parameters:    Size  Location     Type
  1298 ;;		None
  1299 ;; Auto vars:     Size  Location     Type
  1300 ;;		None
  1301 ;; Return value:  Size  Location     Type
  1302 ;;                  1    wreg      void 
  1303 ;; Registers used:
  1304 ;;		None
  1305 ;; Tracked objects:
  1306 ;;		On entry : 0/0
  1307 ;;		On exit  : 0/0
  1308 ;;		Unchanged: 0/0
  1309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1310 ;;      Params:         0       0       0       0       0
  1311 ;;      Locals:         0       0       0       0       0
  1312 ;;      Temps:          0       0       0       0       0
  1313 ;;      Totals:         0       0       0       0       0
  1314 ;;Total ram usage:        0 bytes
  1315 ;; Hardware stack levels used:    1
  1316 ;; Hardware stack levels required when called:    1
  1317 ;; This function calls:
  1318 ;;		Nothing
  1319 ;; This function is called by:
  1320 ;;		_shiftBitColumna
  1321 ;; This function uses a non-reentrant model
  1322 ;;
  1323                           
  1324                           
  1325                           ;psect for function _latchClock_Fil
  1326  062D                     _latchClock_Fil:	
  1327  062D                     l1137:	
  1328                           ;incstack = 0
  1329                           ; Regs used in _latchClock_Fil: []
  1330                           
  1331                           
  1332                           ;filas.c: 8:     PORTCbits.RC6 = 0;
  1333  062D  1283               	bcf	3,5	;RP0=0, select bank0
  1334  062E  1303               	bcf	3,6	;RP1=0, select bank0
  1335  062F  1307               	bcf	7,6	;volatile
  1336                           
  1337                           ;filas.c: 9:     PORTCbits.RC6 = 1;
  1338  0630  1707               	bsf	7,6	;volatile
  1339                           
  1340                           ;filas.c: 10:     PORTCbits.RC6 = 0;
  1341  0631  1307               	bcf	7,6	;volatile
  1342  0632                     l117:	
  1343  0632  0008               	return
  1344  0633                     __end_of_latchClock_Fil:	
  1345                           
  1346                           	psect	text5
  1347  0639                     __ptext5:	
  1348 ;; *************** function _latchClock_Col *****************
  1349 ;; Defined at:
  1350 ;;		line 7 in file "columnas.c"
  1351 ;; Parameters:    Size  Location     Type
  1352 ;;		None
  1353 ;; Auto vars:     Size  Location     Type
  1354 ;;		None
  1355 ;; Return value:  Size  Location     Type
  1356 ;;                  1    wreg      void 
  1357 ;; Registers used:
  1358 ;;		None
  1359 ;; Tracked objects:
  1360 ;;		On entry : 0/0
  1361 ;;		On exit  : 0/0
  1362 ;;		Unchanged: 0/0
  1363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1364 ;;      Params:         0       0       0       0       0
  1365 ;;      Locals:         0       0       0       0       0
  1366 ;;      Temps:          0       0       0       0       0
  1367 ;;      Totals:         0       0       0       0       0
  1368 ;;Total ram usage:        0 bytes
  1369 ;; Hardware stack levels used:    1
  1370 ;; Hardware stack levels required when called:    1
  1371 ;; This function calls:
  1372 ;;		Nothing
  1373 ;; This function is called by:
  1374 ;;		_shiftBitColumna
  1375 ;;		_setColumnas
  1376 ;; This function uses a non-reentrant model
  1377 ;;
  1378                           
  1379                           
  1380                           ;psect for function _latchClock_Col
  1381  0639                     _latchClock_Col:	
  1382  0639                     l1141:	
  1383                           ;incstack = 0
  1384                           ; Regs used in _latchClock_Col: []
  1385                           
  1386                           
  1387                           ;columnas.c: 8:     PORTDbits.RD6 = 1;
  1388  0639  1283               	bcf	3,5	;RP0=0, select bank0
  1389  063A  1303               	bcf	3,6	;RP1=0, select bank0
  1390  063B  1708               	bsf	8,6	;volatile
  1391                           
  1392                           ;columnas.c: 9:     PORTDbits.RD6 = 0;
  1393  063C  1308               	bcf	8,6	;volatile
  1394  063D                     l132:	
  1395  063D  0008               	return
  1396  063E                     __end_of_latchClock_Col:	
  1397                           
  1398                           	psect	text6
  1399  04C7                     __ptext6:	
  1400 ;; *************** function _setFilas *****************
  1401 ;; Defined at:
  1402 ;;		line 19 in file "filas.c"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;  reg_value       2    2[COMMON] unsigned int 
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;  i               2   10[COMMON] int 
  1407 ;; Return value:  Size  Location     Type
  1408 ;;                  1    wreg      void 
  1409 ;; Registers used:
  1410 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1411 ;; Tracked objects:
  1412 ;;		On entry : 0/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1416 ;;      Params:         2       0       0       0       0
  1417 ;;      Locals:         2       0       0       0       0
  1418 ;;      Temps:          6       0       0       0       0
  1419 ;;      Totals:        10       0       0       0       0
  1420 ;;Total ram usage:       10 bytes
  1421 ;; Hardware stack levels used:    1
  1422 ;; Hardware stack levels required when called:    2
  1423 ;; This function calls:
  1424 ;;		_shiftClock_Fil
  1425 ;; This function is called by:
  1426 ;;		_updateScreen
  1427 ;; This function uses a non-reentrant model
  1428 ;;
  1429                           
  1430                           
  1431                           ;psect for function _setFilas
  1432  04C7                     _setFilas:	
  1433  04C7                     l1199:	
  1434                           ;incstack = 0
  1435                           ; Regs used in _setFilas: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1436                           
  1437                           
  1438                           ;filas.c: 20:     int i = 0;
  1439  04C7  01FA               	clrf	setFilas@i
  1440  04C8  01FB               	clrf	setFilas@i+1
  1441                           
  1442                           ;filas.c: 21:     for(i=0;i<16;i++){
  1443  04C9  01FA               	clrf	setFilas@i
  1444  04CA  01FB               	clrf	setFilas@i+1
  1445  04CB                     l1201:	
  1446  04CB  087B               	movf	setFilas@i+1,w
  1447  04CC  3A80               	xorlw	128
  1448  04CD  00FF               	movwf	btemp+1
  1449  04CE  3080               	movlw	128
  1450  04CF  027F               	subwf	btemp+1,w
  1451  04D0  1D03               	skipz
  1452  04D1  2CD4               	goto	u735
  1453  04D2  3010               	movlw	16
  1454  04D3  027A               	subwf	setFilas@i,w
  1455  04D4                     u735:	
  1456  04D4  1C03               	skipc
  1457  04D5  2CD7               	goto	u731
  1458  04D6  2CD8               	goto	u730
  1459  04D7                     u731:	
  1460  04D7  2CD9               	goto	l1205
  1461  04D8                     u730:	
  1462  04D8  2D09               	goto	l125
  1463  04D9                     l1205:	
  1464                           
  1465                           ;filas.c: 22:         PORTCbits.RC4 = (reg_value & (1<<i) )>>i;
  1466  04D9  0A7A               	incf	setFilas@i,w
  1467  04DA  00F4               	movwf	??_setFilas
  1468  04DB  3001               	movlw	1
  1469  04DC  00F5               	movwf	??_setFilas+1
  1470  04DD  3000               	movlw	0
  1471  04DE  00F6               	movwf	??_setFilas+2
  1472  04DF  2CE3               	goto	u744
  1473  04E0                     u745:	
  1474  04E0  1003               	clrc
  1475  04E1  0DF5               	rlf	??_setFilas+1,f
  1476  04E2  0DF6               	rlf	??_setFilas+2,f
  1477  04E3                     u744:	
  1478  04E3  0BF4               	decfsz	??_setFilas,f
  1479  04E4  2CE0               	goto	u745
  1480  04E5  0872               	movf	setFilas@reg_value,w
  1481  04E6  0575               	andwf	??_setFilas+1,w
  1482  04E7  00F7               	movwf	??_setFilas+3
  1483  04E8  0873               	movf	setFilas@reg_value+1,w
  1484  04E9  0576               	andwf	??_setFilas+2,w
  1485  04EA  00F8               	movwf	??_setFilas+4
  1486  04EB  0A7A               	incf	setFilas@i,w
  1487  04EC  2CF0               	goto	u754
  1488  04ED                     u755:	
  1489  04ED  1003               	clrc
  1490  04EE  0CF8               	rrf	??_setFilas+4,f
  1491  04EF  0CF7               	rrf	??_setFilas+3,f
  1492  04F0                     u754:	
  1493  04F0  3EFF               	addlw	-1
  1494  04F1  1D03               	skipz
  1495  04F2  2CED               	goto	u755
  1496  04F3  0877               	movf	??_setFilas+3,w
  1497  04F4  00F9               	movwf	??_setFilas+5
  1498  04F5  0EF9               	swapf	??_setFilas+5,f
  1499  04F6  1283               	bcf	3,5	;RP0=0, select bank0
  1500  04F7  1303               	bcf	3,6	;RP1=0, select bank0
  1501  04F8  0807               	movf	7,w	;volatile
  1502  04F9  0679               	xorwf	??_setFilas+5,w
  1503  04FA  39EF               	andlw	-17
  1504  04FB  0679               	xorwf	??_setFilas+5,w
  1505  04FC  0087               	movwf	7	;volatile
  1506  04FD                     l1207:	
  1507                           
  1508                           ;filas.c: 23:         shiftClock_Fil();
  1509  04FD  120A  118A  2633  120A  118A  	fcall	_shiftClock_Fil
  1510  0502                     l1209:	
  1511                           
  1512                           ;filas.c: 24:     }
  1513  0502  3001               	movlw	1
  1514  0503  07FA               	addwf	setFilas@i,f
  1515  0504  1803               	skipnc
  1516  0505  0AFB               	incf	setFilas@i+1,f
  1517  0506  3000               	movlw	0
  1518  0507  07FB               	addwf	setFilas@i+1,f
  1519  0508  2CCB               	goto	l1201
  1520  0509                     l125:	
  1521  0509  0008               	return
  1522  050A                     __end_of_setFilas:	
  1523                           
  1524                           	psect	text7
  1525  0633                     __ptext7:	
  1526 ;; *************** function _shiftClock_Fil *****************
  1527 ;; Defined at:
  1528 ;;		line 13 in file "filas.c"
  1529 ;; Parameters:    Size  Location     Type
  1530 ;;		None
  1531 ;; Auto vars:     Size  Location     Type
  1532 ;;		None
  1533 ;; Return value:  Size  Location     Type
  1534 ;;                  1    wreg      void 
  1535 ;; Registers used:
  1536 ;;		None
  1537 ;; Tracked objects:
  1538 ;;		On entry : 0/0
  1539 ;;		On exit  : 0/0
  1540 ;;		Unchanged: 0/0
  1541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1542 ;;      Params:         0       0       0       0       0
  1543 ;;      Locals:         0       0       0       0       0
  1544 ;;      Temps:          0       0       0       0       0
  1545 ;;      Totals:         0       0       0       0       0
  1546 ;;Total ram usage:        0 bytes
  1547 ;; Hardware stack levels used:    1
  1548 ;; Hardware stack levels required when called:    1
  1549 ;; This function calls:
  1550 ;;		Nothing
  1551 ;; This function is called by:
  1552 ;;		_setFilas
  1553 ;; This function uses a non-reentrant model
  1554 ;;
  1555                           
  1556                           
  1557                           ;psect for function _shiftClock_Fil
  1558  0633                     _shiftClock_Fil:	
  1559  0633                     l1139:	
  1560                           ;incstack = 0
  1561                           ; Regs used in _shiftClock_Fil: []
  1562                           
  1563                           
  1564                           ;filas.c: 14:     PORTCbits.RC7 = 0;
  1565  0633  1283               	bcf	3,5	;RP0=0, select bank0
  1566  0634  1303               	bcf	3,6	;RP1=0, select bank0
  1567  0635  1387               	bcf	7,7	;volatile
  1568                           
  1569                           ;filas.c: 15:     PORTCbits.RC7 = 1;
  1570  0636  1787               	bsf	7,7	;volatile
  1571                           
  1572                           ;filas.c: 16:     PORTCbits.RC7 = 0;
  1573  0637  1387               	bcf	7,7	;volatile
  1574  0638                     l120:	
  1575  0638  0008               	return
  1576  0639                     __end_of_shiftClock_Fil:	
  1577                           
  1578                           	psect	text8
  1579  060E                     __ptext8:	
  1580 ;; *************** function _srand *****************
  1581 ;; Defined at:
  1582 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  1583 ;; Parameters:    Size  Location     Type
  1584 ;;  x               2    2[COMMON] unsigned int 
  1585 ;; Auto vars:     Size  Location     Type
  1586 ;;		None
  1587 ;; Return value:  Size  Location     Type
  1588 ;;                  1    wreg      void 
  1589 ;; Registers used:
  1590 ;;		wreg
  1591 ;; Tracked objects:
  1592 ;;		On entry : 0/0
  1593 ;;		On exit  : 0/0
  1594 ;;		Unchanged: 0/0
  1595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1596 ;;      Params:         2       0       0       0       0
  1597 ;;      Locals:         0       0       0       0       0
  1598 ;;      Temps:          0       0       0       0       0
  1599 ;;      Totals:         2       0       0       0       0
  1600 ;;Total ram usage:        2 bytes
  1601 ;; Hardware stack levels used:    1
  1602 ;; Hardware stack levels required when called:    1
  1603 ;; This function calls:
  1604 ;;		Nothing
  1605 ;; This function is called by:
  1606 ;;		_main
  1607 ;; This function uses a non-reentrant model
  1608 ;;
  1609                           
  1610                           
  1611                           ;psect for function _srand
  1612  060E                     _srand:	
  1613  060E                     l1281:	
  1614                           ;incstack = 0
  1615                           ; Regs used in _srand: [wreg]
  1616                           
  1617  060E  0872               	movf	srand@x,w
  1618  060F  1283               	bcf	3,5	;RP0=0, select bank0
  1619  0610  1303               	bcf	3,6	;RP1=0, select bank0
  1620  0611  00E0               	movwf	_randx
  1621  0612  0873               	movf	srand@x+1,w
  1622  0613  00E1               	movwf	_randx+1
  1623  0614  01E2               	clrf	_randx+2
  1624  0615  01E3               	clrf	_randx+3
  1625  0616                     l714:	
  1626  0616  0008               	return
  1627  0617                     __end_of_srand:	
  1628                           
  1629                           	psect	text9
  1630  05E8                     __ptext9:	
  1631 ;; *************** function _init_timer *****************
  1632 ;; Defined at:
  1633 ;;		line 59 in file "init.c"
  1634 ;; Parameters:    Size  Location     Type
  1635 ;;		None
  1636 ;; Auto vars:     Size  Location     Type
  1637 ;;		None
  1638 ;; Return value:  Size  Location     Type
  1639 ;;                  1    wreg      void 
  1640 ;; Registers used:
  1641 ;;		status,2
  1642 ;; Tracked objects:
  1643 ;;		On entry : 0/0
  1644 ;;		On exit  : 0/0
  1645 ;;		Unchanged: 0/0
  1646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1647 ;;      Params:         0       0       0       0       0
  1648 ;;      Locals:         0       0       0       0       0
  1649 ;;      Temps:          0       0       0       0       0
  1650 ;;      Totals:         0       0       0       0       0
  1651 ;;Total ram usage:        0 bytes
  1652 ;; Hardware stack levels used:    1
  1653 ;; Hardware stack levels required when called:    1
  1654 ;; This function calls:
  1655 ;;		Nothing
  1656 ;; This function is called by:
  1657 ;;		_main
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           
  1661                           
  1662                           ;psect for function _init_timer
  1663  05E8                     _init_timer:	
  1664  05E8                     l1263:	
  1665                           ;incstack = 0
  1666                           ; Regs used in _init_timer: [status,2]
  1667                           
  1668                           
  1669                           ;init.c: 61:     TMR0=0;
  1670  05E8  1283               	bcf	3,5	;RP0=0, select bank0
  1671  05E9  1303               	bcf	3,6	;RP1=0, select bank0
  1672  05EA  0181               	clrf	1	;volatile
  1673  05EB                     l1265:	
  1674                           
  1675                           ;init.c: 69:     INTCONbits.GIE = 1;
  1676  05EB  178B               	bsf	11,7	;volatile
  1677  05EC                     l1267:	
  1678                           
  1679                           ;init.c: 70:     INTCONbits.TMR0IE = 1;
  1680  05EC  168B               	bsf	11,5	;volatile
  1681  05ED                     l1269:	
  1682                           
  1683                           ;init.c: 71:     INTCONbits.TMR0IF = 0;
  1684  05ED  110B               	bcf	11,2	;volatile
  1685  05EE                     l1271:	
  1686                           
  1687                           ;init.c: 80:     OPTION_REGbits.PSA = 0;
  1688  05EE  1683               	bsf	3,5	;RP0=1, select bank1
  1689  05EF  1303               	bcf	3,6	;RP1=0, select bank1
  1690  05F0  1181               	bcf	1,3	;volatile
  1691  05F1                     l1273:	
  1692                           
  1693                           ;init.c: 81:     OPTION_REGbits.PS0 = 1;
  1694  05F1  1401               	bsf	1,0	;volatile
  1695  05F2                     l1275:	
  1696                           
  1697                           ;init.c: 82:     OPTION_REGbits.PS1 = 1;
  1698  05F2  1481               	bsf	1,1	;volatile
  1699  05F3                     l1277:	
  1700                           
  1701                           ;init.c: 83:     OPTION_REGbits.PS2 = 1;
  1702  05F3  1501               	bsf	1,2	;volatile
  1703  05F4                     l1279:	
  1704                           
  1705                           ;init.c: 84:     OPTION_REGbits.T0CS = 0;
  1706  05F4  1281               	bcf	1,5	;volatile
  1707  05F5                     l36:	
  1708  05F5  0008               	return
  1709  05F6                     __end_of_init_timer:	
  1710                           
  1711                           	psect	text10
  1712  05D8                     __ptext10:	
  1713 ;; *************** function _init_pines *****************
  1714 ;; Defined at:
  1715 ;;		line 43 in file "init.c"
  1716 ;; Parameters:    Size  Location     Type
  1717 ;;		None
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;		None
  1720 ;; Return value:  Size  Location     Type
  1721 ;;                  1    wreg      void 
  1722 ;; Registers used:
  1723 ;;		status,2, status,0, pclath, cstack
  1724 ;; Tracked objects:
  1725 ;;		On entry : 0/0
  1726 ;;		On exit  : 0/0
  1727 ;;		Unchanged: 0/0
  1728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1729 ;;      Params:         0       0       0       0       0
  1730 ;;      Locals:         0       0       0       0       0
  1731 ;;      Temps:          0       0       0       0       0
  1732 ;;      Totals:         0       0       0       0       0
  1733 ;;Total ram usage:        0 bytes
  1734 ;; Hardware stack levels used:    1
  1735 ;; Hardware stack levels required when called:    2
  1736 ;; This function calls:
  1737 ;;		_init_pines_col
  1738 ;;		_init_pines_fil
  1739 ;;		_init_pines_in
  1740 ;; This function is called by:
  1741 ;;		_main
  1742 ;; This function uses a non-reentrant model
  1743 ;;
  1744                           
  1745                           
  1746                           ;psect for function _init_pines
  1747  05D8                     _init_pines:	
  1748  05D8                     l1259:	
  1749                           ;incstack = 0
  1750                           ; Regs used in _init_pines: [status,2+status,0+pclath+cstack]
  1751                           
  1752                           
  1753                           ;init.c: 45:     init_pines_fil();
  1754  05D8  120A  118A  25F6  120A  118A  	fcall	_init_pines_fil
  1755                           
  1756                           ;init.c: 46:     init_pines_col();
  1757  05DD  120A  118A  25C5  120A  118A  	fcall	_init_pines_col
  1758                           
  1759                           ;init.c: 47:     init_pines_in();
  1760  05E2  120A  118A  2603  120A  118A  	fcall	_init_pines_in
  1761  05E7                     l30:	
  1762  05E7  0008               	return
  1763  05E8                     __end_of_init_pines:	
  1764                           
  1765                           	psect	text11
  1766  0603                     __ptext11:	
  1767 ;; *************** function _init_pines_in *****************
  1768 ;; Defined at:
  1769 ;;		line 4 in file "init.c"
  1770 ;; Parameters:    Size  Location     Type
  1771 ;;		None
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;		None
  1774 ;; Return value:  Size  Location     Type
  1775 ;;                  1    wreg      void 
  1776 ;; Registers used:
  1777 ;;		None
  1778 ;; Tracked objects:
  1779 ;;		On entry : 0/0
  1780 ;;		On exit  : 0/0
  1781 ;;		Unchanged: 0/0
  1782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1783 ;;      Params:         0       0       0       0       0
  1784 ;;      Locals:         0       0       0       0       0
  1785 ;;      Temps:          0       0       0       0       0
  1786 ;;      Totals:         0       0       0       0       0
  1787 ;;Total ram usage:        0 bytes
  1788 ;; Hardware stack levels used:    1
  1789 ;; Hardware stack levels required when called:    1
  1790 ;; This function calls:
  1791 ;;		Nothing
  1792 ;; This function is called by:
  1793 ;;		_init_pines
  1794 ;; This function uses a non-reentrant model
  1795 ;;
  1796                           
  1797                           
  1798                           ;psect for function _init_pines_in
  1799  0603                     _init_pines_in:	
  1800  0603                     l1159:	
  1801                           ;incstack = 0
  1802                           ; Regs used in _init_pines_in: []
  1803                           
  1804                           
  1805                           ;init.c: 6:     TRISBbits.TRISB5 = 1;
  1806  0603  1683               	bsf	3,5	;RP0=1, select bank1
  1807  0604  1303               	bcf	3,6	;RP1=0, select bank1
  1808  0605  1686               	bsf	6,5	;volatile
  1809                           
  1810                           ;init.c: 7:     TRISBbits.TRISB4 = 1;
  1811  0606  1606               	bsf	6,4	;volatile
  1812                           
  1813                           ;init.c: 9:     TRISBbits.TRISB6 = 0;
  1814  0607  1306               	bcf	6,6	;volatile
  1815                           
  1816                           ;init.c: 10:     TRISBbits.TRISB7 = 0;
  1817  0608  1386               	bcf	6,7	;volatile
  1818                           
  1819                           ;init.c: 12:     PORTBbits.RB6 = 0;
  1820  0609  1283               	bcf	3,5	;RP0=0, select bank0
  1821  060A  1303               	bcf	3,6	;RP1=0, select bank0
  1822  060B  1306               	bcf	6,6	;volatile
  1823                           
  1824                           ;init.c: 13:     PORTBbits.RB7 = 0;
  1825  060C  1386               	bcf	6,7	;volatile
  1826  060D                     l21:	
  1827  060D  0008               	return
  1828  060E                     __end_of_init_pines_in:	
  1829                           
  1830                           	psect	text12
  1831  05F6                     __ptext12:	
  1832 ;; *************** function _init_pines_fil *****************
  1833 ;; Defined at:
  1834 ;;		line 16 in file "init.c"
  1835 ;; Parameters:    Size  Location     Type
  1836 ;;		None
  1837 ;; Auto vars:     Size  Location     Type
  1838 ;;		None
  1839 ;; Return value:  Size  Location     Type
  1840 ;;                  1    wreg      void 
  1841 ;; Registers used:
  1842 ;;		None
  1843 ;; Tracked objects:
  1844 ;;		On entry : 0/0
  1845 ;;		On exit  : 0/0
  1846 ;;		Unchanged: 0/0
  1847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1848 ;;      Params:         0       0       0       0       0
  1849 ;;      Locals:         0       0       0       0       0
  1850 ;;      Temps:          0       0       0       0       0
  1851 ;;      Totals:         0       0       0       0       0
  1852 ;;Total ram usage:        0 bytes
  1853 ;; Hardware stack levels used:    1
  1854 ;; Hardware stack levels required when called:    1
  1855 ;; This function calls:
  1856 ;;		Nothing
  1857 ;; This function is called by:
  1858 ;;		_init_pines
  1859 ;; This function uses a non-reentrant model
  1860 ;;
  1861                           
  1862                           
  1863                           ;psect for function _init_pines_fil
  1864  05F6                     _init_pines_fil:	
  1865  05F6                     l1161:	
  1866                           ;incstack = 0
  1867                           ; Regs used in _init_pines_fil: []
  1868                           
  1869                           
  1870                           ;init.c: 18:     TRISCbits.TRISC4 = 0;
  1871  05F6  1683               	bsf	3,5	;RP0=1, select bank1
  1872  05F7  1303               	bcf	3,6	;RP1=0, select bank1
  1873  05F8  1207               	bcf	7,4	;volatile
  1874                           
  1875                           ;init.c: 19:     TRISCbits.TRISC5 = 0;
  1876  05F9  1287               	bcf	7,5	;volatile
  1877                           
  1878                           ;init.c: 20:     TRISCbits.TRISC6 = 0;
  1879  05FA  1307               	bcf	7,6	;volatile
  1880                           
  1881                           ;init.c: 21:     TRISCbits.TRISC7 = 0;
  1882  05FB  1387               	bcf	7,7	;volatile
  1883                           
  1884                           ;init.c: 23:     PORTCbits.RC4 = 0;
  1885  05FC  1283               	bcf	3,5	;RP0=0, select bank0
  1886  05FD  1303               	bcf	3,6	;RP1=0, select bank0
  1887  05FE  1207               	bcf	7,4	;volatile
  1888                           
  1889                           ;init.c: 24:     PORTCbits.RC5 = 0;
  1890  05FF  1287               	bcf	7,5	;volatile
  1891                           
  1892                           ;init.c: 25:     PORTCbits.RC6 = 0;
  1893  0600  1307               	bcf	7,6	;volatile
  1894                           
  1895                           ;init.c: 26:     PORTCbits.RC7 = 0;
  1896  0601  1387               	bcf	7,7	;volatile
  1897  0602                     l24:	
  1898  0602  0008               	return
  1899  0603                     __end_of_init_pines_fil:	
  1900                           
  1901                           	psect	text13
  1902  05C5                     __ptext13:	
  1903 ;; *************** function _init_pines_col *****************
  1904 ;; Defined at:
  1905 ;;		line 29 in file "init.c"
  1906 ;; Parameters:    Size  Location     Type
  1907 ;;		None
  1908 ;; Auto vars:     Size  Location     Type
  1909 ;;		None
  1910 ;; Return value:  Size  Location     Type
  1911 ;;                  1    wreg      void 
  1912 ;; Registers used:
  1913 ;;		None
  1914 ;; Tracked objects:
  1915 ;;		On entry : 0/0
  1916 ;;		On exit  : 0/0
  1917 ;;		Unchanged: 0/0
  1918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1919 ;;      Params:         0       0       0       0       0
  1920 ;;      Locals:         0       0       0       0       0
  1921 ;;      Temps:          0       0       0       0       0
  1922 ;;      Totals:         0       0       0       0       0
  1923 ;;Total ram usage:        0 bytes
  1924 ;; Hardware stack levels used:    1
  1925 ;; Hardware stack levels required when called:    1
  1926 ;; This function calls:
  1927 ;;		Nothing
  1928 ;; This function is called by:
  1929 ;;		_init_pines
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933                           
  1934                           ;psect for function _init_pines_col
  1935  05C5                     _init_pines_col:	
  1936  05C5                     l1163:	
  1937                           ;incstack = 0
  1938                           ; Regs used in _init_pines_col: []
  1939                           
  1940                           
  1941                           ;init.c: 30:     TRISBbits.TRISB0 = 0;
  1942  05C5  1683               	bsf	3,5	;RP0=1, select bank1
  1943  05C6  1303               	bcf	3,6	;RP1=0, select bank1
  1944  05C7  1006               	bcf	6,0	;volatile
  1945                           
  1946                           ;init.c: 31:     PORTBbits.RB0 = 0;
  1947  05C8  1283               	bcf	3,5	;RP0=0, select bank0
  1948  05C9  1303               	bcf	3,6	;RP1=0, select bank0
  1949  05CA  1006               	bcf	6,0	;volatile
  1950                           
  1951                           ;init.c: 33:     TRISDbits.TRISD4 = 0;
  1952  05CB  1683               	bsf	3,5	;RP0=1, select bank1
  1953  05CC  1303               	bcf	3,6	;RP1=0, select bank1
  1954  05CD  1208               	bcf	8,4	;volatile
  1955                           
  1956                           ;init.c: 34:     TRISDbits.TRISD5 = 0;
  1957  05CE  1288               	bcf	8,5	;volatile
  1958                           
  1959                           ;init.c: 35:     TRISDbits.TRISD6 = 0;
  1960  05CF  1308               	bcf	8,6	;volatile
  1961                           
  1962                           ;init.c: 36:     TRISDbits.TRISD7 = 0;
  1963  05D0  1388               	bcf	8,7	;volatile
  1964                           
  1965                           ;init.c: 38:     PORTDbits.RD4 = 0;
  1966  05D1  1283               	bcf	3,5	;RP0=0, select bank0
  1967  05D2  1303               	bcf	3,6	;RP1=0, select bank0
  1968  05D3  1208               	bcf	8,4	;volatile
  1969                           
  1970                           ;init.c: 39:     PORTDbits.RD5 = 0;
  1971  05D4  1288               	bcf	8,5	;volatile
  1972                           
  1973                           ;init.c: 40:     PORTDbits.RD6 = 0;
  1974  05D5  1308               	bcf	8,6	;volatile
  1975                           
  1976                           ;init.c: 41:     PORTDbits.RD7 = 0;
  1977  05D6  1388               	bcf	8,7	;volatile
  1978  05D7                     l27:	
  1979  05D7  0008               	return
  1980  05D8                     __end_of_init_pines_col:	
  1981                           
  1982                           	psect	text14
  1983  061F                     __ptext14:	
  1984 ;; *************** function _init_interrupt *****************
  1985 ;; Defined at:
  1986 ;;		line 50 in file "init.c"
  1987 ;; Parameters:    Size  Location     Type
  1988 ;;		None
  1989 ;; Auto vars:     Size  Location     Type
  1990 ;;		None
  1991 ;; Return value:  Size  Location     Type
  1992 ;;                  1    wreg      void 
  1993 ;; Registers used:
  1994 ;;		None
  1995 ;; Tracked objects:
  1996 ;;		On entry : 0/0
  1997 ;;		On exit  : 0/0
  1998 ;;		Unchanged: 0/0
  1999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2000 ;;      Params:         0       0       0       0       0
  2001 ;;      Locals:         0       0       0       0       0
  2002 ;;      Temps:          0       0       0       0       0
  2003 ;;      Totals:         0       0       0       0       0
  2004 ;;Total ram usage:        0 bytes
  2005 ;; Hardware stack levels used:    1
  2006 ;; Hardware stack levels required when called:    1
  2007 ;; This function calls:
  2008 ;;		Nothing
  2009 ;; This function is called by:
  2010 ;;		_main
  2011 ;; This function uses a non-reentrant model
  2012 ;;
  2013                           
  2014                           
  2015                           ;psect for function _init_interrupt
  2016  061F                     _init_interrupt:	
  2017  061F                     l1261:	
  2018                           ;incstack = 0
  2019                           ; Regs used in _init_interrupt: []
  2020                           
  2021                           
  2022                           ;init.c: 51:     INTCONbits.GIE = 1;
  2023  061F  178B               	bsf	11,7	;volatile
  2024                           
  2025                           ;init.c: 52:     INTCONbits.PEIE = 1;
  2026  0620  170B               	bsf	11,6	;volatile
  2027                           
  2028                           ;init.c: 53:     INTCONbits.RBIE = 1;
  2029  0621  158B               	bsf	11,3	;volatile
  2030                           
  2031                           ;init.c: 54:     INTCONbits.RBIF = 0;
  2032  0622  100B               	bcf	11,0	;volatile
  2033                           
  2034                           ;init.c: 56:     OPTION_REGbits.nRBPU = 0;
  2035  0623  1683               	bsf	3,5	;RP0=1, select bank1
  2036  0624  1303               	bcf	3,6	;RP1=0, select bank1
  2037  0625  1381               	bcf	1,7	;volatile
  2038  0626                     l33:	
  2039  0626  0008               	return
  2040  0627                     __end_of_init_interrupt:	
  2041                           
  2042                           	psect	text15
  2043  003F                     __ptext15:	
  2044 ;; *************** function _checkCount *****************
  2045 ;; Defined at:
  2046 ;;		line 67 in file "mainsource.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;		None
  2049 ;; Auto vars:     Size  Location     Type
  2050 ;;  i               2   28[BANK0 ] int 
  2051 ;;  j               2   26[BANK0 ] int 
  2052 ;; Return value:  Size  Location     Type
  2053 ;;                  1    wreg      void 
  2054 ;; Registers used:
  2055 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2056 ;; Tracked objects:
  2057 ;;		On entry : 0/0
  2058 ;;		On exit  : 0/0
  2059 ;;		Unchanged: 0/0
  2060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2061 ;;      Params:         0       0       0       0       0
  2062 ;;      Locals:         0       4       0       0       0
  2063 ;;      Temps:          0       9       0       0       0
  2064 ;;      Totals:         0      13       0       0       0
  2065 ;;Total ram usage:       13 bytes
  2066 ;; Hardware stack levels used:    1
  2067 ;; Hardware stack levels required when called:    3
  2068 ;; This function calls:
  2069 ;;		___awmod
  2070 ;;		_drawFigure
  2071 ;;		_memset
  2072 ;;		_rand
  2073 ;; This function is called by:
  2074 ;;		_main
  2075 ;; This function uses a non-reentrant model
  2076 ;;
  2077                           
  2078                           
  2079                           ;psect for function _checkCount
  2080  003F                     _checkCount:	
  2081  003F                     l1283:	
  2082                           ;incstack = 0
  2083                           ; Regs used in _checkCount: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2084                           
  2085                           
  2086                           ;mainsource.c: 68:     if(con.check_count == 1){
  2087  003F  1283               	bcf	3,5	;RP0=0, select bank0
  2088  0040  1303               	bcf	3,6	;RP1=0, select bank0
  2089  0041  034B               	decf	_con+8,w
  2090  0042  1D03               	btfss	3,2
  2091  0043  2845               	goto	u851
  2092  0044  2846               	goto	u850
  2093  0045                     u851:	
  2094  0045  2A74               	goto	l102
  2095  0046                     u850:	
  2096  0046                     l1285:	
  2097  0046  01BA               	clrf	checkCount@j
  2098  0047  01BB               	clrf	checkCount@j+1
  2099  0048                     l1287:	
  2100                           
  2101                           ;mainsource.c: 71:         if(timerCount >= 15){
  2102  0048  084F               	movf	_timerCount+3,w
  2103  0049  1D03               	btfss	3,2
  2104  004A  2859               	goto	u860
  2105  004B  084E               	movf	_timerCount+2,w
  2106  004C  1D03               	btfss	3,2
  2107  004D  2859               	goto	u860
  2108  004E  084D               	movf	_timerCount+1,w
  2109  004F  1D03               	btfss	3,2
  2110  0050  2859               	goto	u860
  2111  0051  300F               	movlw	15
  2112  0052  024C               	subwf	_timerCount,w
  2113  0053  1D03               	skipz
  2114  0054  2855               	goto	u863
  2115  0055                     u863:	
  2116  0055  1C03               	btfss	3,0
  2117  0056  2858               	goto	u861
  2118  0057  2859               	goto	u860
  2119  0058                     u861:	
  2120  0058  2A71               	goto	l1391
  2121  0059                     u860:	
  2122  0059                     l1289:	
  2123                           
  2124                           ;mainsource.c: 73:             PORTBbits.RB0 = con.led;
  2125  0059  0C45               	rrf	_con+2,w
  2126  005A  1C03               	skipc
  2127  005B  1006               	bcf	6,0	;volatile
  2128  005C  1803               	skipnc
  2129  005D  1406               	bsf	6,0	;volatile
  2130  005E                     l1291:	
  2131                           
  2132                           ;mainsource.c: 74:             con.led= ~con.led;
  2133  005E  0945               	comf	_con+2,w
  2134  005F  00B1               	movwf	??_checkCount
  2135  0060  0831               	movf	??_checkCount,w
  2136  0061  00C5               	movwf	_con+2
  2137  0062                     l1293:	
  2138                           
  2139                           ;mainsource.c: 75:             con.ficha_Vpos--;
  2140  0062  3001               	movlw	1
  2141  0063  02C6               	subwf	_con+3,f
  2142                           
  2143                           ;mainsource.c: 76:             timerCount = 0;
  2144  0064  3000               	movlw	0
  2145  0065  00CF               	movwf	_timerCount+3
  2146  0066  3000               	movlw	0
  2147  0067  00CE               	movwf	_timerCount+2
  2148  0068  3000               	movlw	0
  2149  0069  00CD               	movwf	_timerCount+1
  2150  006A  3000               	movlw	0
  2151  006B  00CC               	movwf	_timerCount
  2152  006C                     l1295:	
  2153                           
  2154                           ;mainsource.c: 77:             if(con.ficha_Vpos==0){
  2155  006C  0846               	movf	_con+3,w
  2156  006D  1D03               	btfss	3,2
  2157  006E  2870               	goto	u871
  2158  006F  2871               	goto	u870
  2159  0070                     u871:	
  2160  0070  28CD               	goto	l1313
  2161  0071                     u870:	
  2162  0071                     l1297:	
  2163                           
  2164                           ;mainsource.c: 78:                 for(j=0; j<8; j++){
  2165  0071  01BA               	clrf	checkCount@j
  2166  0072  01BB               	clrf	checkCount@j+1
  2167  0073                     l1303:	
  2168                           
  2169                           ;mainsource.c: 79:                     fondo[j] = fondo[j] | ficha[j];
  2170  0073  1283               	bcf	3,5	;RP0=0, select bank0
  2171  0074  1303               	bcf	3,6	;RP1=0, select bank0
  2172  0075  083A               	movf	checkCount@j,w
  2173  0076  00B1               	movwf	??_checkCount
  2174  0077  0731               	addwf	??_checkCount,w
  2175  0078  3EA0               	addlw	(low (_ficha| 0))& (0+255)
  2176  0079  0084               	movwf	4
  2177  007A  1383               	bcf	3,7	;select IRP bank1
  2178  007B  0800               	movf	0,w
  2179  007C  00B2               	movwf	??_checkCount+1
  2180  007D  0A84               	incf	4,f
  2181  007E  0800               	movf	0,w
  2182  007F  00B3               	movwf	??_checkCount+2
  2183  0080  083A               	movf	checkCount@j,w
  2184  0081  00B4               	movwf	??_checkCount+3
  2185  0082  0734               	addwf	??_checkCount+3,w
  2186  0083  3E50               	addlw	(low (_fondo| 0))& (0+255)
  2187  0084  0084               	movwf	4
  2188  0085  0800               	movf	0,w
  2189  0086  00B5               	movwf	??_checkCount+4
  2190  0087  0A84               	incf	4,f
  2191  0088  0800               	movf	0,w
  2192  0089  00B6               	movwf	??_checkCount+5
  2193  008A  0832               	movf	??_checkCount+1,w
  2194  008B  0435               	iorwf	??_checkCount+4,w
  2195  008C  00B7               	movwf	??_checkCount+6
  2196  008D  0833               	movf	??_checkCount+2,w
  2197  008E  0436               	iorwf	??_checkCount+5,w
  2198  008F  00B8               	movwf	??_checkCount+7
  2199  0090  083A               	movf	checkCount@j,w
  2200  0091  00B9               	movwf	??_checkCount+8
  2201  0092  0739               	addwf	??_checkCount+8,w
  2202  0093  3E50               	addlw	(low (_fondo| 0))& (0+255)
  2203  0094  0084               	movwf	4
  2204  0095  0837               	movf	??_checkCount+6,w
  2205  0096  0080               	movwf	0
  2206  0097  0A84               	incf	4,f
  2207  0098  0838               	movf	??_checkCount+7,w
  2208  0099  0080               	movwf	0
  2209  009A                     l1305:	
  2210                           
  2211                           ;mainsource.c: 80:                 }
  2212  009A  3001               	movlw	1
  2213  009B  07BA               	addwf	checkCount@j,f
  2214  009C  1803               	skipnc
  2215  009D  0ABB               	incf	checkCount@j+1,f
  2216  009E  3000               	movlw	0
  2217  009F  07BB               	addwf	checkCount@j+1,f
  2218  00A0                     l1307:	
  2219  00A0  083B               	movf	checkCount@j+1,w
  2220  00A1  3A80               	xorlw	128
  2221  00A2  00FF               	movwf	btemp+1
  2222  00A3  3080               	movlw	128
  2223  00A4  027F               	subwf	btemp+1,w
  2224  00A5  1D03               	skipz
  2225  00A6  28A9               	goto	u885
  2226  00A7  3008               	movlw	8
  2227  00A8  023A               	subwf	checkCount@j,w
  2228  00A9                     u885:	
  2229  00A9  1C03               	skipc
  2230  00AA  28AC               	goto	u881
  2231  00AB  28AD               	goto	u880
  2232  00AC                     u881:	
  2233  00AC  2873               	goto	l1303
  2234  00AD                     u880:	
  2235  00AD                     l1309:	
  2236                           
  2237                           ;mainsource.c: 81:                 con.ficha_Vpos = 16;
  2238  00AD  3010               	movlw	16
  2239  00AE  1283               	bcf	3,5	;RP0=0, select bank0
  2240  00AF  1303               	bcf	3,6	;RP1=0, select bank0
  2241  00B0  00B1               	movwf	??_checkCount
  2242  00B1  0831               	movf	??_checkCount,w
  2243  00B2  00C6               	movwf	_con+3
  2244  00B3                     l1311:	
  2245                           
  2246                           ;mainsource.c: 82:                 con.ficha_actual = rand() % 7;
  2247  00B3  3007               	movlw	7
  2248  00B4  00AB               	movwf	___awmod@divisor
  2249  00B5  3000               	movlw	0
  2250  00B6  00AC               	movwf	___awmod@divisor+1
  2251  00B7  120A  118A  2480  120A  118A  	fcall	_rand
  2252  00BC  1283               	bcf	3,5	;RP0=0, select bank0
  2253  00BD  1303               	bcf	3,6	;RP1=0, select bank0
  2254  00BE  0825               	movf	?_rand+1,w
  2255  00BF  00AE               	movwf	___awmod@dividend+1
  2256  00C0  0824               	movf	?_rand,w
  2257  00C1  00AD               	movwf	___awmod@dividend
  2258  00C2  120A  118A  233F  120A  118A  	fcall	___awmod
  2259  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  2260  00C8  1303               	bcf	3,6	;RP1=0, select bank0
  2261  00C9  082B               	movf	?___awmod,w
  2262  00CA  00B1               	movwf	??_checkCount
  2263  00CB  0831               	movf	??_checkCount,w
  2264  00CC  00C8               	movwf	_con+5
  2265  00CD                     l1313:	
  2266                           
  2267                           ;mainsource.c: 85:             drawFigure();
  2268  00CD  120A  118A  2275  120A  118A  	fcall	_drawFigure
  2269  00D2                     l1315:	
  2270                           
  2271                           ;mainsource.c: 92:             for(i=0; i<8; i++){
  2272  00D2  1283               	bcf	3,5	;RP0=0, select bank0
  2273  00D3  1303               	bcf	3,6	;RP1=0, select bank0
  2274  00D4  01BC               	clrf	checkCount@i
  2275  00D5  01BD               	clrf	checkCount@i+1
  2276  00D6                     l1321:	
  2277                           
  2278                           ;mainsource.c: 93:                 pantalla[i] = ficha[i] | fondo[i];
  2279  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  2280  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  2281  00D8  083C               	movf	checkCount@i,w
  2282  00D9  00B1               	movwf	??_checkCount
  2283  00DA  0731               	addwf	??_checkCount,w
  2284  00DB  3E50               	addlw	(low (_fondo| 0))& (0+255)
  2285  00DC  0084               	movwf	4
  2286  00DD  1383               	bcf	3,7	;select IRP bank0
  2287  00DE  0800               	movf	0,w
  2288  00DF  00B2               	movwf	??_checkCount+1
  2289  00E0  0A84               	incf	4,f
  2290  00E1  0800               	movf	0,w
  2291  00E2  00B3               	movwf	??_checkCount+2
  2292  00E3  083C               	movf	checkCount@i,w
  2293  00E4  00B4               	movwf	??_checkCount+3
  2294  00E5  0734               	addwf	??_checkCount+3,w
  2295  00E6  3EA0               	addlw	(low (_ficha| 0))& (0+255)
  2296  00E7  0084               	movwf	4
  2297  00E8  0800               	movf	0,w
  2298  00E9  00B5               	movwf	??_checkCount+4
  2299  00EA  0A84               	incf	4,f
  2300  00EB  0800               	movf	0,w
  2301  00EC  00B6               	movwf	??_checkCount+5
  2302  00ED  0832               	movf	??_checkCount+1,w
  2303  00EE  0435               	iorwf	??_checkCount+4,w
  2304  00EF  00B7               	movwf	??_checkCount+6
  2305  00F0  0833               	movf	??_checkCount+2,w
  2306  00F1  0436               	iorwf	??_checkCount+5,w
  2307  00F2  00B8               	movwf	??_checkCount+7
  2308  00F3  083C               	movf	checkCount@i,w
  2309  00F4  00B9               	movwf	??_checkCount+8
  2310  00F5  0739               	addwf	??_checkCount+8,w
  2311  00F6  3EB0               	addlw	(low (_pantalla| 0))& (0+255)
  2312  00F7  0084               	movwf	4
  2313  00F8  0837               	movf	??_checkCount+6,w
  2314  00F9  0080               	movwf	0
  2315  00FA  0A84               	incf	4,f
  2316  00FB  0838               	movf	??_checkCount+7,w
  2317  00FC  0080               	movwf	0
  2318  00FD                     l1323:	
  2319                           
  2320                           ;mainsource.c: 94:             }
  2321  00FD  3001               	movlw	1
  2322  00FE  07BC               	addwf	checkCount@i,f
  2323  00FF  1803               	skipnc
  2324  0100  0ABD               	incf	checkCount@i+1,f
  2325  0101  3000               	movlw	0
  2326  0102  07BD               	addwf	checkCount@i+1,f
  2327  0103                     l1325:	
  2328  0103  083D               	movf	checkCount@i+1,w
  2329  0104  3A80               	xorlw	128
  2330  0105  00FF               	movwf	btemp+1
  2331  0106  3080               	movlw	128
  2332  0107  027F               	subwf	btemp+1,w
  2333  0108  1D03               	skipz
  2334  0109  290C               	goto	u895
  2335  010A  3008               	movlw	8
  2336  010B  023C               	subwf	checkCount@i,w
  2337  010C                     u895:	
  2338  010C  1C03               	skipc
  2339  010D  290F               	goto	u891
  2340  010E  2910               	goto	u890
  2341  010F                     u891:	
  2342  010F  28D6               	goto	l1321
  2343  0110                     u890:	
  2344  0110                     l1327:	
  2345                           
  2346                           ;mainsource.c: 101:             for(i=con.ficha_Hpos; i<(con.ficha_Hpos+4); i++){
  2347  0110  1283               	bcf	3,5	;RP0=0, select bank0
  2348  0111  1303               	bcf	3,6	;RP1=0, select bank0
  2349  0112  0847               	movf	_con+4,w
  2350  0113  00B1               	movwf	??_checkCount
  2351  0114  01B2               	clrf	??_checkCount+1
  2352  0115  0831               	movf	??_checkCount,w
  2353  0116  00BC               	movwf	checkCount@i
  2354  0117  0832               	movf	??_checkCount+1,w
  2355  0118  00BD               	movwf	checkCount@i+1
  2356  0119  29A3               	goto	l88
  2357  011A                     l1329:	
  2358                           
  2359                           ;mainsource.c: 102:                 if((ficha[i]>>1 & fondo[i]) != 0){
  2360  011A  1283               	bcf	3,5	;RP0=0, select bank0
  2361  011B  1303               	bcf	3,6	;RP1=0, select bank0
  2362  011C  083C               	movf	checkCount@i,w
  2363  011D  00B1               	movwf	??_checkCount
  2364  011E  0731               	addwf	??_checkCount,w
  2365  011F  3E50               	addlw	(low (_fondo| 0))& (0+255)
  2366  0120  0084               	movwf	4
  2367  0121  1383               	bcf	3,7	;select IRP bank0
  2368  0122  0800               	movf	0,w
  2369  0123  00B2               	movwf	??_checkCount+1
  2370  0124  0A84               	incf	4,f
  2371  0125  0800               	movf	0,w
  2372  0126  00B3               	movwf	??_checkCount+2
  2373  0127  083C               	movf	checkCount@i,w
  2374  0128  00B4               	movwf	??_checkCount+3
  2375  0129  0734               	addwf	??_checkCount+3,w
  2376  012A  3EA0               	addlw	(low (_ficha| 0))& (0+255)
  2377  012B  0084               	movwf	4
  2378  012C  0800               	movf	0,w
  2379  012D  00B5               	movwf	??_checkCount+4
  2380  012E  0A84               	incf	4,f
  2381  012F  0800               	movf	0,w
  2382  0130  00B6               	movwf	??_checkCount+5
  2383  0131  1003               	clrc
  2384  0132  0CB6               	rrf	??_checkCount+5,f
  2385  0133  0CB5               	rrf	??_checkCount+4,f
  2386  0134  0832               	movf	??_checkCount+1,w
  2387  0135  0535               	andwf	??_checkCount+4,w
  2388  0136  00B7               	movwf	??_checkCount+6
  2389  0137  0833               	movf	??_checkCount+2,w
  2390  0138  0536               	andwf	??_checkCount+5,w
  2391  0139  00B8               	movwf	??_checkCount+7
  2392  013A  0837               	movf	??_checkCount+6,w
  2393  013B  0438               	iorwf	??_checkCount+7,w
  2394  013C  1903               	btfsc	3,2
  2395  013D  293F               	goto	u901
  2396  013E  2940               	goto	u900
  2397  013F                     u901:	
  2398  013F  299D               	goto	l1347
  2399  0140                     u900:	
  2400  0140                     l1331:	
  2401                           
  2402                           ;mainsource.c: 103:                     for(j=0; j<8; j++){
  2403  0140  01BA               	clrf	checkCount@j
  2404  0141  01BB               	clrf	checkCount@j+1
  2405  0142                     l1337:	
  2406                           
  2407                           ;mainsource.c: 104:                         fondo[j] = fondo[j] | ficha[j];
  2408  0142  1283               	bcf	3,5	;RP0=0, select bank0
  2409  0143  1303               	bcf	3,6	;RP1=0, select bank0
  2410  0144  083A               	movf	checkCount@j,w
  2411  0145  00B1               	movwf	??_checkCount
  2412  0146  0731               	addwf	??_checkCount,w
  2413  0147  3EA0               	addlw	(low (_ficha| 0))& (0+255)
  2414  0148  0084               	movwf	4
  2415  0149  1383               	bcf	3,7	;select IRP bank1
  2416  014A  0800               	movf	0,w
  2417  014B  00B2               	movwf	??_checkCount+1
  2418  014C  0A84               	incf	4,f
  2419  014D  0800               	movf	0,w
  2420  014E  00B3               	movwf	??_checkCount+2
  2421  014F  083A               	movf	checkCount@j,w
  2422  0150  00B4               	movwf	??_checkCount+3
  2423  0151  0734               	addwf	??_checkCount+3,w
  2424  0152  3E50               	addlw	(low (_fondo| 0))& (0+255)
  2425  0153  0084               	movwf	4
  2426  0154  0800               	movf	0,w
  2427  0155  00B5               	movwf	??_checkCount+4
  2428  0156  0A84               	incf	4,f
  2429  0157  0800               	movf	0,w
  2430  0158  00B6               	movwf	??_checkCount+5
  2431  0159  0832               	movf	??_checkCount+1,w
  2432  015A  0435               	iorwf	??_checkCount+4,w
  2433  015B  00B7               	movwf	??_checkCount+6
  2434  015C  0833               	movf	??_checkCount+2,w
  2435  015D  0436               	iorwf	??_checkCount+5,w
  2436  015E  00B8               	movwf	??_checkCount+7
  2437  015F  083A               	movf	checkCount@j,w
  2438  0160  00B9               	movwf	??_checkCount+8
  2439  0161  0739               	addwf	??_checkCount+8,w
  2440  0162  3E50               	addlw	(low (_fondo| 0))& (0+255)
  2441  0163  0084               	movwf	4
  2442  0164  0837               	movf	??_checkCount+6,w
  2443  0165  0080               	movwf	0
  2444  0166  0A84               	incf	4,f
  2445  0167  0838               	movf	??_checkCount+7,w
  2446  0168  0080               	movwf	0
  2447  0169                     l1339:	
  2448                           
  2449                           ;mainsource.c: 105:                     }
  2450  0169  3001               	movlw	1
  2451  016A  07BA               	addwf	checkCount@j,f
  2452  016B  1803               	skipnc
  2453  016C  0ABB               	incf	checkCount@j+1,f
  2454  016D  3000               	movlw	0
  2455  016E  07BB               	addwf	checkCount@j+1,f
  2456  016F                     l1341:	
  2457  016F  083B               	movf	checkCount@j+1,w
  2458  0170  3A80               	xorlw	128
  2459  0171  00FF               	movwf	btemp+1
  2460  0172  3080               	movlw	128
  2461  0173  027F               	subwf	btemp+1,w
  2462  0174  1D03               	skipz
  2463  0175  2978               	goto	u915
  2464  0176  3008               	movlw	8
  2465  0177  023A               	subwf	checkCount@j,w
  2466  0178                     u915:	
  2467  0178  1C03               	skipc
  2468  0179  297B               	goto	u911
  2469  017A  297C               	goto	u910
  2470  017B                     u911:	
  2471  017B  2942               	goto	l1337
  2472  017C                     u910:	
  2473  017C                     l1343:	
  2474                           
  2475                           ;mainsource.c: 106:                     con.ficha_Vpos = 16;
  2476  017C  3010               	movlw	16
  2477  017D  1283               	bcf	3,5	;RP0=0, select bank0
  2478  017E  1303               	bcf	3,6	;RP1=0, select bank0
  2479  017F  00B1               	movwf	??_checkCount
  2480  0180  0831               	movf	??_checkCount,w
  2481  0181  00C6               	movwf	_con+3
  2482  0182                     l1345:	
  2483                           
  2484                           ;mainsource.c: 107:                     con.ficha_actual = rand() % 7;
  2485  0182  3007               	movlw	7
  2486  0183  00AB               	movwf	___awmod@divisor
  2487  0184  3000               	movlw	0
  2488  0185  00AC               	movwf	___awmod@divisor+1
  2489  0186  120A  118A  2480  120A  118A  	fcall	_rand
  2490  018B  1283               	bcf	3,5	;RP0=0, select bank0
  2491  018C  1303               	bcf	3,6	;RP1=0, select bank0
  2492  018D  0825               	movf	?_rand+1,w
  2493  018E  00AE               	movwf	___awmod@dividend+1
  2494  018F  0824               	movf	?_rand,w
  2495  0190  00AD               	movwf	___awmod@dividend
  2496  0191  120A  118A  233F  120A  118A  	fcall	___awmod
  2497  0196  1283               	bcf	3,5	;RP0=0, select bank0
  2498  0197  1303               	bcf	3,6	;RP1=0, select bank0
  2499  0198  082B               	movf	?___awmod,w
  2500  0199  00B1               	movwf	??_checkCount
  2501  019A  0831               	movf	??_checkCount,w
  2502  019B  00C8               	movwf	_con+5
  2503                           
  2504                           ;mainsource.c: 108:                     break;
  2505  019C  29B8               	goto	l1349
  2506  019D                     l1347:	
  2507                           
  2508                           ;mainsource.c: 110:             }
  2509  019D  3001               	movlw	1
  2510  019E  07BC               	addwf	checkCount@i,f
  2511  019F  1803               	skipnc
  2512  01A0  0ABD               	incf	checkCount@i+1,f
  2513  01A1  3000               	movlw	0
  2514  01A2  07BD               	addwf	checkCount@i+1,f
  2515  01A3                     l88:	
  2516  01A3  0847               	movf	_con+4,w
  2517  01A4  3E04               	addlw	4
  2518  01A5  00B1               	movwf	??_checkCount
  2519  01A6  3000               	movlw	0
  2520  01A7  1803               	skipnc
  2521  01A8  3001               	movlw	1
  2522  01A9  00B2               	movwf	??_checkCount+1
  2523  01AA  083D               	movf	checkCount@i+1,w
  2524  01AB  3A80               	xorlw	128
  2525  01AC  00B3               	movwf	??_checkCount+2
  2526  01AD  0832               	movf	??_checkCount+1,w
  2527  01AE  3A80               	xorlw	128
  2528  01AF  0233               	subwf	??_checkCount+2,w
  2529  01B0  1D03               	skipz
  2530  01B1  29B4               	goto	u925
  2531  01B2  0831               	movf	??_checkCount,w
  2532  01B3  023C               	subwf	checkCount@i,w
  2533  01B4                     u925:	
  2534  01B4  1C03               	skipc
  2535  01B5  29B7               	goto	u921
  2536  01B6  29B8               	goto	u920
  2537  01B7                     u921:	
  2538  01B7  291A               	goto	l1329
  2539  01B8                     u920:	
  2540  01B8                     l1349:	
  2541                           
  2542                           ;mainsource.c: 116:             for(i=0; i<8; i++){
  2543  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  2544  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  2545  01BA  01BC               	clrf	checkCount@i
  2546  01BB  01BD               	clrf	checkCount@i+1
  2547  01BC                     l1355:	
  2548                           
  2549                           ;mainsource.c: 117:                 if((fondo[i] & 0x8000) != 0){
  2550  01BC  1283               	bcf	3,5	;RP0=0, select bank0
  2551  01BD  1303               	bcf	3,6	;RP1=0, select bank0
  2552  01BE  083C               	movf	checkCount@i,w
  2553  01BF  00B1               	movwf	??_checkCount
  2554  01C0  0731               	addwf	??_checkCount,w
  2555  01C1  3E50               	addlw	(low (_fondo| 0))& (0+255)
  2556  01C2  0084               	movwf	4
  2557  01C3  1383               	bcf	3,7	;select IRP bank0
  2558  01C4  0800               	movf	0,w
  2559  01C5  00B2               	movwf	??_checkCount+1
  2560  01C6  0A84               	incf	4,f
  2561  01C7  0800               	movf	0,w
  2562  01C8  00B3               	movwf	??_checkCount+2
  2563  01C9  1FB3               	btfss	??_checkCount+2,7
  2564  01CA  29CC               	goto	u931
  2565  01CB  29CD               	goto	u930
  2566  01CC                     u931:	
  2567  01CC  2A08               	goto	l1363
  2568  01CD                     u930:	
  2569  01CD                     l1357:	
  2570                           
  2571                           ;mainsource.c: 118:                     memset(ficha, 0, sizeof(ficha));
  2572  01CD  3000               	movlw	0
  2573  01CE  00F2               	movwf	memset@c
  2574  01CF  00F3               	movwf	memset@c+1
  2575  01D0  3010               	movlw	16
  2576  01D1  00F4               	movwf	memset@n
  2577  01D2  3000               	movlw	0
  2578  01D3  00F5               	movwf	memset@n+1
  2579  01D4  30A0               	movlw	(low (_ficha| 0))& (0+255)
  2580  01D5  120A  118A  2576  120A  118A  	fcall	_memset
  2581                           
  2582                           ;mainsource.c: 119:                     memset(fondo, 0, sizeof(fondo));
  2583  01DA  3000               	movlw	0
  2584  01DB  00F2               	movwf	memset@c
  2585  01DC  00F3               	movwf	memset@c+1
  2586  01DD  3010               	movlw	16
  2587  01DE  00F4               	movwf	memset@n
  2588  01DF  3000               	movlw	0
  2589  01E0  00F5               	movwf	memset@n+1
  2590  01E1  3050               	movlw	(low (_fondo| 0))& (0+255)
  2591  01E2  120A  118A  2576  120A  118A  	fcall	_memset
  2592  01E7                     l1359:	
  2593                           
  2594                           ;mainsource.c: 120:                     con.ficha_Vpos = 16;
  2595  01E7  3010               	movlw	16
  2596  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  2597  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  2598  01EA  00B1               	movwf	??_checkCount
  2599  01EB  0831               	movf	??_checkCount,w
  2600  01EC  00C6               	movwf	_con+3
  2601  01ED                     l1361:	
  2602                           
  2603                           ;mainsource.c: 121:                     con.ficha_actual = rand() % 7;
  2604  01ED  3007               	movlw	7
  2605  01EE  00AB               	movwf	___awmod@divisor
  2606  01EF  3000               	movlw	0
  2607  01F0  00AC               	movwf	___awmod@divisor+1
  2608  01F1  120A  118A  2480  120A  118A  	fcall	_rand
  2609  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  2610  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  2611  01F8  0825               	movf	?_rand+1,w
  2612  01F9  00AE               	movwf	___awmod@dividend+1
  2613  01FA  0824               	movf	?_rand,w
  2614  01FB  00AD               	movwf	___awmod@dividend
  2615  01FC  120A  118A  233F  120A  118A  	fcall	___awmod
  2616  0201  1283               	bcf	3,5	;RP0=0, select bank0
  2617  0202  1303               	bcf	3,6	;RP1=0, select bank0
  2618  0203  082B               	movf	?___awmod,w
  2619  0204  00B1               	movwf	??_checkCount
  2620  0205  0831               	movf	??_checkCount,w
  2621  0206  00C8               	movwf	_con+5
  2622                           
  2623                           ;mainsource.c: 122:                     break;
  2624  0207  2A1B               	goto	l1367
  2625  0208                     l1363:	
  2626                           
  2627                           ;mainsource.c: 125:             }
  2628  0208  3001               	movlw	1
  2629  0209  07BC               	addwf	checkCount@i,f
  2630  020A  1803               	skipnc
  2631  020B  0ABD               	incf	checkCount@i+1,f
  2632  020C  3000               	movlw	0
  2633  020D  07BD               	addwf	checkCount@i+1,f
  2634  020E                     l1365:	
  2635  020E  083D               	movf	checkCount@i+1,w
  2636  020F  3A80               	xorlw	128
  2637  0210  00FF               	movwf	btemp+1
  2638  0211  3080               	movlw	128
  2639  0212  027F               	subwf	btemp+1,w
  2640  0213  1D03               	skipz
  2641  0214  2A17               	goto	u945
  2642  0215  3008               	movlw	8
  2643  0216  023C               	subwf	checkCount@i,w
  2644  0217                     u945:	
  2645  0217  1C03               	skipc
  2646  0218  2A1A               	goto	u941
  2647  0219  2A1B               	goto	u940
  2648  021A                     u941:	
  2649  021A  29BC               	goto	l1355
  2650  021B                     u940:	
  2651  021B                     l1367:	
  2652                           
  2653                           ;mainsource.c: 131:             for (i=0; i<16; i++){
  2654  021B  1283               	bcf	3,5	;RP0=0, select bank0
  2655  021C  1303               	bcf	3,6	;RP1=0, select bank0
  2656  021D  01BC               	clrf	checkCount@i
  2657  021E  01BD               	clrf	checkCount@i+1
  2658  021F                     l1373:	
  2659                           
  2660                           ;mainsource.c: 132:                 for(j=0; j<8; j++){
  2661  021F  1283               	bcf	3,5	;RP0=0, select bank0
  2662  0220  1303               	bcf	3,6	;RP1=0, select bank0
  2663  0221  01BA               	clrf	checkCount@j
  2664  0222  01BB               	clrf	checkCount@j+1
  2665  0223                     l1379:	
  2666                           
  2667                           ;mainsource.c: 133:                    if( (fondo[i] & (1<<j)) == 0){
  2668  0223  1283               	bcf	3,5	;RP0=0, select bank0
  2669  0224  1303               	bcf	3,6	;RP1=0, select bank0
  2670  0225  083C               	movf	checkCount@i,w
  2671  0226  00B1               	movwf	??_checkCount
  2672  0227  0731               	addwf	??_checkCount,w
  2673  0228  3E50               	addlw	(low (_fondo| 0))& (0+255)
  2674  0229  0084               	movwf	4
  2675  022A  1383               	bcf	3,7	;select IRP bank0
  2676  022B  0800               	movf	0,w
  2677  022C  00B2               	movwf	??_checkCount+1
  2678  022D  0A84               	incf	4,f
  2679  022E  0800               	movf	0,w
  2680  022F  00B3               	movwf	??_checkCount+2
  2681  0230  0A3A               	incf	checkCount@j,w
  2682  0231  00B4               	movwf	??_checkCount+3
  2683  0232  3001               	movlw	1
  2684  0233  00B5               	movwf	??_checkCount+4
  2685  0234  3000               	movlw	0
  2686  0235  00B6               	movwf	??_checkCount+5
  2687  0236  2A3A               	goto	u954
  2688  0237                     u955:	
  2689  0237  1003               	clrc
  2690  0238  0DB5               	rlf	??_checkCount+4,f
  2691  0239  0DB6               	rlf	??_checkCount+5,f
  2692  023A                     u954:	
  2693  023A  0BB4               	decfsz	??_checkCount+3,f
  2694  023B  2A37               	goto	u955
  2695  023C  0832               	movf	??_checkCount+1,w
  2696  023D  0535               	andwf	??_checkCount+4,w
  2697  023E  00B7               	movwf	??_checkCount+6
  2698  023F  0833               	movf	??_checkCount+2,w
  2699  0240  0536               	andwf	??_checkCount+5,w
  2700  0241  00B8               	movwf	??_checkCount+7
  2701  0242  0837               	movf	??_checkCount+6,w
  2702  0243  0438               	iorwf	??_checkCount+7,w
  2703  0244  1D03               	btfss	3,2
  2704  0245  2A47               	goto	u961
  2705  0246  2A48               	goto	u960
  2706  0247                     u961:	
  2707  0247  2A49               	goto	l1383
  2708  0248                     u960:	
  2709  0248  2A5C               	goto	l1387
  2710  0249                     l1383:	
  2711                           
  2712                           ;mainsource.c: 136:                 }
  2713  0249  3001               	movlw	1
  2714  024A  07BA               	addwf	checkCount@j,f
  2715  024B  1803               	skipnc
  2716  024C  0ABB               	incf	checkCount@j+1,f
  2717  024D  3000               	movlw	0
  2718  024E  07BB               	addwf	checkCount@j+1,f
  2719  024F                     l1385:	
  2720  024F  083B               	movf	checkCount@j+1,w
  2721  0250  3A80               	xorlw	128
  2722  0251  00FF               	movwf	btemp+1
  2723  0252  3080               	movlw	128
  2724  0253  027F               	subwf	btemp+1,w
  2725  0254  1D03               	skipz
  2726  0255  2A58               	goto	u975
  2727  0256  3008               	movlw	8
  2728  0257  023A               	subwf	checkCount@j,w
  2729  0258                     u975:	
  2730  0258  1C03               	skipc
  2731  0259  2A5B               	goto	u971
  2732  025A  2A5C               	goto	u970
  2733  025B                     u971:	
  2734  025B  2A23               	goto	l1379
  2735  025C                     u970:	
  2736  025C                     l1387:	
  2737                           
  2738                           ;mainsource.c: 138:             }
  2739  025C  3001               	movlw	1
  2740  025D  1283               	bcf	3,5	;RP0=0, select bank0
  2741  025E  1303               	bcf	3,6	;RP1=0, select bank0
  2742  025F  07BC               	addwf	checkCount@i,f
  2743  0260  1803               	skipnc
  2744  0261  0ABD               	incf	checkCount@i+1,f
  2745  0262  3000               	movlw	0
  2746  0263  07BD               	addwf	checkCount@i+1,f
  2747  0264                     l1389:	
  2748  0264  083D               	movf	checkCount@i+1,w
  2749  0265  3A80               	xorlw	128
  2750  0266  00FF               	movwf	btemp+1
  2751  0267  3080               	movlw	128
  2752  0268  027F               	subwf	btemp+1,w
  2753  0269  1D03               	skipz
  2754  026A  2A6D               	goto	u985
  2755  026B  3010               	movlw	16
  2756  026C  023C               	subwf	checkCount@i,w
  2757  026D                     u985:	
  2758  026D  1C03               	skipc
  2759  026E  2A70               	goto	u981
  2760  026F  2A71               	goto	u980
  2761  0270                     u981:	
  2762  0270  2A1F               	goto	l1373
  2763  0271                     u980:	
  2764  0271                     l1391:	
  2765                           
  2766                           ;mainsource.c: 141:         con.check_count = 0;
  2767  0271  1283               	bcf	3,5	;RP0=0, select bank0
  2768  0272  1303               	bcf	3,6	;RP1=0, select bank0
  2769  0273  01CB               	clrf	_con+8
  2770  0274                     l102:	
  2771  0274  0008               	return
  2772  0275                     __end_of_checkCount:	
  2773                           
  2774                           	psect	text16
  2775  0480                     __ptext16:	
  2776 ;; *************** function _rand *****************
  2777 ;; Defined at:
  2778 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  2779 ;; Parameters:    Size  Location     Type
  2780 ;;		None
  2781 ;; Auto vars:     Size  Location     Type
  2782 ;;		None
  2783 ;; Return value:  Size  Location     Type
  2784 ;;                  2    4[BANK0 ] int 
  2785 ;; Registers used:
  2786 ;;		wreg, status,2, status,0, pclath, cstack
  2787 ;; Tracked objects:
  2788 ;;		On entry : 0/0
  2789 ;;		On exit  : 0/0
  2790 ;;		Unchanged: 0/0
  2791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2792 ;;      Params:         0       2       0       0       0
  2793 ;;      Locals:         0       0       0       0       0
  2794 ;;      Temps:          0       5       0       0       0
  2795 ;;      Totals:         0       7       0       0       0
  2796 ;;Total ram usage:        7 bytes
  2797 ;; Hardware stack levels used:    1
  2798 ;; Hardware stack levels required when called:    2
  2799 ;; This function calls:
  2800 ;;		___lmul
  2801 ;; This function is called by:
  2802 ;;		_main
  2803 ;;		_checkCount
  2804 ;; This function uses a non-reentrant model
  2805 ;;
  2806                           
  2807                           
  2808                           ;psect for function _rand
  2809  0480                     _rand:	
  2810  0480                     l1165:	
  2811                           ;incstack = 0
  2812                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  2813                           
  2814  0480  1283               	bcf	3,5	;RP0=0, select bank0
  2815  0481  1303               	bcf	3,6	;RP1=0, select bank0
  2816  0482  0863               	movf	_randx+3,w
  2817  0483  00F5               	movwf	___lmul@multiplier+3
  2818  0484  0862               	movf	_randx+2,w
  2819  0485  00F4               	movwf	___lmul@multiplier+2
  2820  0486  0861               	movf	_randx+1,w
  2821  0487  00F3               	movwf	___lmul@multiplier+1
  2822  0488  0860               	movf	_randx,w
  2823  0489  00F2               	movwf	___lmul@multiplier
  2824  048A  3041               	movlw	65
  2825  048B  00F9               	movwf	___lmul@multiplicand+3
  2826  048C  30C6               	movlw	198
  2827  048D  00F8               	movwf	___lmul@multiplicand+2
  2828  048E  304E               	movlw	78
  2829  048F  00F7               	movwf	___lmul@multiplicand+1
  2830  0490  306D               	movlw	109
  2831  0491  00F6               	movwf	___lmul@multiplicand
  2832  0492  120A  118A  23E9  120A  118A  	fcall	___lmul
  2833  0497  0875               	movf	?___lmul+3,w
  2834  0498  1283               	bcf	3,5	;RP0=0, select bank0
  2835  0499  1303               	bcf	3,6	;RP1=0, select bank0
  2836  049A  00E3               	movwf	_randx+3
  2837  049B  0874               	movf	?___lmul+2,w
  2838  049C  00E2               	movwf	_randx+2
  2839  049D  0873               	movf	?___lmul+1,w
  2840  049E  00E1               	movwf	_randx+1
  2841  049F  0872               	movf	?___lmul,w
  2842  04A0  00E0               	movwf	_randx
  2843  04A1                     l1167:	
  2844  04A1  3039               	movlw	57
  2845  04A2  07E0               	addwf	_randx,f
  2846  04A3  3030               	movlw	48
  2847  04A4  1803               	skipnc
  2848  04A5  3031               	movlw	49
  2849  04A6  07E1               	addwf	_randx+1,f
  2850  04A7  3000               	movlw	0
  2851  04A8  1803               	skipnc
  2852  04A9  3001               	movlw	1
  2853  04AA  07E2               	addwf	_randx+2,f
  2854  04AB  3000               	movlw	0
  2855  04AC  1803               	skipnc
  2856  04AD  3001               	movlw	1
  2857  04AE  07E3               	addwf	_randx+3,f
  2858  04AF                     l1169:	
  2859  04AF  0860               	movf	_randx,w
  2860  04B0  00A6               	movwf	??_rand
  2861  04B1  0861               	movf	_randx+1,w
  2862  04B2  00A7               	movwf	??_rand+1
  2863  04B3  0862               	movf	_randx+2,w
  2864  04B4  00A8               	movwf	??_rand+2
  2865  04B5  0863               	movf	_randx+3,w
  2866  04B6  00A9               	movwf	??_rand+3
  2867  04B7  3010               	movlw	16
  2868  04B8  00AA               	movwf	??_rand+4
  2869  04B9                     u605:	
  2870  04B9  0D29               	rlf	??_rand+3,w
  2871  04BA  0CA9               	rrf	??_rand+3,f
  2872  04BB  0CA8               	rrf	??_rand+2,f
  2873  04BC  0CA7               	rrf	??_rand+1,f
  2874  04BD  0CA6               	rrf	??_rand,f
  2875  04BE                     u600:	
  2876  04BE  0BAA               	decfsz	??_rand+4,f
  2877  04BF  2CB9               	goto	u605
  2878  04C0  30FF               	movlw	255
  2879  04C1  0526               	andwf	??_rand,w
  2880  04C2  00A4               	movwf	?_rand
  2881  04C3  307F               	movlw	127
  2882  04C4  0527               	andwf	??_rand+1,w
  2883  04C5  00A5               	movwf	?_rand+1
  2884  04C6                     l717:	
  2885  04C6  0008               	return
  2886  04C7                     __end_of_rand:	
  2887                           
  2888                           	psect	text17
  2889  03E9                     __ptext17:	
  2890 ;; *************** function ___lmul *****************
  2891 ;; Defined at:
  2892 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  2893 ;; Parameters:    Size  Location     Type
  2894 ;;  multiplier      4    2[COMMON] unsigned long 
  2895 ;;  multiplicand    4    6[COMMON] unsigned long 
  2896 ;; Auto vars:     Size  Location     Type
  2897 ;;  product         4    0[BANK0 ] unsigned long 
  2898 ;; Return value:  Size  Location     Type
  2899 ;;                  4    2[COMMON] unsigned long 
  2900 ;; Registers used:
  2901 ;;		wreg, status,2, status,0
  2902 ;; Tracked objects:
  2903 ;;		On entry : 0/0
  2904 ;;		On exit  : 0/0
  2905 ;;		Unchanged: 0/0
  2906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2907 ;;      Params:         8       0       0       0       0
  2908 ;;      Locals:         0       4       0       0       0
  2909 ;;      Temps:          1       0       0       0       0
  2910 ;;      Totals:         9       4       0       0       0
  2911 ;;Total ram usage:       13 bytes
  2912 ;; Hardware stack levels used:    1
  2913 ;; Hardware stack levels required when called:    1
  2914 ;; This function calls:
  2915 ;;		Nothing
  2916 ;; This function is called by:
  2917 ;;		_rand
  2918 ;; This function uses a non-reentrant model
  2919 ;;
  2920                           
  2921                           
  2922                           ;psect for function ___lmul
  2923  03E9                     ___lmul:	
  2924  03E9                     l1145:	
  2925                           ;incstack = 0
  2926                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2927                           
  2928  03E9  3000               	movlw	0
  2929  03EA  1283               	bcf	3,5	;RP0=0, select bank0
  2930  03EB  1303               	bcf	3,6	;RP1=0, select bank0
  2931  03EC  00A3               	movwf	___lmul@product+3
  2932  03ED  3000               	movlw	0
  2933  03EE  00A2               	movwf	___lmul@product+2
  2934  03EF  3000               	movlw	0
  2935  03F0  00A1               	movwf	___lmul@product+1
  2936  03F1  3000               	movlw	0
  2937  03F2  00A0               	movwf	___lmul@product
  2938  03F3                     l1147:	
  2939  03F3  1C72               	btfss	___lmul@multiplier,0
  2940  03F4  2BF6               	goto	u551
  2941  03F5  2BF7               	goto	u550
  2942  03F6                     u551:	
  2943  03F6  2C10               	goto	l1151
  2944  03F7                     u550:	
  2945  03F7                     l1149:	
  2946  03F7  0876               	movf	___lmul@multiplicand,w
  2947  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  2948  03F9  1303               	bcf	3,6	;RP1=0, select bank0
  2949  03FA  07A0               	addwf	___lmul@product,f
  2950  03FB  0877               	movf	___lmul@multiplicand+1,w
  2951  03FC  1103               	clrz
  2952  03FD  1803               	skipnc
  2953  03FE  3E01               	addlw	1
  2954  03FF  1903               	skipnz
  2955  0400  2C02               	goto	u561
  2956  0401  07A1               	addwf	___lmul@product+1,f
  2957  0402                     u561:	
  2958  0402  0878               	movf	___lmul@multiplicand+2,w
  2959  0403  1103               	clrz
  2960  0404  1803               	skipnc
  2961  0405  3E01               	addlw	1
  2962  0406  1903               	skipnz
  2963  0407  2C09               	goto	u562
  2964  0408  07A2               	addwf	___lmul@product+2,f
  2965  0409                     u562:	
  2966  0409  0879               	movf	___lmul@multiplicand+3,w
  2967  040A  1103               	clrz
  2968  040B  1803               	skipnc
  2969  040C  3E01               	addlw	1
  2970  040D  1903               	skipnz
  2971  040E  2C10               	goto	u563
  2972  040F  07A3               	addwf	___lmul@product+3,f
  2973  0410                     u563:	
  2974  0410                     l1151:	
  2975  0410  3001               	movlw	1
  2976  0411  00FA               	movwf	??___lmul
  2977  0412                     u575:	
  2978  0412  1003               	clrc
  2979  0413  0DF6               	rlf	___lmul@multiplicand,f
  2980  0414  0DF7               	rlf	___lmul@multiplicand+1,f
  2981  0415  0DF8               	rlf	___lmul@multiplicand+2,f
  2982  0416  0DF9               	rlf	___lmul@multiplicand+3,f
  2983  0417  0BFA               	decfsz	??___lmul,f
  2984  0418  2C12               	goto	u575
  2985  0419                     l1153:	
  2986  0419  3001               	movlw	1
  2987  041A                     u585:	
  2988  041A  1003               	clrc
  2989  041B  0CF5               	rrf	___lmul@multiplier+3,f
  2990  041C  0CF4               	rrf	___lmul@multiplier+2,f
  2991  041D  0CF3               	rrf	___lmul@multiplier+1,f
  2992  041E  0CF2               	rrf	___lmul@multiplier,f
  2993  041F  3EFF               	addlw	-1
  2994  0420  1D03               	skipz
  2995  0421  2C1A               	goto	u585
  2996  0422  0875               	movf	___lmul@multiplier+3,w
  2997  0423  0474               	iorwf	___lmul@multiplier+2,w
  2998  0424  0473               	iorwf	___lmul@multiplier+1,w
  2999  0425  0472               	iorwf	___lmul@multiplier,w
  3000  0426  1D03               	skipz
  3001  0427  2C29               	goto	u591
  3002  0428  2C2A               	goto	u590
  3003  0429                     u591:	
  3004  0429  2BF3               	goto	l1147
  3005  042A                     u590:	
  3006  042A                     l1155:	
  3007  042A  1283               	bcf	3,5	;RP0=0, select bank0
  3008  042B  1303               	bcf	3,6	;RP1=0, select bank0
  3009  042C  0823               	movf	___lmul@product+3,w
  3010  042D  00F5               	movwf	?___lmul+3
  3011  042E  0822               	movf	___lmul@product+2,w
  3012  042F  00F4               	movwf	?___lmul+2
  3013  0430  0821               	movf	___lmul@product+1,w
  3014  0431  00F3               	movwf	?___lmul+1
  3015  0432  0820               	movf	___lmul@product,w
  3016  0433  00F2               	movwf	?___lmul
  3017  0434                     l275:	
  3018  0434  0008               	return
  3019  0435                     __end_of___lmul:	
  3020                           
  3021                           	psect	text18
  3022  0275                     __ptext18:	
  3023 ;; *************** function _drawFigure *****************
  3024 ;; Defined at:
  3025 ;;		line 36 in file "screen.c"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;		None
  3028 ;; Auto vars:     Size  Location     Type
  3029 ;;		None
  3030 ;; Return value:  Size  Location     Type
  3031 ;;                  1    wreg      void 
  3032 ;; Registers used:
  3033 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3034 ;; Tracked objects:
  3035 ;;		On entry : 0/0
  3036 ;;		On exit  : 0/0
  3037 ;;		Unchanged: 0/0
  3038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3039 ;;      Params:         0       0       0       0       0
  3040 ;;      Locals:         0       0       0       0       0
  3041 ;;      Temps:          0       5       0       0       0
  3042 ;;      Totals:         0       5       0       0       0
  3043 ;;Total ram usage:        5 bytes
  3044 ;; Hardware stack levels used:    1
  3045 ;; Hardware stack levels required when called:    2
  3046 ;; This function calls:
  3047 ;;		_memset
  3048 ;; This function is called by:
  3049 ;;		_checkCount
  3050 ;; This function uses a non-reentrant model
  3051 ;;
  3052                           
  3053                           
  3054                           ;psect for function _drawFigure
  3055  0275                     _drawFigure:	
  3056  0275                     l1173:	
  3057                           ;incstack = 0
  3058                           ; Regs used in _drawFigure: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3059                           
  3060                           
  3061                           ;screen.c: 37:     memset(ficha, 0, sizeof(ficha));
  3062  0275  3000               	movlw	0
  3063  0276  00F2               	movwf	memset@c
  3064  0277  00F3               	movwf	memset@c+1
  3065  0278  3010               	movlw	16
  3066  0279  00F4               	movwf	memset@n
  3067  027A  3000               	movlw	0
  3068  027B  00F5               	movwf	memset@n+1
  3069  027C  30A0               	movlw	(low (_ficha| 0))& (0+255)
  3070  027D  120A  118A  2576  120A  118A  	fcall	_memset
  3071  0282                     l1175:	
  3072                           
  3073                           ;screen.c: 38:     if(con.derecha == 1 && con.ficha_Hpos<4){
  3074  0282  1283               	bcf	3,5	;RP0=0, select bank0
  3075  0283  1303               	bcf	3,6	;RP1=0, select bank0
  3076  0284  0349               	decf	_con+6,w
  3077  0285  1D03               	btfss	3,2
  3078  0286  2A88               	goto	u611
  3079  0287  2A89               	goto	u610
  3080  0288                     u611:	
  3081  0288  2A95               	goto	l1183
  3082  0289                     u610:	
  3083  0289                     l1177:	
  3084  0289  3004               	movlw	4
  3085  028A  0247               	subwf	_con+4,w
  3086  028B  1803               	skipnc
  3087  028C  2A8E               	goto	u621
  3088  028D  2A8F               	goto	u620
  3089  028E                     u621:	
  3090  028E  2A95               	goto	l1183
  3091  028F                     u620:	
  3092  028F                     l1179:	
  3093                           
  3094                           ;screen.c: 39:         con.ficha_Hpos++;
  3095  028F  3001               	movlw	1
  3096  0290  00A0               	movwf	??_drawFigure
  3097  0291  0820               	movf	??_drawFigure,w
  3098  0292  07C7               	addwf	_con+4,f
  3099  0293                     l1181:	
  3100                           
  3101                           ;screen.c: 40:         con.derecha = 0;
  3102  0293  01C9               	clrf	_con+6
  3103                           
  3104                           ;screen.c: 41:     }else if (con.izquierda == 1 && con.ficha_Hpos>0){
  3105  0294  2AA2               	goto	l1191
  3106  0295                     l1183:	
  3107  0295  034A               	decf	_con+7,w
  3108  0296  1D03               	btfss	3,2
  3109  0297  2A99               	goto	u631
  3110  0298  2A9A               	goto	u630
  3111  0299                     u631:	
  3112  0299  2AA2               	goto	l1191
  3113  029A                     u630:	
  3114  029A                     l1185:	
  3115  029A  0847               	movf	_con+4,w
  3116  029B  1903               	btfsc	3,2
  3117  029C  2A9E               	goto	u641
  3118  029D  2A9F               	goto	u640
  3119  029E                     u641:	
  3120  029E  2AA2               	goto	l1191
  3121  029F                     u640:	
  3122  029F                     l1187:	
  3123                           
  3124                           ;screen.c: 42:         con.ficha_Hpos--;
  3125  029F  3001               	movlw	1
  3126  02A0  02C7               	subwf	_con+4,f
  3127  02A1                     l1189:	
  3128                           
  3129                           ;screen.c: 43:         con.izquierda = 0;
  3130  02A1  01CA               	clrf	_con+7
  3131  02A2                     l1191:	
  3132                           
  3133                           ;screen.c: 46:     ficha[con.ficha_Hpos ] = figuras[con.ficha_actual][0] << (con.ficha_V
      +                          pos -1);
  3134  02A2  0846               	movf	_con+3,w
  3135  02A3  3EFF               	addlw	-1
  3136  02A4  00A0               	movwf	??_drawFigure
  3137  02A5  0AA0               	incf	??_drawFigure,f
  3138  02A6  0848               	movf	_con+5,w
  3139  02A7  00A1               	movwf	??_drawFigure+1
  3140  02A8  3002               	movlw	2
  3141  02A9                     u655:	
  3142  02A9  1003               	clrc
  3143  02AA  0DA1               	rlf	??_drawFigure+1,f
  3144  02AB  3EFF               	addlw	-1
  3145  02AC  1D03               	skipz
  3146  02AD  2AA9               	goto	u655
  3147  02AE  1003               	clrc
  3148  02AF  0D21               	rlf	??_drawFigure+1,w
  3149  02B0  3E90               	addlw	(low (_figuras| (0+256)))& (0+255)
  3150  02B1  0084               	movwf	4
  3151  02B2  1783               	bsf	3,7	;select IRP bank3
  3152  02B3  0800               	movf	0,w
  3153  02B4  00A2               	movwf	??_drawFigure+2
  3154  02B5  0A84               	incf	4,f
  3155  02B6  0800               	movf	0,w
  3156  02B7  00A3               	movwf	??_drawFigure+3
  3157  02B8  2ABC               	goto	u664
  3158  02B9                     u665:	
  3159  02B9  1003               	clrc
  3160  02BA  0DA2               	rlf	??_drawFigure+2,f
  3161  02BB  0DA3               	rlf	??_drawFigure+3,f
  3162  02BC                     u664:	
  3163  02BC  0BA0               	decfsz	??_drawFigure,f
  3164  02BD  2AB9               	goto	u665
  3165  02BE  0847               	movf	_con+4,w
  3166  02BF  00A4               	movwf	??_drawFigure+4
  3167  02C0  0724               	addwf	??_drawFigure+4,w
  3168  02C1  3EA0               	addlw	(low (_ficha| 0))& (0+255)
  3169  02C2  0084               	movwf	4
  3170  02C3  0822               	movf	??_drawFigure+2,w
  3171  02C4  1383               	bcf	3,7	;select IRP bank1
  3172  02C5  0080               	movwf	0
  3173  02C6  0A84               	incf	4,f
  3174  02C7  0823               	movf	??_drawFigure+3,w
  3175  02C8  0080               	movwf	0
  3176  02C9                     l1193:	
  3177                           
  3178                           ;screen.c: 47:     ficha[con.ficha_Hpos +1] = figuras[con.ficha_actual][1] << (con.ficha
      +                          _Vpos -1);
  3179  02C9  0846               	movf	_con+3,w
  3180  02CA  3EFF               	addlw	-1
  3181  02CB  00A0               	movwf	??_drawFigure
  3182  02CC  0AA0               	incf	??_drawFigure,f
  3183  02CD  0848               	movf	_con+5,w
  3184  02CE  00A1               	movwf	??_drawFigure+1
  3185  02CF  3002               	movlw	2
  3186  02D0                     u675:	
  3187  02D0  1003               	clrc
  3188  02D1  0DA1               	rlf	??_drawFigure+1,f
  3189  02D2  3EFF               	addlw	-1
  3190  02D3  1D03               	skipz
  3191  02D4  2AD0               	goto	u675
  3192  02D5  1003               	clrc
  3193  02D6  0D21               	rlf	??_drawFigure+1,w
  3194  02D7  3E92               	addlw	(low ((_figuras| (0+256)+2)))& (0+255)
  3195  02D8  0084               	movwf	4
  3196  02D9  1783               	bsf	3,7	;select IRP bank3
  3197  02DA  0800               	movf	0,w
  3198  02DB  00A2               	movwf	??_drawFigure+2
  3199  02DC  0A84               	incf	4,f
  3200  02DD  0800               	movf	0,w
  3201  02DE  00A3               	movwf	??_drawFigure+3
  3202  02DF  2AE3               	goto	u684
  3203  02E0                     u685:	
  3204  02E0  1003               	clrc
  3205  02E1  0DA2               	rlf	??_drawFigure+2,f
  3206  02E2  0DA3               	rlf	??_drawFigure+3,f
  3207  02E3                     u684:	
  3208  02E3  0BA0               	decfsz	??_drawFigure,f
  3209  02E4  2AE0               	goto	u685
  3210  02E5  0847               	movf	_con+4,w
  3211  02E6  00A4               	movwf	??_drawFigure+4
  3212  02E7  0724               	addwf	??_drawFigure+4,w
  3213  02E8  3EA2               	addlw	(low ((_ficha| 0+2)))& (0+255)
  3214  02E9  0084               	movwf	4
  3215  02EA  0822               	movf	??_drawFigure+2,w
  3216  02EB  1383               	bcf	3,7	;select IRP bank1
  3217  02EC  0080               	movwf	0
  3218  02ED  0A84               	incf	4,f
  3219  02EE  0823               	movf	??_drawFigure+3,w
  3220  02EF  0080               	movwf	0
  3221  02F0                     l1195:	
  3222                           
  3223                           ;screen.c: 48:     ficha[con.ficha_Hpos +2] = figuras[con.ficha_actual][2] << (con.ficha
      +                          _Vpos -1);
  3224  02F0  0846               	movf	_con+3,w
  3225  02F1  3EFF               	addlw	-1
  3226  02F2  00A0               	movwf	??_drawFigure
  3227  02F3  0AA0               	incf	??_drawFigure,f
  3228  02F4  0848               	movf	_con+5,w
  3229  02F5  00A1               	movwf	??_drawFigure+1
  3230  02F6  3002               	movlw	2
  3231  02F7                     u695:	
  3232  02F7  1003               	clrc
  3233  02F8  0DA1               	rlf	??_drawFigure+1,f
  3234  02F9  3EFF               	addlw	-1
  3235  02FA  1D03               	skipz
  3236  02FB  2AF7               	goto	u695
  3237  02FC  1003               	clrc
  3238  02FD  0D21               	rlf	??_drawFigure+1,w
  3239  02FE  3E94               	addlw	(low ((_figuras| (0+256)+4)))& (0+255)
  3240  02FF  0084               	movwf	4
  3241  0300  1783               	bsf	3,7	;select IRP bank3
  3242  0301  0800               	movf	0,w
  3243  0302  00A2               	movwf	??_drawFigure+2
  3244  0303  0A84               	incf	4,f
  3245  0304  0800               	movf	0,w
  3246  0305  00A3               	movwf	??_drawFigure+3
  3247  0306  2B0A               	goto	u704
  3248  0307                     u705:	
  3249  0307  1003               	clrc
  3250  0308  0DA2               	rlf	??_drawFigure+2,f
  3251  0309  0DA3               	rlf	??_drawFigure+3,f
  3252  030A                     u704:	
  3253  030A  0BA0               	decfsz	??_drawFigure,f
  3254  030B  2B07               	goto	u705
  3255  030C  0847               	movf	_con+4,w
  3256  030D  00A4               	movwf	??_drawFigure+4
  3257  030E  0724               	addwf	??_drawFigure+4,w
  3258  030F  3EA4               	addlw	(low ((_ficha| 0+4)))& (0+255)
  3259  0310  0084               	movwf	4
  3260  0311  0822               	movf	??_drawFigure+2,w
  3261  0312  1383               	bcf	3,7	;select IRP bank1
  3262  0313  0080               	movwf	0
  3263  0314  0A84               	incf	4,f
  3264  0315  0823               	movf	??_drawFigure+3,w
  3265  0316  0080               	movwf	0
  3266  0317                     l1197:	
  3267                           
  3268                           ;screen.c: 49:     ficha[con.ficha_Hpos +3] = figuras[con.ficha_actual][3] << (con.ficha
      +                          _Vpos -1);
  3269  0317  0846               	movf	_con+3,w
  3270  0318  3EFF               	addlw	-1
  3271  0319  00A0               	movwf	??_drawFigure
  3272  031A  0AA0               	incf	??_drawFigure,f
  3273  031B  0848               	movf	_con+5,w
  3274  031C  00A1               	movwf	??_drawFigure+1
  3275  031D  3002               	movlw	2
  3276  031E                     u715:	
  3277  031E  1003               	clrc
  3278  031F  0DA1               	rlf	??_drawFigure+1,f
  3279  0320  3EFF               	addlw	-1
  3280  0321  1D03               	skipz
  3281  0322  2B1E               	goto	u715
  3282  0323  1003               	clrc
  3283  0324  0D21               	rlf	??_drawFigure+1,w
  3284  0325  3E96               	addlw	(low ((_figuras| (0+256)+6)))& (0+255)
  3285  0326  0084               	movwf	4
  3286  0327  1783               	bsf	3,7	;select IRP bank3
  3287  0328  0800               	movf	0,w
  3288  0329  00A2               	movwf	??_drawFigure+2
  3289  032A  0A84               	incf	4,f
  3290  032B  0800               	movf	0,w
  3291  032C  00A3               	movwf	??_drawFigure+3
  3292  032D  2B31               	goto	u724
  3293  032E                     u725:	
  3294  032E  1003               	clrc
  3295  032F  0DA2               	rlf	??_drawFigure+2,f
  3296  0330  0DA3               	rlf	??_drawFigure+3,f
  3297  0331                     u724:	
  3298  0331  0BA0               	decfsz	??_drawFigure,f
  3299  0332  2B2E               	goto	u725
  3300  0333  0847               	movf	_con+4,w
  3301  0334  00A4               	movwf	??_drawFigure+4
  3302  0335  0724               	addwf	??_drawFigure+4,w
  3303  0336  3EA6               	addlw	(low ((_ficha| 0+6)))& (0+255)
  3304  0337  0084               	movwf	4
  3305  0338  0822               	movf	??_drawFigure+2,w
  3306  0339  1383               	bcf	3,7	;select IRP bank1
  3307  033A  0080               	movwf	0
  3308  033B  0A84               	incf	4,f
  3309  033C  0823               	movf	??_drawFigure+3,w
  3310  033D  0080               	movwf	0
  3311  033E                     l175:	
  3312  033E  0008               	return
  3313  033F                     __end_of_drawFigure:	
  3314                           
  3315                           	psect	text19
  3316  0576                     __ptext19:	
  3317 ;; *************** function _memset *****************
  3318 ;; Defined at:
  3319 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\memset.c"
  3320 ;; Parameters:    Size  Location     Type
  3321 ;;  p1              1    wreg     PTR void 
  3322 ;;		 -> ficha(16), fondo(16), 
  3323 ;;  c               2    2[COMMON] int 
  3324 ;;  n               2    4[COMMON] unsigned int 
  3325 ;; Auto vars:     Size  Location     Type
  3326 ;;  p1              1    8[COMMON] PTR void 
  3327 ;;		 -> ficha(16), fondo(16), 
  3328 ;;  p               1    7[COMMON] PTR unsigned char 
  3329 ;;		 -> ficha(16), fondo(16), 
  3330 ;; Return value:  Size  Location     Type
  3331 ;;                  1    wreg      PTR void 
  3332 ;; Registers used:
  3333 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3334 ;; Tracked objects:
  3335 ;;		On entry : 0/0
  3336 ;;		On exit  : 0/0
  3337 ;;		Unchanged: 0/0
  3338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3339 ;;      Params:         4       0       0       0       0
  3340 ;;      Locals:         2       0       0       0       0
  3341 ;;      Temps:          1       0       0       0       0
  3342 ;;      Totals:         7       0       0       0       0
  3343 ;;Total ram usage:        7 bytes
  3344 ;; Hardware stack levels used:    1
  3345 ;; Hardware stack levels required when called:    1
  3346 ;; This function calls:
  3347 ;;		Nothing
  3348 ;; This function is called by:
  3349 ;;		_checkCount
  3350 ;;		_drawFigure
  3351 ;; This function uses a non-reentrant model
  3352 ;;
  3353                           
  3354                           
  3355                           ;psect for function _memset
  3356  0576                     _memset:	
  3357                           
  3358                           ;incstack = 0
  3359                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0]
  3360                           ;memset@p1 stored from wreg
  3361  0576  00F8               	movwf	memset@p1
  3362  0577                     l1129:	
  3363  0577  0878               	movf	memset@p1,w
  3364  0578  00F6               	movwf	??_memset
  3365  0579  0876               	movf	??_memset,w
  3366  057A  00F7               	movwf	memset@p
  3367  057B  2D87               	goto	l1135
  3368  057C                     l1131:	
  3369  057C  0872               	movf	memset@c,w
  3370  057D  00F6               	movwf	??_memset
  3371  057E  0877               	movf	memset@p,w
  3372  057F  0084               	movwf	4
  3373  0580  0876               	movf	??_memset,w
  3374  0581  1383               	bcf	3,7	;select IRP bank0
  3375  0582  0080               	movwf	0
  3376  0583                     l1133:	
  3377  0583  3001               	movlw	1
  3378  0584  00F6               	movwf	??_memset
  3379  0585  0876               	movf	??_memset,w
  3380  0586  07F7               	addwf	memset@p,f
  3381  0587                     l1135:	
  3382  0587  3001               	movlw	1
  3383  0588  02F4               	subwf	memset@n,f
  3384  0589  3000               	movlw	0
  3385  058A  1C03               	skipc
  3386  058B  03F5               	decf	memset@n+1,f
  3387  058C  02F5               	subwf	memset@n+1,f
  3388  058D  0A74               	incf	memset@n,w
  3389  058E  1D03               	skipz
  3390  058F  2D94               	goto	u541
  3391  0590  0A75               	incf	memset@n+1,w
  3392  0591  1D03               	btfss	3,2
  3393  0592  2D94               	goto	u541
  3394  0593  2D95               	goto	u540
  3395  0594                     u541:	
  3396  0594  2D7C               	goto	l1131
  3397  0595                     u540:	
  3398  0595                     l709:	
  3399  0595  0008               	return
  3400  0596                     __end_of_memset:	
  3401                           
  3402                           	psect	text20
  3403  033F                     __ptext20:	
  3404 ;; *************** function ___awmod *****************
  3405 ;; Defined at:
  3406 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  3407 ;; Parameters:    Size  Location     Type
  3408 ;;  divisor         2   11[BANK0 ] int 
  3409 ;;  dividend        2   13[BANK0 ] int 
  3410 ;; Auto vars:     Size  Location     Type
  3411 ;;  sign            1   16[BANK0 ] unsigned char 
  3412 ;;  counter         1   15[BANK0 ] unsigned char 
  3413 ;; Return value:  Size  Location     Type
  3414 ;;                  2   11[BANK0 ] int 
  3415 ;; Registers used:
  3416 ;;		wreg, status,2, status,0
  3417 ;; Tracked objects:
  3418 ;;		On entry : 0/0
  3419 ;;		On exit  : 0/0
  3420 ;;		Unchanged: 0/0
  3421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3422 ;;      Params:         0       4       0       0       0
  3423 ;;      Locals:         0       2       0       0       0
  3424 ;;      Temps:          1       0       0       0       0
  3425 ;;      Totals:         1       6       0       0       0
  3426 ;;Total ram usage:        7 bytes
  3427 ;; Hardware stack levels used:    1
  3428 ;; Hardware stack levels required when called:    1
  3429 ;; This function calls:
  3430 ;;		Nothing
  3431 ;; This function is called by:
  3432 ;;		_main
  3433 ;;		_checkCount
  3434 ;; This function uses a non-reentrant model
  3435 ;;
  3436                           
  3437                           
  3438                           ;psect for function ___awmod
  3439  033F                     ___awmod:	
  3440  033F                     l1221:	
  3441                           ;incstack = 0
  3442                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3443                           
  3444  033F  1283               	bcf	3,5	;RP0=0, select bank0
  3445  0340  1303               	bcf	3,6	;RP1=0, select bank0
  3446  0341  01B0               	clrf	___awmod@sign
  3447  0342                     l1223:	
  3448  0342  1FAE               	btfss	___awmod@dividend+1,7
  3449  0343  2B45               	goto	u761
  3450  0344  2B46               	goto	u760
  3451  0345                     u761:	
  3452  0345  2B4D               	goto	l1229
  3453  0346                     u760:	
  3454  0346                     l1225:	
  3455  0346  09AD               	comf	___awmod@dividend,f
  3456  0347  09AE               	comf	___awmod@dividend+1,f
  3457  0348  0AAD               	incf	___awmod@dividend,f
  3458  0349  1903               	skipnz
  3459  034A  0AAE               	incf	___awmod@dividend+1,f
  3460  034B                     l1227:	
  3461  034B  01B0               	clrf	___awmod@sign
  3462  034C  0AB0               	incf	___awmod@sign,f
  3463  034D                     l1229:	
  3464  034D  1FAC               	btfss	___awmod@divisor+1,7
  3465  034E  2B50               	goto	u771
  3466  034F  2B51               	goto	u770
  3467  0350                     u771:	
  3468  0350  2B56               	goto	l1233
  3469  0351                     u770:	
  3470  0351                     l1231:	
  3471  0351  09AB               	comf	___awmod@divisor,f
  3472  0352  09AC               	comf	___awmod@divisor+1,f
  3473  0353  0AAB               	incf	___awmod@divisor,f
  3474  0354  1903               	skipnz
  3475  0355  0AAC               	incf	___awmod@divisor+1,f
  3476  0356                     l1233:	
  3477  0356  082B               	movf	___awmod@divisor,w
  3478  0357  042C               	iorwf	___awmod@divisor+1,w
  3479  0358  1903               	btfsc	3,2
  3480  0359  2B5B               	goto	u781
  3481  035A  2B5C               	goto	u780
  3482  035B                     u781:	
  3483  035B  2B8B               	goto	l1251
  3484  035C                     u780:	
  3485  035C                     l1235:	
  3486  035C  01AF               	clrf	___awmod@counter
  3487  035D  0AAF               	incf	___awmod@counter,f
  3488  035E  2B6A               	goto	l1241
  3489  035F                     l1237:	
  3490  035F  3001               	movlw	1
  3491  0360                     u795:	
  3492  0360  1003               	clrc
  3493  0361  0DAB               	rlf	___awmod@divisor,f
  3494  0362  0DAC               	rlf	___awmod@divisor+1,f
  3495  0363  3EFF               	addlw	-1
  3496  0364  1D03               	skipz
  3497  0365  2B60               	goto	u795
  3498  0366                     l1239:	
  3499  0366  3001               	movlw	1
  3500  0367  00FB               	movwf	??___awmod
  3501  0368  087B               	movf	??___awmod,w
  3502  0369  07AF               	addwf	___awmod@counter,f
  3503  036A                     l1241:	
  3504  036A  1FAC               	btfss	___awmod@divisor+1,7
  3505  036B  2B6D               	goto	u801
  3506  036C  2B6E               	goto	u800
  3507  036D                     u801:	
  3508  036D  2B5F               	goto	l1237
  3509  036E                     u800:	
  3510  036E                     l1243:	
  3511  036E  082C               	movf	___awmod@divisor+1,w
  3512  036F  022E               	subwf	___awmod@dividend+1,w
  3513  0370  1D03               	skipz
  3514  0371  2B74               	goto	u815
  3515  0372  082B               	movf	___awmod@divisor,w
  3516  0373  022D               	subwf	___awmod@dividend,w
  3517  0374                     u815:	
  3518  0374  1C03               	skipc
  3519  0375  2B77               	goto	u811
  3520  0376  2B78               	goto	u810
  3521  0377                     u811:	
  3522  0377  2B7E               	goto	l1247
  3523  0378                     u810:	
  3524  0378                     l1245:	
  3525  0378  082B               	movf	___awmod@divisor,w
  3526  0379  02AD               	subwf	___awmod@dividend,f
  3527  037A  082C               	movf	___awmod@divisor+1,w
  3528  037B  1C03               	skipc
  3529  037C  03AE               	decf	___awmod@dividend+1,f
  3530  037D  02AE               	subwf	___awmod@dividend+1,f
  3531  037E                     l1247:	
  3532  037E  3001               	movlw	1
  3533  037F                     u825:	
  3534  037F  1003               	clrc
  3535  0380  0CAC               	rrf	___awmod@divisor+1,f
  3536  0381  0CAB               	rrf	___awmod@divisor,f
  3537  0382  3EFF               	addlw	-1
  3538  0383  1D03               	skipz
  3539  0384  2B7F               	goto	u825
  3540  0385                     l1249:	
  3541  0385  3001               	movlw	1
  3542  0386  02AF               	subwf	___awmod@counter,f
  3543  0387  1D03               	btfss	3,2
  3544  0388  2B8A               	goto	u831
  3545  0389  2B8B               	goto	u830
  3546  038A                     u831:	
  3547  038A  2B6E               	goto	l1243
  3548  038B                     u830:	
  3549  038B                     l1251:	
  3550  038B  0830               	movf	___awmod@sign,w
  3551  038C  1903               	btfsc	3,2
  3552  038D  2B8F               	goto	u841
  3553  038E  2B90               	goto	u840
  3554  038F                     u841:	
  3555  038F  2B95               	goto	l1255
  3556  0390                     u840:	
  3557  0390                     l1253:	
  3558  0390  09AD               	comf	___awmod@dividend,f
  3559  0391  09AE               	comf	___awmod@dividend+1,f
  3560  0392  0AAD               	incf	___awmod@dividend,f
  3561  0393  1903               	skipnz
  3562  0394  0AAE               	incf	___awmod@dividend+1,f
  3563  0395                     l1255:	
  3564  0395  082E               	movf	___awmod@dividend+1,w
  3565  0396  00AC               	movwf	?___awmod+1
  3566  0397  082D               	movf	___awmod@dividend,w
  3567  0398  00AB               	movwf	?___awmod
  3568  0399                     l427:	
  3569  0399  0008               	return
  3570  039A                     __end_of___awmod:	
  3571                           
  3572                           	psect	text21
  3573  0542                     __ptext21:	
  3574 ;; *************** function _Timer0_ISR *****************
  3575 ;; Defined at:
  3576 ;;		line 144 in file "mainsource.c"
  3577 ;; Parameters:    Size  Location     Type
  3578 ;;		None
  3579 ;; Auto vars:     Size  Location     Type
  3580 ;;		None
  3581 ;; Return value:  Size  Location     Type
  3582 ;;                  1    wreg      void 
  3583 ;; Registers used:
  3584 ;;		wreg, status,2
  3585 ;; Tracked objects:
  3586 ;;		On entry : 0/0
  3587 ;;		On exit  : 0/0
  3588 ;;		Unchanged: 0/0
  3589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3590 ;;      Params:         0       0       0       0       0
  3591 ;;      Locals:         0       0       0       0       0
  3592 ;;      Temps:          2       0       0       0       0
  3593 ;;      Totals:         2       0       0       0       0
  3594 ;;Total ram usage:        2 bytes
  3595 ;; Hardware stack levels used:    1
  3596 ;; This function calls:
  3597 ;;		Nothing
  3598 ;; This function is called by:
  3599 ;;		Interrupt level 1
  3600 ;; This function uses a non-reentrant model
  3601 ;;
  3602                           
  3603                           
  3604                           ;psect for function _Timer0_ISR
  3605  0542                     _Timer0_ISR:	
  3606  0542                     i1l1427:	
  3607                           
  3608                           ;mainsource.c: 145:     if(INTCONbits.TMR0IF){
  3609  0542  1D0B               	btfss	11,2	;volatile
  3610  0543  2D45               	goto	u100_21
  3611  0544  2D46               	goto	u100_20
  3612  0545                     u100_21:	
  3613  0545  2D5A               	goto	i1l107
  3614  0546                     u100_20:	
  3615  0546                     i1l1429:	
  3616                           
  3617                           ;mainsource.c: 146:         INTCONbits.TMR0IF=0;
  3618  0546  110B               	bcf	11,2	;volatile
  3619  0547                     i1l1431:	
  3620                           
  3621                           ;mainsource.c: 147:         timerCount ++;
  3622  0547  3001               	movlw	1
  3623  0548  1283               	bcf	3,5	;RP0=0, select bank0
  3624  0549  1303               	bcf	3,6	;RP1=0, select bank0
  3625  054A  07CC               	addwf	_timerCount,f
  3626  054B  3000               	movlw	0
  3627  054C  1803               	skipnc
  3628  054D  3001               	movlw	1
  3629  054E  07CD               	addwf	_timerCount+1,f
  3630  054F  3000               	movlw	0
  3631  0550  1803               	skipnc
  3632  0551  3001               	movlw	1
  3633  0552  07CE               	addwf	_timerCount+2,f
  3634  0553  3000               	movlw	0
  3635  0554  1803               	skipnc
  3636  0555  3001               	movlw	1
  3637  0556  07CF               	addwf	_timerCount+3,f
  3638  0557                     i1l1433:	
  3639                           
  3640                           ;mainsource.c: 148:         con.check_count = 1;
  3641  0557  01CB               	clrf	_con+8
  3642  0558  0ACB               	incf	_con+8,f
  3643                           
  3644                           ;mainsource.c: 149:     }
  3645  0559  2D6F               	goto	i1l112
  3646  055A                     i1l107:	
  3647                           ;mainsource.c: 150:     else if(INTCONbits.RBIF){
  3648                           
  3649  055A  1C0B               	btfss	11,0	;volatile
  3650  055B  2D5D               	goto	u101_21
  3651  055C  2D5E               	goto	u101_20
  3652  055D                     u101_21:	
  3653  055D  2D6F               	goto	i1l112
  3654  055E                     u101_20:	
  3655  055E                     i1l1435:	
  3656                           
  3657                           ;mainsource.c: 151:         if(PORTBbits.RB5 == 0){
  3658  055E  1283               	bcf	3,5	;RP0=0, select bank0
  3659  055F  1303               	bcf	3,6	;RP1=0, select bank0
  3660  0560  1A86               	btfsc	6,5	;volatile
  3661  0561  2D63               	goto	u102_21
  3662  0562  2D64               	goto	u102_20
  3663  0563                     u102_21:	
  3664  0563  2D67               	goto	i1l1441
  3665  0564                     u102_20:	
  3666  0564                     i1l1437:	
  3667                           
  3668                           ;mainsource.c: 152:             con.derecha = 1;
  3669  0564  01C9               	clrf	_con+6
  3670  0565  0AC9               	incf	_con+6,f
  3671  0566                     i1l1439:	
  3672                           
  3673                           ;mainsource.c: 153:             con.izquierda = 0;
  3674  0566  01CA               	clrf	_con+7
  3675  0567                     i1l1441:	
  3676                           
  3677                           ;mainsource.c: 155:         if(PORTBbits.RB4 == 0){
  3678  0567  1A06               	btfsc	6,4	;volatile
  3679  0568  2D6A               	goto	u103_21
  3680  0569  2D6B               	goto	u103_20
  3681  056A                     u103_21:	
  3682  056A  2D6E               	goto	i1l1447
  3683  056B                     u103_20:	
  3684  056B                     i1l1443:	
  3685                           
  3686                           ;mainsource.c: 156:             con.derecha = 0;
  3687  056B  01C9               	clrf	_con+6
  3688  056C                     i1l1445:	
  3689                           
  3690                           ;mainsource.c: 157:             con.izquierda = 1;
  3691  056C  01CA               	clrf	_con+7
  3692  056D  0ACA               	incf	_con+7,f
  3693  056E                     i1l1447:	
  3694                           
  3695                           ;mainsource.c: 159:         INTCONbits.RBIF=0;
  3696  056E  100B               	bcf	11,0	;volatile
  3697  056F                     i1l112:	
  3698  056F  0871               	movf	??_Timer0_ISR+1,w
  3699  0570  008A               	movwf	10
  3700  0571  0E70               	swapf	??_Timer0_ISR^(0+4294967168),w
  3701  0572  0083               	movwf	3
  3702  0573  0EFE               	swapf	btemp,f
  3703  0574  0E7E               	swapf	btemp,w
  3704  0575  0009               	retfie
  3705  0576                     __end_of_Timer0_ISR:	
  3706  007E                     btemp	set	126	;btemp
  3707  007E                     wtemp0	set	126
  3708                           
  3709                           	psect	intentry
  3710  0004                     __pintentry:	
  3711                           ;incstack = 0
  3712                           ; Regs used in _Timer0_ISR: [wreg+status,2]
  3713                           
  3714  0004                     interrupt_function:	
  3715  007E                     saved_w	set	btemp
  3716  0004  00FE               	movwf	btemp
  3717  0005  0E03               	swapf	3,w
  3718  0006  00F0               	movwf	??_Timer0_ISR
  3719  0007  080A               	movf	10,w
  3720  0008  00F1               	movwf	??_Timer0_ISR+1
  3721  0009  120A  118A  2D42   	ljmp	_Timer0_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        60
    BSS         61
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     39      72
    BANK1            80      0      32
    BANK3            96      0      56
    BANK2            96      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(1) Largest target is 16
		 -> ficha(BANK1[16]), fondo(BANK0[16]), 

    memset@p	PTR unsigned char  size(1) Largest target is 16
		 -> ficha(BANK1[16]), fondo(BANK0[16]), 

    updateScreen@screen	PTR unsigned int  size(1) Largest target is 16
		 -> pantalla(BANK1[16]), 

    sp__memset	PTR void  size(1) Largest target is 16
		 -> ficha(BANK1[16]), fondo(BANK0[16]), 


Critical Paths under _main in COMMON

    _main->___awmod
    _updateScreen->_setFilas
    _checkCount->___awmod
    _rand->___lmul
    _drawFigure->_memset

Critical Paths under _Timer0_ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_checkCount
    _checkCount->___awmod
    _rand->___lmul
    ___awmod->_rand

Critical Paths under _Timer0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer0_ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     5      4    4672
                                             30 BANK0      9     5      4
                            ___awmod
                         _checkCount
                     _init_interrupt
                         _init_pines
                         _init_timer
                               _rand
                              _srand
                       _updateScreen
 ---------------------------------------------------------------------------------
 (1) _updateScreen                                         5     5      0     364
                                              0 BANK0      5     5      0
                           _setFilas
                    _shiftBitColumna
 ---------------------------------------------------------------------------------
 (2) _shiftBitColumna                                      2     2      0      22
                                              2 COMMON     2     2      0
                     _latchClock_Col
                     _latchClock_Fil
                     _shiftClock_Col
 ---------------------------------------------------------------------------------
 (3) _shiftClock_Col                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _latchClock_Fil                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _latchClock_Col                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setFilas                                            10     8      2     265
                                              2 COMMON    10     8      2
                     _shiftClock_Fil
 ---------------------------------------------------------------------------------
 (3) _shiftClock_Fil                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_pines                                           0     0      0       0
                     _init_pines_col
                     _init_pines_fil
                      _init_pines_in
 ---------------------------------------------------------------------------------
 (2) _init_pines_in                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_pines_fil                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_pines_col                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_interrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkCount                                          13    13      0    3060
                                             17 BANK0     13    13      0
                            ___awmod
                         _drawFigure
                             _memset
                               _rand
 ---------------------------------------------------------------------------------
 (1) _rand                                                 7     5      2     244
                                              4 BANK0      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     244
                                              2 COMMON     9     1      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _drawFigure                                           5     5      0     651
                                              0 BANK0      5     5      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               7     3      4     651
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     904
                                             11 COMMON     1     1      0
                                             11 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Timer0_ISR                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awmod
     _rand (ARG)
       ___lmul
   _checkCount
     ___awmod
       _rand (ARG)
         ___lmul
     _drawFigure
       _memset
     _memset
     _rand
       ___lmul
   _init_interrupt
   _init_pines
     _init_pines_col
     _init_pines_fil
     _init_pines_in
   _init_timer
   _rand
     ___lmul
   _srand
   _updateScreen
     _setFilas
       _shiftClock_Fil
     _shiftBitColumna
       _latchClock_Col
       _latchClock_Fil
       _shiftClock_Col

 _Timer0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      38       9       58.3%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      20       7       40.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     27      48       5       90.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      AC      12        0.0%
ABS                  0      0      AC       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun May 03 16:15:07 2020

                       pc 0002               __CFG_CP$OFF 0000          ??_init_interrupt 0072  
                      l21 060D                        l30 05E7                        l24 0602  
                      l33 0626                        l27 05D7                        l36 05F5  
                      l88 01A3                        fsr 0004          ??_init_pines_col 0072  
        ??_init_pines_fil 0072                       l102 0274                       l120 0638  
                     l132 063D                       l125 0509                       l117 0632  
                     l135 062C                       l143 05B1                       l166 047F  
                     l175 033E                       l427 0399                       l275 0434  
                     l714 0616                       l709 0595                       l717 04C6  
                     u600 04BE                       u610 0289              __CFG_CPD$OFF 0000  
                     u611 0288                       u540 0595                       u620 028F  
                     u541 0594                       u621 028E                       u605 04B9  
                     u630 029A                       u550 03F7                       u631 0299  
                     u551 03F6                       u800 036E                       u704 030A  
                     u640 029F                       u801 036D                       u705 0307  
                     u641 029E                       u561 0402                       u810 0378  
                     u562 0409                       u730 04D8                       u811 0377  
                     u715 031E                       u563 0410                       u731 04D7  
                     u724 0331                       u900 0140                       u725 032E  
                     u901 013F                       u830 038B                       u590 042A  
                     u910 017C                       u831 038A                       u815 0374  
                     u655 02A9                       u591 0429                       u575 0412  
                     u911 017B                       u735 04D4                       u840 0390  
                     u760 0346                       u664 02BC                       u920 01B8  
                     u744 04E3                       u841 038F                       u825 037F  
                     u761 0345                       u665 02B9                       u585 041A  
                     u921 01B7                       u745 04E0                       u770 0351  
                     u930 01CD                       u850 0046                       u754 04F0  
                     u771 0350                       u675 02D0                       u931 01CC  
                     u915 0178                       u851 0045                       u755 04ED  
                     u780 035C                       u684 02E3                       u940 021B  
                     u860 0059                       u781 035B                       u685 02E0  
                     u941 021A                       u925 01B4                       u861 0058  
                     u870 0071                       u695 02F7                       u871 0070  
                     u863 0055                       u960 0248                       u880 00AD  
                     u961 0247                       u945 0217                       u881 00AC  
                     u970 025C                       u954 023A                       u890 0110  
                     u795 0360                       u971 025B                       u955 0237  
                     u891 010F                       u980 0271                       u981 0270  
                     u885 00A9                       u990 043E                       u975 0258  
                     u895 010C                       u991 043D                       u985 026D  
                     _con 0043                       fsr0 0004                       indf 0000  
            ___awmod@sign 0030              __CFG_FOSC$XT 0000              __CFG_LVP$OFF 0000  
                    l1201 04CB                      l1131 057C                      l1221 033F  
                    l1133 0583                      l1205 04D9                      l1141 0639  
                    l1213 0597                      l1231 0351                      l1223 0342  
                    l1135 0587                      l1151 0410                      l1311 00B3  
                    l1303 0073                      l1207 04FD                      l1143 0627  
                    l1215 05A2                      l1241 036A                      l1233 0356  
                    l1225 0346                      l1129 0577                      l1153 0419  
                    l1145 03E9                      l1321 00D6                      l1305 009A  
                    l1313 00CD                      l1161 05F6                      l1209 0502  
                    l1137 062D                      l1217 05A7                      l1401 045E  
                    l1243 036E                      l1235 035C                      l1251 038B  
                    l1227 034B                      l1155 042A                      l1147 03F3  
                    l1331 0140                      l1323 00FD                      l1315 00D2  
                    l1307 00A0                      l1163 05C5                      l1139 0633  
                    l1219 05AC                      l1403 0462                      l1411 03A9  
                    l1253 0390                      l1245 0378                      l1237 035F  
                    l1229 034D                      l1181 0293                      l1173 0275  
                    l1149 03F7                      l1165 0480                      l1341 016F  
                    l1325 0103                      l1309 00AD                      l1261 061F  
                    l1405 0479                      l1421 03BE                      l1413 03A9  
                    l1255 0395                      l1247 037E                      l1239 0366  
                    l1191 02A2                      l1183 0295                      l1175 0282  
                    l1167 04A1                      l1343 017C                      l1327 0110  
                    l1159 0603                      l1271 05EE                      l1263 05E8  
                    l1423 03DA                      l1415 03AD                      l1407 039A  
                    l1249 0385                      l1193 02C9                      l1185 029A  
                    l1177 0289                      l1169 04AF                      l1361 01ED  
                    l1345 0182                      l1337 0142                      l1329 011A  
                    l1273 05F1                      l1265 05EB                      l1281 060E  
                    l1425 03DF                      l1417 03B1                      l1409 03A9  
                    l1195 02F0                      l1187 029F                      l1179 028F  
                    l1363 0208                      l1355 01BC                      l1339 0169  
                    l1347 019D                      l1291 005E                      l1283 003F  
                    l1259 05D8                      l1275 05F2                      l1267 05EC  
                    l1419 03B5                      l1197 0317                      l1189 02A1  
                    l1373 021F                      l1365 020E                      l1357 01CD  
                    l1349 01B8                      l1293 0062                      l1285 0046  
                    l1277 05F3                      l1269 05ED                      l1383 0249  
                    l1367 021B                      l1359 01E7                      l1295 006C  
                    l1391 0271                      l1287 0048                      l1279 05F4  
                    l1199 04C7                      l1385 024F                      l1297 0071  
                    l1289 0059                      l1393 0438                      l1387 025C  
                    l1379 0223                      l1395 043E                      l1389 0264  
                    l1397 0440                      l1399 0457                      _TMR0 0001  
            __CFG_WRT$OFF 0000                      _main 039A                      _rand 0480  
                    btemp 007E             __CFG_BOREN$ON 0000                      start 000C  
      shiftBitColumna@bit 0073                     ?_main 003E                     ?_rand 0024  
           __CFG_WDTE$OFF 0000           __end_of___awmod 039A                     i1l112 056F  
                   i1l107 055A       ___lmul@multiplicand 0076                     _ficha 00A0  
                   _fondo 0050                     _randx 0060                     _srand 060E  
                   pclath 000A                     status 0003                     wtemp0 007E  
         __initialization 000F              __end_of_main 03E9              __end_of_rand 04C7  
          _latchClock_Fil 062D            _latchClock_Col 0639   __size_of_shiftClock_Fil 0006  
 __size_of_shiftClock_Col 0006                    ??_main 0042                    ??_rand 0026  
                  ?_srand 0072                    u100_20 0546                    u100_21 0545  
                  u101_20 055E                    u101_21 055D                    u102_20 0564  
                  u102_21 0563                    u103_20 056B                    u103_21 056A  
                  i1l1431 0547                    i1l1441 0567                    i1l1433 0557  
                  i1l1443 056B                    i1l1435 055E                    i1l1427 0542  
                  i1l1445 056C                    i1l1437 0564                    i1l1429 0546  
                  i1l1447 056E                    i1l1439 0566            __CFG_PWRTE$OFF 0000  
              _Timer0_ISR 0542    __end_of_latchClock_Col 063E    __end_of_latchClock_Fil 0633  
                  ___lmul 03E9                 ??___awmod 007B                    _memset 0576  
         ___awmod@divisor 002B           ___awmod@counter 002F          __end_of_setFilas 050A  
  __size_of_init_pines_in 000B                    saved_w 007E                    srand@x 0072  
 __end_of__initialization 003B  __size_of_shiftBitColumna 001C        updateScreen@screen 0024  
         ?_latchClock_Col 0070           ?_latchClock_Fil 0070            __pcstackCOMMON 0070  
            __pidataBANK0 063E              __pidataBANK3 050A             __end_of_srand 0617  
          _OPTION_REGbits 0081                _checkCount 003F                   ??_srand 0074  
              __pbssBANK0 0043                __pbssBANK1 00A0             _init_pines_in 0603  
             ?_Timer0_ISR 0070                __pmaintext 039A                   ?___lmul 0072  
              __pintentry 0004            _shiftClock_Fil 0633            _shiftClock_Col 0627  
                 ?_memset 0072            ___lmul@product 0020                _drawFigure 0275  
          ?_init_pines_in 0070                 ?_setFilas 0072    __end_of_shiftClock_Fil 0639  
  __end_of_shiftClock_Col 062D           __size_of___lmul 004C                   ___awmod 033F  
       ??_shiftBitColumna 0072                _init_pines 05D8                _init_timer 05E8  
         __size_of_memset 0020                   __ptext1 0435                   __ptext2 0596  
                 __ptext3 0627                   __ptext4 062D                   __ptext5 0639  
                 __ptext6 04C7                   __ptext7 0633                   __ptext8 060E  
                 __ptext9 05E8                   _figuras 0190          ___awmod@dividend 002D  
     __size_of_Timer0_ISR 0034   __size_of_init_interrupt 0008                   clrloop0 0618  
             ?_checkCount 0070      end_of_initialization 003B   __size_of_init_pines_col 0013  
 __size_of_init_pines_fil 000D                   memset@c 0072                   memset@n 0074  
                 memset@p 0077                ??_setFilas 0074           ?_shiftClock_Col 0070  
         ?_shiftClock_Fil 0070                _timerCount 004C                 _PORTBbits 0006  
               _PORTCbits 0007                 _PORTDbits 0008               ?_drawFigure 0070  
               _TRISBbits 0086                 _TRISCbits 0087                 _TRISDbits 0088  
         ??_init_pines_in 0072          ??_latchClock_Col 0072          ??_latchClock_Fil 0072  
           ?_updateScreen 0070            __end_of___lmul 0435       __size_of_checkCount 0236  
             ?_init_pines 0070               ?_init_timer 0070            __end_of_memset 0596  
     start_initialization 000F            ??_updateScreen 0020              ??_Timer0_ISR 0070  
     __size_of_drawFigure 00CA                  ??___lmul 007A         setFilas@reg_value 0072  
              init_fetch0 05B2               __pdataBANK0 0060               __pdataBANK3 0190  
                ??_memset 0076                 ___latbits 0002             __pcstackBANK0 0020  
          _init_interrupt 061F        __end_of_Timer0_ISR 0576            _init_pines_fil 05F6  
          _init_pines_col 05C5       __size_of_init_pines 0010           _shiftBitColumna 0596  
     __size_of_init_timer 000E         __size_of_setFilas 0043                  ?___awmod 002B  
  __end_of_init_interrupt 0627    __end_of_init_pines_col 05D8    __end_of_init_pines_fil 0603  
            ??_checkCount 0031            __size_of_srand 0009         interrupt_function 0004  
        ??_shiftClock_Col 0072          ??_shiftClock_Fil 0072                 clear_ram0 0617  
      __end_of_checkCount 0275           ?_init_interrupt 0070              ??_drawFigure 0020  
    __end_of_updateScreen 0480           ?_init_pines_col 0070           ?_init_pines_fil 0070  
 __end_of_shiftBitColumna 05B2         ___lmul@multiplier 0072               checkCount@i 003C  
             checkCount@j 003A        __end_of_drawFigure 033F          __size_of___awmod 005B  
            ??_init_pines 0072              ??_init_timer 0072                 setFilas@i 007A  
                __ptext10 05D8                  __ptext11 0603                  __ptext20 033F  
                __ptext12 05F6                  __ptext21 0542                  __ptext13 05C5  
                __ptext14 061F                  __ptext15 003F                  __ptext16 0480  
                __ptext17 03E9                  __ptext18 0275                  __ptext19 0576  
   __end_of_init_pines_in 060E             __size_of_main 004F             __size_of_rand 0047  
      __end_of_init_pines 05E8        __end_of_init_timer 05F6                  _pantalla 00B0  
                _setFilas 04C7                  main@argc 003E                  main@argv 0040  
              _INTCONbits 000B                  init_ram0 05B6                  memset@p1 0078  
        ?_shiftBitColumna 0070                  intlevel1 0000   __size_of_latchClock_Col 0005  
 __size_of_latchClock_Fil 0006     __size_of_updateScreen 004B              _updateScreen 0435  
