

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu May 14 21:55:01 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	intentry,global,class=CODE,delta=2
    47                           	dabs	1,0x7E,2
    48  0000                     
    49                           ; Version 2.10
    50                           ; Generated 31/07/2019 GMT
    51                           ; 
    52                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16F877A Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  0006                     	;# 
    90  0007                     	;# 
    91  0008                     	;# 
    92  0009                     	;# 
    93  000A                     	;# 
    94  000B                     	;# 
    95  000C                     	;# 
    96  000D                     	;# 
    97  000E                     	;# 
    98  000E                     	;# 
    99  000F                     	;# 
   100  0010                     	;# 
   101  0011                     	;# 
   102  0012                     	;# 
   103  0013                     	;# 
   104  0014                     	;# 
   105  0015                     	;# 
   106  0015                     	;# 
   107  0016                     	;# 
   108  0017                     	;# 
   109  0018                     	;# 
   110  0019                     	;# 
   111  001A                     	;# 
   112  001B                     	;# 
   113  001B                     	;# 
   114  001C                     	;# 
   115  001D                     	;# 
   116  001E                     	;# 
   117  001F                     	;# 
   118  0081                     	;# 
   119  0085                     	;# 
   120  0086                     	;# 
   121  0087                     	;# 
   122  0088                     	;# 
   123  0089                     	;# 
   124  008C                     	;# 
   125  008D                     	;# 
   126  008E                     	;# 
   127  0091                     	;# 
   128  0092                     	;# 
   129  0093                     	;# 
   130  0094                     	;# 
   131  0098                     	;# 
   132  0099                     	;# 
   133  009C                     	;# 
   134  009D                     	;# 
   135  009E                     	;# 
   136  009F                     	;# 
   137  010C                     	;# 
   138  010D                     	;# 
   139  010E                     	;# 
   140  010F                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  0007                     	;# 
   151  0008                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000D                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0013                     	;# 
   164  0014                     	;# 
   165  0015                     	;# 
   166  0015                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001B                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001E                     	;# 
   177  001F                     	;# 
   178  0081                     	;# 
   179  0085                     	;# 
   180  0086                     	;# 
   181  0087                     	;# 
   182  0088                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  0091                     	;# 
   188  0092                     	;# 
   189  0093                     	;# 
   190  0094                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  018C                     	;# 
   202  018D                     	;# 
   203  0000                     	;# 
   204  0001                     	;# 
   205  0002                     	;# 
   206  0003                     	;# 
   207  0004                     	;# 
   208  0005                     	;# 
   209  0006                     	;# 
   210  0007                     	;# 
   211  0008                     	;# 
   212  0009                     	;# 
   213  000A                     	;# 
   214  000B                     	;# 
   215  000C                     	;# 
   216  000D                     	;# 
   217  000E                     	;# 
   218  000E                     	;# 
   219  000F                     	;# 
   220  0010                     	;# 
   221  0011                     	;# 
   222  0012                     	;# 
   223  0013                     	;# 
   224  0014                     	;# 
   225  0015                     	;# 
   226  0015                     	;# 
   227  0016                     	;# 
   228  0017                     	;# 
   229  0018                     	;# 
   230  0019                     	;# 
   231  001A                     	;# 
   232  001B                     	;# 
   233  001B                     	;# 
   234  001C                     	;# 
   235  001D                     	;# 
   236  001E                     	;# 
   237  001F                     	;# 
   238  0081                     	;# 
   239  0085                     	;# 
   240  0086                     	;# 
   241  0087                     	;# 
   242  0088                     	;# 
   243  0089                     	;# 
   244  008C                     	;# 
   245  008D                     	;# 
   246  008E                     	;# 
   247  0091                     	;# 
   248  0092                     	;# 
   249  0093                     	;# 
   250  0094                     	;# 
   251  0098                     	;# 
   252  0099                     	;# 
   253  009C                     	;# 
   254  009D                     	;# 
   255  009E                     	;# 
   256  009F                     	;# 
   257  010C                     	;# 
   258  010D                     	;# 
   259  010E                     	;# 
   260  010F                     	;# 
   261  018C                     	;# 
   262  018D                     	;# 
   263  0000                     	;# 
   264  0001                     	;# 
   265  0002                     	;# 
   266  0003                     	;# 
   267  0004                     	;# 
   268  0005                     	;# 
   269  0006                     	;# 
   270  0007                     	;# 
   271  0008                     	;# 
   272  0009                     	;# 
   273  000A                     	;# 
   274  000B                     	;# 
   275  000C                     	;# 
   276  000D                     	;# 
   277  000E                     	;# 
   278  000E                     	;# 
   279  000F                     	;# 
   280  0010                     	;# 
   281  0011                     	;# 
   282  0012                     	;# 
   283  0013                     	;# 
   284  0014                     	;# 
   285  0015                     	;# 
   286  0015                     	;# 
   287  0016                     	;# 
   288  0017                     	;# 
   289  0018                     	;# 
   290  0019                     	;# 
   291  001A                     	;# 
   292  001B                     	;# 
   293  001B                     	;# 
   294  001C                     	;# 
   295  001D                     	;# 
   296  001E                     	;# 
   297  001F                     	;# 
   298  0081                     	;# 
   299  0085                     	;# 
   300  0086                     	;# 
   301  0087                     	;# 
   302  0088                     	;# 
   303  0089                     	;# 
   304  008C                     	;# 
   305  008D                     	;# 
   306  008E                     	;# 
   307  0091                     	;# 
   308  0092                     	;# 
   309  0093                     	;# 
   310  0094                     	;# 
   311  0098                     	;# 
   312  0099                     	;# 
   313  009C                     	;# 
   314  009D                     	;# 
   315  009E                     	;# 
   316  009F                     	;# 
   317  010C                     	;# 
   318  010D                     	;# 
   319  010E                     	;# 
   320  010F                     	;# 
   321  018C                     	;# 
   322  018D                     	;# 
   323  0000                     	;# 
   324  0001                     	;# 
   325  0002                     	;# 
   326  0003                     	;# 
   327  0004                     	;# 
   328  0005                     	;# 
   329  0006                     	;# 
   330  0007                     	;# 
   331  0008                     	;# 
   332  0009                     	;# 
   333  000A                     	;# 
   334  000B                     	;# 
   335  000C                     	;# 
   336  000D                     	;# 
   337  000E                     	;# 
   338  000E                     	;# 
   339  000F                     	;# 
   340  0010                     	;# 
   341  0011                     	;# 
   342  0012                     	;# 
   343  0013                     	;# 
   344  0014                     	;# 
   345  0015                     	;# 
   346  0015                     	;# 
   347  0016                     	;# 
   348  0017                     	;# 
   349  0018                     	;# 
   350  0019                     	;# 
   351  001A                     	;# 
   352  001B                     	;# 
   353  001B                     	;# 
   354  001C                     	;# 
   355  001D                     	;# 
   356  001E                     	;# 
   357  001F                     	;# 
   358  0081                     	;# 
   359  0085                     	;# 
   360  0086                     	;# 
   361  0087                     	;# 
   362  0088                     	;# 
   363  0089                     	;# 
   364  008C                     	;# 
   365  008D                     	;# 
   366  008E                     	;# 
   367  0091                     	;# 
   368  0092                     	;# 
   369  0093                     	;# 
   370  0094                     	;# 
   371  0098                     	;# 
   372  0099                     	;# 
   373  009C                     	;# 
   374  009D                     	;# 
   375  009E                     	;# 
   376  009F                     	;# 
   377  010C                     	;# 
   378  010D                     	;# 
   379  010E                     	;# 
   380  010F                     	;# 
   381  018C                     	;# 
   382  018D                     	;# 
   383  0000                     	;# 
   384  0001                     	;# 
   385  0002                     	;# 
   386  0003                     	;# 
   387  0004                     	;# 
   388  0005                     	;# 
   389  0006                     	;# 
   390  0007                     	;# 
   391  0008                     	;# 
   392  0009                     	;# 
   393  000A                     	;# 
   394  000B                     	;# 
   395  000C                     	;# 
   396  000D                     	;# 
   397  000E                     	;# 
   398  000E                     	;# 
   399  000F                     	;# 
   400  0010                     	;# 
   401  0011                     	;# 
   402  0012                     	;# 
   403  0013                     	;# 
   404  0014                     	;# 
   405  0015                     	;# 
   406  0015                     	;# 
   407  0016                     	;# 
   408  0017                     	;# 
   409  0018                     	;# 
   410  0019                     	;# 
   411  001A                     	;# 
   412  001B                     	;# 
   413  001B                     	;# 
   414  001C                     	;# 
   415  001D                     	;# 
   416  001E                     	;# 
   417  001F                     	;# 
   418  0081                     	;# 
   419  0085                     	;# 
   420  0086                     	;# 
   421  0087                     	;# 
   422  0088                     	;# 
   423  0089                     	;# 
   424  008C                     	;# 
   425  008D                     	;# 
   426  008E                     	;# 
   427  0091                     	;# 
   428  0092                     	;# 
   429  0093                     	;# 
   430  0094                     	;# 
   431  0098                     	;# 
   432  0099                     	;# 
   433  009C                     	;# 
   434  009D                     	;# 
   435  009E                     	;# 
   436  009F                     	;# 
   437  010C                     	;# 
   438  010D                     	;# 
   439  010E                     	;# 
   440  010F                     	;# 
   441  018C                     	;# 
   442  018D                     	;# 
   443  0000                     	;# 
   444  0001                     	;# 
   445  0002                     	;# 
   446  0003                     	;# 
   447  0004                     	;# 
   448  0005                     	;# 
   449  0006                     	;# 
   450  0007                     	;# 
   451  0008                     	;# 
   452  0009                     	;# 
   453  000A                     	;# 
   454  000B                     	;# 
   455  000C                     	;# 
   456  000D                     	;# 
   457  000E                     	;# 
   458  000E                     	;# 
   459  000F                     	;# 
   460  0010                     	;# 
   461  0011                     	;# 
   462  0012                     	;# 
   463  0013                     	;# 
   464  0014                     	;# 
   465  0015                     	;# 
   466  0015                     	;# 
   467  0016                     	;# 
   468  0017                     	;# 
   469  0018                     	;# 
   470  0019                     	;# 
   471  001A                     	;# 
   472  001B                     	;# 
   473  001B                     	;# 
   474  001C                     	;# 
   475  001D                     	;# 
   476  001E                     	;# 
   477  001F                     	;# 
   478  0081                     	;# 
   479  0085                     	;# 
   480  0086                     	;# 
   481  0087                     	;# 
   482  0088                     	;# 
   483  0089                     	;# 
   484  008C                     	;# 
   485  008D                     	;# 
   486  008E                     	;# 
   487  0091                     	;# 
   488  0092                     	;# 
   489  0093                     	;# 
   490  0094                     	;# 
   491  0098                     	;# 
   492  0099                     	;# 
   493  009C                     	;# 
   494  009D                     	;# 
   495  009E                     	;# 
   496  009F                     	;# 
   497  010C                     	;# 
   498  010D                     	;# 
   499  010E                     	;# 
   500  010F                     	;# 
   501  018C                     	;# 
   502  018D                     	;# 
   503  0000                     	;# 
   504  0001                     	;# 
   505  0002                     	;# 
   506  0003                     	;# 
   507  0004                     	;# 
   508  0005                     	;# 
   509  0006                     	;# 
   510  0007                     	;# 
   511  0008                     	;# 
   512  0009                     	;# 
   513  000A                     	;# 
   514  000B                     	;# 
   515  000C                     	;# 
   516  000D                     	;# 
   517  000E                     	;# 
   518  000E                     	;# 
   519  000F                     	;# 
   520  0010                     	;# 
   521  0011                     	;# 
   522  0012                     	;# 
   523  0013                     	;# 
   524  0014                     	;# 
   525  0015                     	;# 
   526  0015                     	;# 
   527  0016                     	;# 
   528  0017                     	;# 
   529  0018                     	;# 
   530  0019                     	;# 
   531  001A                     	;# 
   532  001B                     	;# 
   533  001B                     	;# 
   534  001C                     	;# 
   535  001D                     	;# 
   536  001E                     	;# 
   537  001F                     	;# 
   538  0081                     	;# 
   539  0085                     	;# 
   540  0086                     	;# 
   541  0087                     	;# 
   542  0088                     	;# 
   543  0089                     	;# 
   544  008C                     	;# 
   545  008D                     	;# 
   546  008E                     	;# 
   547  0091                     	;# 
   548  0092                     	;# 
   549  0093                     	;# 
   550  0094                     	;# 
   551  0098                     	;# 
   552  0099                     	;# 
   553  009C                     	;# 
   554  009D                     	;# 
   555  009E                     	;# 
   556  009F                     	;# 
   557  010C                     	;# 
   558  010D                     	;# 
   559  010E                     	;# 
   560  010F                     	;# 
   561  018C                     	;# 
   562  018D                     	;# 
   563  0000                     	;# 
   564  0001                     	;# 
   565  0002                     	;# 
   566  0003                     	;# 
   567  0004                     	;# 
   568  0005                     	;# 
   569  0006                     	;# 
   570  0007                     	;# 
   571  0008                     	;# 
   572  0009                     	;# 
   573  000A                     	;# 
   574  000B                     	;# 
   575  000C                     	;# 
   576  000D                     	;# 
   577  000E                     	;# 
   578  000E                     	;# 
   579  000F                     	;# 
   580  0010                     	;# 
   581  0011                     	;# 
   582  0012                     	;# 
   583  0013                     	;# 
   584  0014                     	;# 
   585  0015                     	;# 
   586  0015                     	;# 
   587  0016                     	;# 
   588  0017                     	;# 
   589  0018                     	;# 
   590  0019                     	;# 
   591  001A                     	;# 
   592  001B                     	;# 
   593  001B                     	;# 
   594  001C                     	;# 
   595  001D                     	;# 
   596  001E                     	;# 
   597  001F                     	;# 
   598  0081                     	;# 
   599  0085                     	;# 
   600  0086                     	;# 
   601  0087                     	;# 
   602  0088                     	;# 
   603  0089                     	;# 
   604  008C                     	;# 
   605  008D                     	;# 
   606  008E                     	;# 
   607  0091                     	;# 
   608  0092                     	;# 
   609  0093                     	;# 
   610  0094                     	;# 
   611  0098                     	;# 
   612  0099                     	;# 
   613  009C                     	;# 
   614  009D                     	;# 
   615  009E                     	;# 
   616  009F                     	;# 
   617  010C                     	;# 
   618  010D                     	;# 
   619  010E                     	;# 
   620  010F                     	;# 
   621  018C                     	;# 
   622  018D                     	;# 
   623                           
   624                           	psect	idataBANK0
   625  07ED                     __pidataBANK0:	
   626                           
   627                           ;initializer for _randx
   628  07ED  3401               	retlw	1
   629  07EE  3400               	retlw	0
   630  07EF  3400               	retlw	0
   631  07F0  3400               	retlw	0
   632                           
   633                           	psect	idataBANK1
   634  072A                     __pidataBANK1:	
   635                           
   636                           ;initializer for _figuras
   637  072A  3402               	retlw	2
   638  072B  3402               	retlw	2
   639  072C  3403               	retlw	3
   640  072D  3400               	retlw	0
   641  072E  3403               	retlw	3
   642  072F  3402               	retlw	2
   643  0730  3402               	retlw	2
   644  0731  3400               	retlw	0
   645  0732  3401               	retlw	1
   646  0733  3403               	retlw	3
   647  0734  3402               	retlw	2
   648  0735  3400               	retlw	0
   649  0736  3402               	retlw	2
   650  0737  3403               	retlw	3
   651  0738  3401               	retlw	1
   652  0739  3400               	retlw	0
   653  073A  3401               	retlw	1
   654  073B  3401               	retlw	1
   655  073C  3401               	retlw	1
   656  073D  3401               	retlw	1
   657  073E  3403               	retlw	3
   658  073F  3403               	retlw	3
   659  0740  3400               	retlw	0
   660  0741  3400               	retlw	0
   661  0742  3401               	retlw	1
   662  0743  3403               	retlw	3
   663  0744  3401               	retlw	1
   664  0745  3400               	retlw	0
   665  0001                     _TMR0	set	1
   666  000B                     _INTCONbits	set	11
   667  0008                     _PORTDbits	set	8
   668  0006                     _PORTBbits	set	6
   669  0007                     _PORTCbits	set	7
   670  0081                     _OPTION_REGbits	set	129
   671  0088                     _TRISDbits	set	136
   672  0087                     _TRISCbits	set	135
   673  0086                     _TRISBbits	set	134
   674                           
   675                           ; #config settings
   676  0000                     
   677                           	psect	cinit
   678  000F                     start_initialization:	
   679  000F                     __initialization:	
   680                           
   681                           ; Initialize objects allocated to BANK1
   682  000F  1383               	bcf	3,7	;select IRP bank0
   683  0010  30DC               	movlw	low (__pdataBANK1+28)
   684  0011  00FD               	movwf	btemp+-1
   685  0012  3007               	movlw	high __pidataBANK1
   686  0013  00FE               	movwf	btemp
   687  0014  302A               	movlw	low __pidataBANK1
   688  0015  00FF               	movwf	btemp+1
   689  0016  30C0               	movlw	low __pdataBANK1
   690  0017  0084               	movwf	4
   691  0018  120A  118A  2766  120A  118A  	fcall	init_ram0
   692                           
   693                           ; Initialize objects allocated to BANK0
   694  001D  306B               	movlw	low (__pdataBANK0+4)
   695  001E  00FD               	movwf	btemp+-1
   696  001F  3007               	movlw	high __pidataBANK0
   697  0020  00FE               	movwf	btemp
   698  0021  30ED               	movlw	low __pidataBANK0
   699  0022  00FF               	movwf	btemp+1
   700  0023  3067               	movlw	low __pdataBANK0
   701  0024  0084               	movwf	4
   702  0025  120A  118A  2766  120A  118A  	fcall	init_ram0
   703                           
   704                           ; Clear objects allocated to BANK1
   705  002A  30A0               	movlw	low __pbssBANK1
   706  002B  0084               	movwf	4
   707  002C  30C0               	movlw	low (__pbssBANK1+32)
   708  002D  120A  118A  27C8  120A  118A  	fcall	clear_ram0
   709                           
   710                           ; Clear objects allocated to BANK0
   711  0032  3045               	movlw	low __pbssBANK0
   712  0033  0084               	movwf	4
   713  0034  3067               	movlw	low (__pbssBANK0+34)
   714  0035  120A  118A  27C8  120A  118A  	fcall	clear_ram0
   715  003A                     end_of_initialization:	
   716                           ;End of C runtime variable initialization code
   717                           
   718  003A                     __end_of__initialization:	
   719  003A  0183               	clrf	3
   720  003B  120A  118A  2CC3   	ljmp	_main	;jump to C main() function
   721                           
   722                           	psect	bssBANK0
   723  0045                     __pbssBANK0:	
   724  0045                     _con:	
   725  0045                     	ds	10
   726  004F                     leerEntradas@F1199:	
   727  004F                     	ds	4
   728  0053                     _timerCount:	
   729  0053                     	ds	4
   730  0057                     _ficha:	
   731  0057                     	ds	16
   732                           
   733                           	psect	dataBANK0
   734  0067                     __pdataBANK0:	
   735  0067                     _randx:	
   736  0067                     	ds	4
   737                           
   738                           	psect	bssBANK1
   739  00A0                     __pbssBANK1:	
   740  00A0                     _fondo:	
   741  00A0                     	ds	16
   742  00B0                     _pantalla:	
   743  00B0                     	ds	16
   744                           
   745                           	psect	dataBANK1
   746  00C0                     __pdataBANK1:	
   747  00C0                     _figuras:	
   748  00C0                     	ds	28
   749                           
   750                           	psect	inittext
   751  0762                     init_fetch0:	
   752                           ;	Called with low address in FSR and high address in W
   753                           
   754  0762  087E               	movf	btemp,w
   755  0763  008A               	movwf	10
   756  0764  087F               	movf	btemp+1,w
   757  0765  0082               	movwf	2
   758  0766                     init_ram0:	
   759                           ;Called with:
   760                           ;	high address of idata address in btemp 
   761                           ;	low address of idata address in btemp+1 
   762                           ;	low address of data in FSR
   763                           ;	high address + 1 of data in btemp-1
   764                           
   765  0766  120A  118A  2762  120A  118A  	fcall	init_fetch0
   766  076B  0080               	movwf	0
   767  076C  0A84               	incf	4,f
   768  076D  0804               	movf	4,w
   769  076E  067D               	xorwf	btemp+-1,w
   770  076F  1903               	btfsc	3,2
   771  0770  3400               	retlw	0
   772  0771  0AFF               	incf	btemp+1,f
   773  0772  1903               	btfsc	3,2
   774  0773  0AFE               	incf	btemp,f
   775  0774  2F66               	goto	init_ram0
   776                           
   777                           	psect	clrtext
   778  07C8                     clear_ram0:	
   779                           ;	Called with FSR containing the base address, and
   780                           ;	W with the last address+1
   781                           
   782  07C8  0064               	clrwdt	;clear the watchdog before getting into this loop
   783  07C9                     clrloop0:	
   784  07C9  0180               	clrf	0	;clear RAM location pointed to by FSR
   785  07CA  0A84               	incf	4,f	;increment pointer
   786  07CB  0604               	xorwf	4,w	;XOR with final address
   787  07CC  1903               	btfsc	3,2	;have we reached the end yet?
   788  07CD  3400               	retlw	0	;all done for this memory range, return
   789  07CE  0604               	xorwf	4,w	;XOR again to restore value
   790  07CF  2FC9               	goto	clrloop0	;do the next byte
   791                           
   792                           	psect	cstackCOMMON
   793  0070                     __pcstackCOMMON:	
   794  0070                     ?_checkCount:	
   795  0070                     ?_updateScreen:	
   796                           ; 1 bytes @ 0x0
   797                           
   798  0070                     ?_drawFigure:	
   799                           ; 1 bytes @ 0x0
   800                           
   801  0070                     ?_checkColission_R:	
   802                           ; 1 bytes @ 0x0
   803                           
   804  0070                     ?_checkRight:	
   805                           ; 1 bytes @ 0x0
   806                           
   807  0070                     ?_checkColission_L:	
   808                           ; 1 bytes @ 0x0
   809                           
   810  0070                     ?_checkBottom:	
   811                           ; 1 bytes @ 0x0
   812                           
   813  0070                     ?_checkColission_D:	
   814                           ; 1 bytes @ 0x0
   815                           
   816  0070                     ?_perdio:	
   817                           ; 1 bytes @ 0x0
   818                           
   819  0070                     ?_sumaPuntos:	
   820                           ; 1 bytes @ 0x0
   821                           
   822  0070                     ?_addToScreen:	
   823                           ; 1 bytes @ 0x0
   824                           
   825  0070                     ?_init_pines_in:	
   826                           ; 1 bytes @ 0x0
   827                           
   828  0070                     ?_init_pines_fil:	
   829                           ; 1 bytes @ 0x0
   830                           
   831  0070                     ?_init_pines_col:	
   832                           ; 1 bytes @ 0x0
   833                           
   834  0070                     ?_init_pines:	
   835                           ; 1 bytes @ 0x0
   836                           
   837  0070                     ?_init_timer:	
   838                           ; 1 bytes @ 0x0
   839                           
   840  0070                     ?_leerEntradas:	
   841                           ; 1 bytes @ 0x0
   842                           
   843  0070                     ?_Timer0_ISR:	
   844                           ; 1 bytes @ 0x0
   845                           
   846  0070                     ??_Timer0_ISR:	
   847                           ; 1 bytes @ 0x0
   848                           
   849  0070                     ?_latchClock_Fil:	
   850                           ; 1 bytes @ 0x0
   851                           
   852  0070                     ?_shiftClock_Fil:	
   853                           ; 1 bytes @ 0x0
   854                           
   855  0070                     ?_latchClock_Col:	
   856                           ; 1 bytes @ 0x0
   857                           
   858  0070                     ?_shiftClock_Col:	
   859                           ; 1 bytes @ 0x0
   860                           
   861  0070                     ?_shiftBitColumna:	
   862                           ; 1 bytes @ 0x0
   863                           
   864  0070                     ?_drawBground:	
   865                           ; 1 bytes @ 0x0
   866                           
   867                           
   868                           ; 1 bytes @ 0x0
   869  0070                     	ds	2
   870  0072                     ?_srand:	
   871  0072                     ??_checkColission_R:	
   872                           ; 1 bytes @ 0x2
   873                           
   874  0072                     ??_checkRight:	
   875                           ; 1 bytes @ 0x2
   876                           
   877  0072                     ??_checkColission_L:	
   878                           ; 1 bytes @ 0x2
   879                           
   880  0072                     ??_sumaPuntos:	
   881                           ; 1 bytes @ 0x2
   882                           
   883  0072                     ??_addToScreen:	
   884                           ; 1 bytes @ 0x2
   885                           
   886  0072                     ?_memset:	
   887                           ; 1 bytes @ 0x2
   888                           
   889  0072                     ??_init_pines_in:	
   890                           ; 1 bytes @ 0x2
   891                           
   892  0072                     ??_init_pines_fil:	
   893                           ; 1 bytes @ 0x2
   894                           
   895  0072                     ??_init_pines_col:	
   896                           ; 1 bytes @ 0x2
   897                           
   898  0072                     ??_init_pines:	
   899                           ; 1 bytes @ 0x2
   900                           
   901  0072                     ??_init_timer:	
   902                           ; 1 bytes @ 0x2
   903                           
   904  0072                     ??_latchClock_Fil:	
   905                           ; 1 bytes @ 0x2
   906                           
   907  0072                     ??_shiftClock_Fil:	
   908                           ; 1 bytes @ 0x2
   909                           
   910  0072                     ?_setFilas:	
   911                           ; 1 bytes @ 0x2
   912                           
   913  0072                     ??_latchClock_Col:	
   914                           ; 1 bytes @ 0x2
   915                           
   916  0072                     ??_shiftClock_Col:	
   917                           ; 1 bytes @ 0x2
   918                           
   919  0072                     ??_shiftBitColumna:	
   920                           ; 1 bytes @ 0x2
   921                           
   922  0072                     ??_drawBground:	
   923                           ; 1 bytes @ 0x2
   924                           
   925  0072                     ?___lmul:	
   926                           ; 1 bytes @ 0x2
   927                           
   928  0072                     setFilas@reg_value:	
   929                           ; 4 bytes @ 0x2
   930                           
   931  0072                     memset@c:	
   932                           ; 2 bytes @ 0x2
   933                           
   934  0072                     srand@x:	
   935                           ; 2 bytes @ 0x2
   936                           
   937  0072                     ___lmul@multiplier:	
   938                           ; 2 bytes @ 0x2
   939                           
   940                           
   941                           ; 4 bytes @ 0x2
   942  0072                     	ds	1
   943  0073                     shiftBitColumna@bit:	
   944                           
   945                           ; 1 bytes @ 0x3
   946  0073                     	ds	1
   947  0074                     ??_srand:	
   948  0074                     ??_setFilas:	
   949                           ; 1 bytes @ 0x4
   950                           
   951  0074                     memset@n:	
   952                           ; 1 bytes @ 0x4
   953                           
   954                           
   955                           ; 2 bytes @ 0x4
   956  0074                     	ds	2
   957  0076                     ??_memset:	
   958  0076                     sumaPuntos@aux:	
   959                           ; 1 bytes @ 0x6
   960                           
   961  0076                     ___lmul@multiplicand:	
   962                           ; 1 bytes @ 0x6
   963                           
   964                           
   965                           ; 4 bytes @ 0x6
   966  0076                     	ds	1
   967  0077                     memset@p:	
   968  0077                     sumaPuntos@i:	
   969                           ; 1 bytes @ 0x7
   970                           
   971                           
   972                           ; 2 bytes @ 0x7
   973  0077                     	ds	1
   974  0078                     memset@p1:	
   975                           
   976                           ; 1 bytes @ 0x8
   977  0078                     	ds	1
   978  0079                     sumaPuntos@j:	
   979                           
   980                           ; 2 bytes @ 0x9
   981  0079                     	ds	1
   982  007A                     ??___lmul:	
   983  007A                     setFilas@i:	
   984                           ; 1 bytes @ 0xA
   985                           
   986  007A                     checkColission_R@i:	
   987                           ; 2 bytes @ 0xA
   988                           
   989  007A                     checkColission_L@i:	
   990                           ; 2 bytes @ 0xA
   991                           
   992                           
   993                           ; 2 bytes @ 0xA
   994  007A                     	ds	1
   995  007B                     ??___awmod:	
   996                           
   997                           ; 1 bytes @ 0xB
   998  007B                     	ds	1
   999                           
  1000                           	psect	cstackBANK0
  1001  0020                     __pcstackBANK0:	
  1002  0020                     ??_drawFigure:	
  1003  0020                     addToScreen@i:	
  1004                           ; 1 bytes @ 0x0
  1005                           
  1006  0020                     drawBground@i:	
  1007                           ; 2 bytes @ 0x0
  1008                           
  1009  0020                     ___lmul@product:	
  1010                           ; 2 bytes @ 0x0
  1011                           
  1012                           
  1013                           ; 4 bytes @ 0x0
  1014  0020                     	ds	2
  1015  0022                     ??_updateScreen:	
  1016                           
  1017                           ; 1 bytes @ 0x2
  1018  0022                     	ds	2
  1019  0024                     ?_rand:	
  1020                           
  1021                           ; 2 bytes @ 0x4
  1022  0024                     	ds	1
  1023  0025                     ??_leerEntradas:	
  1024                           
  1025                           ; 1 bytes @ 0x5
  1026  0025                     	ds	1
  1027  0026                     ??_rand:	
  1028  0026                     updateScreen@screen:	
  1029                           ; 1 bytes @ 0x6
  1030                           
  1031                           
  1032                           ; 1 bytes @ 0x6
  1033  0026                     	ds	1
  1034  0027                     updateScreen@i:	
  1035                           
  1036                           ; 2 bytes @ 0x7
  1037  0027                     	ds	3
  1038  002A                     leerEntradas@k:	
  1039                           
  1040                           ; 2 bytes @ 0xA
  1041  002A                     	ds	1
  1042  002B                     ?___awmod:	
  1043  002B                     ___awmod@divisor:	
  1044                           ; 2 bytes @ 0xB
  1045                           
  1046                           
  1047                           ; 2 bytes @ 0xB
  1048  002B                     	ds	1
  1049  002C                     leerEntradas@mask:	
  1050                           
  1051                           ; 1 bytes @ 0xC
  1052  002C                     	ds	1
  1053  002D                     ___awmod@dividend:	
  1054  002D                     leerEntradas@aux:	
  1055                           ; 2 bytes @ 0xD
  1056                           
  1057                           
  1058                           ; 4 bytes @ 0xD
  1059  002D                     	ds	2
  1060  002F                     ___awmod@counter:	
  1061                           
  1062                           ; 1 bytes @ 0xF
  1063  002F                     	ds	1
  1064  0030                     ___awmod@sign:	
  1065                           
  1066                           ; 1 bytes @ 0x10
  1067  0030                     	ds	1
  1068  0031                     ??_checkBottom:	
  1069  0031                     ??_checkColission_D:	
  1070                           ; 1 bytes @ 0x11
  1071                           
  1072  0031                     ??_perdio:	
  1073                           ; 1 bytes @ 0x11
  1074                           
  1075  0031                     leerEntradas@j:	
  1076                           ; 1 bytes @ 0x11
  1077                           
  1078                           
  1079                           ; 2 bytes @ 0x11
  1080  0031                     	ds	2
  1081  0033                     leerEntradas@i:	
  1082                           
  1083                           ; 2 bytes @ 0x13
  1084  0033                     	ds	1
  1085  0034                     perdio@i:	
  1086                           
  1087                           ; 2 bytes @ 0x14
  1088  0034                     	ds	5
  1089  0039                     checkColission_D@i:	
  1090                           
  1091                           ; 2 bytes @ 0x19
  1092  0039                     	ds	2
  1093  003B                     ??_checkCount:	
  1094                           
  1095                           ; 1 bytes @ 0x1B
  1096  003B                     	ds	3
  1097  003E                     checkCount@j:	
  1098                           
  1099                           ; 2 bytes @ 0x1E
  1100  003E                     	ds	2
  1101  0040                     ?_main:	
  1102  0040                     main@argc:	
  1103                           ; 2 bytes @ 0x20
  1104                           
  1105                           
  1106                           ; 2 bytes @ 0x20
  1107  0040                     	ds	2
  1108  0042                     main@argv:	
  1109                           
  1110                           ; 2 bytes @ 0x22
  1111  0042                     	ds	2
  1112  0044                     ??_main:	
  1113                           
  1114                           ; 1 bytes @ 0x24
  1115  0044                     	ds	1
  1116                           
  1117                           	psect	maintext
  1118  04C3                     __pmaintext:	
  1119 ;;
  1120 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1121 ;;
  1122 ;; *************** function _main *****************
  1123 ;; Defined at:
  1124 ;;		line 44 in file "mainsource.c"
  1125 ;; Parameters:    Size  Location     Type
  1126 ;;  argc            2   32[BANK0 ] int 
  1127 ;;  argv            2   34[BANK0 ] PTR PTR unsigned char 
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;  j               2    0        int 
  1130 ;;  i               2    0        int 
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  2   32[BANK0 ] int 
  1133 ;; Registers used:
  1134 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1135 ;; Tracked objects:
  1136 ;;		On entry : B00/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1140 ;;      Params:         0       4       0       0       0
  1141 ;;      Locals:         0       4       0       0       0
  1142 ;;      Temps:          0       1       0       0       0
  1143 ;;      Totals:         0       9       0       0       0
  1144 ;;Total ram usage:        9 bytes
  1145 ;; Hardware stack levels required when called:    5
  1146 ;; This function calls:
  1147 ;;		___awmod
  1148 ;;		_checkCount
  1149 ;;		_init_pines
  1150 ;;		_init_timer
  1151 ;;		_rand
  1152 ;;		_srand
  1153 ;;		_updateScreen
  1154 ;; This function is called by:
  1155 ;;		Startup code after reset
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159                           
  1160                           ;psect for function _main
  1161  04C3                     _main:	
  1162  04C3                     l1827:	
  1163                           ;incstack = 0
  1164                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1165                           
  1166                           
  1167                           ;mainsource.c: 48:     init_timer();
  1168  04C3  120A  118A  2798  120A  118A  	fcall	_init_timer
  1169                           
  1170                           ;mainsource.c: 49:     init_pines();
  1171  04C8  120A  118A  2788  120A  118A  	fcall	_init_pines
  1172  04CD                     l1829:	
  1173  04CD                     l1831:	
  1174  04CD                     l1833:	
  1175                           
  1176                           ;mainsource.c: 53:     con.girar =0;
  1177  04CD  1283               	bcf	3,5	;RP0=0, select bank0
  1178  04CE  1303               	bcf	3,6	;RP1=0, select bank0
  1179  04CF  01C5               	clrf	_con
  1180  04D0                     l1835:	
  1181                           
  1182                           ;mainsource.c: 54:     con.ficha_Vpos = 16;
  1183  04D0  3010               	movlw	16
  1184  04D1  00C4               	movwf	??_main
  1185  04D2  0844               	movf	??_main,w
  1186  04D3  00C7               	movwf	_con+2
  1187  04D4                     l1837:	
  1188                           
  1189                           ;mainsource.c: 55:     con.ficha_Hpos = 2;
  1190  04D4  3002               	movlw	2
  1191  04D5  00C4               	movwf	??_main
  1192  04D6  0844               	movf	??_main,w
  1193  04D7  00C8               	movwf	_con+3
  1194  04D8                     l1839:	
  1195                           
  1196                           ;mainsource.c: 56:     con.puntaje = 0;
  1197  04D8  01CD               	clrf	_con+8
  1198  04D9  01CE               	clrf	_con+9
  1199  04DA                     l1841:	
  1200                           
  1201                           ;mainsource.c: 57:     srand(1);
  1202  04DA  3001               	movlw	1
  1203  04DB  00F2               	movwf	srand@x
  1204  04DC  3000               	movlw	0
  1205  04DD  00F3               	movwf	srand@x+1
  1206  04DE  120A  118A  27BF  120A  118A  	fcall	_srand
  1207  04E3                     l1843:	
  1208                           
  1209                           ;mainsource.c: 58:     con.ficha_actual = rand() % 7;
  1210  04E3  3007               	movlw	7
  1211  04E4  1283               	bcf	3,5	;RP0=0, select bank0
  1212  04E5  1303               	bcf	3,6	;RP1=0, select bank0
  1213  04E6  00AB               	movwf	___awmod@divisor
  1214  04E7  3000               	movlw	0
  1215  04E8  00AC               	movwf	___awmod@divisor+1
  1216  04E9  120A  118A  2555  120A  118A  	fcall	_rand
  1217  04EE  1283               	bcf	3,5	;RP0=0, select bank0
  1218  04EF  1303               	bcf	3,6	;RP1=0, select bank0
  1219  04F0  0825               	movf	?_rand+1,w
  1220  04F1  00AE               	movwf	___awmod@dividend+1
  1221  04F2  0824               	movf	?_rand,w
  1222  04F3  00AD               	movwf	___awmod@dividend
  1223  04F4  120A  118A  2381  120A  118A  	fcall	___awmod
  1224  04F9  1283               	bcf	3,5	;RP0=0, select bank0
  1225  04FA  1303               	bcf	3,6	;RP1=0, select bank0
  1226  04FB  082B               	movf	?___awmod,w
  1227  04FC  00C4               	movwf	??_main
  1228  04FD  0844               	movf	??_main,w
  1229  04FE  00C9               	movwf	_con+4
  1230  04FF                     l1845:	
  1231                           
  1232                           ;mainsource.c: 62:         checkCount();
  1233  04FF  120A  118A  23DC  120A  118A  	fcall	_checkCount
  1234  0504                     l1847:	
  1235                           
  1236                           ;mainsource.c: 63:         updateScreen(pantalla);
  1237  0504  30B0               	movlw	(low (_pantalla| 0))& (0+255)
  1238  0505  120A  118A  231E  120A  118A  	fcall	_updateScreen
  1239  050A  2CFF               	goto	l1845
  1240  050B  120A  118A  280C   	ljmp	start
  1241  050E                     __end_of_main:	
  1242                           
  1243                           	psect	text1
  1244  031E                     __ptext1:	
  1245 ;; *************** function _updateScreen *****************
  1246 ;; Defined at:
  1247 ;;		line 17 in file "screen.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;  screen          1    wreg     PTR unsigned int 
  1250 ;;		 -> pantalla(16), 
  1251 ;; Auto vars:     Size  Location     Type
  1252 ;;  screen          1    6[BANK0 ] PTR unsigned int 
  1253 ;;		 -> pantalla(16), 
  1254 ;;  i               2    7[BANK0 ] int 
  1255 ;; Return value:  Size  Location     Type
  1256 ;;                  1    wreg      void 
  1257 ;; Registers used:
  1258 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1259 ;; Tracked objects:
  1260 ;;		On entry : 0/0
  1261 ;;		On exit  : 0/0
  1262 ;;		Unchanged: 0/0
  1263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1264 ;;      Params:         0       0       0       0       0
  1265 ;;      Locals:         0       3       0       0       0
  1266 ;;      Temps:          0       4       0       0       0
  1267 ;;      Totals:         0       7       0       0       0
  1268 ;;Total ram usage:        7 bytes
  1269 ;; Hardware stack levels used:    1
  1270 ;; Hardware stack levels required when called:    3
  1271 ;; This function calls:
  1272 ;;		_addToScreen
  1273 ;;		_setFilas
  1274 ;;		_shiftBitColumna
  1275 ;; This function is called by:
  1276 ;;		_main
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           
  1280                           
  1281                           ;psect for function _updateScreen
  1282  031E                     _updateScreen:	
  1283                           
  1284                           ;incstack = 0
  1285                           ; Regs used in _updateScreen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1286                           ;updateScreen@screen stored from wreg
  1287  031E  1283               	bcf	3,5	;RP0=0, select bank0
  1288  031F  1303               	bcf	3,6	;RP1=0, select bank0
  1289  0320  00A6               	movwf	updateScreen@screen
  1290  0321                     l1803:	
  1291  0321                     l1805:	
  1292                           
  1293                           ;screen.c: 20:     addToScreen();
  1294  0321  120A  118A  2623  120A  118A  	fcall	_addToScreen
  1295  0326                     l1807:	
  1296                           
  1297                           ;screen.c: 22:     for(i=0; i<=7;i++){
  1298  0326  1283               	bcf	3,5	;RP0=0, select bank0
  1299  0327  1303               	bcf	3,6	;RP1=0, select bank0
  1300  0328  01A7               	clrf	updateScreen@i
  1301  0329  01A8               	clrf	updateScreen@i+1
  1302  032A                     l1813:	
  1303                           
  1304                           ;screen.c: 23:        if(i == 0){
  1305  032A  1283               	bcf	3,5	;RP0=0, select bank0
  1306  032B  1303               	bcf	3,6	;RP1=0, select bank0
  1307  032C  0827               	movf	updateScreen@i,w
  1308  032D  0428               	iorwf	updateScreen@i+1,w
  1309  032E  1D03               	btfss	3,2
  1310  032F  2B31               	goto	u1361
  1311  0330  2B32               	goto	u1360
  1312  0331                     u1361:	
  1313  0331  2B4F               	goto	l1819
  1314  0332                     u1360:	
  1315  0332                     l1815:	
  1316                           
  1317                           ;screen.c: 25:             setFilas(~screen[i]);
  1318  0332  0827               	movf	updateScreen@i,w
  1319  0333  00A2               	movwf	??_updateScreen
  1320  0334  0722               	addwf	??_updateScreen,w
  1321  0335  0726               	addwf	updateScreen@screen,w
  1322  0336  00A3               	movwf	??_updateScreen+1
  1323  0337  0823               	movf	??_updateScreen+1,w
  1324  0338  0084               	movwf	4
  1325  0339  1383               	bcf	3,7	;select IRP bank0
  1326  033A  0800               	movf	0,w
  1327  033B  00A4               	movwf	??_updateScreen+2
  1328  033C  0A84               	incf	4,f
  1329  033D  0800               	movf	0,w
  1330  033E  00A5               	movwf	??_updateScreen+3
  1331  033F  0924               	comf	??_updateScreen+2,w
  1332  0340  00F2               	movwf	setFilas@reg_value
  1333  0341  0925               	comf	??_updateScreen+3,w
  1334  0342  00F3               	movwf	setFilas@reg_value+1
  1335  0343  120A  118A  25E0  120A  118A  	fcall	_setFilas
  1336  0348                     l1817:	
  1337                           
  1338                           ;screen.c: 26:             shiftBitColumna(1);
  1339  0348  3001               	movlw	1
  1340  0349  120A  118A  2746  120A  118A  	fcall	_shiftBitColumna
  1341                           
  1342                           ;screen.c: 28:         }
  1343  034E  2B6B               	goto	l1823
  1344  034F                     l1819:	
  1345                           
  1346                           ;screen.c: 31:             setFilas(~screen[i]);
  1347  034F  0827               	movf	updateScreen@i,w
  1348  0350  00A2               	movwf	??_updateScreen
  1349  0351  0722               	addwf	??_updateScreen,w
  1350  0352  0726               	addwf	updateScreen@screen,w
  1351  0353  00A3               	movwf	??_updateScreen+1
  1352  0354  0823               	movf	??_updateScreen+1,w
  1353  0355  0084               	movwf	4
  1354  0356  1383               	bcf	3,7	;select IRP bank0
  1355  0357  0800               	movf	0,w
  1356  0358  00A4               	movwf	??_updateScreen+2
  1357  0359  0A84               	incf	4,f
  1358  035A  0800               	movf	0,w
  1359  035B  00A5               	movwf	??_updateScreen+3
  1360  035C  0924               	comf	??_updateScreen+2,w
  1361  035D  00F2               	movwf	setFilas@reg_value
  1362  035E  0925               	comf	??_updateScreen+3,w
  1363  035F  00F3               	movwf	setFilas@reg_value+1
  1364  0360  120A  118A  25E0  120A  118A  	fcall	_setFilas
  1365  0365                     l1821:	
  1366                           
  1367                           ;screen.c: 32:             shiftBitColumna(0);
  1368  0365  3000               	movlw	0
  1369  0366  120A  118A  2746  120A  118A  	fcall	_shiftBitColumna
  1370  036B                     l1823:	
  1371                           
  1372                           ;screen.c: 35:     }
  1373  036B  3001               	movlw	1
  1374  036C  1283               	bcf	3,5	;RP0=0, select bank0
  1375  036D  1303               	bcf	3,6	;RP1=0, select bank0
  1376  036E  07A7               	addwf	updateScreen@i,f
  1377  036F  1803               	skipnc
  1378  0370  0AA8               	incf	updateScreen@i+1,f
  1379  0371  3000               	movlw	0
  1380  0372  07A8               	addwf	updateScreen@i+1,f
  1381  0373                     l1825:	
  1382  0373  0828               	movf	updateScreen@i+1,w
  1383  0374  3A80               	xorlw	128
  1384  0375  00FF               	movwf	btemp+1
  1385  0376  3080               	movlw	128
  1386  0377  027F               	subwf	btemp+1,w
  1387  0378  1D03               	skipz
  1388  0379  2B7C               	goto	u1375
  1389  037A  3008               	movlw	8
  1390  037B  0227               	subwf	updateScreen@i,w
  1391  037C                     u1375:	
  1392  037C  1C03               	skipc
  1393  037D  2B7F               	goto	u1371
  1394  037E  2B80               	goto	u1370
  1395  037F                     u1371:	
  1396  037F  2B2A               	goto	l1813
  1397  0380                     u1370:	
  1398  0380                     l187:	
  1399  0380  0008               	return
  1400  0381                     __end_of_updateScreen:	
  1401                           
  1402                           	psect	text2
  1403  0746                     __ptext2:	
  1404 ;; *************** function _shiftBitColumna *****************
  1405 ;; Defined at:
  1406 ;;		line 33 in file "columnas.c"
  1407 ;; Parameters:    Size  Location     Type
  1408 ;;  bit             1    wreg     unsigned char 
  1409 ;; Auto vars:     Size  Location     Type
  1410 ;;  bit             1    3[COMMON] unsigned char 
  1411 ;; Return value:  Size  Location     Type
  1412 ;;                  1    wreg      void 
  1413 ;; Registers used:
  1414 ;;		wreg, status,2, status,0, pclath, cstack
  1415 ;; Tracked objects:
  1416 ;;		On entry : 0/0
  1417 ;;		On exit  : 0/0
  1418 ;;		Unchanged: 0/0
  1419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1420 ;;      Params:         0       0       0       0       0
  1421 ;;      Locals:         1       0       0       0       0
  1422 ;;      Temps:          1       0       0       0       0
  1423 ;;      Totals:         2       0       0       0       0
  1424 ;;Total ram usage:        2 bytes
  1425 ;; Hardware stack levels used:    1
  1426 ;; Hardware stack levels required when called:    2
  1427 ;; This function calls:
  1428 ;;		_latchClock_Col
  1429 ;;		_latchClock_Fil
  1430 ;;		_shiftClock_Col
  1431 ;; This function is called by:
  1432 ;;		_updateScreen
  1433 ;; This function uses a non-reentrant model
  1434 ;;
  1435                           
  1436                           
  1437                           ;psect for function _shiftBitColumna
  1438  0746                     _shiftBitColumna:	
  1439                           
  1440                           ;incstack = 0
  1441                           ; Regs used in _shiftBitColumna: [wreg+status,2+status,0+pclath+cstack]
  1442                           ;shiftBitColumna@bit stored from wreg
  1443  0746  00F3               	movwf	shiftBitColumna@bit
  1444  0747                     l1737:	
  1445                           
  1446                           ;columnas.c: 34:     PORTDbits.RD4= bit & 0x01;
  1447  0747  0873               	movf	shiftBitColumna@bit,w
  1448  0748  3901               	andlw	1
  1449  0749  00F2               	movwf	??_shiftBitColumna
  1450  074A  0EF2               	swapf	??_shiftBitColumna,f
  1451  074B  1283               	bcf	3,5	;RP0=0, select bank0
  1452  074C  1303               	bcf	3,6	;RP1=0, select bank0
  1453  074D  0808               	movf	8,w	;volatile
  1454  074E  0672               	xorwf	??_shiftBitColumna,w
  1455  074F  39EF               	andlw	-17
  1456  0750  0672               	xorwf	??_shiftBitColumna,w
  1457  0751  0088               	movwf	8	;volatile
  1458  0752                     l1739:	
  1459                           
  1460                           ;columnas.c: 35:     shiftClock_Col();
  1461  0752  120A  118A  27D0  120A  118A  	fcall	_shiftClock_Col
  1462  0757                     l1741:	
  1463                           
  1464                           ;columnas.c: 36:     latchClock_Col();
  1465  0757  120A  118A  27E8  120A  118A  	fcall	_latchClock_Col
  1466  075C                     l1743:	
  1467                           
  1468                           ;columnas.c: 37:     latchClock_Fil();
  1469  075C  120A  118A  27D6  120A  118A  	fcall	_latchClock_Fil
  1470  0761                     l160:	
  1471  0761  0008               	return
  1472  0762                     __end_of_shiftBitColumna:	
  1473                           
  1474                           	psect	text3
  1475  07D0                     __ptext3:	
  1476 ;; *************** function _shiftClock_Col *****************
  1477 ;; Defined at:
  1478 ;;		line 13 in file "columnas.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;		None
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;		None
  1483 ;; Return value:  Size  Location     Type
  1484 ;;                  1    wreg      void 
  1485 ;; Registers used:
  1486 ;;		None
  1487 ;; Tracked objects:
  1488 ;;		On entry : 0/0
  1489 ;;		On exit  : 0/0
  1490 ;;		Unchanged: 0/0
  1491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1492 ;;      Params:         0       0       0       0       0
  1493 ;;      Locals:         0       0       0       0       0
  1494 ;;      Temps:          0       0       0       0       0
  1495 ;;      Totals:         0       0       0       0       0
  1496 ;;Total ram usage:        0 bytes
  1497 ;; Hardware stack levels used:    1
  1498 ;; Hardware stack levels required when called:    1
  1499 ;; This function calls:
  1500 ;;		Nothing
  1501 ;; This function is called by:
  1502 ;;		_shiftBitColumna
  1503 ;;		_setColumnas
  1504 ;; This function uses a non-reentrant model
  1505 ;;
  1506                           
  1507                           
  1508                           ;psect for function _shiftClock_Col
  1509  07D0                     _shiftClock_Col:	
  1510  07D0                     l1479:	
  1511                           ;incstack = 0
  1512                           ; Regs used in _shiftClock_Col: []
  1513                           
  1514                           
  1515                           ;columnas.c: 14:     PORTDbits.RD7 = 0;
  1516  07D0  1283               	bcf	3,5	;RP0=0, select bank0
  1517  07D1  1303               	bcf	3,6	;RP1=0, select bank0
  1518  07D2  1388               	bcf	8,7	;volatile
  1519                           
  1520                           ;columnas.c: 15:     PORTDbits.RD7 = 1;
  1521  07D3  1788               	bsf	8,7	;volatile
  1522                           
  1523                           ;columnas.c: 16:     PORTDbits.RD7 = 0;
  1524  07D4  1388               	bcf	8,7	;volatile
  1525  07D5                     l152:	
  1526  07D5  0008               	return
  1527  07D6                     __end_of_shiftClock_Col:	
  1528                           
  1529                           	psect	text4
  1530  07D6                     __ptext4:	
  1531 ;; *************** function _latchClock_Fil *****************
  1532 ;; Defined at:
  1533 ;;		line 7 in file "filas.c"
  1534 ;; Parameters:    Size  Location     Type
  1535 ;;		None
  1536 ;; Auto vars:     Size  Location     Type
  1537 ;;		None
  1538 ;; Return value:  Size  Location     Type
  1539 ;;                  1    wreg      void 
  1540 ;; Registers used:
  1541 ;;		None
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1547 ;;      Params:         0       0       0       0       0
  1548 ;;      Locals:         0       0       0       0       0
  1549 ;;      Temps:          0       0       0       0       0
  1550 ;;      Totals:         0       0       0       0       0
  1551 ;;Total ram usage:        0 bytes
  1552 ;; Hardware stack levels used:    1
  1553 ;; Hardware stack levels required when called:    1
  1554 ;; This function calls:
  1555 ;;		Nothing
  1556 ;; This function is called by:
  1557 ;;		_shiftBitColumna
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561                           
  1562                           ;psect for function _latchClock_Fil
  1563  07D6                     _latchClock_Fil:	
  1564  07D6                     l1473:	
  1565                           ;incstack = 0
  1566                           ; Regs used in _latchClock_Fil: []
  1567                           
  1568                           
  1569                           ;filas.c: 8:     PORTCbits.RC6 = 0;
  1570  07D6  1283               	bcf	3,5	;RP0=0, select bank0
  1571  07D7  1303               	bcf	3,6	;RP1=0, select bank0
  1572  07D8  1307               	bcf	7,6	;volatile
  1573                           
  1574                           ;filas.c: 9:     PORTCbits.RC6 = 1;
  1575  07D9  1707               	bsf	7,6	;volatile
  1576                           
  1577                           ;filas.c: 10:     PORTCbits.RC6 = 0;
  1578  07DA  1307               	bcf	7,6	;volatile
  1579  07DB                     l134:	
  1580  07DB  0008               	return
  1581  07DC                     __end_of_latchClock_Fil:	
  1582                           
  1583                           	psect	text5
  1584  07E8                     __ptext5:	
  1585 ;; *************** function _latchClock_Col *****************
  1586 ;; Defined at:
  1587 ;;		line 8 in file "columnas.c"
  1588 ;; Parameters:    Size  Location     Type
  1589 ;;		None
  1590 ;; Auto vars:     Size  Location     Type
  1591 ;;		None
  1592 ;; Return value:  Size  Location     Type
  1593 ;;                  1    wreg      void 
  1594 ;; Registers used:
  1595 ;;		None
  1596 ;; Tracked objects:
  1597 ;;		On entry : 0/0
  1598 ;;		On exit  : 0/0
  1599 ;;		Unchanged: 0/0
  1600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1601 ;;      Params:         0       0       0       0       0
  1602 ;;      Locals:         0       0       0       0       0
  1603 ;;      Temps:          0       0       0       0       0
  1604 ;;      Totals:         0       0       0       0       0
  1605 ;;Total ram usage:        0 bytes
  1606 ;; Hardware stack levels used:    1
  1607 ;; Hardware stack levels required when called:    1
  1608 ;; This function calls:
  1609 ;;		Nothing
  1610 ;; This function is called by:
  1611 ;;		_shiftBitColumna
  1612 ;;		_setColumnas
  1613 ;; This function uses a non-reentrant model
  1614 ;;
  1615                           
  1616                           
  1617                           ;psect for function _latchClock_Col
  1618  07E8                     _latchClock_Col:	
  1619  07E8                     l1477:	
  1620                           ;incstack = 0
  1621                           ; Regs used in _latchClock_Col: []
  1622                           
  1623                           
  1624                           ;columnas.c: 9:     PORTDbits.RD6 = 1;
  1625  07E8  1283               	bcf	3,5	;RP0=0, select bank0
  1626  07E9  1303               	bcf	3,6	;RP1=0, select bank0
  1627  07EA  1708               	bsf	8,6	;volatile
  1628                           
  1629                           ;columnas.c: 10:     PORTDbits.RD6 = 0;
  1630  07EB  1308               	bcf	8,6	;volatile
  1631  07EC                     l149:	
  1632  07EC  0008               	return
  1633  07ED                     __end_of_latchClock_Col:	
  1634                           
  1635                           	psect	text6
  1636  05E0                     __ptext6:	
  1637 ;; *************** function _setFilas *****************
  1638 ;; Defined at:
  1639 ;;		line 19 in file "filas.c"
  1640 ;; Parameters:    Size  Location     Type
  1641 ;;  reg_value       2    2[COMMON] unsigned int 
  1642 ;; Auto vars:     Size  Location     Type
  1643 ;;  i               2   10[COMMON] int 
  1644 ;; Return value:  Size  Location     Type
  1645 ;;                  1    wreg      void 
  1646 ;; Registers used:
  1647 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1648 ;; Tracked objects:
  1649 ;;		On entry : 0/0
  1650 ;;		On exit  : 0/0
  1651 ;;		Unchanged: 0/0
  1652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1653 ;;      Params:         2       0       0       0       0
  1654 ;;      Locals:         2       0       0       0       0
  1655 ;;      Temps:          6       0       0       0       0
  1656 ;;      Totals:        10       0       0       0       0
  1657 ;;Total ram usage:       10 bytes
  1658 ;; Hardware stack levels used:    1
  1659 ;; Hardware stack levels required when called:    2
  1660 ;; This function calls:
  1661 ;;		_shiftClock_Fil
  1662 ;; This function is called by:
  1663 ;;		_updateScreen
  1664 ;; This function uses a non-reentrant model
  1665 ;;
  1666                           
  1667                           
  1668                           ;psect for function _setFilas
  1669  05E0                     _setFilas:	
  1670  05E0                     l1723:	
  1671                           ;incstack = 0
  1672                           ; Regs used in _setFilas: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1673                           
  1674                           
  1675                           ;filas.c: 20:     int i = 0;
  1676  05E0  01FA               	clrf	setFilas@i
  1677  05E1  01FB               	clrf	setFilas@i+1
  1678                           
  1679                           ;filas.c: 21:     for(i=0;i<16;i++){
  1680  05E2  01FA               	clrf	setFilas@i
  1681  05E3  01FB               	clrf	setFilas@i+1
  1682  05E4                     l1725:	
  1683  05E4  087B               	movf	setFilas@i+1,w
  1684  05E5  3A80               	xorlw	128
  1685  05E6  00FF               	movwf	btemp+1
  1686  05E7  3080               	movlw	128
  1687  05E8  027F               	subwf	btemp+1,w
  1688  05E9  1D03               	skipz
  1689  05EA  2DED               	goto	u1305
  1690  05EB  3010               	movlw	16
  1691  05EC  027A               	subwf	setFilas@i,w
  1692  05ED                     u1305:	
  1693  05ED  1C03               	skipc
  1694  05EE  2DF0               	goto	u1301
  1695  05EF  2DF1               	goto	u1300
  1696  05F0                     u1301:	
  1697  05F0  2DF2               	goto	l1729
  1698  05F1                     u1300:	
  1699  05F1  2E22               	goto	l142
  1700  05F2                     l1729:	
  1701                           
  1702                           ;filas.c: 22:         PORTCbits.RC4 = (reg_value & (1<<i) )>>i;
  1703  05F2  0A7A               	incf	setFilas@i,w
  1704  05F3  00F4               	movwf	??_setFilas
  1705  05F4  3001               	movlw	1
  1706  05F5  00F5               	movwf	??_setFilas+1
  1707  05F6  3000               	movlw	0
  1708  05F7  00F6               	movwf	??_setFilas+2
  1709  05F8  2DFC               	goto	u1314
  1710  05F9                     u1315:	
  1711  05F9  1003               	clrc
  1712  05FA  0DF5               	rlf	??_setFilas+1,f
  1713  05FB  0DF6               	rlf	??_setFilas+2,f
  1714  05FC                     u1314:	
  1715  05FC  0BF4               	decfsz	??_setFilas,f
  1716  05FD  2DF9               	goto	u1315
  1717  05FE  0872               	movf	setFilas@reg_value,w
  1718  05FF  0575               	andwf	??_setFilas+1,w
  1719  0600  00F7               	movwf	??_setFilas+3
  1720  0601  0873               	movf	setFilas@reg_value+1,w
  1721  0602  0576               	andwf	??_setFilas+2,w
  1722  0603  00F8               	movwf	??_setFilas+4
  1723  0604  0A7A               	incf	setFilas@i,w
  1724  0605  2E09               	goto	u1324
  1725  0606                     u1325:	
  1726  0606  1003               	clrc
  1727  0607  0CF8               	rrf	??_setFilas+4,f
  1728  0608  0CF7               	rrf	??_setFilas+3,f
  1729  0609                     u1324:	
  1730  0609  3EFF               	addlw	-1
  1731  060A  1D03               	skipz
  1732  060B  2E06               	goto	u1325
  1733  060C  0877               	movf	??_setFilas+3,w
  1734  060D  00F9               	movwf	??_setFilas+5
  1735  060E  0EF9               	swapf	??_setFilas+5,f
  1736  060F  1283               	bcf	3,5	;RP0=0, select bank0
  1737  0610  1303               	bcf	3,6	;RP1=0, select bank0
  1738  0611  0807               	movf	7,w	;volatile
  1739  0612  0679               	xorwf	??_setFilas+5,w
  1740  0613  39EF               	andlw	-17
  1741  0614  0679               	xorwf	??_setFilas+5,w
  1742  0615  0087               	movwf	7	;volatile
  1743  0616                     l1731:	
  1744                           
  1745                           ;filas.c: 23:         shiftClock_Fil();
  1746  0616  120A  118A  27DC  120A  118A  	fcall	_shiftClock_Fil
  1747  061B                     l1733:	
  1748                           
  1749                           ;filas.c: 24:     }
  1750  061B  3001               	movlw	1
  1751  061C  07FA               	addwf	setFilas@i,f
  1752  061D  1803               	skipnc
  1753  061E  0AFB               	incf	setFilas@i+1,f
  1754  061F  3000               	movlw	0
  1755  0620  07FB               	addwf	setFilas@i+1,f
  1756  0621  2DE4               	goto	l1725
  1757  0622                     l142:	
  1758  0622  0008               	return
  1759  0623                     __end_of_setFilas:	
  1760                           
  1761                           	psect	text7
  1762  07DC                     __ptext7:	
  1763 ;; *************** function _shiftClock_Fil *****************
  1764 ;; Defined at:
  1765 ;;		line 13 in file "filas.c"
  1766 ;; Parameters:    Size  Location     Type
  1767 ;;		None
  1768 ;; Auto vars:     Size  Location     Type
  1769 ;;		None
  1770 ;; Return value:  Size  Location     Type
  1771 ;;                  1    wreg      void 
  1772 ;; Registers used:
  1773 ;;		None
  1774 ;; Tracked objects:
  1775 ;;		On entry : 0/0
  1776 ;;		On exit  : 0/0
  1777 ;;		Unchanged: 0/0
  1778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1779 ;;      Params:         0       0       0       0       0
  1780 ;;      Locals:         0       0       0       0       0
  1781 ;;      Temps:          0       0       0       0       0
  1782 ;;      Totals:         0       0       0       0       0
  1783 ;;Total ram usage:        0 bytes
  1784 ;; Hardware stack levels used:    1
  1785 ;; Hardware stack levels required when called:    1
  1786 ;; This function calls:
  1787 ;;		Nothing
  1788 ;; This function is called by:
  1789 ;;		_setFilas
  1790 ;; This function uses a non-reentrant model
  1791 ;;
  1792                           
  1793                           
  1794                           ;psect for function _shiftClock_Fil
  1795  07DC                     _shiftClock_Fil:	
  1796  07DC                     l1475:	
  1797                           ;incstack = 0
  1798                           ; Regs used in _shiftClock_Fil: []
  1799                           
  1800                           
  1801                           ;filas.c: 14:     PORTCbits.RC7 = 0;
  1802  07DC  1283               	bcf	3,5	;RP0=0, select bank0
  1803  07DD  1303               	bcf	3,6	;RP1=0, select bank0
  1804  07DE  1387               	bcf	7,7	;volatile
  1805                           
  1806                           ;filas.c: 15:     PORTCbits.RC7 = 1;
  1807  07DF  1787               	bsf	7,7	;volatile
  1808                           
  1809                           ;filas.c: 16:     PORTCbits.RC7 = 0;
  1810  07E0  1387               	bcf	7,7	;volatile
  1811  07E1                     l137:	
  1812  07E1  0008               	return
  1813  07E2                     __end_of_shiftClock_Fil:	
  1814                           
  1815                           	psect	text8
  1816  0623                     __ptext8:	
  1817 ;; *************** function _addToScreen *****************
  1818 ;; Defined at:
  1819 ;;		line 43 in file "screen.c"
  1820 ;; Parameters:    Size  Location     Type
  1821 ;;		None
  1822 ;; Auto vars:     Size  Location     Type
  1823 ;;  i               2    0[BANK0 ] int 
  1824 ;; Return value:  Size  Location     Type
  1825 ;;                  1    wreg      void 
  1826 ;; Registers used:
  1827 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1828 ;; Tracked objects:
  1829 ;;		On entry : 0/0
  1830 ;;		On exit  : 0/0
  1831 ;;		Unchanged: 0/0
  1832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1833 ;;      Params:         0       0       0       0       0
  1834 ;;      Locals:         0       2       0       0       0
  1835 ;;      Temps:          9       0       0       0       0
  1836 ;;      Totals:         9       2       0       0       0
  1837 ;;Total ram usage:       11 bytes
  1838 ;; Hardware stack levels used:    1
  1839 ;; Hardware stack levels required when called:    1
  1840 ;; This function calls:
  1841 ;;		Nothing
  1842 ;; This function is called by:
  1843 ;;		_updateScreen
  1844 ;; This function uses a non-reentrant model
  1845 ;;
  1846                           
  1847                           
  1848                           ;psect for function _addToScreen
  1849  0623                     _addToScreen:	
  1850  0623                     l1745:	
  1851                           ;incstack = 0
  1852                           ; Regs used in _addToScreen: [wreg-fsr0h+status,2+status,0+btemp+1]
  1853                           
  1854                           
  1855                           ;screen.c: 44:     int i=0;
  1856  0623  1283               	bcf	3,5	;RP0=0, select bank0
  1857  0624  1303               	bcf	3,6	;RP1=0, select bank0
  1858  0625  01A0               	clrf	addToScreen@i
  1859  0626  01A1               	clrf	addToScreen@i+1
  1860                           
  1861                           ;screen.c: 45:     for(i=0; i<8; i++){
  1862  0627  01A0               	clrf	addToScreen@i
  1863  0628  01A1               	clrf	addToScreen@i+1
  1864  0629                     l1751:	
  1865                           
  1866                           ;screen.c: 46:         pantalla[i] = ficha[i] | fondo[i];
  1867  0629  1283               	bcf	3,5	;RP0=0, select bank0
  1868  062A  1303               	bcf	3,6	;RP1=0, select bank0
  1869  062B  0820               	movf	addToScreen@i,w
  1870  062C  00F2               	movwf	??_addToScreen
  1871  062D  0772               	addwf	??_addToScreen,w
  1872  062E  3EA0               	addlw	(low (_fondo| 0))& (0+255)
  1873  062F  0084               	movwf	4
  1874  0630  1383               	bcf	3,7	;select IRP bank1
  1875  0631  0800               	movf	0,w
  1876  0632  00F3               	movwf	??_addToScreen+1
  1877  0633  0A84               	incf	4,f
  1878  0634  0800               	movf	0,w
  1879  0635  00F4               	movwf	??_addToScreen+2
  1880  0636  0820               	movf	addToScreen@i,w
  1881  0637  00F5               	movwf	??_addToScreen+3
  1882  0638  0775               	addwf	??_addToScreen+3,w
  1883  0639  3E57               	addlw	(low (_ficha| 0))& (0+255)
  1884  063A  0084               	movwf	4
  1885  063B  0800               	movf	0,w
  1886  063C  00F6               	movwf	??_addToScreen+4
  1887  063D  0A84               	incf	4,f
  1888  063E  0800               	movf	0,w
  1889  063F  00F7               	movwf	??_addToScreen+5
  1890  0640  0873               	movf	??_addToScreen+1,w
  1891  0641  0476               	iorwf	??_addToScreen+4,w
  1892  0642  00F8               	movwf	??_addToScreen+6
  1893  0643  0874               	movf	??_addToScreen+2,w
  1894  0644  0477               	iorwf	??_addToScreen+5,w
  1895  0645  00F9               	movwf	??_addToScreen+7
  1896  0646  0820               	movf	addToScreen@i,w
  1897  0647  00FA               	movwf	??_addToScreen+8
  1898  0648  077A               	addwf	??_addToScreen+8,w
  1899  0649  3EB0               	addlw	(low (_pantalla| 0))& (0+255)
  1900  064A  0084               	movwf	4
  1901  064B  0878               	movf	??_addToScreen+6,w
  1902  064C  0080               	movwf	0
  1903  064D  0A84               	incf	4,f
  1904  064E  0879               	movf	??_addToScreen+7,w
  1905  064F  0080               	movwf	0
  1906  0650                     l1753:	
  1907                           
  1908                           ;screen.c: 47:     }
  1909  0650  3001               	movlw	1
  1910  0651  07A0               	addwf	addToScreen@i,f
  1911  0652  1803               	skipnc
  1912  0653  0AA1               	incf	addToScreen@i+1,f
  1913  0654  3000               	movlw	0
  1914  0655  07A1               	addwf	addToScreen@i+1,f
  1915  0656                     l1755:	
  1916  0656  0821               	movf	addToScreen@i+1,w
  1917  0657  3A80               	xorlw	128
  1918  0658  00FF               	movwf	btemp+1
  1919  0659  3080               	movlw	128
  1920  065A  027F               	subwf	btemp+1,w
  1921  065B  1D03               	skipz
  1922  065C  2E5F               	goto	u1335
  1923  065D  3008               	movlw	8
  1924  065E  0220               	subwf	addToScreen@i,w
  1925  065F                     u1335:	
  1926  065F  1C03               	skipc
  1927  0660  2E62               	goto	u1331
  1928  0661  2E63               	goto	u1330
  1929  0662                     u1331:	
  1930  0662  2E29               	goto	l1751
  1931  0663                     u1330:	
  1932  0663                     l192:	
  1933  0663  0008               	return
  1934  0664                     __end_of_addToScreen:	
  1935                           
  1936                           	psect	text9
  1937  07BF                     __ptext9:	
  1938 ;; *************** function _srand *****************
  1939 ;; Defined at:
  1940 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  1941 ;; Parameters:    Size  Location     Type
  1942 ;;  x               2    2[COMMON] unsigned int 
  1943 ;; Auto vars:     Size  Location     Type
  1944 ;;		None
  1945 ;; Return value:  Size  Location     Type
  1946 ;;                  1    wreg      void 
  1947 ;; Registers used:
  1948 ;;		wreg
  1949 ;; Tracked objects:
  1950 ;;		On entry : 0/0
  1951 ;;		On exit  : 0/0
  1952 ;;		Unchanged: 0/0
  1953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1954 ;;      Params:         2       0       0       0       0
  1955 ;;      Locals:         0       0       0       0       0
  1956 ;;      Temps:          0       0       0       0       0
  1957 ;;      Totals:         2       0       0       0       0
  1958 ;;Total ram usage:        2 bytes
  1959 ;; Hardware stack levels used:    1
  1960 ;; Hardware stack levels required when called:    1
  1961 ;; This function calls:
  1962 ;;		Nothing
  1963 ;; This function is called by:
  1964 ;;		_main
  1965 ;; This function uses a non-reentrant model
  1966 ;;
  1967                           
  1968                           
  1969                           ;psect for function _srand
  1970  07BF                     _srand:	
  1971  07BF                     l1777:	
  1972                           ;incstack = 0
  1973                           ; Regs used in _srand: [wreg]
  1974                           
  1975  07BF  0872               	movf	srand@x,w
  1976  07C0  1283               	bcf	3,5	;RP0=0, select bank0
  1977  07C1  1303               	bcf	3,6	;RP1=0, select bank0
  1978  07C2  00E7               	movwf	_randx
  1979  07C3  0873               	movf	srand@x+1,w
  1980  07C4  00E8               	movwf	_randx+1
  1981  07C5  01E9               	clrf	_randx+2
  1982  07C6  01EA               	clrf	_randx+3
  1983  07C7                     l814:	
  1984  07C7  0008               	return
  1985  07C8                     __end_of_srand:	
  1986                           
  1987                           	psect	text10
  1988  0798                     __ptext10:	
  1989 ;; *************** function _init_timer *****************
  1990 ;; Defined at:
  1991 ;;		line 55 in file "init.c"
  1992 ;; Parameters:    Size  Location     Type
  1993 ;;		None
  1994 ;; Auto vars:     Size  Location     Type
  1995 ;;		None
  1996 ;; Return value:  Size  Location     Type
  1997 ;;                  1    wreg      void 
  1998 ;; Registers used:
  1999 ;;		status,2
  2000 ;; Tracked objects:
  2001 ;;		On entry : 0/0
  2002 ;;		On exit  : 0/0
  2003 ;;		Unchanged: 0/0
  2004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2005 ;;      Params:         0       0       0       0       0
  2006 ;;      Locals:         0       0       0       0       0
  2007 ;;      Temps:          0       0       0       0       0
  2008 ;;      Totals:         0       0       0       0       0
  2009 ;;Total ram usage:        0 bytes
  2010 ;; Hardware stack levels used:    1
  2011 ;; Hardware stack levels required when called:    1
  2012 ;; This function calls:
  2013 ;;		Nothing
  2014 ;; This function is called by:
  2015 ;;		_main
  2016 ;; This function uses a non-reentrant model
  2017 ;;
  2018                           
  2019                           
  2020                           ;psect for function _init_timer
  2021  0798                     _init_timer:	
  2022  0798                     l1759:	
  2023                           ;incstack = 0
  2024                           ; Regs used in _init_timer: [status,2]
  2025                           
  2026                           
  2027                           ;init.c: 57:     TMR0=0;
  2028  0798  1283               	bcf	3,5	;RP0=0, select bank0
  2029  0799  1303               	bcf	3,6	;RP1=0, select bank0
  2030  079A  0181               	clrf	1	;volatile
  2031  079B                     l1761:	
  2032                           
  2033                           ;init.c: 65:     INTCONbits.GIE = 1;
  2034  079B  178B               	bsf	11,7	;volatile
  2035  079C                     l1763:	
  2036                           
  2037                           ;init.c: 66:     INTCONbits.TMR0IE = 1;
  2038  079C  168B               	bsf	11,5	;volatile
  2039  079D                     l1765:	
  2040                           
  2041                           ;init.c: 67:     INTCONbits.TMR0IF = 0;
  2042  079D  110B               	bcf	11,2	;volatile
  2043  079E                     l1767:	
  2044                           
  2045                           ;init.c: 76:     OPTION_REGbits.PSA = 0;
  2046  079E  1683               	bsf	3,5	;RP0=1, select bank1
  2047  079F  1303               	bcf	3,6	;RP1=0, select bank1
  2048  07A0  1181               	bcf	1,3	;volatile
  2049  07A1                     l1769:	
  2050                           
  2051                           ;init.c: 77:     OPTION_REGbits.PS0 = 1;
  2052  07A1  1401               	bsf	1,0	;volatile
  2053  07A2                     l1771:	
  2054                           
  2055                           ;init.c: 78:     OPTION_REGbits.PS1 = 1;
  2056  07A2  1481               	bsf	1,1	;volatile
  2057  07A3                     l1773:	
  2058                           
  2059                           ;init.c: 79:     OPTION_REGbits.PS2 = 1;
  2060  07A3  1501               	bsf	1,2	;volatile
  2061  07A4                     l1775:	
  2062                           
  2063                           ;init.c: 80:     OPTION_REGbits.T0CS = 0;
  2064  07A4  1281               	bcf	1,5	;volatile
  2065  07A5                     l36:	
  2066  07A5  0008               	return
  2067  07A6                     __end_of_init_timer:	
  2068                           
  2069                           	psect	text11
  2070  0788                     __ptext11:	
  2071 ;; *************** function _init_pines *****************
  2072 ;; Defined at:
  2073 ;;		line 39 in file "init.c"
  2074 ;; Parameters:    Size  Location     Type
  2075 ;;		None
  2076 ;; Auto vars:     Size  Location     Type
  2077 ;;		None
  2078 ;; Return value:  Size  Location     Type
  2079 ;;                  1    wreg      void 
  2080 ;; Registers used:
  2081 ;;		status,2, status,0, pclath, cstack
  2082 ;; Tracked objects:
  2083 ;;		On entry : 0/0
  2084 ;;		On exit  : 0/0
  2085 ;;		Unchanged: 0/0
  2086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2087 ;;      Params:         0       0       0       0       0
  2088 ;;      Locals:         0       0       0       0       0
  2089 ;;      Temps:          0       0       0       0       0
  2090 ;;      Totals:         0       0       0       0       0
  2091 ;;Total ram usage:        0 bytes
  2092 ;; Hardware stack levels used:    1
  2093 ;; Hardware stack levels required when called:    2
  2094 ;; This function calls:
  2095 ;;		_init_pines_col
  2096 ;;		_init_pines_fil
  2097 ;;		_init_pines_in
  2098 ;; This function is called by:
  2099 ;;		_main
  2100 ;; This function uses a non-reentrant model
  2101 ;;
  2102                           
  2103                           
  2104                           ;psect for function _init_pines
  2105  0788                     _init_pines:	
  2106  0788                     l1757:	
  2107                           ;incstack = 0
  2108                           ; Regs used in _init_pines: [status,2+status,0+pclath+cstack]
  2109                           
  2110                           
  2111                           ;init.c: 41:     init_pines_fil();
  2112  0788  120A  118A  27A6  120A  118A  	fcall	_init_pines_fil
  2113                           
  2114                           ;init.c: 42:     init_pines_col();
  2115  078D  120A  118A  2775  120A  118A  	fcall	_init_pines_col
  2116                           
  2117                           ;init.c: 43:     init_pines_in();
  2118  0792  120A  118A  27E2  120A  118A  	fcall	_init_pines_in
  2119  0797                     l30:	
  2120  0797  0008               	return
  2121  0798                     __end_of_init_pines:	
  2122                           
  2123                           	psect	text12
  2124  07E2                     __ptext12:	
  2125 ;; *************** function _init_pines_in *****************
  2126 ;; Defined at:
  2127 ;;		line 4 in file "init.c"
  2128 ;; Parameters:    Size  Location     Type
  2129 ;;		None
  2130 ;; Auto vars:     Size  Location     Type
  2131 ;;		None
  2132 ;; Return value:  Size  Location     Type
  2133 ;;                  1    wreg      void 
  2134 ;; Registers used:
  2135 ;;		None
  2136 ;; Tracked objects:
  2137 ;;		On entry : 0/0
  2138 ;;		On exit  : 0/0
  2139 ;;		Unchanged: 0/0
  2140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2141 ;;      Params:         0       0       0       0       0
  2142 ;;      Locals:         0       0       0       0       0
  2143 ;;      Temps:          0       0       0       0       0
  2144 ;;      Totals:         0       0       0       0       0
  2145 ;;Total ram usage:        0 bytes
  2146 ;; Hardware stack levels used:    1
  2147 ;; Hardware stack levels required when called:    1
  2148 ;; This function calls:
  2149 ;;		Nothing
  2150 ;; This function is called by:
  2151 ;;		_init_pines
  2152 ;; This function uses a non-reentrant model
  2153 ;;
  2154                           
  2155                           
  2156                           ;psect for function _init_pines_in
  2157  07E2                     _init_pines_in:	
  2158  07E2                     l1531:	
  2159                           ;incstack = 0
  2160                           ; Regs used in _init_pines_in: []
  2161                           
  2162                           
  2163                           ;init.c: 5:     TRISBbits.TRISB5 = 1;
  2164  07E2  1683               	bsf	3,5	;RP0=1, select bank1
  2165  07E3  1303               	bcf	3,6	;RP1=0, select bank1
  2166  07E4  1686               	bsf	6,5	;volatile
  2167                           
  2168                           ;init.c: 6:     TRISBbits.TRISB4 = 1;
  2169  07E5  1606               	bsf	6,4	;volatile
  2170                           
  2171                           ;init.c: 7:     TRISBbits.TRISB3 = 1;
  2172  07E6  1586               	bsf	6,3	;volatile
  2173  07E7                     l21:	
  2174  07E7  0008               	return
  2175  07E8                     __end_of_init_pines_in:	
  2176                           
  2177                           	psect	text13
  2178  07A6                     __ptext13:	
  2179 ;; *************** function _init_pines_fil *****************
  2180 ;; Defined at:
  2181 ;;		line 12 in file "init.c"
  2182 ;; Parameters:    Size  Location     Type
  2183 ;;		None
  2184 ;; Auto vars:     Size  Location     Type
  2185 ;;		None
  2186 ;; Return value:  Size  Location     Type
  2187 ;;                  1    wreg      void 
  2188 ;; Registers used:
  2189 ;;		None
  2190 ;; Tracked objects:
  2191 ;;		On entry : 0/0
  2192 ;;		On exit  : 0/0
  2193 ;;		Unchanged: 0/0
  2194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2195 ;;      Params:         0       0       0       0       0
  2196 ;;      Locals:         0       0       0       0       0
  2197 ;;      Temps:          0       0       0       0       0
  2198 ;;      Totals:         0       0       0       0       0
  2199 ;;Total ram usage:        0 bytes
  2200 ;; Hardware stack levels used:    1
  2201 ;; Hardware stack levels required when called:    1
  2202 ;; This function calls:
  2203 ;;		Nothing
  2204 ;; This function is called by:
  2205 ;;		_init_pines
  2206 ;; This function uses a non-reentrant model
  2207 ;;
  2208                           
  2209                           
  2210                           ;psect for function _init_pines_fil
  2211  07A6                     _init_pines_fil:	
  2212  07A6                     l1533:	
  2213                           ;incstack = 0
  2214                           ; Regs used in _init_pines_fil: []
  2215                           
  2216                           
  2217                           ;init.c: 14:     TRISCbits.TRISC4 = 0;
  2218  07A6  1683               	bsf	3,5	;RP0=1, select bank1
  2219  07A7  1303               	bcf	3,6	;RP1=0, select bank1
  2220  07A8  1207               	bcf	7,4	;volatile
  2221                           
  2222                           ;init.c: 15:     TRISCbits.TRISC5 = 0;
  2223  07A9  1287               	bcf	7,5	;volatile
  2224                           
  2225                           ;init.c: 16:     TRISCbits.TRISC6 = 0;
  2226  07AA  1307               	bcf	7,6	;volatile
  2227                           
  2228                           ;init.c: 17:     TRISCbits.TRISC7 = 0;
  2229  07AB  1387               	bcf	7,7	;volatile
  2230                           
  2231                           ;init.c: 19:     PORTCbits.RC4 = 0;
  2232  07AC  1283               	bcf	3,5	;RP0=0, select bank0
  2233  07AD  1303               	bcf	3,6	;RP1=0, select bank0
  2234  07AE  1207               	bcf	7,4	;volatile
  2235                           
  2236                           ;init.c: 20:     PORTCbits.RC5 = 0;
  2237  07AF  1287               	bcf	7,5	;volatile
  2238                           
  2239                           ;init.c: 21:     PORTCbits.RC6 = 0;
  2240  07B0  1307               	bcf	7,6	;volatile
  2241                           
  2242                           ;init.c: 22:     PORTCbits.RC7 = 0;
  2243  07B1  1387               	bcf	7,7	;volatile
  2244  07B2                     l24:	
  2245  07B2  0008               	return
  2246  07B3                     __end_of_init_pines_fil:	
  2247                           
  2248                           	psect	text14
  2249  0775                     __ptext14:	
  2250 ;; *************** function _init_pines_col *****************
  2251 ;; Defined at:
  2252 ;;		line 25 in file "init.c"
  2253 ;; Parameters:    Size  Location     Type
  2254 ;;		None
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;		None
  2257 ;; Return value:  Size  Location     Type
  2258 ;;                  1    wreg      void 
  2259 ;; Registers used:
  2260 ;;		None
  2261 ;; Tracked objects:
  2262 ;;		On entry : 0/0
  2263 ;;		On exit  : 0/0
  2264 ;;		Unchanged: 0/0
  2265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2266 ;;      Params:         0       0       0       0       0
  2267 ;;      Locals:         0       0       0       0       0
  2268 ;;      Temps:          0       0       0       0       0
  2269 ;;      Totals:         0       0       0       0       0
  2270 ;;Total ram usage:        0 bytes
  2271 ;; Hardware stack levels used:    1
  2272 ;; Hardware stack levels required when called:    1
  2273 ;; This function calls:
  2274 ;;		Nothing
  2275 ;; This function is called by:
  2276 ;;		_init_pines
  2277 ;; This function uses a non-reentrant model
  2278 ;;
  2279                           
  2280                           
  2281                           ;psect for function _init_pines_col
  2282  0775                     _init_pines_col:	
  2283  0775                     l1535:	
  2284                           ;incstack = 0
  2285                           ; Regs used in _init_pines_col: []
  2286                           
  2287                           
  2288                           ;init.c: 26:     TRISBbits.TRISB0 = 0;
  2289  0775  1683               	bsf	3,5	;RP0=1, select bank1
  2290  0776  1303               	bcf	3,6	;RP1=0, select bank1
  2291  0777  1006               	bcf	6,0	;volatile
  2292                           
  2293                           ;init.c: 27:     PORTBbits.RB0 = 0;
  2294  0778  1283               	bcf	3,5	;RP0=0, select bank0
  2295  0779  1303               	bcf	3,6	;RP1=0, select bank0
  2296  077A  1006               	bcf	6,0	;volatile
  2297                           
  2298                           ;init.c: 29:     TRISDbits.TRISD4 = 0;
  2299  077B  1683               	bsf	3,5	;RP0=1, select bank1
  2300  077C  1303               	bcf	3,6	;RP1=0, select bank1
  2301  077D  1208               	bcf	8,4	;volatile
  2302                           
  2303                           ;init.c: 30:     TRISDbits.TRISD5 = 0;
  2304  077E  1288               	bcf	8,5	;volatile
  2305                           
  2306                           ;init.c: 31:     TRISDbits.TRISD6 = 0;
  2307  077F  1308               	bcf	8,6	;volatile
  2308                           
  2309                           ;init.c: 32:     TRISDbits.TRISD7 = 0;
  2310  0780  1388               	bcf	8,7	;volatile
  2311                           
  2312                           ;init.c: 34:     PORTDbits.RD4 = 0;
  2313  0781  1283               	bcf	3,5	;RP0=0, select bank0
  2314  0782  1303               	bcf	3,6	;RP1=0, select bank0
  2315  0783  1208               	bcf	8,4	;volatile
  2316                           
  2317                           ;init.c: 35:     PORTDbits.RD5 = 0;
  2318  0784  1288               	bcf	8,5	;volatile
  2319                           
  2320                           ;init.c: 36:     PORTDbits.RD6 = 0;
  2321  0785  1308               	bcf	8,6	;volatile
  2322                           
  2323                           ;init.c: 37:     PORTDbits.RD7 = 0;
  2324  0786  1388               	bcf	8,7	;volatile
  2325  0787                     l27:	
  2326  0787  0008               	return
  2327  0788                     __end_of_init_pines_col:	
  2328                           
  2329                           	psect	text15
  2330  03DC                     __ptext15:	
  2331 ;; *************** function _checkCount *****************
  2332 ;; Defined at:
  2333 ;;		line 135 in file "mainsource.c"
  2334 ;; Parameters:    Size  Location     Type
  2335 ;;		None
  2336 ;; Auto vars:     Size  Location     Type
  2337 ;;  j               2   30[BANK0 ] int 
  2338 ;;  i               2    0        int 
  2339 ;; Return value:  Size  Location     Type
  2340 ;;                  1    wreg      void 
  2341 ;; Registers used:
  2342 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2343 ;; Tracked objects:
  2344 ;;		On entry : 0/0
  2345 ;;		On exit  : 0/0
  2346 ;;		Unchanged: 0/0
  2347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2348 ;;      Params:         0       0       0       0       0
  2349 ;;      Locals:         0       4       0       0       0
  2350 ;;      Temps:          0       1       0       0       0
  2351 ;;      Totals:         0       5       0       0       0
  2352 ;;Total ram usage:        5 bytes
  2353 ;; Hardware stack levels used:    1
  2354 ;; Hardware stack levels required when called:    4
  2355 ;; This function calls:
  2356 ;;		_checkBottom
  2357 ;;		_checkColission_D
  2358 ;;		_drawFigure
  2359 ;;		_leerEntradas
  2360 ;;		_perdio
  2361 ;;		_sumaPuntos
  2362 ;; This function is called by:
  2363 ;;		_main
  2364 ;; This function uses a non-reentrant model
  2365 ;;
  2366                           
  2367                           
  2368                           ;psect for function _checkCount
  2369  03DC                     _checkCount:	
  2370  03DC                     l1779:	
  2371                           ;incstack = 0
  2372                           ; Regs used in _checkCount: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2373                           
  2374                           
  2375                           ;mainsource.c: 136:     if(con.check_count == 1){
  2376  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  2377  03DD  1303               	bcf	3,6	;RP1=0, select bank0
  2378  03DE  034C               	decf	_con+7,w
  2379  03DF  1D03               	btfss	3,2
  2380  03E0  2BE2               	goto	u1341
  2381  03E1  2BE3               	goto	u1340
  2382  03E2                     u1341:	
  2383  03E2  2C2A               	goto	l120
  2384  03E3                     u1340:	
  2385  03E3                     l1781:	
  2386  03E3  01BE               	clrf	checkCount@j
  2387  03E4  01BF               	clrf	checkCount@j+1
  2388                           
  2389                           ;mainsource.c: 138:         con.check_count = 0;
  2390  03E5  01CC               	clrf	_con+7
  2391  03E6                     l1783:	
  2392                           
  2393                           ;mainsource.c: 140:         leerEntradas();
  2394  03E6  120A  118A  203E  120A  118A  	fcall	_leerEntradas
  2395  03EB                     l1785:	
  2396                           
  2397                           ;mainsource.c: 143:         if(timerCount >= 15 ){
  2398  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  2399  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  2400  03ED  0856               	movf	_timerCount+3,w
  2401  03EE  1D03               	btfss	3,2
  2402  03EF  2BFE               	goto	u1350
  2403  03F0  0855               	movf	_timerCount+2,w
  2404  03F1  1D03               	btfss	3,2
  2405  03F2  2BFE               	goto	u1350
  2406  03F3  0854               	movf	_timerCount+1,w
  2407  03F4  1D03               	btfss	3,2
  2408  03F5  2BFE               	goto	u1350
  2409  03F6  300F               	movlw	15
  2410  03F7  0253               	subwf	_timerCount,w
  2411  03F8  1D03               	skipz
  2412  03F9  2BFA               	goto	u1353
  2413  03FA                     u1353:	
  2414  03FA  1C03               	btfss	3,0
  2415  03FB  2BFD               	goto	u1351
  2416  03FC  2BFE               	goto	u1350
  2417  03FD                     u1351:	
  2418  03FD  2C2A               	goto	l120
  2419  03FE                     u1350:	
  2420  03FE                     l1787:	
  2421                           
  2422                           ;mainsource.c: 144:             timerCount = 0;
  2423  03FE  3000               	movlw	0
  2424  03FF  00D6               	movwf	_timerCount+3
  2425  0400  3000               	movlw	0
  2426  0401  00D5               	movwf	_timerCount+2
  2427  0402  3000               	movlw	0
  2428  0403  00D4               	movwf	_timerCount+1
  2429  0404  3000               	movlw	0
  2430  0405  00D3               	movwf	_timerCount
  2431  0406                     l1789:	
  2432                           
  2433                           ;mainsource.c: 146:             PORTBbits.RB0 = con.led;
  2434  0406  0C46               	rrf	_con+1,w
  2435  0407  1C03               	skipc
  2436  0408  1006               	bcf	6,0	;volatile
  2437  0409  1803               	skipnc
  2438  040A  1406               	bsf	6,0	;volatile
  2439  040B                     l1791:	
  2440                           
  2441                           ;mainsource.c: 147:             con.led= ~con.led;
  2442  040B  0946               	comf	_con+1,w
  2443  040C  00BB               	movwf	??_checkCount
  2444  040D  083B               	movf	??_checkCount,w
  2445  040E  00C6               	movwf	_con+1
  2446                           
  2447                           ;mainsource.c: 148:             con.ficha_Vpos--;
  2448  040F  3001               	movlw	1
  2449  0410  02C7               	subwf	_con+2,f
  2450  0411                     l1793:	
  2451                           
  2452                           ;mainsource.c: 150:             checkBottom();
  2453  0411  120A  118A  26D9  120A  118A  	fcall	_checkBottom
  2454  0416                     l1795:	
  2455                           
  2456                           ;mainsource.c: 151:             checkColission_D();
  2457  0416  120A  118A  2242  120A  118A  	fcall	_checkColission_D
  2458  041B                     l1797:	
  2459                           
  2460                           ;mainsource.c: 152:             drawFigure();
  2461  041B  120A  118A  21A5  120A  118A  	fcall	_drawFigure
  2462  0420                     l1799:	
  2463                           
  2464                           ;mainsource.c: 154:             perdio();
  2465  0420  120A  118A  22B8  120A  118A  	fcall	_perdio
  2466  0425                     l1801:	
  2467                           
  2468                           ;mainsource.c: 155:             sumaPuntos();
  2469  0425  120A  118A  250E  120A  118A  	fcall	_sumaPuntos
  2470  042A                     l120:	
  2471  042A  0008               	return
  2472  042B                     __end_of_checkCount:	
  2473                           
  2474                           	psect	text16
  2475  050E                     __ptext16:	
  2476 ;; *************** function _sumaPuntos *****************
  2477 ;; Defined at:
  2478 ;;		line 30 in file "puntuacion.c"
  2479 ;; Parameters:    Size  Location     Type
  2480 ;;		None
  2481 ;; Auto vars:     Size  Location     Type
  2482 ;;  j               2    9[COMMON] int 
  2483 ;;  i               2    7[COMMON] int 
  2484 ;;  aux             1    6[COMMON] unsigned char 
  2485 ;; Return value:  Size  Location     Type
  2486 ;;                  1    wreg      void 
  2487 ;; Registers used:
  2488 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2489 ;; Tracked objects:
  2490 ;;		On entry : 0/0
  2491 ;;		On exit  : 0/0
  2492 ;;		Unchanged: 0/0
  2493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2494 ;;      Params:         0       0       0       0       0
  2495 ;;      Locals:         5       0       0       0       0
  2496 ;;      Temps:          4       0       0       0       0
  2497 ;;      Totals:         9       0       0       0       0
  2498 ;;Total ram usage:        9 bytes
  2499 ;; Hardware stack levels used:    1
  2500 ;; Hardware stack levels required when called:    1
  2501 ;; This function calls:
  2502 ;;		Nothing
  2503 ;; This function is called by:
  2504 ;;		_checkCount
  2505 ;; This function uses a non-reentrant model
  2506 ;;
  2507                           
  2508                           
  2509                           ;psect for function _sumaPuntos
  2510  050E                     _sumaPuntos:	
  2511  050E                     l1697:	
  2512                           ;incstack = 0
  2513                           ; Regs used in _sumaPuntos: [wreg-fsr0h+status,2+status,0+btemp+1]
  2514                           
  2515  050E  01F9               	clrf	sumaPuntos@j
  2516  050F  01FA               	clrf	sumaPuntos@j+1
  2517  0510                     l1699:	
  2518                           
  2519                           ;puntuacion.c: 32:     uint8_t aux = 1;
  2520  0510  01F6               	clrf	sumaPuntos@aux
  2521  0511  0AF6               	incf	sumaPuntos@aux,f
  2522                           
  2523                           ;puntuacion.c: 33:     for (i=0; i<16; i++){
  2524  0512  01F7               	clrf	sumaPuntos@i
  2525  0513  01F8               	clrf	sumaPuntos@i+1
  2526  0514                     l1705:	
  2527                           
  2528                           ;puntuacion.c: 34:         for(j=0; j<8; j++){
  2529  0514  01F9               	clrf	sumaPuntos@j
  2530  0515  01FA               	clrf	sumaPuntos@j+1
  2531  0516                     l1711:	
  2532                           
  2533                           ;puntuacion.c: 35:             aux = aux & fondo[j]>>i;
  2534  0516  0879               	movf	sumaPuntos@j,w
  2535  0517  00F2               	movwf	??_sumaPuntos
  2536  0518  0772               	addwf	??_sumaPuntos,w
  2537  0519  3EA0               	addlw	(low (_fondo| 0))& (0+255)
  2538  051A  0084               	movwf	4
  2539  051B  1383               	bcf	3,7	;select IRP bank1
  2540  051C  0800               	movf	0,w
  2541  051D  00F3               	movwf	??_sumaPuntos+1
  2542  051E  0A84               	incf	4,f
  2543  051F  0800               	movf	0,w
  2544  0520  00F4               	movwf	??_sumaPuntos+2
  2545  0521  0A77               	incf	sumaPuntos@i,w
  2546  0522  2D26               	goto	u1274
  2547  0523                     u1275:	
  2548  0523  1003               	clrc
  2549  0524  0CF4               	rrf	??_sumaPuntos+2,f
  2550  0525  0CF3               	rrf	??_sumaPuntos+1,f
  2551  0526                     u1274:	
  2552  0526  3EFF               	addlw	-1
  2553  0527  1D03               	skipz
  2554  0528  2D23               	goto	u1275
  2555  0529  0873               	movf	??_sumaPuntos+1,w
  2556  052A  0576               	andwf	sumaPuntos@aux,w
  2557  052B  00F5               	movwf	??_sumaPuntos+3
  2558  052C  0875               	movf	??_sumaPuntos+3,w
  2559  052D  00F6               	movwf	sumaPuntos@aux
  2560  052E                     l1713:	
  2561                           
  2562                           ;puntuacion.c: 36:         }
  2563  052E  3001               	movlw	1
  2564  052F  07F9               	addwf	sumaPuntos@j,f
  2565  0530  1803               	skipnc
  2566  0531  0AFA               	incf	sumaPuntos@j+1,f
  2567  0532  3000               	movlw	0
  2568  0533  07FA               	addwf	sumaPuntos@j+1,f
  2569  0534                     l1715:	
  2570  0534  087A               	movf	sumaPuntos@j+1,w
  2571  0535  3A80               	xorlw	128
  2572  0536  00FF               	movwf	btemp+1
  2573  0537  3080               	movlw	128
  2574  0538  027F               	subwf	btemp+1,w
  2575  0539  1D03               	skipz
  2576  053A  2D3D               	goto	u1285
  2577  053B  3008               	movlw	8
  2578  053C  0279               	subwf	sumaPuntos@j,w
  2579  053D                     u1285:	
  2580  053D  1C03               	skipc
  2581  053E  2D40               	goto	u1281
  2582  053F  2D41               	goto	u1280
  2583  0540                     u1281:	
  2584  0540  2D16               	goto	l1711
  2585  0541                     u1280:	
  2586  0541                     l1719:	
  2587                           
  2588                           ;puntuacion.c: 40:     }
  2589  0541  3001               	movlw	1
  2590  0542  07F7               	addwf	sumaPuntos@i,f
  2591  0543  1803               	skipnc
  2592  0544  0AF8               	incf	sumaPuntos@i+1,f
  2593  0545  3000               	movlw	0
  2594  0546  07F8               	addwf	sumaPuntos@i+1,f
  2595  0547                     l1721:	
  2596  0547  0878               	movf	sumaPuntos@i+1,w
  2597  0548  3A80               	xorlw	128
  2598  0549  00FF               	movwf	btemp+1
  2599  054A  3080               	movlw	128
  2600  054B  027F               	subwf	btemp+1,w
  2601  054C  1D03               	skipz
  2602  054D  2D50               	goto	u1295
  2603  054E  3010               	movlw	16
  2604  054F  0277               	subwf	sumaPuntos@i,w
  2605  0550                     u1295:	
  2606  0550  1C03               	skipc
  2607  0551  2D53               	goto	u1291
  2608  0552  2D54               	goto	u1290
  2609  0553                     u1291:	
  2610  0553  2D14               	goto	l1705
  2611  0554                     u1290:	
  2612  0554                     l275:	
  2613  0554  0008               	return
  2614  0555                     __end_of_sumaPuntos:	
  2615                           
  2616                           	psect	text17
  2617  02B8                     __ptext17:	
  2618 ;; *************** function _perdio *****************
  2619 ;; Defined at:
  2620 ;;		line 13 in file "puntuacion.c"
  2621 ;; Parameters:    Size  Location     Type
  2622 ;;		None
  2623 ;; Auto vars:     Size  Location     Type
  2624 ;;  i               2   20[BANK0 ] int 
  2625 ;; Return value:  Size  Location     Type
  2626 ;;                  1    wreg      void 
  2627 ;; Registers used:
  2628 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2629 ;; Tracked objects:
  2630 ;;		On entry : 0/0
  2631 ;;		On exit  : 0/0
  2632 ;;		Unchanged: 0/0
  2633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2634 ;;      Params:         0       0       0       0       0
  2635 ;;      Locals:         0       2       0       0       0
  2636 ;;      Temps:          0       3       0       0       0
  2637 ;;      Totals:         0       5       0       0       0
  2638 ;;Total ram usage:        5 bytes
  2639 ;; Hardware stack levels used:    1
  2640 ;; Hardware stack levels required when called:    3
  2641 ;; This function calls:
  2642 ;;		___awmod
  2643 ;;		_memset
  2644 ;;		_rand
  2645 ;; This function is called by:
  2646 ;;		_checkCount
  2647 ;; This function uses a non-reentrant model
  2648 ;;
  2649                           
  2650                           
  2651                           ;psect for function _perdio
  2652  02B8                     _perdio:	
  2653  02B8                     l1679:	
  2654                           ;incstack = 0
  2655                           ; Regs used in _perdio: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2656                           
  2657                           
  2658                           ;puntuacion.c: 14:     int i = 0;
  2659  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  2660  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  2661  02BA  01B4               	clrf	perdio@i
  2662  02BB  01B5               	clrf	perdio@i+1
  2663                           
  2664                           ;puntuacion.c: 15:     for(i=0; i<8; i++){
  2665  02BC  01B4               	clrf	perdio@i
  2666  02BD  01B5               	clrf	perdio@i+1
  2667  02BE                     l1685:	
  2668                           
  2669                           ;puntuacion.c: 16:         if((fondo[i] & 0x8000) != 0){
  2670  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  2671  02BF  1303               	bcf	3,6	;RP1=0, select bank0
  2672  02C0  0834               	movf	perdio@i,w
  2673  02C1  00B1               	movwf	??_perdio
  2674  02C2  0731               	addwf	??_perdio,w
  2675  02C3  3EA0               	addlw	(low (_fondo| 0))& (0+255)
  2676  02C4  0084               	movwf	4
  2677  02C5  1383               	bcf	3,7	;select IRP bank1
  2678  02C6  0800               	movf	0,w
  2679  02C7  00B2               	movwf	??_perdio+1
  2680  02C8  0A84               	incf	4,f
  2681  02C9  0800               	movf	0,w
  2682  02CA  00B3               	movwf	??_perdio+2
  2683  02CB  1FB3               	btfss	??_perdio+2,7
  2684  02CC  2ACE               	goto	u1251
  2685  02CD  2ACF               	goto	u1250
  2686  02CE                     u1251:	
  2687  02CE  2B0A               	goto	l1693
  2688  02CF                     u1250:	
  2689  02CF                     l1687:	
  2690                           
  2691                           ;puntuacion.c: 17:             memset(ficha, 0, sizeof(ficha));
  2692  02CF  3000               	movlw	0
  2693  02D0  00F2               	movwf	memset@c
  2694  02D1  00F3               	movwf	memset@c+1
  2695  02D2  3010               	movlw	16
  2696  02D3  00F4               	movwf	memset@n
  2697  02D4  3000               	movlw	0
  2698  02D5  00F5               	movwf	memset@n+1
  2699  02D6  3057               	movlw	(low (_ficha| 0))& (0+255)
  2700  02D7  120A  118A  270A  120A  118A  	fcall	_memset
  2701                           
  2702                           ;puntuacion.c: 18:             memset(fondo, 0, sizeof(fondo));
  2703  02DC  3000               	movlw	0
  2704  02DD  00F2               	movwf	memset@c
  2705  02DE  00F3               	movwf	memset@c+1
  2706  02DF  3010               	movlw	16
  2707  02E0  00F4               	movwf	memset@n
  2708  02E1  3000               	movlw	0
  2709  02E2  00F5               	movwf	memset@n+1
  2710  02E3  30A0               	movlw	(low (_fondo| 0))& (0+255)
  2711  02E4  120A  118A  270A  120A  118A  	fcall	_memset
  2712  02E9                     l1689:	
  2713                           
  2714                           ;puntuacion.c: 19:             con.ficha_Vpos = 16;
  2715  02E9  3010               	movlw	16
  2716  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  2717  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  2718  02EC  00B1               	movwf	??_perdio
  2719  02ED  0831               	movf	??_perdio,w
  2720  02EE  00C7               	movwf	_con+2
  2721  02EF                     l1691:	
  2722                           
  2723                           ;puntuacion.c: 20:             con.ficha_actual = rand() % 7;
  2724  02EF  3007               	movlw	7
  2725  02F0  00AB               	movwf	___awmod@divisor
  2726  02F1  3000               	movlw	0
  2727  02F2  00AC               	movwf	___awmod@divisor+1
  2728  02F3  120A  118A  2555  120A  118A  	fcall	_rand
  2729  02F8  1283               	bcf	3,5	;RP0=0, select bank0
  2730  02F9  1303               	bcf	3,6	;RP1=0, select bank0
  2731  02FA  0825               	movf	?_rand+1,w
  2732  02FB  00AE               	movwf	___awmod@dividend+1
  2733  02FC  0824               	movf	?_rand,w
  2734  02FD  00AD               	movwf	___awmod@dividend
  2735  02FE  120A  118A  2381  120A  118A  	fcall	___awmod
  2736  0303  1283               	bcf	3,5	;RP0=0, select bank0
  2737  0304  1303               	bcf	3,6	;RP1=0, select bank0
  2738  0305  082B               	movf	?___awmod,w
  2739  0306  00B1               	movwf	??_perdio
  2740  0307  0831               	movf	??_perdio,w
  2741  0308  00C9               	movwf	_con+4
  2742                           
  2743                           ;puntuacion.c: 21:             break;
  2744  0309  2B1D               	goto	l267
  2745  030A                     l1693:	
  2746                           
  2747                           ;puntuacion.c: 23:     }
  2748  030A  3001               	movlw	1
  2749  030B  07B4               	addwf	perdio@i,f
  2750  030C  1803               	skipnc
  2751  030D  0AB5               	incf	perdio@i+1,f
  2752  030E  3000               	movlw	0
  2753  030F  07B5               	addwf	perdio@i+1,f
  2754  0310                     l1695:	
  2755  0310  0835               	movf	perdio@i+1,w
  2756  0311  3A80               	xorlw	128
  2757  0312  00FF               	movwf	btemp+1
  2758  0313  3080               	movlw	128
  2759  0314  027F               	subwf	btemp+1,w
  2760  0315  1D03               	skipz
  2761  0316  2B19               	goto	u1265
  2762  0317  3008               	movlw	8
  2763  0318  0234               	subwf	perdio@i,w
  2764  0319                     u1265:	
  2765  0319  1C03               	skipc
  2766  031A  2B1C               	goto	u1261
  2767  031B  2B1D               	goto	u1260
  2768  031C                     u1261:	
  2769  031C  2ABE               	goto	l1685
  2770  031D                     u1260:	
  2771  031D                     l267:	
  2772  031D  0008               	return
  2773  031E                     __end_of_perdio:	
  2774                           
  2775                           	psect	text18
  2776  003E                     __ptext18:	
  2777 ;; *************** function _leerEntradas *****************
  2778 ;; Defined at:
  2779 ;;		line 69 in file "mainsource.c"
  2780 ;; Parameters:    Size  Location     Type
  2781 ;;		None
  2782 ;; Auto vars:     Size  Location     Type
  2783 ;;  aux             4   13[BANK0 ] unsigned char [4]
  2784 ;;  i               2   19[BANK0 ] int 
  2785 ;;  j               2   17[BANK0 ] int 
  2786 ;;  k               2   10[BANK0 ] int 
  2787 ;;  mask            1   12[BANK0 ] unsigned char 
  2788 ;; Return value:  Size  Location     Type
  2789 ;;                  1    wreg      void 
  2790 ;; Registers used:
  2791 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2792 ;; Tracked objects:
  2793 ;;		On entry : 0/0
  2794 ;;		On exit  : 0/0
  2795 ;;		Unchanged: 0/0
  2796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2797 ;;      Params:         0       0       0       0       0
  2798 ;;      Locals:         0      11       0       0       0
  2799 ;;      Temps:          0       5       0       0       0
  2800 ;;      Totals:         0      16       0       0       0
  2801 ;;Total ram usage:       16 bytes
  2802 ;; Hardware stack levels used:    1
  2803 ;; Hardware stack levels required when called:    3
  2804 ;; This function calls:
  2805 ;;		_checkColission_L
  2806 ;;		_checkColission_R
  2807 ;;		_checkRight
  2808 ;;		_drawFigure
  2809 ;; This function is called by:
  2810 ;;		_checkCount
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           
  2814                           
  2815                           ;psect for function _leerEntradas
  2816  003E                     _leerEntradas:	
  2817  003E                     l1537:	
  2818                           ;incstack = 0
  2819                           ; Regs used in _leerEntradas: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2820                           
  2821  003E  1283               	bcf	3,5	;RP0=0, select bank0
  2822  003F  1303               	bcf	3,6	;RP1=0, select bank0
  2823  0040  01B1               	clrf	leerEntradas@j
  2824  0041  01B2               	clrf	leerEntradas@j+1
  2825  0042  01AA               	clrf	leerEntradas@k
  2826  0043  01AB               	clrf	leerEntradas@k+1
  2827  0044                     l1539:	
  2828                           
  2829                           ;mainsource.c: 72:     uint8_t aux[4]={0x0000};
  2830  0044  3000               	movlw	0
  2831  0045  00B0               	movwf	leerEntradas@aux+3
  2832  0046  3000               	movlw	0
  2833  0047  00AF               	movwf	leerEntradas@aux+2
  2834  0048  3000               	movlw	0
  2835  0049  00AE               	movwf	leerEntradas@aux+1
  2836  004A  3000               	movlw	0
  2837  004B  00AD               	movwf	leerEntradas@aux
  2838  004C                     l1541:	
  2839  004C                     l1543:	
  2840                           
  2841                           ;mainsource.c: 74:     if(con.girar){
  2842  004C  0845               	movf	_con,w
  2843  004D  1903               	btfsc	3,2
  2844  004E  2850               	goto	u1031
  2845  004F  2851               	goto	u1030
  2846  0050                     u1031:	
  2847  0050  2969               	goto	l1621
  2848  0051                     u1030:	
  2849  0051                     l1545:	
  2850                           
  2851                           ;mainsource.c: 75:         con.girar=0;
  2852  0051  01C5               	clrf	_con
  2853                           
  2854                           ;mainsource.c: 77:         for(i=0; i<4; i++){
  2855  0052  01B3               	clrf	leerEntradas@i
  2856  0053  01B4               	clrf	leerEntradas@i+1
  2857  0054                     l1551:	
  2858                           
  2859                           ;mainsource.c: 78:             for(j=0; j<4; j++){
  2860  0054  1283               	bcf	3,5	;RP0=0, select bank0
  2861  0055  1303               	bcf	3,6	;RP1=0, select bank0
  2862  0056  01B1               	clrf	leerEntradas@j
  2863  0057  01B2               	clrf	leerEntradas@j+1
  2864  0058                     l1557:	
  2865                           
  2866                           ;mainsource.c: 79:                 mask = (figuras[con.ficha_actual][j] >> i) & 0x01;
  2867  0058  1283               	bcf	3,5	;RP0=0, select bank0
  2868  0059  1303               	bcf	3,6	;RP1=0, select bank0
  2869  005A  0849               	movf	_con+4,w
  2870  005B  00A5               	movwf	??_leerEntradas
  2871  005C  3002               	movlw	2
  2872  005D                     u1045:	
  2873  005D  1003               	clrc
  2874  005E  0DA5               	rlf	??_leerEntradas,f
  2875  005F  3EFF               	addlw	-1
  2876  0060  1D03               	skipz
  2877  0061  285D               	goto	u1045
  2878  0062  30C0               	movlw	(low (_figuras| 0))& (0+255)
  2879  0063  0725               	addwf	??_leerEntradas,w
  2880  0064  00A6               	movwf	??_leerEntradas+1
  2881  0065  0831               	movf	leerEntradas@j,w
  2882  0066  0726               	addwf	??_leerEntradas+1,w
  2883  0067  00A7               	movwf	??_leerEntradas+2
  2884  0068  0827               	movf	??_leerEntradas+2,w
  2885  0069  0084               	movwf	4
  2886  006A  1383               	bcf	3,7	;select IRP bank1
  2887  006B  0800               	movf	0,w
  2888  006C  00A8               	movwf	??_leerEntradas+3
  2889  006D  0A33               	incf	leerEntradas@i,w
  2890  006E  2871               	goto	u1054
  2891  006F                     u1055:	
  2892  006F  1003               	clrc
  2893  0070  0CA8               	rrf	??_leerEntradas+3,f
  2894  0071                     u1054:	
  2895  0071  3EFF               	addlw	-1
  2896  0072  1D03               	skipz
  2897  0073  286F               	goto	u1055
  2898  0074  0828               	movf	??_leerEntradas+3,w
  2899  0075  3901               	andlw	1
  2900  0076  00A9               	movwf	??_leerEntradas+4
  2901  0077  0829               	movf	??_leerEntradas+4,w
  2902  0078  00AC               	movwf	leerEntradas@mask
  2903                           
  2904                           ;mainsource.c: 80:                 aux[i] = aux[i] | (mask<<(3-j));
  2905  0079  0833               	movf	leerEntradas@i,w
  2906  007A  3E2D               	addlw	(low (leerEntradas@aux| 0))& (0+255)
  2907  007B  0084               	movwf	4
  2908  007C  082C               	movf	leerEntradas@mask,w
  2909  007D  00A5               	movwf	??_leerEntradas
  2910  007E  0831               	movf	leerEntradas@j,w
  2911  007F  3C03               	sublw	3
  2912  0080  3E01               	addlw	1
  2913  0081  2884               	goto	u1064
  2914  0082                     u1065:	
  2915  0082  1003               	clrc
  2916  0083  0DA5               	rlf	??_leerEntradas,f
  2917  0084                     u1064:	
  2918  0084  3EFF               	addlw	-1
  2919  0085  1D03               	skipz
  2920  0086  2882               	goto	u1065
  2921  0087  0825               	movf	??_leerEntradas,w
  2922  0088  0400               	iorwf	0,w
  2923  0089  00A6               	movwf	??_leerEntradas+1
  2924  008A  0833               	movf	leerEntradas@i,w
  2925  008B  3E2D               	addlw	(low (leerEntradas@aux| 0))& (0+255)
  2926  008C  0084               	movwf	4
  2927  008D  0826               	movf	??_leerEntradas+1,w
  2928  008E  0080               	movwf	0
  2929  008F                     l1559:	
  2930                           
  2931                           ;mainsource.c: 81:             }
  2932  008F  3001               	movlw	1
  2933  0090  07B1               	addwf	leerEntradas@j,f
  2934  0091  1803               	skipnc
  2935  0092  0AB2               	incf	leerEntradas@j+1,f
  2936  0093  3000               	movlw	0
  2937  0094  07B2               	addwf	leerEntradas@j+1,f
  2938  0095                     l1561:	
  2939  0095  0832               	movf	leerEntradas@j+1,w
  2940  0096  3A80               	xorlw	128
  2941  0097  00FF               	movwf	btemp+1
  2942  0098  3080               	movlw	128
  2943  0099  027F               	subwf	btemp+1,w
  2944  009A  1D03               	skipz
  2945  009B  289E               	goto	u1075
  2946  009C  3004               	movlw	4
  2947  009D  0231               	subwf	leerEntradas@j,w
  2948  009E                     u1075:	
  2949  009E  1C03               	skipc
  2950  009F  28A1               	goto	u1071
  2951  00A0  28A2               	goto	u1070
  2952  00A1                     u1071:	
  2953  00A1  2858               	goto	l1557
  2954  00A2                     u1070:	
  2955  00A2                     l1563:	
  2956                           
  2957                           ;mainsource.c: 82:         }
  2958  00A2  3001               	movlw	1
  2959  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  2960  00A4  1303               	bcf	3,6	;RP1=0, select bank0
  2961  00A5  07B3               	addwf	leerEntradas@i,f
  2962  00A6  1803               	skipnc
  2963  00A7  0AB4               	incf	leerEntradas@i+1,f
  2964  00A8  3000               	movlw	0
  2965  00A9  07B4               	addwf	leerEntradas@i+1,f
  2966  00AA                     l1565:	
  2967  00AA  0834               	movf	leerEntradas@i+1,w
  2968  00AB  3A80               	xorlw	128
  2969  00AC  00FF               	movwf	btemp+1
  2970  00AD  3080               	movlw	128
  2971  00AE  027F               	subwf	btemp+1,w
  2972  00AF  1D03               	skipz
  2973  00B0  28B3               	goto	u1085
  2974  00B1  3004               	movlw	4
  2975  00B2  0233               	subwf	leerEntradas@i,w
  2976  00B3                     u1085:	
  2977  00B3  1C03               	skipc
  2978  00B4  28B6               	goto	u1081
  2979  00B5  28B7               	goto	u1080
  2980  00B6                     u1081:	
  2981  00B6  2854               	goto	l1551
  2982  00B7                     u1080:	
  2983  00B7  2910               	goto	l1597
  2984  00B8                     l1567:	
  2985                           
  2986                           ;mainsource.c: 88:             for(i=0; i<4; i++){
  2987  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  2988  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  2989  00BA  01B3               	clrf	leerEntradas@i
  2990  00BB  01B4               	clrf	leerEntradas@i+1
  2991  00BC                     l1573:	
  2992                           
  2993                           ;mainsource.c: 89:                 if( aux[i] & 0x01 ){
  2994  00BC  1283               	bcf	3,5	;RP0=0, select bank0
  2995  00BD  1303               	bcf	3,6	;RP1=0, select bank0
  2996  00BE  0833               	movf	leerEntradas@i,w
  2997  00BF  3E2D               	addlw	(low (leerEntradas@aux| 0))& (0+255)
  2998  00C0  0084               	movwf	4
  2999  00C1  1383               	bcf	3,7	;select IRP bank0
  3000  00C2  1C00               	btfss	0,0
  3001  00C3  28C5               	goto	u1091
  3002  00C4  28C6               	goto	u1090
  3003  00C5                     u1091:	
  3004  00C5  28C7               	goto	l1577
  3005  00C6                     u1090:	
  3006  00C6  2908               	goto	l1595
  3007  00C7                     l1577:	
  3008                           
  3009                           ;mainsource.c: 92:                 if(i==3){
  3010  00C7  3003               	movlw	3
  3011  00C8  0633               	xorwf	leerEntradas@i,w
  3012  00C9  0434               	iorwf	leerEntradas@i+1,w
  3013  00CA  1D03               	btfss	3,2
  3014  00CB  28CD               	goto	u1101
  3015  00CC  28CE               	goto	u1100
  3016  00CD                     u1101:	
  3017  00CD  28F3               	goto	l1591
  3018  00CE                     u1100:	
  3019  00CE                     l1579:	
  3020                           
  3021                           ;mainsource.c: 93:                     for(j=0; j<4; j++){
  3022  00CE  01B1               	clrf	leerEntradas@j
  3023  00CF  01B2               	clrf	leerEntradas@j+1
  3024  00D0                     l1585:	
  3025                           
  3026                           ;mainsource.c: 94:                         aux[j] = aux[j]>>1;
  3027  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  3028  00D1  1303               	bcf	3,6	;RP1=0, select bank0
  3029  00D2  0831               	movf	leerEntradas@j,w
  3030  00D3  3E2D               	addlw	(low (leerEntradas@aux| 0))& (0+255)
  3031  00D4  0084               	movwf	4
  3032  00D5  1383               	bcf	3,7	;select IRP bank0
  3033  00D6  0800               	movf	0,w
  3034  00D7  00A5               	movwf	??_leerEntradas
  3035  00D8  1003               	clrc
  3036  00D9  0C25               	rrf	??_leerEntradas,w
  3037  00DA  00A6               	movwf	??_leerEntradas+1
  3038  00DB  0831               	movf	leerEntradas@j,w
  3039  00DC  3E2D               	addlw	(low (leerEntradas@aux| 0))& (0+255)
  3040  00DD  0084               	movwf	4
  3041  00DE  0826               	movf	??_leerEntradas+1,w
  3042  00DF  0080               	movwf	0
  3043  00E0                     l1587:	
  3044                           
  3045                           ;mainsource.c: 95:                     }
  3046  00E0  3001               	movlw	1
  3047  00E1  07B1               	addwf	leerEntradas@j,f
  3048  00E2  1803               	skipnc
  3049  00E3  0AB2               	incf	leerEntradas@j+1,f
  3050  00E4  3000               	movlw	0
  3051  00E5  07B2               	addwf	leerEntradas@j+1,f
  3052  00E6                     l1589:	
  3053  00E6  0832               	movf	leerEntradas@j+1,w
  3054  00E7  3A80               	xorlw	128
  3055  00E8  00FF               	movwf	btemp+1
  3056  00E9  3080               	movlw	128
  3057  00EA  027F               	subwf	btemp+1,w
  3058  00EB  1D03               	skipz
  3059  00EC  28EF               	goto	u1115
  3060  00ED  3004               	movlw	4
  3061  00EE  0231               	subwf	leerEntradas@j,w
  3062  00EF                     u1115:	
  3063  00EF  1C03               	skipc
  3064  00F0  28F2               	goto	u1111
  3065  00F1  28F3               	goto	u1110
  3066  00F2                     u1111:	
  3067  00F2  28D0               	goto	l1585
  3068  00F3                     u1110:	
  3069  00F3                     l1591:	
  3070                           
  3071                           ;mainsource.c: 97:             }
  3072  00F3  3001               	movlw	1
  3073  00F4  1283               	bcf	3,5	;RP0=0, select bank0
  3074  00F5  1303               	bcf	3,6	;RP1=0, select bank0
  3075  00F6  07B3               	addwf	leerEntradas@i,f
  3076  00F7  1803               	skipnc
  3077  00F8  0AB4               	incf	leerEntradas@i+1,f
  3078  00F9  3000               	movlw	0
  3079  00FA  07B4               	addwf	leerEntradas@i+1,f
  3080  00FB                     l1593:	
  3081  00FB  0834               	movf	leerEntradas@i+1,w
  3082  00FC  3A80               	xorlw	128
  3083  00FD  00FF               	movwf	btemp+1
  3084  00FE  3080               	movlw	128
  3085  00FF  027F               	subwf	btemp+1,w
  3086  0100  1D03               	skipz
  3087  0101  2904               	goto	u1125
  3088  0102  3004               	movlw	4
  3089  0103  0233               	subwf	leerEntradas@i,w
  3090  0104                     u1125:	
  3091  0104  1C03               	skipc
  3092  0105  2907               	goto	u1121
  3093  0106  2908               	goto	u1120
  3094  0107                     u1121:	
  3095  0107  28BC               	goto	l1573
  3096  0108                     u1120:	
  3097  0108                     l1595:	
  3098                           
  3099                           ;mainsource.c: 98:             k++;
  3100  0108  3001               	movlw	1
  3101  0109  1283               	bcf	3,5	;RP0=0, select bank0
  3102  010A  1303               	bcf	3,6	;RP1=0, select bank0
  3103  010B  07AA               	addwf	leerEntradas@k,f
  3104  010C  1803               	skipnc
  3105  010D  0AAB               	incf	leerEntradas@k+1,f
  3106  010E  3000               	movlw	0
  3107  010F  07AB               	addwf	leerEntradas@k+1,f
  3108  0110                     l1597:	
  3109                           
  3110                           ;mainsource.c: 87:         while(k<3){
  3111  0110  1283               	bcf	3,5	;RP0=0, select bank0
  3112  0111  1303               	bcf	3,6	;RP1=0, select bank0
  3113  0112  082B               	movf	leerEntradas@k+1,w
  3114  0113  3A80               	xorlw	128
  3115  0114  00FF               	movwf	btemp+1
  3116  0115  3080               	movlw	128
  3117  0116  027F               	subwf	btemp+1,w
  3118  0117  1D03               	skipz
  3119  0118  291B               	goto	u1135
  3120  0119  3003               	movlw	3
  3121  011A  022A               	subwf	leerEntradas@k,w
  3122  011B                     u1135:	
  3123  011B  1C03               	skipc
  3124  011C  291E               	goto	u1131
  3125  011D  291F               	goto	u1130
  3126  011E                     u1131:	
  3127  011E  28B8               	goto	l1567
  3128  011F                     u1130:	
  3129  011F                     l1599:	
  3130                           
  3131                           ;mainsource.c: 101:         if((aux[0] & 0xF) == 0){
  3132  011F  1283               	bcf	3,5	;RP0=0, select bank0
  3133  0120  1303               	bcf	3,6	;RP1=0, select bank0
  3134  0121  082D               	movf	leerEntradas@aux,w
  3135  0122  390F               	andlw	15
  3136  0123  1D03               	btfss	3,2
  3137  0124  2926               	goto	u1141
  3138  0125  2927               	goto	u1140
  3139  0126                     u1141:	
  3140  0126  2934               	goto	l1605
  3141  0127                     u1140:	
  3142  0127                     l1601:	
  3143                           
  3144                           ;mainsource.c: 102:             aux[0] = aux[1];
  3145  0127  082E               	movf	leerEntradas@aux+1,w
  3146  0128  00A5               	movwf	??_leerEntradas
  3147  0129  0825               	movf	??_leerEntradas,w
  3148  012A  00AD               	movwf	leerEntradas@aux
  3149                           
  3150                           ;mainsource.c: 103:             aux[1] = aux[2];
  3151  012B  082F               	movf	leerEntradas@aux+2,w
  3152  012C  00A5               	movwf	??_leerEntradas
  3153  012D  0825               	movf	??_leerEntradas,w
  3154  012E  00AE               	movwf	leerEntradas@aux+1
  3155                           
  3156                           ;mainsource.c: 104:             aux[2] = aux[3];
  3157  012F  0830               	movf	leerEntradas@aux+3,w
  3158  0130  00A5               	movwf	??_leerEntradas
  3159  0131  0825               	movf	??_leerEntradas,w
  3160  0132  00AF               	movwf	leerEntradas@aux+2
  3161  0133                     l1603:	
  3162                           
  3163                           ;mainsource.c: 105:             aux[3] = 0x0;
  3164  0133  01B0               	clrf	leerEntradas@aux+3
  3165  0134                     l1605:	
  3166                           
  3167                           ;mainsource.c: 108:         for(i=0; i<4; i++){
  3168  0134  01B3               	clrf	leerEntradas@i
  3169  0135  01B4               	clrf	leerEntradas@i+1
  3170  0136                     l1611:	
  3171                           
  3172                           ;mainsource.c: 109:             figuras[con.ficha_actual][i] = aux[i];
  3173  0136  1283               	bcf	3,5	;RP0=0, select bank0
  3174  0137  1303               	bcf	3,6	;RP1=0, select bank0
  3175  0138  0833               	movf	leerEntradas@i,w
  3176  0139  3E2D               	addlw	(low (leerEntradas@aux| 0))& (0+255)
  3177  013A  0084               	movwf	4
  3178  013B  1383               	bcf	3,7	;select IRP bank0
  3179  013C  0800               	movf	0,w
  3180  013D  00A5               	movwf	??_leerEntradas
  3181  013E  0849               	movf	_con+4,w
  3182  013F  00A6               	movwf	??_leerEntradas+1
  3183  0140  3002               	movlw	2
  3184  0141                     u1155:	
  3185  0141  1003               	clrc
  3186  0142  0DA6               	rlf	??_leerEntradas+1,f
  3187  0143  3EFF               	addlw	-1
  3188  0144  1D03               	skipz
  3189  0145  2941               	goto	u1155
  3190  0146  30C0               	movlw	(low (_figuras| 0))& (0+255)
  3191  0147  0726               	addwf	??_leerEntradas+1,w
  3192  0148  00A7               	movwf	??_leerEntradas+2
  3193  0149  0833               	movf	leerEntradas@i,w
  3194  014A  0727               	addwf	??_leerEntradas+2,w
  3195  014B  00A8               	movwf	??_leerEntradas+3
  3196  014C  0828               	movf	??_leerEntradas+3,w
  3197  014D  0084               	movwf	4
  3198  014E  0825               	movf	??_leerEntradas,w
  3199  014F  0080               	movwf	0
  3200  0150                     l1613:	
  3201                           
  3202                           ;mainsource.c: 110:         }
  3203  0150  3001               	movlw	1
  3204  0151  07B3               	addwf	leerEntradas@i,f
  3205  0152  1803               	skipnc
  3206  0153  0AB4               	incf	leerEntradas@i+1,f
  3207  0154  3000               	movlw	0
  3208  0155  07B4               	addwf	leerEntradas@i+1,f
  3209  0156                     l1615:	
  3210  0156  0834               	movf	leerEntradas@i+1,w
  3211  0157  3A80               	xorlw	128
  3212  0158  00FF               	movwf	btemp+1
  3213  0159  3080               	movlw	128
  3214  015A  027F               	subwf	btemp+1,w
  3215  015B  1D03               	skipz
  3216  015C  295F               	goto	u1165
  3217  015D  3004               	movlw	4
  3218  015E  0233               	subwf	leerEntradas@i,w
  3219  015F                     u1165:	
  3220  015F  1C03               	skipc
  3221  0160  2962               	goto	u1161
  3222  0161  2963               	goto	u1160
  3223  0162                     u1161:	
  3224  0162  2936               	goto	l1611
  3225  0163                     u1160:	
  3226  0163                     l1617:	
  3227                           
  3228                           ;mainsource.c: 111:         drawFigure();
  3229  0163  120A  118A  21A5  120A  118A  	fcall	_drawFigure
  3230  0168  29A4               	goto	l110
  3231  0169                     l1621:	
  3232                           
  3233                           ;mainsource.c: 115:     if(con.derecha == 1 ){
  3234  0169  034A               	decf	_con+5,w
  3235  016A  1D03               	btfss	3,2
  3236  016B  296D               	goto	u1171
  3237  016C  296E               	goto	u1170
  3238  016D                     u1171:	
  3239  016D  2989               	goto	l1637
  3240  016E                     u1170:	
  3241  016E                     l1623:	
  3242                           
  3243                           ;mainsource.c: 116:         con.derecha = 0;
  3244  016E  01CA               	clrf	_con+5
  3245  016F                     l1625:	
  3246                           
  3247                           ;mainsource.c: 117:         if(checkColission_R() | checkRight()){
  3248  016F  120A  118A  27B3  120A  118A  	fcall	_checkRight
  3249  0174  1283               	bcf	3,5	;RP0=0, select bank0
  3250  0175  1303               	bcf	3,6	;RP1=0, select bank0
  3251  0176  00A5               	movwf	??_leerEntradas
  3252  0177  120A  118A  259C  120A  118A  	fcall	_checkColission_R
  3253  017C  1283               	bcf	3,5	;RP0=0, select bank0
  3254  017D  1303               	bcf	3,6	;RP1=0, select bank0
  3255  017E  0425               	iorwf	??_leerEntradas,w
  3256  017F  1903               	btfsc	3,2
  3257  0180  2982               	goto	u1181
  3258  0181  2983               	goto	u1180
  3259  0182                     u1181:	
  3260  0182  2984               	goto	l1629
  3261  0183                     u1180:	
  3262  0183  29A4               	goto	l110
  3263  0184                     l1629:	
  3264                           
  3265                           ;mainsource.c: 120:         con.ficha_Hpos++;
  3266  0184  3001               	movlw	1
  3267  0185  00A5               	movwf	??_leerEntradas
  3268  0186  0825               	movf	??_leerEntradas,w
  3269  0187  07C8               	addwf	_con+3,f
  3270  0188  2963               	goto	l1617
  3271  0189                     l1637:	
  3272  0189  034B               	decf	_con+6,w
  3273  018A  1D03               	btfss	3,2
  3274  018B  298D               	goto	u1191
  3275  018C  298E               	goto	u1190
  3276  018D                     u1191:	
  3277  018D  29A4               	goto	l110
  3278  018E                     u1190:	
  3279  018E                     l1639:	
  3280  018E  0848               	movf	_con+3,w
  3281  018F  1903               	btfsc	3,2
  3282  0190  2992               	goto	u1201
  3283  0191  2993               	goto	u1200
  3284  0192                     u1201:	
  3285  0192  29A4               	goto	l110
  3286  0193                     u1200:	
  3287  0193                     l1641:	
  3288                           
  3289                           ;mainsource.c: 125:         con.izquierda = 0;
  3290  0193  01CB               	clrf	_con+6
  3291  0194                     l1643:	
  3292                           
  3293                           ;mainsource.c: 126:         if(checkColission_L()==1){
  3294  0194  120A  118A  242B  120A  118A  	fcall	_checkColission_L
  3295  0199  3A01               	xorlw	1
  3296  019A  1D03               	skipz
  3297  019B  299D               	goto	u1211
  3298  019C  299E               	goto	u1210
  3299  019D                     u1211:	
  3300  019D  299F               	goto	l1647
  3301  019E                     u1210:	
  3302  019E  29A4               	goto	l110
  3303  019F                     l1647:	
  3304                           
  3305                           ;mainsource.c: 129:         con.ficha_Hpos--;
  3306  019F  3001               	movlw	1
  3307  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  3308  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  3309  01A2  02C8               	subwf	_con+3,f
  3310  01A3  2963               	goto	l1617
  3311  01A4                     l110:	
  3312  01A4  0008               	return
  3313  01A5                     __end_of_leerEntradas:	
  3314                           
  3315                           	psect	text19
  3316  01A5                     __ptext19:	
  3317 ;; *************** function _drawFigure *****************
  3318 ;; Defined at:
  3319 ;;		line 61 in file "screen.c"
  3320 ;; Parameters:    Size  Location     Type
  3321 ;;		None
  3322 ;; Auto vars:     Size  Location     Type
  3323 ;;		None
  3324 ;; Return value:  Size  Location     Type
  3325 ;;                  1    wreg      void 
  3326 ;; Registers used:
  3327 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3328 ;; Tracked objects:
  3329 ;;		On entry : 0/0
  3330 ;;		On exit  : 0/0
  3331 ;;		Unchanged: 0/0
  3332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3333 ;;      Params:         0       0       0       0       0
  3334 ;;      Locals:         0       0       0       0       0
  3335 ;;      Temps:          0       5       0       0       0
  3336 ;;      Totals:         0       5       0       0       0
  3337 ;;Total ram usage:        5 bytes
  3338 ;; Hardware stack levels used:    1
  3339 ;; Hardware stack levels required when called:    2
  3340 ;; This function calls:
  3341 ;;		_memset
  3342 ;; This function is called by:
  3343 ;;		_leerEntradas
  3344 ;;		_checkCount
  3345 ;; This function uses a non-reentrant model
  3346 ;;
  3347                           
  3348                           
  3349                           ;psect for function _drawFigure
  3350  01A5                     _drawFigure:	
  3351  01A5                     l1421:	
  3352                           ;incstack = 0
  3353                           ; Regs used in _drawFigure: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3354                           
  3355                           
  3356                           ;screen.c: 62:     memset(ficha, 0, sizeof(ficha));
  3357  01A5  3000               	movlw	0
  3358  01A6  00F2               	movwf	memset@c
  3359  01A7  00F3               	movwf	memset@c+1
  3360  01A8  3010               	movlw	16
  3361  01A9  00F4               	movwf	memset@n
  3362  01AA  3000               	movlw	0
  3363  01AB  00F5               	movwf	memset@n+1
  3364  01AC  3057               	movlw	(low (_ficha| 0))& (0+255)
  3365  01AD  120A  118A  270A  120A  118A  	fcall	_memset
  3366  01B2                     l1423:	
  3367                           
  3368                           ;screen.c: 63:     ficha[con.ficha_Hpos ] = figuras[con.ficha_actual][0] << (con.ficha_V
      +                          pos-1);
  3369  01B2  1283               	bcf	3,5	;RP0=0, select bank0
  3370  01B3  1303               	bcf	3,6	;RP1=0, select bank0
  3371  01B4  0847               	movf	_con+2,w
  3372  01B5  3EFF               	addlw	-1
  3373  01B6  00A0               	movwf	??_drawFigure
  3374  01B7  0AA0               	incf	??_drawFigure,f
  3375  01B8  0849               	movf	_con+4,w
  3376  01B9  00A1               	movwf	??_drawFigure+1
  3377  01BA  3001               	movlw	1
  3378  01BB                     u805:	
  3379  01BB  1003               	clrc
  3380  01BC  0DA1               	rlf	??_drawFigure+1,f
  3381  01BD  3EFF               	addlw	-1
  3382  01BE  1D03               	skipz
  3383  01BF  29BB               	goto	u805
  3384  01C0  1003               	clrc
  3385  01C1  0D21               	rlf	??_drawFigure+1,w
  3386  01C2  3EC0               	addlw	(low (_figuras| 0))& (0+255)
  3387  01C3  0084               	movwf	4
  3388  01C4  1383               	bcf	3,7	;select IRP bank1
  3389  01C5  0800               	movf	0,w
  3390  01C6  00A2               	movwf	??_drawFigure+2
  3391  01C7  01A3               	clrf	??_drawFigure+3
  3392  01C8  29CC               	goto	u814
  3393  01C9                     u815:	
  3394  01C9  1003               	clrc
  3395  01CA  0DA2               	rlf	??_drawFigure+2,f
  3396  01CB  0DA3               	rlf	??_drawFigure+3,f
  3397  01CC                     u814:	
  3398  01CC  0BA0               	decfsz	??_drawFigure,f
  3399  01CD  29C9               	goto	u815
  3400  01CE  0848               	movf	_con+3,w
  3401  01CF  00A4               	movwf	??_drawFigure+4
  3402  01D0  0724               	addwf	??_drawFigure+4,w
  3403  01D1  3E57               	addlw	(low (_ficha| 0))& (0+255)
  3404  01D2  0084               	movwf	4
  3405  01D3  0822               	movf	??_drawFigure+2,w
  3406  01D4  0080               	movwf	0
  3407  01D5  0A84               	incf	4,f
  3408  01D6  0823               	movf	??_drawFigure+3,w
  3409  01D7  0080               	movwf	0
  3410  01D8                     l1425:	
  3411                           
  3412                           ;screen.c: 64:     ficha[con.ficha_Hpos +1] = figuras[con.ficha_actual][1] << (con.ficha
      +                          _Vpos-1);
  3413  01D8  0847               	movf	_con+2,w
  3414  01D9  3EFF               	addlw	-1
  3415  01DA  00A0               	movwf	??_drawFigure
  3416  01DB  0AA0               	incf	??_drawFigure,f
  3417  01DC  0849               	movf	_con+4,w
  3418  01DD  00A1               	movwf	??_drawFigure+1
  3419  01DE  3001               	movlw	1
  3420  01DF                     u825:	
  3421  01DF  1003               	clrc
  3422  01E0  0DA1               	rlf	??_drawFigure+1,f
  3423  01E1  3EFF               	addlw	-1
  3424  01E2  1D03               	skipz
  3425  01E3  29DF               	goto	u825
  3426  01E4  1003               	clrc
  3427  01E5  0D21               	rlf	??_drawFigure+1,w
  3428  01E6  3EC1               	addlw	(low ((_figuras| 0+1)))& (0+255)
  3429  01E7  0084               	movwf	4
  3430  01E8  0800               	movf	0,w
  3431  01E9  00A2               	movwf	??_drawFigure+2
  3432  01EA  01A3               	clrf	??_drawFigure+3
  3433  01EB  29EF               	goto	u834
  3434  01EC                     u835:	
  3435  01EC  1003               	clrc
  3436  01ED  0DA2               	rlf	??_drawFigure+2,f
  3437  01EE  0DA3               	rlf	??_drawFigure+3,f
  3438  01EF                     u834:	
  3439  01EF  0BA0               	decfsz	??_drawFigure,f
  3440  01F0  29EC               	goto	u835
  3441  01F1  0848               	movf	_con+3,w
  3442  01F2  00A4               	movwf	??_drawFigure+4
  3443  01F3  0724               	addwf	??_drawFigure+4,w
  3444  01F4  3E59               	addlw	(low ((_ficha| 0+2)))& (0+255)
  3445  01F5  0084               	movwf	4
  3446  01F6  0822               	movf	??_drawFigure+2,w
  3447  01F7  0080               	movwf	0
  3448  01F8  0A84               	incf	4,f
  3449  01F9  0823               	movf	??_drawFigure+3,w
  3450  01FA  0080               	movwf	0
  3451  01FB                     l1427:	
  3452                           
  3453                           ;screen.c: 65:     ficha[con.ficha_Hpos +2] = figuras[con.ficha_actual][2] << (con.ficha
      +                          _Vpos-1);
  3454  01FB  0847               	movf	_con+2,w
  3455  01FC  3EFF               	addlw	-1
  3456  01FD  00A0               	movwf	??_drawFigure
  3457  01FE  0AA0               	incf	??_drawFigure,f
  3458  01FF  0849               	movf	_con+4,w
  3459  0200  00A1               	movwf	??_drawFigure+1
  3460  0201  3001               	movlw	1
  3461  0202                     u845:	
  3462  0202  1003               	clrc
  3463  0203  0DA1               	rlf	??_drawFigure+1,f
  3464  0204  3EFF               	addlw	-1
  3465  0205  1D03               	skipz
  3466  0206  2A02               	goto	u845
  3467  0207  1003               	clrc
  3468  0208  0D21               	rlf	??_drawFigure+1,w
  3469  0209  3EC2               	addlw	(low ((_figuras| 0+2)))& (0+255)
  3470  020A  0084               	movwf	4
  3471  020B  0800               	movf	0,w
  3472  020C  00A2               	movwf	??_drawFigure+2
  3473  020D  01A3               	clrf	??_drawFigure+3
  3474  020E  2A12               	goto	u854
  3475  020F                     u855:	
  3476  020F  1003               	clrc
  3477  0210  0DA2               	rlf	??_drawFigure+2,f
  3478  0211  0DA3               	rlf	??_drawFigure+3,f
  3479  0212                     u854:	
  3480  0212  0BA0               	decfsz	??_drawFigure,f
  3481  0213  2A0F               	goto	u855
  3482  0214  0848               	movf	_con+3,w
  3483  0215  00A4               	movwf	??_drawFigure+4
  3484  0216  0724               	addwf	??_drawFigure+4,w
  3485  0217  3E5B               	addlw	(low ((_ficha| 0+4)))& (0+255)
  3486  0218  0084               	movwf	4
  3487  0219  0822               	movf	??_drawFigure+2,w
  3488  021A  0080               	movwf	0
  3489  021B  0A84               	incf	4,f
  3490  021C  0823               	movf	??_drawFigure+3,w
  3491  021D  0080               	movwf	0
  3492  021E                     l1429:	
  3493                           
  3494                           ;screen.c: 66:     ficha[con.ficha_Hpos +3] = figuras[con.ficha_actual][3] << (con.ficha
      +                          _Vpos-1);
  3495  021E  0847               	movf	_con+2,w
  3496  021F  3EFF               	addlw	-1
  3497  0220  00A0               	movwf	??_drawFigure
  3498  0221  0AA0               	incf	??_drawFigure,f
  3499  0222  0849               	movf	_con+4,w
  3500  0223  00A1               	movwf	??_drawFigure+1
  3501  0224  3001               	movlw	1
  3502  0225                     u865:	
  3503  0225  1003               	clrc
  3504  0226  0DA1               	rlf	??_drawFigure+1,f
  3505  0227  3EFF               	addlw	-1
  3506  0228  1D03               	skipz
  3507  0229  2A25               	goto	u865
  3508  022A  1003               	clrc
  3509  022B  0D21               	rlf	??_drawFigure+1,w
  3510  022C  3EC3               	addlw	(low ((_figuras| 0+3)))& (0+255)
  3511  022D  0084               	movwf	4
  3512  022E  0800               	movf	0,w
  3513  022F  00A2               	movwf	??_drawFigure+2
  3514  0230  01A3               	clrf	??_drawFigure+3
  3515  0231  2A35               	goto	u874
  3516  0232                     u875:	
  3517  0232  1003               	clrc
  3518  0233  0DA2               	rlf	??_drawFigure+2,f
  3519  0234  0DA3               	rlf	??_drawFigure+3,f
  3520  0235                     u874:	
  3521  0235  0BA0               	decfsz	??_drawFigure,f
  3522  0236  2A32               	goto	u875
  3523  0237  0848               	movf	_con+3,w
  3524  0238  00A4               	movwf	??_drawFigure+4
  3525  0239  0724               	addwf	??_drawFigure+4,w
  3526  023A  3E5D               	addlw	(low ((_ficha| 0+6)))& (0+255)
  3527  023B  0084               	movwf	4
  3528  023C  0822               	movf	??_drawFigure+2,w
  3529  023D  0080               	movwf	0
  3530  023E  0A84               	incf	4,f
  3531  023F  0823               	movf	??_drawFigure+3,w
  3532  0240  0080               	movwf	0
  3533  0241                     l200:	
  3534  0241  0008               	return
  3535  0242                     __end_of_drawFigure:	
  3536                           
  3537                           	psect	text20
  3538  070A                     __ptext20:	
  3539 ;; *************** function _memset *****************
  3540 ;; Defined at:
  3541 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\memset.c"
  3542 ;; Parameters:    Size  Location     Type
  3543 ;;  p1              1    wreg     PTR void 
  3544 ;;		 -> fondo(16), ficha(16), 
  3545 ;;  c               2    2[COMMON] int 
  3546 ;;  n               2    4[COMMON] unsigned int 
  3547 ;; Auto vars:     Size  Location     Type
  3548 ;;  p1              1    8[COMMON] PTR void 
  3549 ;;		 -> fondo(16), ficha(16), 
  3550 ;;  p               1    7[COMMON] PTR unsigned char 
  3551 ;;		 -> fondo(16), ficha(16), 
  3552 ;; Return value:  Size  Location     Type
  3553 ;;                  1    wreg      PTR void 
  3554 ;; Registers used:
  3555 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3556 ;; Tracked objects:
  3557 ;;		On entry : 0/0
  3558 ;;		On exit  : 0/0
  3559 ;;		Unchanged: 0/0
  3560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3561 ;;      Params:         4       0       0       0       0
  3562 ;;      Locals:         2       0       0       0       0
  3563 ;;      Temps:          1       0       0       0       0
  3564 ;;      Totals:         7       0       0       0       0
  3565 ;;Total ram usage:        7 bytes
  3566 ;; Hardware stack levels used:    1
  3567 ;; Hardware stack levels required when called:    1
  3568 ;; This function calls:
  3569 ;;		Nothing
  3570 ;; This function is called by:
  3571 ;;		_drawFigure
  3572 ;;		_perdio
  3573 ;; This function uses a non-reentrant model
  3574 ;;
  3575                           
  3576                           
  3577                           ;psect for function _memset
  3578  070A                     _memset:	
  3579                           
  3580                           ;incstack = 0
  3581                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0]
  3582                           ;memset@p1 stored from wreg
  3583  070A  00F8               	movwf	memset@p1
  3584  070B                     l1391:	
  3585  070B  0878               	movf	memset@p1,w
  3586  070C  00F6               	movwf	??_memset
  3587  070D  0876               	movf	??_memset,w
  3588  070E  00F7               	movwf	memset@p
  3589  070F  2F1B               	goto	l1397
  3590  0710                     l1393:	
  3591  0710  0872               	movf	memset@c,w
  3592  0711  00F6               	movwf	??_memset
  3593  0712  0877               	movf	memset@p,w
  3594  0713  0084               	movwf	4
  3595  0714  0876               	movf	??_memset,w
  3596  0715  1383               	bcf	3,7	;select IRP bank0
  3597  0716  0080               	movwf	0
  3598  0717                     l1395:	
  3599  0717  3001               	movlw	1
  3600  0718  00F6               	movwf	??_memset
  3601  0719  0876               	movf	??_memset,w
  3602  071A  07F7               	addwf	memset@p,f
  3603  071B                     l1397:	
  3604  071B  3001               	movlw	1
  3605  071C  02F4               	subwf	memset@n,f
  3606  071D  3000               	movlw	0
  3607  071E  1C03               	skipc
  3608  071F  03F5               	decf	memset@n+1,f
  3609  0720  02F5               	subwf	memset@n+1,f
  3610  0721  0A74               	incf	memset@n,w
  3611  0722  1D03               	skipz
  3612  0723  2F28               	goto	u731
  3613  0724  0A75               	incf	memset@n+1,w
  3614  0725  1D03               	btfss	3,2
  3615  0726  2F28               	goto	u731
  3616  0727  2F29               	goto	u730
  3617  0728                     u731:	
  3618  0728  2F10               	goto	l1393
  3619  0729                     u730:	
  3620  0729                     l809:	
  3621  0729  0008               	return
  3622  072A                     __end_of_memset:	
  3623                           
  3624                           	psect	text21
  3625  07B3                     __ptext21:	
  3626 ;; *************** function _checkRight *****************
  3627 ;; Defined at:
  3628 ;;		line 26 in file "colisiones.c"
  3629 ;; Parameters:    Size  Location     Type
  3630 ;;		None
  3631 ;; Auto vars:     Size  Location     Type
  3632 ;;		None
  3633 ;; Return value:  Size  Location     Type
  3634 ;;                  1    wreg      _Bool 
  3635 ;; Registers used:
  3636 ;;		wreg, status,2, status,0
  3637 ;; Tracked objects:
  3638 ;;		On entry : 0/0
  3639 ;;		On exit  : 0/0
  3640 ;;		Unchanged: 0/0
  3641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3642 ;;      Params:         0       0       0       0       0
  3643 ;;      Locals:         0       0       0       0       0
  3644 ;;      Temps:          0       0       0       0       0
  3645 ;;      Totals:         0       0       0       0       0
  3646 ;;Total ram usage:        0 bytes
  3647 ;; Hardware stack levels used:    1
  3648 ;; Hardware stack levels required when called:    1
  3649 ;; This function calls:
  3650 ;;		Nothing
  3651 ;; This function is called by:
  3652 ;;		_leerEntradas
  3653 ;; This function uses a non-reentrant model
  3654 ;;
  3655                           
  3656                           
  3657                           ;psect for function _checkRight
  3658  07B3                     _checkRight:	
  3659  07B3                     l1447:	
  3660                           ;incstack = 0
  3661                           ; Regs used in _checkRight: [wreg+status,2+status,0]
  3662                           
  3663                           
  3664                           ;colisiones.c: 27:     if(ficha[7]!=0){
  3665  07B3  1283               	bcf	3,5	;RP0=0, select bank0
  3666  07B4  1303               	bcf	3,6	;RP1=0, select bank0
  3667  07B5  0865               	movf	_ficha+14,w
  3668  07B6  0466               	iorwf	_ficha+15,w
  3669  07B7  1903               	btfsc	3,2
  3670  07B8  2FBA               	goto	u901
  3671  07B9  2FBB               	goto	u900
  3672  07BA                     u901:	
  3673  07BA  2FBD               	goto	l1453
  3674  07BB                     u900:	
  3675  07BB                     l1449:	
  3676                           
  3677                           ;colisiones.c: 28:         return 1;
  3678  07BB  3001               	movlw	1
  3679  07BC  2FBE               	goto	l224
  3680  07BD                     l1453:	
  3681                           
  3682                           ;colisiones.c: 30:     return 0;
  3683  07BD  3000               	movlw	0
  3684  07BE                     l224:	
  3685  07BE  0008               	return
  3686  07BF                     __end_of_checkRight:	
  3687                           
  3688                           	psect	text22
  3689  059C                     __ptext22:	
  3690 ;; *************** function _checkColission_R *****************
  3691 ;; Defined at:
  3692 ;;		line 51 in file "colisiones.c"
  3693 ;; Parameters:    Size  Location     Type
  3694 ;;		None
  3695 ;; Auto vars:     Size  Location     Type
  3696 ;;  i               2   10[COMMON] int 
  3697 ;; Return value:  Size  Location     Type
  3698 ;;                  1    wreg      _Bool 
  3699 ;; Registers used:
  3700 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3701 ;; Tracked objects:
  3702 ;;		On entry : 0/0
  3703 ;;		On exit  : 0/0
  3704 ;;		Unchanged: 0/0
  3705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3706 ;;      Params:         0       0       0       0       0
  3707 ;;      Locals:         2       0       0       0       0
  3708 ;;      Temps:          8       0       0       0       0
  3709 ;;      Totals:        10       0       0       0       0
  3710 ;;Total ram usage:       10 bytes
  3711 ;; Hardware stack levels used:    1
  3712 ;; Hardware stack levels required when called:    1
  3713 ;; This function calls:
  3714 ;;		Nothing
  3715 ;; This function is called by:
  3716 ;;		_leerEntradas
  3717 ;; This function uses a non-reentrant model
  3718 ;;
  3719                           
  3720                           
  3721                           ;psect for function _checkColission_R
  3722  059C                     _checkColission_R:	
  3723  059C                     l1431:	
  3724                           ;incstack = 0
  3725                           ; Regs used in _checkColission_R: [wreg-fsr0h+status,2+status,0]
  3726                           
  3727  059C                     l1433:	
  3728                           
  3729                           ;colisiones.c: 53:     for(i=(con.ficha_Hpos+3); i>=con.ficha_Hpos; i--){
  3730  059C  1283               	bcf	3,5	;RP0=0, select bank0
  3731  059D  1303               	bcf	3,6	;RP1=0, select bank0
  3732  059E  0848               	movf	_con+3,w
  3733  059F  3E03               	addlw	3
  3734  05A0  00FA               	movwf	checkColission_R@i
  3735  05A1  3000               	movlw	0
  3736  05A2  1803               	skipnc
  3737  05A3  3001               	movlw	1
  3738  05A4  00FB               	movwf	checkColission_R@i+1
  3739  05A5  2DCF               	goto	l234
  3740  05A6                     l1435:	
  3741                           
  3742                           ;colisiones.c: 54:         if((ficha[i] & fondo[i+1]) != 0){
  3743  05A6  087A               	movf	checkColission_R@i,w
  3744  05A7  00F2               	movwf	??_checkColission_R
  3745  05A8  0772               	addwf	??_checkColission_R,w
  3746  05A9  3EA2               	addlw	(low ((_fondo| 0+2)))& (0+255)
  3747  05AA  0084               	movwf	4
  3748  05AB  1383               	bcf	3,7	;select IRP bank1
  3749  05AC  0800               	movf	0,w
  3750  05AD  00F3               	movwf	??_checkColission_R+1
  3751  05AE  0A84               	incf	4,f
  3752  05AF  0800               	movf	0,w
  3753  05B0  00F4               	movwf	??_checkColission_R+2
  3754  05B1  087A               	movf	checkColission_R@i,w
  3755  05B2  00F5               	movwf	??_checkColission_R+3
  3756  05B3  0775               	addwf	??_checkColission_R+3,w
  3757  05B4  3E57               	addlw	(low (_ficha| 0))& (0+255)
  3758  05B5  0084               	movwf	4
  3759  05B6  0800               	movf	0,w
  3760  05B7  00F6               	movwf	??_checkColission_R+4
  3761  05B8  0A84               	incf	4,f
  3762  05B9  0800               	movf	0,w
  3763  05BA  00F7               	movwf	??_checkColission_R+5
  3764  05BB  0873               	movf	??_checkColission_R+1,w
  3765  05BC  0576               	andwf	??_checkColission_R+4,w
  3766  05BD  00F8               	movwf	??_checkColission_R+6
  3767  05BE  0874               	movf	??_checkColission_R+2,w
  3768  05BF  0577               	andwf	??_checkColission_R+5,w
  3769  05C0  00F9               	movwf	??_checkColission_R+7
  3770  05C1  0878               	movf	??_checkColission_R+6,w
  3771  05C2  0479               	iorwf	??_checkColission_R+7,w
  3772  05C3  1903               	btfsc	3,2
  3773  05C4  2DC6               	goto	u881
  3774  05C5  2DC7               	goto	u880
  3775  05C6                     u881:	
  3776  05C6  2DC9               	goto	l1441
  3777  05C7                     u880:	
  3778  05C7                     l1437:	
  3779                           
  3780                           ;colisiones.c: 55:             return 1;
  3781  05C7  3001               	movlw	1
  3782  05C8  2DDF               	goto	l237
  3783  05C9                     l1441:	
  3784                           
  3785                           ;colisiones.c: 57:     }
  3786  05C9  30FF               	movlw	255
  3787  05CA  07FA               	addwf	checkColission_R@i,f
  3788  05CB  1803               	skipnc
  3789  05CC  0AFB               	incf	checkColission_R@i+1,f
  3790  05CD  30FF               	movlw	255
  3791  05CE  07FB               	addwf	checkColission_R@i+1,f
  3792  05CF                     l234:	
  3793  05CF  087B               	movf	checkColission_R@i+1,w
  3794  05D0  3A80               	xorlw	128
  3795  05D1  00F2               	movwf	??_checkColission_R
  3796  05D2  3080               	movlw	128
  3797  05D3  0272               	subwf	??_checkColission_R,w
  3798  05D4  1D03               	skipz
  3799  05D5  2DDA               	goto	u895
  3800  05D6  1283               	bcf	3,5	;RP0=0, select bank0
  3801  05D7  1303               	bcf	3,6	;RP1=0, select bank0
  3802  05D8  0848               	movf	_con+3,w
  3803  05D9  027A               	subwf	checkColission_R@i,w
  3804  05DA                     u895:	
  3805  05DA  1803               	skipnc
  3806  05DB  2DDD               	goto	u891
  3807  05DC  2DDE               	goto	u890
  3808  05DD                     u891:	
  3809  05DD  2DA6               	goto	l1435
  3810  05DE                     u890:	
  3811  05DE                     l1443:	
  3812                           
  3813                           ;colisiones.c: 58:     return 0;
  3814  05DE  3000               	movlw	0
  3815  05DF                     l237:	
  3816  05DF  0008               	return
  3817  05E0                     __end_of_checkColission_R:	
  3818                           
  3819                           	psect	text23
  3820  042B                     __ptext23:	
  3821 ;; *************** function _checkColission_L *****************
  3822 ;; Defined at:
  3823 ;;		line 61 in file "colisiones.c"
  3824 ;; Parameters:    Size  Location     Type
  3825 ;;		None
  3826 ;; Auto vars:     Size  Location     Type
  3827 ;;  i               2   10[COMMON] int 
  3828 ;; Return value:  Size  Location     Type
  3829 ;;                  1    wreg      _Bool 
  3830 ;; Registers used:
  3831 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3832 ;; Tracked objects:
  3833 ;;		On entry : 0/0
  3834 ;;		On exit  : 0/0
  3835 ;;		Unchanged: 0/0
  3836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3837 ;;      Params:         0       0       0       0       0
  3838 ;;      Locals:         2       0       0       0       0
  3839 ;;      Temps:          8       0       0       0       0
  3840 ;;      Totals:        10       0       0       0       0
  3841 ;;Total ram usage:       10 bytes
  3842 ;; Hardware stack levels used:    1
  3843 ;; Hardware stack levels required when called:    1
  3844 ;; This function calls:
  3845 ;;		Nothing
  3846 ;; This function is called by:
  3847 ;;		_leerEntradas
  3848 ;; This function uses a non-reentrant model
  3849 ;;
  3850                           
  3851                           
  3852                           ;psect for function _checkColission_L
  3853  042B                     _checkColission_L:	
  3854  042B                     l1457:	
  3855                           ;incstack = 0
  3856                           ; Regs used in _checkColission_L: [wreg-fsr0h+status,2+status,0]
  3857                           
  3858  042B                     l1459:	
  3859                           
  3860                           ;colisiones.c: 63:     for(i=con.ficha_Hpos; i<(con.ficha_Hpos+4); i++){
  3861  042B  1283               	bcf	3,5	;RP0=0, select bank0
  3862  042C  1303               	bcf	3,6	;RP1=0, select bank0
  3863  042D  0848               	movf	_con+3,w
  3864  042E  00F2               	movwf	??_checkColission_L
  3865  042F  01F3               	clrf	??_checkColission_L+1
  3866  0430  0872               	movf	??_checkColission_L,w
  3867  0431  00FA               	movwf	checkColission_L@i
  3868  0432  0873               	movf	??_checkColission_L+1,w
  3869  0433  00FB               	movwf	checkColission_L@i+1
  3870  0434  2C5E               	goto	l241
  3871  0435                     l1461:	
  3872                           
  3873                           ;colisiones.c: 64:         if((ficha[i] & fondo[i-1]) != 0){
  3874  0435  087A               	movf	checkColission_L@i,w
  3875  0436  00F2               	movwf	??_checkColission_L
  3876  0437  0772               	addwf	??_checkColission_L,w
  3877  0438  3E9E               	addlw	(low ((_fondo| 0+254)))& (0+255)
  3878  0439  0084               	movwf	4
  3879  043A  1383               	bcf	3,7	;select IRP bank1
  3880  043B  0800               	movf	0,w
  3881  043C  00F3               	movwf	??_checkColission_L+1
  3882  043D  0A84               	incf	4,f
  3883  043E  0800               	movf	0,w
  3884  043F  00F4               	movwf	??_checkColission_L+2
  3885  0440  087A               	movf	checkColission_L@i,w
  3886  0441  00F5               	movwf	??_checkColission_L+3
  3887  0442  0775               	addwf	??_checkColission_L+3,w
  3888  0443  3E57               	addlw	(low (_ficha| 0))& (0+255)
  3889  0444  0084               	movwf	4
  3890  0445  0800               	movf	0,w
  3891  0446  00F6               	movwf	??_checkColission_L+4
  3892  0447  0A84               	incf	4,f
  3893  0448  0800               	movf	0,w
  3894  0449  00F7               	movwf	??_checkColission_L+5
  3895  044A  0873               	movf	??_checkColission_L+1,w
  3896  044B  0576               	andwf	??_checkColission_L+4,w
  3897  044C  00F8               	movwf	??_checkColission_L+6
  3898  044D  0874               	movf	??_checkColission_L+2,w
  3899  044E  0577               	andwf	??_checkColission_L+5,w
  3900  044F  00F9               	movwf	??_checkColission_L+7
  3901  0450  0878               	movf	??_checkColission_L+6,w
  3902  0451  0479               	iorwf	??_checkColission_L+7,w
  3903  0452  1903               	btfsc	3,2
  3904  0453  2C55               	goto	u911
  3905  0454  2C56               	goto	u910
  3906  0455                     u911:	
  3907  0455  2C58               	goto	l1467
  3908  0456                     u910:	
  3909  0456                     l1463:	
  3910                           
  3911                           ;colisiones.c: 65:             return 1;
  3912  0456  3001               	movlw	1
  3913  0457  2C76               	goto	l244
  3914  0458                     l1467:	
  3915                           
  3916                           ;colisiones.c: 67:     }
  3917  0458  3001               	movlw	1
  3918  0459  07FA               	addwf	checkColission_L@i,f
  3919  045A  1803               	skipnc
  3920  045B  0AFB               	incf	checkColission_L@i+1,f
  3921  045C  3000               	movlw	0
  3922  045D  07FB               	addwf	checkColission_L@i+1,f
  3923  045E                     l241:	
  3924  045E  1283               	bcf	3,5	;RP0=0, select bank0
  3925  045F  1303               	bcf	3,6	;RP1=0, select bank0
  3926  0460  0848               	movf	_con+3,w
  3927  0461  3E04               	addlw	4
  3928  0462  00F2               	movwf	??_checkColission_L
  3929  0463  3000               	movlw	0
  3930  0464  1803               	skipnc
  3931  0465  3001               	movlw	1
  3932  0466  00F3               	movwf	??_checkColission_L+1
  3933  0467  087B               	movf	checkColission_L@i+1,w
  3934  0468  3A80               	xorlw	128
  3935  0469  00F4               	movwf	??_checkColission_L+2
  3936  046A  0873               	movf	??_checkColission_L+1,w
  3937  046B  3A80               	xorlw	128
  3938  046C  0274               	subwf	??_checkColission_L+2,w
  3939  046D  1D03               	skipz
  3940  046E  2C71               	goto	u925
  3941  046F  0872               	movf	??_checkColission_L,w
  3942  0470  027A               	subwf	checkColission_L@i,w
  3943  0471                     u925:	
  3944  0471  1C03               	skipc
  3945  0472  2C74               	goto	u921
  3946  0473  2C75               	goto	u920
  3947  0474                     u921:	
  3948  0474  2C35               	goto	l1461
  3949  0475                     u920:	
  3950  0475                     l1469:	
  3951                           
  3952                           ;colisiones.c: 68:     return 0;
  3953  0475  3000               	movlw	0
  3954  0476                     l244:	
  3955  0476  0008               	return
  3956  0477                     __end_of_checkColission_L:	
  3957                           
  3958                           	psect	text24
  3959  0242                     __ptext24:	
  3960 ;; *************** function _checkColission_D *****************
  3961 ;; Defined at:
  3962 ;;		line 38 in file "colisiones.c"
  3963 ;; Parameters:    Size  Location     Type
  3964 ;;		None
  3965 ;; Auto vars:     Size  Location     Type
  3966 ;;  i               2   25[BANK0 ] int 
  3967 ;; Return value:  Size  Location     Type
  3968 ;;                  1    wreg      void 
  3969 ;; Registers used:
  3970 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3971 ;; Tracked objects:
  3972 ;;		On entry : 0/0
  3973 ;;		On exit  : 0/0
  3974 ;;		Unchanged: 0/0
  3975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3976 ;;      Params:         0       0       0       0       0
  3977 ;;      Locals:         0       2       0       0       0
  3978 ;;      Temps:          0       8       0       0       0
  3979 ;;      Totals:         0      10       0       0       0
  3980 ;;Total ram usage:       10 bytes
  3981 ;; Hardware stack levels used:    1
  3982 ;; Hardware stack levels required when called:    3
  3983 ;; This function calls:
  3984 ;;		___awmod
  3985 ;;		_drawBground
  3986 ;;		_rand
  3987 ;; This function is called by:
  3988 ;;		_checkCount
  3989 ;; This function uses a non-reentrant model
  3990 ;;
  3991                           
  3992                           
  3993                           ;psect for function _checkColission_D
  3994  0242                     _checkColission_D:	
  3995  0242                     l1663:	
  3996                           ;incstack = 0
  3997                           ; Regs used in _checkColission_D: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3998                           
  3999  0242                     l1665:	
  4000                           
  4001                           ;colisiones.c: 40:     for(i=con.ficha_Hpos; i<(con.ficha_Hpos+4); i++){
  4002  0242  1283               	bcf	3,5	;RP0=0, select bank0
  4003  0243  1303               	bcf	3,6	;RP1=0, select bank0
  4004  0244  0848               	movf	_con+3,w
  4005  0245  00B1               	movwf	??_checkColission_D
  4006  0246  01B2               	clrf	??_checkColission_D+1
  4007  0247  0831               	movf	??_checkColission_D,w
  4008  0248  00B9               	movwf	checkColission_D@i
  4009  0249  0832               	movf	??_checkColission_D+1,w
  4010  024A  00BA               	movwf	checkColission_D@i+1
  4011  024B  2AA2               	goto	l227
  4012  024C                     l1667:	
  4013                           
  4014                           ;colisiones.c: 41:         if((ficha[i]>>1 & fondo[i]) != 0){
  4015  024C  1283               	bcf	3,5	;RP0=0, select bank0
  4016  024D  1303               	bcf	3,6	;RP1=0, select bank0
  4017  024E  0839               	movf	checkColission_D@i,w
  4018  024F  00B1               	movwf	??_checkColission_D
  4019  0250  0731               	addwf	??_checkColission_D,w
  4020  0251  3EA0               	addlw	(low (_fondo| 0))& (0+255)
  4021  0252  0084               	movwf	4
  4022  0253  1383               	bcf	3,7	;select IRP bank1
  4023  0254  0800               	movf	0,w
  4024  0255  00B2               	movwf	??_checkColission_D+1
  4025  0256  0A84               	incf	4,f
  4026  0257  0800               	movf	0,w
  4027  0258  00B3               	movwf	??_checkColission_D+2
  4028  0259  0839               	movf	checkColission_D@i,w
  4029  025A  00B4               	movwf	??_checkColission_D+3
  4030  025B  0734               	addwf	??_checkColission_D+3,w
  4031  025C  3E57               	addlw	(low (_ficha| 0))& (0+255)
  4032  025D  0084               	movwf	4
  4033  025E  0800               	movf	0,w
  4034  025F  00B5               	movwf	??_checkColission_D+4
  4035  0260  0A84               	incf	4,f
  4036  0261  0800               	movf	0,w
  4037  0262  00B6               	movwf	??_checkColission_D+5
  4038  0263  1003               	clrc
  4039  0264  0CB6               	rrf	??_checkColission_D+5,f
  4040  0265  0CB5               	rrf	??_checkColission_D+4,f
  4041  0266  0832               	movf	??_checkColission_D+1,w
  4042  0267  0535               	andwf	??_checkColission_D+4,w
  4043  0268  00B7               	movwf	??_checkColission_D+6
  4044  0269  0833               	movf	??_checkColission_D+2,w
  4045  026A  0536               	andwf	??_checkColission_D+5,w
  4046  026B  00B8               	movwf	??_checkColission_D+7
  4047  026C  0837               	movf	??_checkColission_D+6,w
  4048  026D  0438               	iorwf	??_checkColission_D+7,w
  4049  026E  1903               	btfsc	3,2
  4050  026F  2A71               	goto	u1231
  4051  0270  2A72               	goto	u1230
  4052  0271                     u1231:	
  4053  0271  2A9C               	goto	l1677
  4054  0272                     u1230:	
  4055  0272                     l1669:	
  4056                           
  4057                           ;colisiones.c: 42:             drawBground();
  4058  0272  120A  118A  2664  120A  118A  	fcall	_drawBground
  4059  0277                     l1671:	
  4060                           
  4061                           ;colisiones.c: 43:             con.ficha_Vpos = 16;
  4062  0277  3010               	movlw	16
  4063  0278  1283               	bcf	3,5	;RP0=0, select bank0
  4064  0279  1303               	bcf	3,6	;RP1=0, select bank0
  4065  027A  00B1               	movwf	??_checkColission_D
  4066  027B  0831               	movf	??_checkColission_D,w
  4067  027C  00C7               	movwf	_con+2
  4068  027D                     l1673:	
  4069                           
  4070                           ;colisiones.c: 44:             con.ficha_Hpos = 2;
  4071  027D  3002               	movlw	2
  4072  027E  00B1               	movwf	??_checkColission_D
  4073  027F  0831               	movf	??_checkColission_D,w
  4074  0280  00C8               	movwf	_con+3
  4075  0281                     l1675:	
  4076                           
  4077                           ;colisiones.c: 45:             con.ficha_actual = rand() % 7;
  4078  0281  3007               	movlw	7
  4079  0282  00AB               	movwf	___awmod@divisor
  4080  0283  3000               	movlw	0
  4081  0284  00AC               	movwf	___awmod@divisor+1
  4082  0285  120A  118A  2555  120A  118A  	fcall	_rand
  4083  028A  1283               	bcf	3,5	;RP0=0, select bank0
  4084  028B  1303               	bcf	3,6	;RP1=0, select bank0
  4085  028C  0825               	movf	?_rand+1,w
  4086  028D  00AE               	movwf	___awmod@dividend+1
  4087  028E  0824               	movf	?_rand,w
  4088  028F  00AD               	movwf	___awmod@dividend
  4089  0290  120A  118A  2381  120A  118A  	fcall	___awmod
  4090  0295  1283               	bcf	3,5	;RP0=0, select bank0
  4091  0296  1303               	bcf	3,6	;RP1=0, select bank0
  4092  0297  082B               	movf	?___awmod,w
  4093  0298  00B1               	movwf	??_checkColission_D
  4094  0299  0831               	movf	??_checkColission_D,w
  4095  029A  00C9               	movwf	_con+4
  4096                           
  4097                           ;colisiones.c: 46:             break;
  4098  029B  2AB7               	goto	l231
  4099  029C                     l1677:	
  4100                           
  4101                           ;colisiones.c: 48:     }
  4102  029C  3001               	movlw	1
  4103  029D  07B9               	addwf	checkColission_D@i,f
  4104  029E  1803               	skipnc
  4105  029F  0ABA               	incf	checkColission_D@i+1,f
  4106  02A0  3000               	movlw	0
  4107  02A1  07BA               	addwf	checkColission_D@i+1,f
  4108  02A2                     l227:	
  4109  02A2  0848               	movf	_con+3,w
  4110  02A3  3E04               	addlw	4
  4111  02A4  00B1               	movwf	??_checkColission_D
  4112  02A5  3000               	movlw	0
  4113  02A6  1803               	skipnc
  4114  02A7  3001               	movlw	1
  4115  02A8  00B2               	movwf	??_checkColission_D+1
  4116  02A9  083A               	movf	checkColission_D@i+1,w
  4117  02AA  3A80               	xorlw	128
  4118  02AB  00B3               	movwf	??_checkColission_D+2
  4119  02AC  0832               	movf	??_checkColission_D+1,w
  4120  02AD  3A80               	xorlw	128
  4121  02AE  0233               	subwf	??_checkColission_D+2,w
  4122  02AF  1D03               	skipz
  4123  02B0  2AB3               	goto	u1245
  4124  02B1  0831               	movf	??_checkColission_D,w
  4125  02B2  0239               	subwf	checkColission_D@i,w
  4126  02B3                     u1245:	
  4127  02B3  1C03               	skipc
  4128  02B4  2AB6               	goto	u1241
  4129  02B5  2AB7               	goto	u1240
  4130  02B6                     u1241:	
  4131  02B6  2A4C               	goto	l1667
  4132  02B7                     u1240:	
  4133  02B7                     l231:	
  4134  02B7  0008               	return
  4135  02B8                     __end_of_checkColission_D:	
  4136                           
  4137                           	psect	text25
  4138  06D9                     __ptext25:	
  4139 ;; *************** function _checkBottom *****************
  4140 ;; Defined at:
  4141 ;;		line 17 in file "colisiones.c"
  4142 ;; Parameters:    Size  Location     Type
  4143 ;;		None
  4144 ;; Auto vars:     Size  Location     Type
  4145 ;;		None
  4146 ;; Return value:  Size  Location     Type
  4147 ;;                  1    wreg      void 
  4148 ;; Registers used:
  4149 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4150 ;; Tracked objects:
  4151 ;;		On entry : 0/0
  4152 ;;		On exit  : 0/0
  4153 ;;		Unchanged: 0/0
  4154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4155 ;;      Params:         0       0       0       0       0
  4156 ;;      Locals:         0       0       0       0       0
  4157 ;;      Temps:          0       1       0       0       0
  4158 ;;      Totals:         0       1       0       0       0
  4159 ;;Total ram usage:        1 bytes
  4160 ;; Hardware stack levels used:    1
  4161 ;; Hardware stack levels required when called:    3
  4162 ;; This function calls:
  4163 ;;		___awmod
  4164 ;;		_drawBground
  4165 ;;		_rand
  4166 ;; This function is called by:
  4167 ;;		_checkCount
  4168 ;; This function uses a non-reentrant model
  4169 ;;
  4170                           
  4171                           
  4172                           ;psect for function _checkBottom
  4173  06D9                     _checkBottom:	
  4174  06D9                     l1653:	
  4175                           ;incstack = 0
  4176                           ; Regs used in _checkBottom: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4177                           
  4178                           
  4179                           ;colisiones.c: 18:     if(con.ficha_Vpos==0){
  4180  06D9  1283               	bcf	3,5	;RP0=0, select bank0
  4181  06DA  1303               	bcf	3,6	;RP1=0, select bank0
  4182  06DB  0847               	movf	_con+2,w
  4183  06DC  1D03               	btfss	3,2
  4184  06DD  2EDF               	goto	u1221
  4185  06DE  2EE0               	goto	u1220
  4186  06DF                     u1221:	
  4187  06DF  2F09               	goto	l220
  4188  06E0                     u1220:	
  4189  06E0                     l1655:	
  4190                           
  4191                           ;colisiones.c: 19:         drawBground();
  4192  06E0  120A  118A  2664  120A  118A  	fcall	_drawBground
  4193  06E5                     l1657:	
  4194                           
  4195                           ;colisiones.c: 20:         con.ficha_Vpos = 16;
  4196  06E5  3010               	movlw	16
  4197  06E6  1283               	bcf	3,5	;RP0=0, select bank0
  4198  06E7  1303               	bcf	3,6	;RP1=0, select bank0
  4199  06E8  00B1               	movwf	??_checkBottom
  4200  06E9  0831               	movf	??_checkBottom,w
  4201  06EA  00C7               	movwf	_con+2
  4202  06EB                     l1659:	
  4203                           
  4204                           ;colisiones.c: 21:         con.ficha_Hpos = 2;
  4205  06EB  3002               	movlw	2
  4206  06EC  00B1               	movwf	??_checkBottom
  4207  06ED  0831               	movf	??_checkBottom,w
  4208  06EE  00C8               	movwf	_con+3
  4209  06EF                     l1661:	
  4210                           
  4211                           ;colisiones.c: 22:         con.ficha_actual = rand() % 7;
  4212  06EF  3007               	movlw	7
  4213  06F0  00AB               	movwf	___awmod@divisor
  4214  06F1  3000               	movlw	0
  4215  06F2  00AC               	movwf	___awmod@divisor+1
  4216  06F3  120A  118A  2555  120A  118A  	fcall	_rand
  4217  06F8  1283               	bcf	3,5	;RP0=0, select bank0
  4218  06F9  1303               	bcf	3,6	;RP1=0, select bank0
  4219  06FA  0825               	movf	?_rand+1,w
  4220  06FB  00AE               	movwf	___awmod@dividend+1
  4221  06FC  0824               	movf	?_rand,w
  4222  06FD  00AD               	movwf	___awmod@dividend
  4223  06FE  120A  118A  2381  120A  118A  	fcall	___awmod
  4224  0703  1283               	bcf	3,5	;RP0=0, select bank0
  4225  0704  1303               	bcf	3,6	;RP1=0, select bank0
  4226  0705  082B               	movf	?___awmod,w
  4227  0706  00B1               	movwf	??_checkBottom
  4228  0707  0831               	movf	??_checkBottom,w
  4229  0708  00C9               	movwf	_con+4
  4230  0709                     l220:	
  4231  0709  0008               	return
  4232  070A                     __end_of_checkBottom:	
  4233                           
  4234                           	psect	text26
  4235  0555                     __ptext26:	
  4236 ;; *************** function _rand *****************
  4237 ;; Defined at:
  4238 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  4239 ;; Parameters:    Size  Location     Type
  4240 ;;		None
  4241 ;; Auto vars:     Size  Location     Type
  4242 ;;		None
  4243 ;; Return value:  Size  Location     Type
  4244 ;;                  2    4[BANK0 ] int 
  4245 ;; Registers used:
  4246 ;;		wreg, status,2, status,0, pclath, cstack
  4247 ;; Tracked objects:
  4248 ;;		On entry : 0/0
  4249 ;;		On exit  : 0/0
  4250 ;;		Unchanged: 0/0
  4251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4252 ;;      Params:         0       2       0       0       0
  4253 ;;      Locals:         0       0       0       0       0
  4254 ;;      Temps:          0       5       0       0       0
  4255 ;;      Totals:         0       7       0       0       0
  4256 ;;Total ram usage:        7 bytes
  4257 ;; Hardware stack levels used:    1
  4258 ;; Hardware stack levels required when called:    2
  4259 ;; This function calls:
  4260 ;;		___lmul
  4261 ;; This function is called by:
  4262 ;;		_main
  4263 ;;		_checkBottom
  4264 ;;		_checkColission_D
  4265 ;;		_perdio
  4266 ;; This function uses a non-reentrant model
  4267 ;;
  4268                           
  4269                           
  4270                           ;psect for function _rand
  4271  0555                     _rand:	
  4272  0555                     l1413:	
  4273                           ;incstack = 0
  4274                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  4275                           
  4276  0555  1283               	bcf	3,5	;RP0=0, select bank0
  4277  0556  1303               	bcf	3,6	;RP1=0, select bank0
  4278  0557  086A               	movf	_randx+3,w
  4279  0558  00F5               	movwf	___lmul@multiplier+3
  4280  0559  0869               	movf	_randx+2,w
  4281  055A  00F4               	movwf	___lmul@multiplier+2
  4282  055B  0868               	movf	_randx+1,w
  4283  055C  00F3               	movwf	___lmul@multiplier+1
  4284  055D  0867               	movf	_randx,w
  4285  055E  00F2               	movwf	___lmul@multiplier
  4286  055F  3041               	movlw	65
  4287  0560  00F9               	movwf	___lmul@multiplicand+3
  4288  0561  30C6               	movlw	198
  4289  0562  00F8               	movwf	___lmul@multiplicand+2
  4290  0563  304E               	movlw	78
  4291  0564  00F7               	movwf	___lmul@multiplicand+1
  4292  0565  306D               	movlw	109
  4293  0566  00F6               	movwf	___lmul@multiplicand
  4294  0567  120A  118A  2477  120A  118A  	fcall	___lmul
  4295  056C  0875               	movf	?___lmul+3,w
  4296  056D  1283               	bcf	3,5	;RP0=0, select bank0
  4297  056E  1303               	bcf	3,6	;RP1=0, select bank0
  4298  056F  00EA               	movwf	_randx+3
  4299  0570  0874               	movf	?___lmul+2,w
  4300  0571  00E9               	movwf	_randx+2
  4301  0572  0873               	movf	?___lmul+1,w
  4302  0573  00E8               	movwf	_randx+1
  4303  0574  0872               	movf	?___lmul,w
  4304  0575  00E7               	movwf	_randx
  4305  0576                     l1415:	
  4306  0576  3039               	movlw	57
  4307  0577  07E7               	addwf	_randx,f
  4308  0578  3030               	movlw	48
  4309  0579  1803               	skipnc
  4310  057A  3031               	movlw	49
  4311  057B  07E8               	addwf	_randx+1,f
  4312  057C  3000               	movlw	0
  4313  057D  1803               	skipnc
  4314  057E  3001               	movlw	1
  4315  057F  07E9               	addwf	_randx+2,f
  4316  0580  3000               	movlw	0
  4317  0581  1803               	skipnc
  4318  0582  3001               	movlw	1
  4319  0583  07EA               	addwf	_randx+3,f
  4320  0584                     l1417:	
  4321  0584  0867               	movf	_randx,w
  4322  0585  00A6               	movwf	??_rand
  4323  0586  0868               	movf	_randx+1,w
  4324  0587  00A7               	movwf	??_rand+1
  4325  0588  0869               	movf	_randx+2,w
  4326  0589  00A8               	movwf	??_rand+2
  4327  058A  086A               	movf	_randx+3,w
  4328  058B  00A9               	movwf	??_rand+3
  4329  058C  3010               	movlw	16
  4330  058D  00AA               	movwf	??_rand+4
  4331  058E                     u795:	
  4332  058E  0D29               	rlf	??_rand+3,w
  4333  058F  0CA9               	rrf	??_rand+3,f
  4334  0590  0CA8               	rrf	??_rand+2,f
  4335  0591  0CA7               	rrf	??_rand+1,f
  4336  0592  0CA6               	rrf	??_rand,f
  4337  0593                     u790:	
  4338  0593  0BAA               	decfsz	??_rand+4,f
  4339  0594  2D8E               	goto	u795
  4340  0595  30FF               	movlw	255
  4341  0596  0526               	andwf	??_rand,w
  4342  0597  00A4               	movwf	?_rand
  4343  0598  307F               	movlw	127
  4344  0599  0527               	andwf	??_rand+1,w
  4345  059A  00A5               	movwf	?_rand+1
  4346  059B                     l817:	
  4347  059B  0008               	return
  4348  059C                     __end_of_rand:	
  4349                           
  4350                           	psect	text27
  4351  0477                     __ptext27:	
  4352 ;; *************** function ___lmul *****************
  4353 ;; Defined at:
  4354 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  4355 ;; Parameters:    Size  Location     Type
  4356 ;;  multiplier      4    2[COMMON] unsigned long 
  4357 ;;  multiplicand    4    6[COMMON] unsigned long 
  4358 ;; Auto vars:     Size  Location     Type
  4359 ;;  product         4    0[BANK0 ] unsigned long 
  4360 ;; Return value:  Size  Location     Type
  4361 ;;                  4    2[COMMON] unsigned long 
  4362 ;; Registers used:
  4363 ;;		wreg, status,2, status,0
  4364 ;; Tracked objects:
  4365 ;;		On entry : 0/0
  4366 ;;		On exit  : 0/0
  4367 ;;		Unchanged: 0/0
  4368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4369 ;;      Params:         8       0       0       0       0
  4370 ;;      Locals:         0       4       0       0       0
  4371 ;;      Temps:          1       0       0       0       0
  4372 ;;      Totals:         9       4       0       0       0
  4373 ;;Total ram usage:       13 bytes
  4374 ;; Hardware stack levels used:    1
  4375 ;; Hardware stack levels required when called:    1
  4376 ;; This function calls:
  4377 ;;		Nothing
  4378 ;; This function is called by:
  4379 ;;		_rand
  4380 ;; This function uses a non-reentrant model
  4381 ;;
  4382                           
  4383                           
  4384                           ;psect for function ___lmul
  4385  0477                     ___lmul:	
  4386  0477                     l1399:	
  4387                           ;incstack = 0
  4388                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4389                           
  4390  0477  3000               	movlw	0
  4391  0478  1283               	bcf	3,5	;RP0=0, select bank0
  4392  0479  1303               	bcf	3,6	;RP1=0, select bank0
  4393  047A  00A3               	movwf	___lmul@product+3
  4394  047B  3000               	movlw	0
  4395  047C  00A2               	movwf	___lmul@product+2
  4396  047D  3000               	movlw	0
  4397  047E  00A1               	movwf	___lmul@product+1
  4398  047F  3000               	movlw	0
  4399  0480  00A0               	movwf	___lmul@product
  4400  0481                     l1401:	
  4401  0481  1C72               	btfss	___lmul@multiplier,0
  4402  0482  2C84               	goto	u741
  4403  0483  2C85               	goto	u740
  4404  0484                     u741:	
  4405  0484  2C9E               	goto	l1405
  4406  0485                     u740:	
  4407  0485                     l1403:	
  4408  0485  0876               	movf	___lmul@multiplicand,w
  4409  0486  1283               	bcf	3,5	;RP0=0, select bank0
  4410  0487  1303               	bcf	3,6	;RP1=0, select bank0
  4411  0488  07A0               	addwf	___lmul@product,f
  4412  0489  0877               	movf	___lmul@multiplicand+1,w
  4413  048A  1103               	clrz
  4414  048B  1803               	skipnc
  4415  048C  3E01               	addlw	1
  4416  048D  1903               	skipnz
  4417  048E  2C90               	goto	u751
  4418  048F  07A1               	addwf	___lmul@product+1,f
  4419  0490                     u751:	
  4420  0490  0878               	movf	___lmul@multiplicand+2,w
  4421  0491  1103               	clrz
  4422  0492  1803               	skipnc
  4423  0493  3E01               	addlw	1
  4424  0494  1903               	skipnz
  4425  0495  2C97               	goto	u752
  4426  0496  07A2               	addwf	___lmul@product+2,f
  4427  0497                     u752:	
  4428  0497  0879               	movf	___lmul@multiplicand+3,w
  4429  0498  1103               	clrz
  4430  0499  1803               	skipnc
  4431  049A  3E01               	addlw	1
  4432  049B  1903               	skipnz
  4433  049C  2C9E               	goto	u753
  4434  049D  07A3               	addwf	___lmul@product+3,f
  4435  049E                     u753:	
  4436  049E                     l1405:	
  4437  049E  3001               	movlw	1
  4438  049F  00FA               	movwf	??___lmul
  4439  04A0                     u765:	
  4440  04A0  1003               	clrc
  4441  04A1  0DF6               	rlf	___lmul@multiplicand,f
  4442  04A2  0DF7               	rlf	___lmul@multiplicand+1,f
  4443  04A3  0DF8               	rlf	___lmul@multiplicand+2,f
  4444  04A4  0DF9               	rlf	___lmul@multiplicand+3,f
  4445  04A5  0BFA               	decfsz	??___lmul,f
  4446  04A6  2CA0               	goto	u765
  4447  04A7                     l1407:	
  4448  04A7  3001               	movlw	1
  4449  04A8                     u775:	
  4450  04A8  1003               	clrc
  4451  04A9  0CF5               	rrf	___lmul@multiplier+3,f
  4452  04AA  0CF4               	rrf	___lmul@multiplier+2,f
  4453  04AB  0CF3               	rrf	___lmul@multiplier+1,f
  4454  04AC  0CF2               	rrf	___lmul@multiplier,f
  4455  04AD  3EFF               	addlw	-1
  4456  04AE  1D03               	skipz
  4457  04AF  2CA8               	goto	u775
  4458  04B0  0875               	movf	___lmul@multiplier+3,w
  4459  04B1  0474               	iorwf	___lmul@multiplier+2,w
  4460  04B2  0473               	iorwf	___lmul@multiplier+1,w
  4461  04B3  0472               	iorwf	___lmul@multiplier,w
  4462  04B4  1D03               	skipz
  4463  04B5  2CB7               	goto	u781
  4464  04B6  2CB8               	goto	u780
  4465  04B7                     u781:	
  4466  04B7  2C81               	goto	l1401
  4467  04B8                     u780:	
  4468  04B8                     l1409:	
  4469  04B8  1283               	bcf	3,5	;RP0=0, select bank0
  4470  04B9  1303               	bcf	3,6	;RP1=0, select bank0
  4471  04BA  0823               	movf	___lmul@product+3,w
  4472  04BB  00F5               	movwf	?___lmul+3
  4473  04BC  0822               	movf	___lmul@product+2,w
  4474  04BD  00F4               	movwf	?___lmul+2
  4475  04BE  0821               	movf	___lmul@product+1,w
  4476  04BF  00F3               	movwf	?___lmul+1
  4477  04C0  0820               	movf	___lmul@product,w
  4478  04C1  00F2               	movwf	?___lmul
  4479  04C2                     l375:	
  4480  04C2  0008               	return
  4481  04C3                     __end_of___lmul:	
  4482                           
  4483                           	psect	text28
  4484  0664                     __ptext28:	
  4485 ;; *************** function _drawBground *****************
  4486 ;; Defined at:
  4487 ;;		line 50 in file "screen.c"
  4488 ;; Parameters:    Size  Location     Type
  4489 ;;		None
  4490 ;; Auto vars:     Size  Location     Type
  4491 ;;  i               2    0[BANK0 ] int 
  4492 ;; Return value:  Size  Location     Type
  4493 ;;                  1    wreg      void 
  4494 ;; Registers used:
  4495 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4496 ;; Tracked objects:
  4497 ;;		On entry : 0/0
  4498 ;;		On exit  : 0/0
  4499 ;;		Unchanged: 0/0
  4500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4501 ;;      Params:         0       0       0       0       0
  4502 ;;      Locals:         0       2       0       0       0
  4503 ;;      Temps:          9       0       0       0       0
  4504 ;;      Totals:         9       2       0       0       0
  4505 ;;Total ram usage:       11 bytes
  4506 ;; Hardware stack levels used:    1
  4507 ;; Hardware stack levels required when called:    1
  4508 ;; This function calls:
  4509 ;;		Nothing
  4510 ;; This function is called by:
  4511 ;;		_checkBottom
  4512 ;;		_checkColission_D
  4513 ;; This function uses a non-reentrant model
  4514 ;;
  4515                           
  4516                           
  4517                           ;psect for function _drawBground
  4518  0664                     _drawBground:	
  4519  0664                     l1481:	
  4520                           ;incstack = 0
  4521                           ; Regs used in _drawBground: [wreg-fsr0h+status,2+status,0+btemp+1]
  4522                           
  4523                           
  4524                           ;screen.c: 51:     int i=0;
  4525  0664  1283               	bcf	3,5	;RP0=0, select bank0
  4526  0665  1303               	bcf	3,6	;RP1=0, select bank0
  4527  0666  01A0               	clrf	drawBground@i
  4528  0667  01A1               	clrf	drawBground@i+1
  4529                           
  4530                           ;screen.c: 52:     for(i=0; i<8; i++){
  4531  0668  01A0               	clrf	drawBground@i
  4532  0669  01A1               	clrf	drawBground@i+1
  4533  066A                     l1487:	
  4534                           
  4535                           ;screen.c: 53:         fondo[i] = fondo[i] | ficha[i];
  4536  066A  1283               	bcf	3,5	;RP0=0, select bank0
  4537  066B  1303               	bcf	3,6	;RP1=0, select bank0
  4538  066C  0820               	movf	drawBground@i,w
  4539  066D  00F2               	movwf	??_drawBground
  4540  066E  0772               	addwf	??_drawBground,w
  4541  066F  3E57               	addlw	(low (_ficha| 0))& (0+255)
  4542  0670  0084               	movwf	4
  4543  0671  1383               	bcf	3,7	;select IRP bank0
  4544  0672  0800               	movf	0,w
  4545  0673  00F3               	movwf	??_drawBground+1
  4546  0674  0A84               	incf	4,f
  4547  0675  0800               	movf	0,w
  4548  0676  00F4               	movwf	??_drawBground+2
  4549  0677  0820               	movf	drawBground@i,w
  4550  0678  00F5               	movwf	??_drawBground+3
  4551  0679  0775               	addwf	??_drawBground+3,w
  4552  067A  3EA0               	addlw	(low (_fondo| 0))& (0+255)
  4553  067B  0084               	movwf	4
  4554  067C  0800               	movf	0,w
  4555  067D  00F6               	movwf	??_drawBground+4
  4556  067E  0A84               	incf	4,f
  4557  067F  0800               	movf	0,w
  4558  0680  00F7               	movwf	??_drawBground+5
  4559  0681  0873               	movf	??_drawBground+1,w
  4560  0682  0476               	iorwf	??_drawBground+4,w
  4561  0683  00F8               	movwf	??_drawBground+6
  4562  0684  0874               	movf	??_drawBground+2,w
  4563  0685  0477               	iorwf	??_drawBground+5,w
  4564  0686  00F9               	movwf	??_drawBground+7
  4565  0687  0820               	movf	drawBground@i,w
  4566  0688  00FA               	movwf	??_drawBground+8
  4567  0689  077A               	addwf	??_drawBground+8,w
  4568  068A  3EA0               	addlw	(low (_fondo| 0))& (0+255)
  4569  068B  0084               	movwf	4
  4570  068C  0878               	movf	??_drawBground+6,w
  4571  068D  0080               	movwf	0
  4572  068E  0A84               	incf	4,f
  4573  068F  0879               	movf	??_drawBground+7,w
  4574  0690  0080               	movwf	0
  4575  0691                     l1489:	
  4576                           
  4577                           ;screen.c: 54:     }
  4578  0691  3001               	movlw	1
  4579  0692  07A0               	addwf	drawBground@i,f
  4580  0693  1803               	skipnc
  4581  0694  0AA1               	incf	drawBground@i+1,f
  4582  0695  3000               	movlw	0
  4583  0696  07A1               	addwf	drawBground@i+1,f
  4584  0697                     l1491:	
  4585  0697  0821               	movf	drawBground@i+1,w
  4586  0698  3A80               	xorlw	128
  4587  0699  00FF               	movwf	btemp+1
  4588  069A  3080               	movlw	128
  4589  069B  027F               	subwf	btemp+1,w
  4590  069C  1D03               	skipz
  4591  069D  2EA0               	goto	u935
  4592  069E  3008               	movlw	8
  4593  069F  0220               	subwf	drawBground@i,w
  4594  06A0                     u935:	
  4595  06A0  1C03               	skipc
  4596  06A1  2EA3               	goto	u931
  4597  06A2  2EA4               	goto	u930
  4598  06A3                     u931:	
  4599  06A3  2E6A               	goto	l1487
  4600  06A4                     u930:	
  4601  06A4                     l197:	
  4602  06A4  0008               	return
  4603  06A5                     __end_of_drawBground:	
  4604                           
  4605                           	psect	text29
  4606  0381                     __ptext29:	
  4607 ;; *************** function ___awmod *****************
  4608 ;; Defined at:
  4609 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  4610 ;; Parameters:    Size  Location     Type
  4611 ;;  divisor         2   11[BANK0 ] int 
  4612 ;;  dividend        2   13[BANK0 ] int 
  4613 ;; Auto vars:     Size  Location     Type
  4614 ;;  sign            1   16[BANK0 ] unsigned char 
  4615 ;;  counter         1   15[BANK0 ] unsigned char 
  4616 ;; Return value:  Size  Location     Type
  4617 ;;                  2   11[BANK0 ] int 
  4618 ;; Registers used:
  4619 ;;		wreg, status,2, status,0
  4620 ;; Tracked objects:
  4621 ;;		On entry : 0/0
  4622 ;;		On exit  : 0/0
  4623 ;;		Unchanged: 0/0
  4624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4625 ;;      Params:         0       4       0       0       0
  4626 ;;      Locals:         0       2       0       0       0
  4627 ;;      Temps:          1       0       0       0       0
  4628 ;;      Totals:         1       6       0       0       0
  4629 ;;Total ram usage:        7 bytes
  4630 ;; Hardware stack levels used:    1
  4631 ;; Hardware stack levels required when called:    1
  4632 ;; This function calls:
  4633 ;;		Nothing
  4634 ;; This function is called by:
  4635 ;;		_main
  4636 ;;		_checkBottom
  4637 ;;		_checkColission_D
  4638 ;;		_perdio
  4639 ;; This function uses a non-reentrant model
  4640 ;;
  4641                           
  4642                           
  4643                           ;psect for function ___awmod
  4644  0381                     ___awmod:	
  4645  0381                     l1493:	
  4646                           ;incstack = 0
  4647                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4648                           
  4649  0381  1283               	bcf	3,5	;RP0=0, select bank0
  4650  0382  1303               	bcf	3,6	;RP1=0, select bank0
  4651  0383  01B0               	clrf	___awmod@sign
  4652  0384                     l1495:	
  4653  0384  1FAE               	btfss	___awmod@dividend+1,7
  4654  0385  2B87               	goto	u941
  4655  0386  2B88               	goto	u940
  4656  0387                     u941:	
  4657  0387  2B8F               	goto	l1501
  4658  0388                     u940:	
  4659  0388                     l1497:	
  4660  0388  09AD               	comf	___awmod@dividend,f
  4661  0389  09AE               	comf	___awmod@dividend+1,f
  4662  038A  0AAD               	incf	___awmod@dividend,f
  4663  038B  1903               	skipnz
  4664  038C  0AAE               	incf	___awmod@dividend+1,f
  4665  038D                     l1499:	
  4666  038D  01B0               	clrf	___awmod@sign
  4667  038E  0AB0               	incf	___awmod@sign,f
  4668  038F                     l1501:	
  4669  038F  1FAC               	btfss	___awmod@divisor+1,7
  4670  0390  2B92               	goto	u951
  4671  0391  2B93               	goto	u950
  4672  0392                     u951:	
  4673  0392  2B98               	goto	l1505
  4674  0393                     u950:	
  4675  0393                     l1503:	
  4676  0393  09AB               	comf	___awmod@divisor,f
  4677  0394  09AC               	comf	___awmod@divisor+1,f
  4678  0395  0AAB               	incf	___awmod@divisor,f
  4679  0396  1903               	skipnz
  4680  0397  0AAC               	incf	___awmod@divisor+1,f
  4681  0398                     l1505:	
  4682  0398  082B               	movf	___awmod@divisor,w
  4683  0399  042C               	iorwf	___awmod@divisor+1,w
  4684  039A  1903               	btfsc	3,2
  4685  039B  2B9D               	goto	u961
  4686  039C  2B9E               	goto	u960
  4687  039D                     u961:	
  4688  039D  2BCD               	goto	l1523
  4689  039E                     u960:	
  4690  039E                     l1507:	
  4691  039E  01AF               	clrf	___awmod@counter
  4692  039F  0AAF               	incf	___awmod@counter,f
  4693  03A0  2BAC               	goto	l1513
  4694  03A1                     l1509:	
  4695  03A1  3001               	movlw	1
  4696  03A2                     u975:	
  4697  03A2  1003               	clrc
  4698  03A3  0DAB               	rlf	___awmod@divisor,f
  4699  03A4  0DAC               	rlf	___awmod@divisor+1,f
  4700  03A5  3EFF               	addlw	-1
  4701  03A6  1D03               	skipz
  4702  03A7  2BA2               	goto	u975
  4703  03A8                     l1511:	
  4704  03A8  3001               	movlw	1
  4705  03A9  00FB               	movwf	??___awmod
  4706  03AA  087B               	movf	??___awmod,w
  4707  03AB  07AF               	addwf	___awmod@counter,f
  4708  03AC                     l1513:	
  4709  03AC  1FAC               	btfss	___awmod@divisor+1,7
  4710  03AD  2BAF               	goto	u981
  4711  03AE  2BB0               	goto	u980
  4712  03AF                     u981:	
  4713  03AF  2BA1               	goto	l1509
  4714  03B0                     u980:	
  4715  03B0                     l1515:	
  4716  03B0  082C               	movf	___awmod@divisor+1,w
  4717  03B1  022E               	subwf	___awmod@dividend+1,w
  4718  03B2  1D03               	skipz
  4719  03B3  2BB6               	goto	u995
  4720  03B4  082B               	movf	___awmod@divisor,w
  4721  03B5  022D               	subwf	___awmod@dividend,w
  4722  03B6                     u995:	
  4723  03B6  1C03               	skipc
  4724  03B7  2BB9               	goto	u991
  4725  03B8  2BBA               	goto	u990
  4726  03B9                     u991:	
  4727  03B9  2BC0               	goto	l1519
  4728  03BA                     u990:	
  4729  03BA                     l1517:	
  4730  03BA  082B               	movf	___awmod@divisor,w
  4731  03BB  02AD               	subwf	___awmod@dividend,f
  4732  03BC  082C               	movf	___awmod@divisor+1,w
  4733  03BD  1C03               	skipc
  4734  03BE  03AE               	decf	___awmod@dividend+1,f
  4735  03BF  02AE               	subwf	___awmod@dividend+1,f
  4736  03C0                     l1519:	
  4737  03C0  3001               	movlw	1
  4738  03C1                     u1005:	
  4739  03C1  1003               	clrc
  4740  03C2  0CAC               	rrf	___awmod@divisor+1,f
  4741  03C3  0CAB               	rrf	___awmod@divisor,f
  4742  03C4  3EFF               	addlw	-1
  4743  03C5  1D03               	skipz
  4744  03C6  2BC1               	goto	u1005
  4745  03C7                     l1521:	
  4746  03C7  3001               	movlw	1
  4747  03C8  02AF               	subwf	___awmod@counter,f
  4748  03C9  1D03               	btfss	3,2
  4749  03CA  2BCC               	goto	u1011
  4750  03CB  2BCD               	goto	u1010
  4751  03CC                     u1011:	
  4752  03CC  2BB0               	goto	l1515
  4753  03CD                     u1010:	
  4754  03CD                     l1523:	
  4755  03CD  0830               	movf	___awmod@sign,w
  4756  03CE  1903               	btfsc	3,2
  4757  03CF  2BD1               	goto	u1021
  4758  03D0  2BD2               	goto	u1020
  4759  03D1                     u1021:	
  4760  03D1  2BD7               	goto	l1527
  4761  03D2                     u1020:	
  4762  03D2                     l1525:	
  4763  03D2  09AD               	comf	___awmod@dividend,f
  4764  03D3  09AE               	comf	___awmod@dividend+1,f
  4765  03D4  0AAD               	incf	___awmod@dividend,f
  4766  03D5  1903               	skipnz
  4767  03D6  0AAE               	incf	___awmod@dividend+1,f
  4768  03D7                     l1527:	
  4769  03D7  082E               	movf	___awmod@dividend+1,w
  4770  03D8  00AC               	movwf	?___awmod+1
  4771  03D9  082D               	movf	___awmod@dividend,w
  4772  03DA  00AB               	movwf	?___awmod
  4773  03DB                     l527:	
  4774  03DB  0008               	return
  4775  03DC                     __end_of___awmod:	
  4776                           
  4777                           	psect	text30
  4778  06A5                     __ptext30:	
  4779 ;; *************** function _Timer0_ISR *****************
  4780 ;; Defined at:
  4781 ;;		line 160 in file "mainsource.c"
  4782 ;; Parameters:    Size  Location     Type
  4783 ;;		None
  4784 ;; Auto vars:     Size  Location     Type
  4785 ;;		None
  4786 ;; Return value:  Size  Location     Type
  4787 ;;                  1    wreg      void 
  4788 ;; Registers used:
  4789 ;;		wreg, status,2
  4790 ;; Tracked objects:
  4791 ;;		On entry : 0/0
  4792 ;;		On exit  : 0/0
  4793 ;;		Unchanged: 0/0
  4794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4795 ;;      Params:         0       0       0       0       0
  4796 ;;      Locals:         0       0       0       0       0
  4797 ;;      Temps:          2       0       0       0       0
  4798 ;;      Totals:         2       0       0       0       0
  4799 ;;Total ram usage:        2 bytes
  4800 ;; Hardware stack levels used:    1
  4801 ;; This function calls:
  4802 ;;		Nothing
  4803 ;; This function is called by:
  4804 ;;		Interrupt level 1
  4805 ;; This function uses a non-reentrant model
  4806 ;;
  4807                           
  4808                           
  4809                           ;psect for function _Timer0_ISR
  4810  06A5                     _Timer0_ISR:	
  4811  06A5                     i1l1849:	
  4812                           
  4813                           ;mainsource.c: 161:     if(INTCONbits.TMR0IF){
  4814  06A5  1D0B               	btfss	11,2	;volatile
  4815  06A6  2EA8               	goto	u138_21
  4816  06A7  2EA9               	goto	u138_20
  4817  06A8                     u138_21:	
  4818  06A8  2EBC               	goto	i1l1857
  4819  06A9                     u138_20:	
  4820  06A9                     i1l1851:	
  4821                           
  4822                           ;mainsource.c: 162:         INTCONbits.TMR0IF=0;
  4823  06A9  110B               	bcf	11,2	;volatile
  4824  06AA                     i1l1853:	
  4825                           
  4826                           ;mainsource.c: 163:         timerCount ++;
  4827  06AA  3001               	movlw	1
  4828  06AB  1283               	bcf	3,5	;RP0=0, select bank0
  4829  06AC  1303               	bcf	3,6	;RP1=0, select bank0
  4830  06AD  07D3               	addwf	_timerCount,f
  4831  06AE  3000               	movlw	0
  4832  06AF  1803               	skipnc
  4833  06B0  3001               	movlw	1
  4834  06B1  07D4               	addwf	_timerCount+1,f
  4835  06B2  3000               	movlw	0
  4836  06B3  1803               	skipnc
  4837  06B4  3001               	movlw	1
  4838  06B5  07D5               	addwf	_timerCount+2,f
  4839  06B6  3000               	movlw	0
  4840  06B7  1803               	skipnc
  4841  06B8  3001               	movlw	1
  4842  06B9  07D6               	addwf	_timerCount+3,f
  4843  06BA                     i1l1855:	
  4844                           
  4845                           ;mainsource.c: 164:         con.check_count = 1;
  4846  06BA  01CC               	clrf	_con+7
  4847  06BB  0ACC               	incf	_con+7,f
  4848  06BC                     i1l1857:	
  4849                           
  4850                           ;mainsource.c: 167:     if(PORTBbits.RB5 == 0){
  4851  06BC  1283               	bcf	3,5	;RP0=0, select bank0
  4852  06BD  1303               	bcf	3,6	;RP1=0, select bank0
  4853  06BE  1A86               	btfsc	6,5	;volatile
  4854  06BF  2EC1               	goto	u139_21
  4855  06C0  2EC2               	goto	u139_20
  4856  06C1                     u139_21:	
  4857  06C1  2EC5               	goto	i1l1863
  4858  06C2                     u139_20:	
  4859  06C2                     i1l1859:	
  4860                           
  4861                           ;mainsource.c: 168:         con.derecha = 1;
  4862  06C2  01CA               	clrf	_con+5
  4863  06C3  0ACA               	incf	_con+5,f
  4864  06C4                     i1l1861:	
  4865                           
  4866                           ;mainsource.c: 169:         con.izquierda = 0;
  4867  06C4  01CB               	clrf	_con+6
  4868  06C5                     i1l1863:	
  4869                           
  4870                           ;mainsource.c: 171:     if(PORTBbits.RB4 == 0){
  4871  06C5  1A06               	btfsc	6,4	;volatile
  4872  06C6  2EC8               	goto	u140_21
  4873  06C7  2EC9               	goto	u140_20
  4874  06C8                     u140_21:	
  4875  06C8  2ECC               	goto	i1l1869
  4876  06C9                     u140_20:	
  4877  06C9                     i1l1865:	
  4878                           
  4879                           ;mainsource.c: 172:         con.derecha = 0;
  4880  06C9  01CA               	clrf	_con+5
  4881  06CA                     i1l1867:	
  4882                           
  4883                           ;mainsource.c: 173:         con.izquierda = 1;
  4884  06CA  01CB               	clrf	_con+6
  4885  06CB  0ACB               	incf	_con+6,f
  4886  06CC                     i1l1869:	
  4887                           
  4888                           ;mainsource.c: 175:     if(PORTBbits.RB3== 0){
  4889  06CC  1986               	btfsc	6,3	;volatile
  4890  06CD  2ECF               	goto	u141_21
  4891  06CE  2ED0               	goto	u141_20
  4892  06CF                     u141_21:	
  4893  06CF  2ED2               	goto	i1l129
  4894  06D0                     u141_20:	
  4895  06D0                     i1l1871:	
  4896                           
  4897                           ;mainsource.c: 176:         con.girar = 1;
  4898  06D0  01C5               	clrf	_con
  4899  06D1  0AC5               	incf	_con,f
  4900  06D2                     i1l129:	
  4901  06D2  0871               	movf	??_Timer0_ISR+1,w
  4902  06D3  008A               	movwf	10
  4903  06D4  0E70               	swapf	??_Timer0_ISR^(0+4294967168),w
  4904  06D5  0083               	movwf	3
  4905  06D6  0EFE               	swapf	btemp,f
  4906  06D7  0E7E               	swapf	btemp,w
  4907  06D8  0009               	retfie
  4908  06D9                     __end_of_Timer0_ISR:	
  4909  007E                     btemp	set	126	;btemp
  4910  007E                     wtemp0	set	126
  4911                           
  4912                           	psect	intentry
  4913  0004                     __pintentry:	
  4914                           ;incstack = 0
  4915                           ; Regs used in _Timer0_ISR: [wreg+status,2]
  4916                           
  4917  0004                     interrupt_function:	
  4918  007E                     saved_w	set	btemp
  4919  0004  00FE               	movwf	btemp
  4920  0005  0E03               	swapf	3,w
  4921  0006  00F0               	movwf	??_Timer0_ISR
  4922  0007  080A               	movf	10,w
  4923  0008  00F1               	movwf	??_Timer0_ISR+1
  4924  0009  120A  118A  2EA5   	ljmp	_Timer0_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         66
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     41      79
    BANK1            80      0      60
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(1) Largest target is 16
		 -> fondo(BANK1[16]), ficha(BANK0[16]), 

    memset@p	PTR unsigned char  size(1) Largest target is 16
		 -> fondo(BANK1[16]), ficha(BANK0[16]), 

    sp__memset	PTR void  size(1) Largest target is 16
		 -> fondo(BANK1[16]), ficha(BANK0[16]), 

    updateScreen@screen	PTR unsigned int  size(1) Largest target is 16
		 -> pantalla(BANK1[16]), 


Critical Paths under _main in COMMON

    _main->___awmod
    _updateScreen->_setFilas
    _perdio->___awmod
    _leerEntradas->_checkColission_L
    _leerEntradas->_checkColission_R
    _drawFigure->_memset
    _checkColission_D->___awmod
    _checkBottom->___awmod
    _rand->___lmul

Critical Paths under _Timer0_ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_checkCount
    _updateScreen->_addToScreen
    _checkCount->_checkColission_D
    _perdio->___awmod
    _leerEntradas->_drawFigure
    _checkColission_D->___awmod
    _checkBottom->___awmod
    _rand->___lmul
    ___awmod->_rand

Critical Paths under _Timer0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer0_ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     5      4    8750
                                             32 BANK0      9     5      4
                            ___awmod
                         _checkCount
                         _init_pines
                         _init_timer
                               _rand
                              _srand
                       _updateScreen
 ---------------------------------------------------------------------------------
 (1) _updateScreen                                         7     7      0     590
                                              2 BANK0      7     7      0
                        _addToScreen
                           _setFilas
                    _shiftBitColumna
 ---------------------------------------------------------------------------------
 (2) _shiftBitColumna                                      2     2      0      22
                                              2 COMMON     2     2      0
                     _latchClock_Col
                     _latchClock_Fil
                     _shiftClock_Col
 ---------------------------------------------------------------------------------
 (3) _shiftClock_Col                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _latchClock_Fil                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _latchClock_Col                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setFilas                                            10     8      2     265
                                              2 COMMON    10     8      2
                     _shiftClock_Fil
 ---------------------------------------------------------------------------------
 (3) _shiftClock_Fil                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _addToScreen                                         11    11      0     113
                                              2 COMMON     9     9      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_pines                                           0     0      0       0
                     _init_pines_col
                     _init_pines_fil
                      _init_pines_in
 ---------------------------------------------------------------------------------
 (2) _init_pines_in                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_pines_fil                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_pines_col                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkCount                                           5     5      0    6912
                                             27 BANK0      5     5      0
                        _checkBottom
                   _checkColission_D
                         _drawFigure
                       _leerEntradas
                             _perdio
                         _sumaPuntos
 ---------------------------------------------------------------------------------
 (2) _sumaPuntos                                           9     9      0     184
                                              2 COMMON     9     9      0
 ---------------------------------------------------------------------------------
 (2) _perdio                                               5     5      0    1868
                                             17 BANK0      5     5      0
                            ___awmod
                             _memset
                               _rand
 ---------------------------------------------------------------------------------
 (2) _leerEntradas                                        16    16      0    1616
                                              5 BANK0     16    16      0
                   _checkColission_L
                   _checkColission_R
                         _checkRight
                         _drawFigure
 ---------------------------------------------------------------------------------
 (3) _drawFigure                                           5     5      0     651
                                              0 BANK0      5     5      0
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               7     3      4     651
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) _checkRight                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _checkColission_R                                    10    10      0      69
                                              2 COMMON    10    10      0
 ---------------------------------------------------------------------------------
 (3) _checkColission_L                                    10    10      0      69
                                              2 COMMON    10    10      0
 ---------------------------------------------------------------------------------
 (2) _checkColission_D                                    10    10      0    1330
                                             17 BANK0     10    10      0
                            ___awmod
                        _drawBground
                               _rand
 ---------------------------------------------------------------------------------
 (2) _checkBottom                                          1     1      0    1261
                                             17 BANK0      1     1      0
                            ___awmod
                        _drawBground
                               _rand
 ---------------------------------------------------------------------------------
 (1) _rand                                                 7     5      2     244
                                              4 BANK0      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     244
                                              2 COMMON     9     1      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _drawBground                                         11    11      0     113
                                              2 COMMON     9     9      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     904
                                             11 COMMON     1     1      0
                                             11 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Timer0_ISR                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awmod
     _rand (ARG)
       ___lmul
   _checkCount
     _checkBottom
       ___awmod
         _rand (ARG)
           ___lmul
       _drawBground
       _rand
         ___lmul
     _checkColission_D
       ___awmod
         _rand (ARG)
           ___lmul
       _drawBground
       _rand
         ___lmul
     _drawFigure
       _memset
     _leerEntradas
       _checkColission_L
       _checkColission_R
       _checkRight
       _drawFigure
         _memset
     _perdio
       ___awmod
         _rand (ARG)
           ___lmul
       _memset
       _rand
         ___lmul
     _sumaPuntos
   _init_pines
     _init_pines_col
     _init_pines_fil
     _init_pines_in
   _init_timer
   _rand
     ___lmul
   _srand
   _updateScreen
     _addToScreen
     _setFilas
       _shiftClock_Fil
     _shiftBitColumna
       _latchClock_Col
       _latchClock_Fil
       _shiftClock_Col

 _Timer0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      3C       7       75.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     29      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      97      12        0.0%
ABS                  0      0      97       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu May 14 21:55:01 2020

                        pc 0002                __CFG_CP$OFF 0000                         l21 07E7  
                       l30 0797                         l24 07B2                         l27 0787  
                       l36 07A5               drawBground@i 0020                         fsr 0004  
         ??_init_pines_col 0072           ??_init_pines_fil 0072                        l110 01A4  
                      l200 0241                        l120 042A                        l220 0709  
                      l142 0622                        l134 07DB                        l231 02B7  
                      l224 07BE                        l152 07D5                        l160 0761  
                      l241 045E                        l137 07E1                        l234 05CF  
                      l227 02A2                        l244 0476                        l237 05DF  
                      l149 07EC                        l192 0663                        l267 031D  
                      l275 0554                        l187 0380                        l197 06A4  
                      l527 03DB                        l375 04C2                        l814 07C7  
                      l817 059B                        l809 0729               __CFG_CPD$OFF 0000  
                      u730 0729                        u731 0728                        u740 0485  
                      u900 07BB                        u741 0484                        u901 07BA  
                      u805 01BB                        u910 0456                        u814 01CC  
                      u751 0490                        u911 0455                        u815 01C9  
                      u752 0497                        u920 0475                        u753 049E  
                      u921 0474                        u825 01DF                        u930 06A4  
                      u834 01EF                        u931 06A3                        u835 01EC  
                      u940 0388                        u780 04B8                        u941 0387  
                      u781 04B7                        u765 04A0                        u925 0471  
                      u845 0202                        u950 0393                        u790 0593  
                      u854 0212                        u951 0392                        u935 06A0  
                      u775 04A8                        u855 020F                        u960 039E  
                      u880 05C7                        u961 039D                        u881 05C6  
                      u865 0225                        u890 05DE                        u874 0235  
                      u795 058E                        u891 05DD                        u875 0232  
                      u980 03B0                        u981 03AF                        u990 03BA  
                      u991 03B9                        u975 03A2                        u895 05DA  
                      u995 03B6                        _con 0045                        fsr0 0004  
                      indf 0000               ___awmod@sign 0030               __CFG_FOSC$XT 0000  
             __CFG_LVP$OFF 0000                       l1401 0481                       l1403 0485  
                     l1501 038F                       l1405 049E                       l1413 0555  
                     l1421 01A5                       l1511 03A8                       l1503 0393  
                     l1407 04A7                       l1415 0576                       l1431 059C  
                     l1423 01B2                       l1521 03C7                       l1513 03AC  
                     l1505 0398                       l1409 04B8                       l1417 0584  
                     l1441 05C9                       l1433 059C                       l1425 01D8  
                     l1601 0127                       l1515 03B0                       l1507 039E  
                     l1523 03CD                       l1443 05DE                       l1435 05A6  
                     l1427 01FB                       l1611 0136                       l1603 0133  
                     l1531 07E2                       l1525 03D2                       l1517 03BA  
                     l1509 03A1                       l1461 0435                       l1437 05C7  
                     l1453 07BD                       l1429 021E                       l1613 0150  
                     l1605 0134                       l1621 0169                       l1541 004C  
                     l1533 07A6                       l1527 03D7                       l1519 03C0  
                     l1463 0456                       l1447 07B3                       l1391 070B  
                     l1623 016E                       l1615 0156                       l1551 0054  
                     l1543 004C                       l1711 0516                       l1535 0775  
                     l1481 0664                       l1457 042B                       l1449 07BB  
                     l1393 0710                       l1641 0193                       l1625 016F  
                     l1617 0163                       l1561 0095                       l1545 0051  
                     l1537 003E                       l1721 0547                       l1713 052E  
                     l1705 0514                       l1801 0425                       l1473 07D6  
                     l1491 0697                       l1467 0458                       l1459 042B  
                     l1395 0717                       l1643 0194                       l1563 00A2  
                     l1539 0044                       l1715 0534                       l1475 07DC  
                     l1731 0616                       l1723 05E0                       l1803 0321  
                     l1493 0381                       l1661 06EF                       l1653 06D9  
                     l1469 0475                       l1397 071B                       l1629 0184  
                     l1637 0189                       l1573 00BC                       l1565 00AA  
                     l1557 0058                       l1733 061B                       l1725 05E4  
                     l1477 07E8                       l1741 0757                       l1821 0365  
                     l1813 032A                       l1805 0321                       l1495 0384  
                     l1487 066A                       l1399 0477                       l1655 06E0  
                     l1671 0277                       l1663 0242                       l1647 019F  
                     l1639 018E                       l1591 00F3                       l1567 00B8  
                     l1559 008F                       l1719 0541                       l1751 0629  
                     l1479 07D0                       l1743 075C                       l1823 036B  
                     l1815 0332                       l1807 0326                       l1831 04CD  
                     l1497 0388                       l1489 0691                       l1657 06E5  
                     l1673 027D                       l1665 0242                       l1593 00FB  
                     l1585 00D0                       l1577 00C7                       l1761 079B  
                     l1753 0650                       l1745 0623                       l1729 05F2  
                     l1737 0747                       l1825 0373                       l1817 0348  
                     l1841 04DA                       l1833 04CD                       l1499 038D  
                     l1659 06EB                       l1675 0281                       l1667 024C  
                     l1587 00E0                       l1579 00CE                       l1595 0108  
                     l1691 02EF                       l1771 07A2                       l1763 079C  
                     l1755 0656                       l1739 0752                       l1819 034F  
                     l1843 04E3                       l1835 04D0                       l1827 04C3  
                     l1669 0272                       l1677 029C                       l1589 00E6  
                     l1597 0110                       l1693 030A                       l1685 02BE  
                     l1781 03E3                       l1757 0788                       l1773 07A3  
                     l1765 079D                       l1845 04FF                       l1837 04D4  
                     l1829 04CD                       l1599 011F                       l1695 0310  
                     l1687 02CF                       l1679 02B8                       l1791 040B  
                     l1783 03E6                       l1775 07A4                       l1767 079E  
                     l1759 0798                       l1847 0504                       l1839 04D8  
                     l1689 02E9                       l1697 050E                       l1793 0411  
                     l1785 03EB                       l1769 07A1                       l1777 07BF  
                     l1699 0510                       l1795 0416                       l1787 03FE  
                     l1779 03DC                       l1797 041B                       l1789 0406  
                     l1799 0420                       u1010 03CD                       u1011 03CC  
                     u1020 03D2                       u1100 00CE                       u1021 03D1  
                     u1005 03C1                       u1101 00CD                       u1110 00F3  
                     u1030 0051                       u1111 00F2                       u1031 0050  
                     u1200 0193                       u1120 0108                       u1201 0192  
                     u1121 0107                       u1210 019E                       u1130 011F  
                     u1211 019D                       u1131 011E                       u1115 00EF  
                     u1220 06E0                       u1140 0127                       u1300 05F1  
                     u1221 06DF                       u1141 0126                       u1125 0104  
                     u1045 005D                       u1301 05F0                       u1230 0272  
                     u1070 00A2                       u1054 0071                       u1231 0271  
                     u1135 011B                       u1071 00A1                       u1055 006F  
                     u1240 02B7                       u1160 0163                       u1080 00B7  
                     u1064 0084                       u1241 02B6                       u1161 0162  
                     u1081 00B6                       u1065 0082                       u1305 05ED  
                     u1170 016E                       u1090 00C6                       u1250 02CF  
                     u1330 0663                       u1314 05FC                       u1171 016D  
                     u1155 0141                       u1091 00C5                       u1075 009E  
                     u1251 02CE                       u1331 0662                       u1315 05F9  
                     u1180 0183                       u1260 031D                       u1340 03E3  
                     u1324 0609                       u1245 02B3                       u1181 0182  
                     u1165 015F                       u1085 00B3                       u1261 031C  
                     u1341 03E2                       u1325 0606                       u1190 018E  
                     u1350 03FE                       u1191 018D                       u1351 03FD  
                     u1335 065F                       u1280 0541                       u1360 0332  
                     u1265 0319                       u1281 0540                       u1353 03FA  
                     u1361 0331                       u1290 0554                       u1274 0526  
                     u1370 0380                       u1291 0553                       u1275 0523  
                     u1371 037F                       u1285 053D                       u1295 0550  
                     u1375 037C                       _TMR0 0001              ?_leerEntradas 0070  
             __CFG_WRT$OFF 0000                       _main 04C3                       _rand 0555  
                     btemp 007E              __CFG_BOREN$ON 0000                       start 000C  
       shiftBitColumna@bit 0073                      ?_main 0040                      ?_rand 0024  
            __CFG_WDTE$OFF 0000            __end_of___awmod 03DC                      i1l129 06D2  
     __size_of_checkBottom 0031        ___lmul@multiplicand 0076                      _ficha 0057  
                    _fondo 00A0                      _randx 0067                      _srand 07BF  
           ??_leerEntradas 0025                      pclath 000A                      status 0003  
                    wtemp0 007E            __initialization 000F               __end_of_main 050E  
             __end_of_rand 059C             _latchClock_Fil 07D6             _latchClock_Col 07E8  
  __size_of_shiftClock_Fil 0006    __size_of_shiftClock_Col 0006          checkColission_D@i 0039  
        checkColission_L@i 007A                     ??_main 0044          checkColission_R@i 007A  
                   ??_rand 0026                     ?_srand 0072                     i1l1851 06A9  
                   i1l1861 06C4                     i1l1853 06AA                     i1l1871 06D0  
                   i1l1863 06C5                     i1l1855 06BA                     i1l1865 06C9  
                   i1l1857 06BC                     i1l1849 06A5                     i1l1867 06CA  
                   i1l1859 06C2                     i1l1869 06CC                     u140_20 06C9  
                   u140_21 06C8                     u141_20 06D0                     u141_21 06CF  
                   u138_20 06A9                     u138_21 06A8                     u139_20 06C2  
                   u139_21 06C1             __CFG_PWRTE$OFF 0000       __size_of_drawBground 0041  
               _Timer0_ISR 06A5     __end_of_latchClock_Col 07ED     __end_of_latchClock_Fil 07DC  
                   ___lmul 0477                  ??___awmod 007B          ?_checkColission_D 0070  
        ?_checkColission_L 0070          ?_checkColission_R 0070                     _memset 070A  
                   _perdio 02B8            ___awmod@divisor 002B            ___awmod@counter 002F  
       ??_checkColission_D 0031         ??_checkColission_L 0072           __end_of_setFilas 0623  
       ??_checkColission_R 0072               addToScreen@i 0020     __size_of_init_pines_in 0006  
                   saved_w 007E                     srand@x 0072    __end_of__initialization 003A  
            updateScreen@i 0027   __size_of_shiftBitColumna 001C         updateScreen@screen 0026  
          ?_latchClock_Col 0070            ?_latchClock_Fil 0070             __pcstackCOMMON 0070  
             __pidataBANK0 07ED               __pidataBANK1 072A              __end_of_srand 07C8  
     __end_of_leerEntradas 01A5             _OPTION_REGbits 0081          leerEntradas@F1199 004F  
               _checkCount 03DC                    ??_srand 0074                 _checkRight 07B3  
               __pbssBANK0 0045                 __pbssBANK1 00A0              ??_addToScreen 0072  
            _init_pines_in 07E2                ?_Timer0_ISR 0070            leerEntradas@aux 002D  
            leerEntradas@i 0033              leerEntradas@j 0031              leerEntradas@k 002A  
               __pmaintext 04C3                    ?___lmul 0072                 __pintentry 0004  
           _shiftClock_Fil 07DC             _shiftClock_Col 07D0                    ?_memset 0072  
           ___lmul@product 0020                    ?_perdio 0070                 _drawFigure 01A5  
           ?_init_pines_in 0070                  ?_setFilas 0072     __end_of_shiftClock_Fil 07E2  
   __end_of_shiftClock_Col 07D6        __end_of_addToScreen 0664            __size_of___lmul 004C  
                  ___awmod 0381          ??_shiftBitColumna 0072              ??_checkBottom 0031  
               _init_pines 0788                 _init_timer 0798            __size_of_memset 0020  
          __size_of_perdio 0066                    __ptext1 031E                    __ptext2 0746  
                  __ptext3 07D0                    __ptext4 07D6                    __ptext5 07E8  
                  __ptext6 05E0                    __ptext7 07DC                    __ptext8 0623  
                  __ptext9 07BF                    _figuras 00C0           ___awmod@dividend 002D  
      __size_of_Timer0_ISR 0034                    clrloop0 07C9                ?_checkCount 0070  
              ?_checkRight 0070       end_of_initialization 003A    __size_of_init_pines_col 0013  
  __size_of_init_pines_fil 000D                    memset@c 0072                    memset@n 0074  
                  memset@p 0077                    perdio@i 0034                 ??_setFilas 0074  
    __size_of_leerEntradas 0167              sumaPuntos@aux 0076            ?_shiftClock_Col 0070  
          ?_shiftClock_Fil 0070                 _timerCount 0053                  _PORTBbits 0006  
                _PORTCbits 0007                  _PORTDbits 0008                ?_drawFigure 0070  
                _TRISBbits 0086        __end_of_checkBottom 070A                  _TRISCbits 0087  
                _TRISDbits 0088  __size_of_checkColission_D 0076  __size_of_checkColission_L 004C  
__size_of_checkColission_R 0044            ??_init_pines_in 0072                 _sumaPuntos 050E  
             _leerEntradas 003E              ??_drawBground 0072           ??_latchClock_Col 0072  
         ??_latchClock_Fil 0072                _addToScreen 0623              ?_updateScreen 0070  
           __end_of___lmul 04C3        __size_of_checkCount 004F                ?_init_pines 0070  
      __size_of_checkRight 000C                ?_init_timer 0070             __end_of_memset 072A  
           __end_of_perdio 031E        start_initialization 000F             ??_updateScreen 0022  
             ??_Timer0_ISR 0070        __size_of_drawFigure 009D        __end_of_drawBground 06A5  
                 ??___lmul 007A          setFilas@reg_value 0072                 init_fetch0 0762  
              __pdataBANK0 0067                __pdataBANK1 00C0                   ??_memset 0076  
                 ??_perdio 0031                sumaPuntos@i 0077                sumaPuntos@j 0079  
              _checkBottom 06D9                  ___latbits 0002              __pcstackBANK0 0020  
       __end_of_Timer0_ISR 06D9             _init_pines_fil 07A6             _init_pines_col 0775  
              ?_sumaPuntos 0070        __size_of_init_pines 0010            _shiftBitColumna 0746  
      __size_of_init_timer 000E           leerEntradas@mask 002C          __size_of_setFilas 0043  
                 ?___awmod 002B     __end_of_init_pines_col 0788     __end_of_init_pines_fil 07B3  
             ??_checkCount 003B           _checkColission_D 0242           _checkColission_L 042B  
         _checkColission_R 059C               ??_checkRight 0072             __size_of_srand 0009  
        interrupt_function 0004                _drawBground 0664           ??_shiftClock_Col 0072  
         ??_shiftClock_Fil 0072                  clear_ram0 07C8         __end_of_checkCount 042B  
      __size_of_sumaPuntos 0047         __end_of_checkRight 07BF               ??_drawFigure 0020  
     __end_of_updateScreen 0381            ?_init_pines_col 0070            ?_init_pines_fil 0070  
  __end_of_shiftBitColumna 0762          ___lmul@multiplier 0072               ?_addToScreen 0070  
              checkCount@j 003E         __end_of_drawFigure 0242           __size_of___awmod 005B  
             ??_init_pines 0072               ??_init_timer 0072                  setFilas@i 007A  
                 __ptext10 0798                   __ptext11 0788                   __ptext20 070A  
                 __ptext12 07E2                   __ptext21 07B3                   __ptext13 07A6  
                 __ptext30 06A5                   __ptext22 059C                   __ptext14 0775  
                 __ptext23 042B                   __ptext15 03DC                   __ptext24 0242  
                 __ptext16 050E                   __ptext25 06D9                   __ptext17 02B8  
                 __ptext26 0555                   __ptext18 003E                   __ptext27 0477  
                 __ptext19 01A5                   __ptext28 0664                   __ptext29 0381  
    __end_of_init_pines_in 07E8              __size_of_main 004B              __size_of_rand 0047  
       __end_of_init_pines 0798         __end_of_init_timer 07A6                   _pantalla 00B0  
                 _setFilas 05E0                   main@argc 0040                   main@argv 0042  
             ?_checkBottom 0070                 _INTCONbits 000B                   init_ram0 0766  
                 memset@p1 0078           ?_shiftBitColumna 0070               ??_sumaPuntos 0072  
                 intlevel1 0000   __end_of_checkColission_D 02B8   __end_of_checkColission_L 0477  
 __end_of_checkColission_R 05E0    __size_of_latchClock_Col 0005    __size_of_latchClock_Fil 0006  
    __size_of_updateScreen 0063         __end_of_sumaPuntos 0555               ?_drawBground 0070  
     __size_of_addToScreen 0041               _updateScreen 031E  
