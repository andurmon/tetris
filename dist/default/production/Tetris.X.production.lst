

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat May 02 00:06:18 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 2.10
    37                           ; Generated 31/07/2019 GMT
    38                           ; 
    39                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F877A Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0008                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000D                     	;# 
    84  000E                     	;# 
    85  000E                     	;# 
    86  000F                     	;# 
    87  0010                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0013                     	;# 
    91  0014                     	;# 
    92  0015                     	;# 
    93  0015                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001B                     	;# 
   100  001B                     	;# 
   101  001C                     	;# 
   102  001D                     	;# 
   103  001E                     	;# 
   104  001F                     	;# 
   105  0081                     	;# 
   106  0085                     	;# 
   107  0086                     	;# 
   108  0087                     	;# 
   109  0088                     	;# 
   110  0089                     	;# 
   111  008C                     	;# 
   112  008D                     	;# 
   113  008E                     	;# 
   114  0091                     	;# 
   115  0092                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  009F                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0098                     	;# 
   179  0099                     	;# 
   180  009C                     	;# 
   181  009D                     	;# 
   182  009E                     	;# 
   183  009F                     	;# 
   184  010C                     	;# 
   185  010D                     	;# 
   186  010E                     	;# 
   187  010F                     	;# 
   188  018C                     	;# 
   189  018D                     	;# 
   190  0000                     	;# 
   191  0001                     	;# 
   192  0002                     	;# 
   193  0003                     	;# 
   194  0004                     	;# 
   195  0005                     	;# 
   196  0006                     	;# 
   197  0007                     	;# 
   198  0008                     	;# 
   199  0009                     	;# 
   200  000A                     	;# 
   201  000B                     	;# 
   202  000C                     	;# 
   203  000D                     	;# 
   204  000E                     	;# 
   205  000E                     	;# 
   206  000F                     	;# 
   207  0010                     	;# 
   208  0011                     	;# 
   209  0012                     	;# 
   210  0013                     	;# 
   211  0014                     	;# 
   212  0015                     	;# 
   213  0015                     	;# 
   214  0016                     	;# 
   215  0017                     	;# 
   216  0018                     	;# 
   217  0019                     	;# 
   218  001A                     	;# 
   219  001B                     	;# 
   220  001B                     	;# 
   221  001C                     	;# 
   222  001D                     	;# 
   223  001E                     	;# 
   224  001F                     	;# 
   225  0081                     	;# 
   226  0085                     	;# 
   227  0086                     	;# 
   228  0087                     	;# 
   229  0088                     	;# 
   230  0089                     	;# 
   231  008C                     	;# 
   232  008D                     	;# 
   233  008E                     	;# 
   234  0091                     	;# 
   235  0092                     	;# 
   236  0093                     	;# 
   237  0094                     	;# 
   238  0098                     	;# 
   239  0099                     	;# 
   240  009C                     	;# 
   241  009D                     	;# 
   242  009E                     	;# 
   243  009F                     	;# 
   244  010C                     	;# 
   245  010D                     	;# 
   246  010E                     	;# 
   247  010F                     	;# 
   248  018C                     	;# 
   249  018D                     	;# 
   250  0000                     	;# 
   251  0001                     	;# 
   252  0002                     	;# 
   253  0003                     	;# 
   254  0004                     	;# 
   255  0005                     	;# 
   256  0006                     	;# 
   257  0007                     	;# 
   258  0008                     	;# 
   259  0009                     	;# 
   260  000A                     	;# 
   261  000B                     	;# 
   262  000C                     	;# 
   263  000D                     	;# 
   264  000E                     	;# 
   265  000E                     	;# 
   266  000F                     	;# 
   267  0010                     	;# 
   268  0011                     	;# 
   269  0012                     	;# 
   270  0013                     	;# 
   271  0014                     	;# 
   272  0015                     	;# 
   273  0015                     	;# 
   274  0016                     	;# 
   275  0017                     	;# 
   276  0018                     	;# 
   277  0019                     	;# 
   278  001A                     	;# 
   279  001B                     	;# 
   280  001B                     	;# 
   281  001C                     	;# 
   282  001D                     	;# 
   283  001E                     	;# 
   284  001F                     	;# 
   285  0081                     	;# 
   286  0085                     	;# 
   287  0086                     	;# 
   288  0087                     	;# 
   289  0088                     	;# 
   290  0089                     	;# 
   291  008C                     	;# 
   292  008D                     	;# 
   293  008E                     	;# 
   294  0091                     	;# 
   295  0092                     	;# 
   296  0093                     	;# 
   297  0094                     	;# 
   298  0098                     	;# 
   299  0099                     	;# 
   300  009C                     	;# 
   301  009D                     	;# 
   302  009E                     	;# 
   303  009F                     	;# 
   304  010C                     	;# 
   305  010D                     	;# 
   306  010E                     	;# 
   307  010F                     	;# 
   308  018C                     	;# 
   309  018D                     	;# 
   310  0000                     	;# 
   311  0001                     	;# 
   312  0002                     	;# 
   313  0003                     	;# 
   314  0004                     	;# 
   315  0005                     	;# 
   316  0006                     	;# 
   317  0007                     	;# 
   318  0008                     	;# 
   319  0009                     	;# 
   320  000A                     	;# 
   321  000B                     	;# 
   322  000C                     	;# 
   323  000D                     	;# 
   324  000E                     	;# 
   325  000E                     	;# 
   326  000F                     	;# 
   327  0010                     	;# 
   328  0011                     	;# 
   329  0012                     	;# 
   330  0013                     	;# 
   331  0014                     	;# 
   332  0015                     	;# 
   333  0015                     	;# 
   334  0016                     	;# 
   335  0017                     	;# 
   336  0018                     	;# 
   337  0019                     	;# 
   338  001A                     	;# 
   339  001B                     	;# 
   340  001B                     	;# 
   341  001C                     	;# 
   342  001D                     	;# 
   343  001E                     	;# 
   344  001F                     	;# 
   345  0081                     	;# 
   346  0085                     	;# 
   347  0086                     	;# 
   348  0087                     	;# 
   349  0088                     	;# 
   350  0089                     	;# 
   351  008C                     	;# 
   352  008D                     	;# 
   353  008E                     	;# 
   354  0091                     	;# 
   355  0092                     	;# 
   356  0093                     	;# 
   357  0094                     	;# 
   358  0098                     	;# 
   359  0099                     	;# 
   360  009C                     	;# 
   361  009D                     	;# 
   362  009E                     	;# 
   363  009F                     	;# 
   364  010C                     	;# 
   365  010D                     	;# 
   366  010E                     	;# 
   367  010F                     	;# 
   368  018C                     	;# 
   369  018D                     	;# 
   370  0000                     	;# 
   371  0001                     	;# 
   372  0002                     	;# 
   373  0003                     	;# 
   374  0004                     	;# 
   375  0005                     	;# 
   376  0006                     	;# 
   377  0007                     	;# 
   378  0008                     	;# 
   379  0009                     	;# 
   380  000A                     	;# 
   381  000B                     	;# 
   382  000C                     	;# 
   383  000D                     	;# 
   384  000E                     	;# 
   385  000E                     	;# 
   386  000F                     	;# 
   387  0010                     	;# 
   388  0011                     	;# 
   389  0012                     	;# 
   390  0013                     	;# 
   391  0014                     	;# 
   392  0015                     	;# 
   393  0015                     	;# 
   394  0016                     	;# 
   395  0017                     	;# 
   396  0018                     	;# 
   397  0019                     	;# 
   398  001A                     	;# 
   399  001B                     	;# 
   400  001B                     	;# 
   401  001C                     	;# 
   402  001D                     	;# 
   403  001E                     	;# 
   404  001F                     	;# 
   405  0081                     	;# 
   406  0085                     	;# 
   407  0086                     	;# 
   408  0087                     	;# 
   409  0088                     	;# 
   410  0089                     	;# 
   411  008C                     	;# 
   412  008D                     	;# 
   413  008E                     	;# 
   414  0091                     	;# 
   415  0092                     	;# 
   416  0093                     	;# 
   417  0094                     	;# 
   418  0098                     	;# 
   419  0099                     	;# 
   420  009C                     	;# 
   421  009D                     	;# 
   422  009E                     	;# 
   423  009F                     	;# 
   424  010C                     	;# 
   425  010D                     	;# 
   426  010E                     	;# 
   427  010F                     	;# 
   428  018C                     	;# 
   429  018D                     	;# 
   430                           
   431                           	psect	idataBANK0
   432  03F1                     __pidataBANK0:	
   433                           
   434                           ;initializer for _randx
   435  03F1  3401               	retlw	1
   436  03F2  3400               	retlw	0
   437  03F3  3400               	retlw	0
   438  03F4  3400               	retlw	0
   439                           
   440                           ;initializer for _ficha_pos
   441  03F5  3410               	retlw	16
   442                           
   443                           ;initializer for _columna
   444  03F6  3401               	retlw	1
   445                           
   446                           	psect	idataBANK1
   447  01CD                     __pidataBANK1:	
   448                           
   449                           ;initializer for _figuras
   450  01CD  3402               	retlw	2
   451  01CE  3400               	retlw	0
   452  01CF  3402               	retlw	2
   453  01D0  3400               	retlw	0
   454  01D1  3403               	retlw	3
   455  01D2  3400               	retlw	0
   456  01D3  3400               	retlw	0
   457  01D4  3400               	retlw	0
   458  01D5  3400               	retlw	0
   459  01D6  3400               	retlw	0
   460  01D7  3403               	retlw	3
   461  01D8  3400               	retlw	0
   462  01D9  3402               	retlw	2
   463  01DA  3400               	retlw	0
   464  01DB  3402               	retlw	2
   465  01DC  3400               	retlw	0
   466  01DD  3401               	retlw	1
   467  01DE  3400               	retlw	0
   468  01DF  3403               	retlw	3
   469  01E0  3400               	retlw	0
   470  01E1  3402               	retlw	2
   471  01E2  3400               	retlw	0
   472  01E3  3400               	retlw	0
   473  01E4  3400               	retlw	0
   474  01E5  3400               	retlw	0
   475  01E6  3400               	retlw	0
   476  01E7  3402               	retlw	2
   477  01E8  3400               	retlw	0
   478  01E9  3403               	retlw	3
   479  01EA  3400               	retlw	0
   480  01EB  3401               	retlw	1
   481  01EC  3400               	retlw	0
   482  01ED  3401               	retlw	1
   483  01EE  3400               	retlw	0
   484  01EF  3401               	retlw	1
   485  01F0  3400               	retlw	0
   486  01F1  3401               	retlw	1
   487  01F2  3400               	retlw	0
   488  01F3  3401               	retlw	1
   489  01F4  3400               	retlw	0
   490  01F5  3400               	retlw	0
   491  01F6  3400               	retlw	0
   492  01F7  3403               	retlw	3
   493  01F8  3400               	retlw	0
   494  01F9  3403               	retlw	3
   495  01FA  3400               	retlw	0
   496  01FB  3400               	retlw	0
   497  01FC  3400               	retlw	0
   498                           
   499                           ;initializer for _test
   500  01FD  34FF               	retlw	255
   501  01FE  34FF               	retlw	255
   502  01FF  34FF               	retlw	255
   503  0200  34FF               	retlw	255
   504  0201  34FF               	retlw	255
   505  0202  34FF               	retlw	255
   506  0203  34FF               	retlw	255
   507  0204  34FF               	retlw	255
   508  0205  34FF               	retlw	255
   509  0206  34FF               	retlw	255
   510  0207  34FF               	retlw	255
   511  0208  34FF               	retlw	255
   512  0209  34FF               	retlw	255
   513  020A  34FF               	retlw	255
   514  020B  34FF               	retlw	255
   515  020C  34FF               	retlw	255
   516                           
   517                           ;initializer for _corazon
   518  020D  3430               	retlw	48
   519  020E  3400               	retlw	0
   520  020F  3448               	retlw	72
   521  0210  3400               	retlw	0
   522  0211  3444               	retlw	68
   523  0212  3400               	retlw	0
   524  0213  3422               	retlw	34
   525  0214  3400               	retlw	0
   526  0215  3444               	retlw	68
   527  0216  3400               	retlw	0
   528  0217  3448               	retlw	72
   529  0218  3400               	retlw	0
   530  0219  3430               	retlw	48
   531  021A  3400               	retlw	0
   532  021B  3400               	retlw	0
   533  021C  3400               	retlw	0
   534  0001                     _TMR0	set	1
   535  000B                     _INTCONbits	set	11
   536  0008                     _PORTDbits	set	8
   537  0007                     _PORTCbits	set	7
   538  0006                     _PORTBbits	set	6
   539  0081                     _OPTION_REGbits	set	129
   540  0088                     _TRISDbits	set	136
   541  0087                     _TRISCbits	set	135
   542  0086                     _TRISBbits	set	134
   543                           
   544                           ; #config settings
   545  0000                     
   546                           	psect	cinit
   547  0013                     start_initialization:	
   548  0013                     __initialization:	
   549                           
   550                           ; Initialize objects allocated to BANK1
   551  0013  1383               	bcf	3,7	;select IRP bank0
   552  0014  30F0               	movlw	low (__pdataBANK1+80)
   553  0015  00FD               	movwf	btemp+-1
   554  0016  3001               	movlw	high __pidataBANK1
   555  0017  00FE               	movwf	btemp
   556  0018  30CD               	movlw	low __pidataBANK1
   557  0019  00FF               	movwf	btemp+1
   558  001A  30A0               	movlw	low __pdataBANK1
   559  001B  0084               	movwf	4
   560  001C  120A  118A  2399  120A  118A  	fcall	init_ram0
   561                           
   562                           ; Initialize objects allocated to BANK0
   563  0021  305F               	movlw	low (__pdataBANK0+6)
   564  0022  00FD               	movwf	btemp+-1
   565  0023  3003               	movlw	high __pidataBANK0
   566  0024  00FE               	movwf	btemp
   567  0025  30F1               	movlw	low __pidataBANK0
   568  0026  00FF               	movwf	btemp+1
   569  0027  3059               	movlw	low __pdataBANK0
   570  0028  0084               	movwf	4
   571  0029  120A  118A  2399  120A  118A  	fcall	init_ram0
   572                           
   573                           ; Clear objects allocated to BANK0
   574  002E  3044               	movlw	low __pbssBANK0
   575  002F  0084               	movwf	4
   576  0030  3059               	movlw	low (__pbssBANK0+21)
   577  0031  120A  118A  23E1  120A  118A  	fcall	clear_ram0
   578  0036                     end_of_initialization:	
   579                           ;End of C runtime variable initialization code
   580                           
   581  0036                     __end_of__initialization:	
   582  0036  0183               	clrf	3
   583  0037  120A  118A  283A   	ljmp	_main	;jump to C main() function
   584                           
   585                           	psect	bssBANK0
   586  0044                     __pbssBANK0:	
   587  0044                     _counter:	
   588  0044                     	ds	2
   589  0046                     _tecla:	
   590  0046                     	ds	1
   591  0047                     _ficha_actual:	
   592  0047                     	ds	1
   593  0048                     _led:	
   594  0048                     	ds	1
   595  0049                     _pantalla:	
   596  0049                     	ds	16
   597                           
   598                           	psect	dataBANK0
   599  0059                     __pdataBANK0:	
   600  0059                     _randx:	
   601  0059                     	ds	4
   602  005D                     _ficha_pos:	
   603  005D                     	ds	1
   604  005E                     _columna:	
   605  005E                     	ds	1
   606                           
   607                           	psect	dataBANK1
   608  00A0                     __pdataBANK1:	
   609  00A0                     _figuras:	
   610  00A0                     	ds	48
   611  00D0                     _test:	
   612  00D0                     	ds	16
   613  00E0                     _corazon:	
   614  00E0                     	ds	16
   615                           
   616                           	psect	inittext
   617  0395                     init_fetch0:	
   618                           ;	Called with low address in FSR and high address in W
   619                           
   620  0395  087E               	movf	btemp,w
   621  0396  008A               	movwf	10
   622  0397  087F               	movf	btemp+1,w
   623  0398  0082               	movwf	2
   624  0399                     init_ram0:	
   625                           ;Called with:
   626                           ;	high address of idata address in btemp 
   627                           ;	low address of idata address in btemp+1 
   628                           ;	low address of data in FSR
   629                           ;	high address + 1 of data in btemp-1
   630                           
   631  0399  120A  118A  2395  120A  118A  	fcall	init_fetch0
   632  039E  0080               	movwf	0
   633  039F  0A84               	incf	4,f
   634  03A0  0804               	movf	4,w
   635  03A1  067D               	xorwf	btemp+-1,w
   636  03A2  1903               	btfsc	3,2
   637  03A3  3400               	retlw	0
   638  03A4  0AFF               	incf	btemp+1,f
   639  03A5  1903               	btfsc	3,2
   640  03A6  0AFE               	incf	btemp,f
   641  03A7  2B99               	goto	init_ram0
   642                           
   643                           	psect	clrtext
   644  03E1                     clear_ram0:	
   645                           ;	Called with FSR containing the base address, and
   646                           ;	W with the last address+1
   647                           
   648  03E1  0064               	clrwdt	;clear the watchdog before getting into this loop
   649  03E2                     clrloop0:	
   650  03E2  0180               	clrf	0	;clear RAM location pointed to by FSR
   651  03E3  0A84               	incf	4,f	;increment pointer
   652  03E4  0604               	xorwf	4,w	;XOR with final address
   653  03E5  1903               	btfsc	3,2	;have we reached the end yet?
   654  03E6  3400               	retlw	0	;all done for this memory range, return
   655  03E7  0604               	xorwf	4,w	;XOR again to restore value
   656  03E8  2BE2               	goto	clrloop0	;do the next byte
   657                           
   658                           	psect	cstackBANK3
   659  0190                     __pcstackBANK3:	
   660  0190                     ??_main:	
   661                           
   662                           ; 1 bytes @ 0x0
   663  0190                     	ds	4
   664                           
   665                           	psect	cstackCOMMON
   666  0070                     __pcstackCOMMON:	
   667  0070                     ?_setColumnas:	
   668  0070                     ?_updateScreen:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0070                     ?_shiftBitColumna:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0070                     ?_init_pines_fil:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0070                     ?_init_pines_col:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0070                     ?_init_pines:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0070                     ?_init_interrupt:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0070                     ?_init_timer:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0070                     ?_Timer0_ISR:	
   690                           ; 1 bytes @ 0x0
   691                           
   692  0070                     ?_latchClock_Fil:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0070                     ?_shiftClock_Fil:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0070                     ?_latchClock_Col:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0070                     ?_shiftClock_Col:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0070                     ?___lmul:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0070                     ___lmul@multiplier:	
   708                           ; 4 bytes @ 0x0
   709                           
   710                           
   711                           ; 4 bytes @ 0x0
   712  0070                     	ds	4
   713  0074                     ___lmul@multiplicand:	
   714                           
   715                           ; 4 bytes @ 0x4
   716  0074                     	ds	4
   717  0078                     ??___lmul:	
   718                           
   719                           ; 1 bytes @ 0x8
   720  0078                     	ds	1
   721  0079                     ___lmul@product:	
   722                           
   723                           ; 4 bytes @ 0x9
   724  0079                     	ds	4
   725  007D                     ??___awmod:	
   726                           
   727                           ; 1 bytes @ 0xD
   728  007D                     	ds	1
   729                           
   730                           	psect	cstackBANK0
   731  0020                     __pcstackBANK0:	
   732  0020                     ?_rand:	
   733                           
   734                           ; 2 bytes @ 0x0
   735  0020                     	ds	2
   736  0022                     ??_rand:	
   737                           
   738                           ; 1 bytes @ 0x2
   739  0022                     	ds	5
   740  0027                     ?___awmod:	
   741  0027                     ___awmod@divisor:	
   742                           ; 2 bytes @ 0x7
   743                           
   744                           
   745                           ; 2 bytes @ 0x7
   746  0027                     	ds	2
   747  0029                     ___awmod@dividend:	
   748                           
   749                           ; 2 bytes @ 0x9
   750  0029                     	ds	2
   751  002B                     ___awmod@counter:	
   752                           
   753                           ; 1 bytes @ 0xB
   754  002B                     	ds	1
   755  002C                     ___awmod@sign:	
   756                           
   757                           ; 1 bytes @ 0xC
   758  002C                     	ds	1
   759  002D                     ??_Timer0_ISR:	
   760                           
   761                           ; 1 bytes @ 0xD
   762  002D                     	ds	4
   763  0031                     ??_setColumnas:	
   764  0031                     ?_setFilas:	
   765                           ; 1 bytes @ 0x11
   766                           
   767  0031                     ??_shiftBitColumna:	
   768                           ; 1 bytes @ 0x11
   769                           
   770  0031                     ??_init_pines_fil:	
   771                           ; 1 bytes @ 0x11
   772                           
   773  0031                     ??_init_pines_col:	
   774                           ; 1 bytes @ 0x11
   775                           
   776  0031                     ??_init_pines:	
   777                           ; 1 bytes @ 0x11
   778                           
   779  0031                     ??_init_interrupt:	
   780                           ; 1 bytes @ 0x11
   781                           
   782  0031                     ??_init_timer:	
   783                           ; 1 bytes @ 0x11
   784                           
   785  0031                     ??_latchClock_Fil:	
   786                           ; 1 bytes @ 0x11
   787                           
   788  0031                     ??_shiftClock_Fil:	
   789                           ; 1 bytes @ 0x11
   790                           
   791  0031                     ??_latchClock_Col:	
   792                           ; 1 bytes @ 0x11
   793                           
   794  0031                     ??_shiftClock_Col:	
   795                           ; 1 bytes @ 0x11
   796                           
   797  0031                     setFilas@reg_value:	
   798                           ; 1 bytes @ 0x11
   799                           
   800                           
   801                           ; 2 bytes @ 0x11
   802  0031                     	ds	1
   803  0032                     shiftBitColumna@bit:	
   804                           
   805                           ; 1 bytes @ 0x12
   806  0032                     	ds	1
   807  0033                     ??_setFilas:	
   808                           
   809                           ; 1 bytes @ 0x13
   810  0033                     	ds	2
   811  0035                     setColumnas@valor:	
   812                           
   813                           ; 1 bytes @ 0x15
   814  0035                     	ds	1
   815  0036                     setColumnas@reg_value:	
   816                           
   817                           ; 1 bytes @ 0x16
   818  0036                     	ds	1
   819  0037                     setColumnas@i:	
   820                           
   821                           ; 2 bytes @ 0x17
   822  0037                     	ds	2
   823  0039                     setFilas@i:	
   824                           
   825                           ; 2 bytes @ 0x19
   826  0039                     	ds	2
   827  003B                     ??_updateScreen:	
   828                           
   829                           ; 1 bytes @ 0x1B
   830  003B                     	ds	4
   831  003F                     updateScreen@screen:	
   832                           
   833                           ; 1 bytes @ 0x1F
   834  003F                     	ds	1
   835  0040                     ?_main:	
   836  0040                     main@argc:	
   837                           ; 2 bytes @ 0x20
   838                           
   839                           
   840                           ; 2 bytes @ 0x20
   841  0040                     	ds	2
   842  0042                     main@argv:	
   843                           
   844                           ; 2 bytes @ 0x22
   845  0042                     	ds	2
   846                           
   847                           	psect	maintext
   848  003A                     __pmaintext:	
   849 ;;
   850 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   851 ;;
   852 ;; *************** function _main *****************
   853 ;; Defined at:
   854 ;;		line 82 in file "mainsource.c"
   855 ;; Parameters:    Size  Location     Type
   856 ;;  argc            2   32[BANK0 ] int 
   857 ;;  argv            2   34[BANK0 ] PTR PTR unsigned char 
   858 ;; Auto vars:     Size  Location     Type
   859 ;;  i               2    0        int 
   860 ;; Return value:  Size  Location     Type
   861 ;;                  2   32[BANK0 ] int 
   862 ;; Registers used:
   863 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   864 ;; Tracked objects:
   865 ;;		On entry : B00/0
   866 ;;		On exit  : 0/0
   867 ;;		Unchanged: 0/0
   868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   869 ;;      Params:         0       4       0       0       0
   870 ;;      Locals:         0       0       0       2       0
   871 ;;      Temps:          0       0       0       4       0
   872 ;;      Totals:         0       4       0       6       0
   873 ;;Total ram usage:       10 bytes
   874 ;; Hardware stack levels required when called:    6
   875 ;; This function calls:
   876 ;;		_init_interrupt
   877 ;;		_init_pines
   878 ;;		_init_timer
   879 ;;		_setColumnas
   880 ;;		_setFilas
   881 ;;		_updateScreen
   882 ;; This function is called by:
   883 ;;		Startup code after reset
   884 ;; This function uses a non-reentrant model
   885 ;;
   886                           
   887                           
   888                           ;psect for function _main
   889  003A                     _main:	
   890  003A                     l1229:	
   891                           ;incstack = 0
   892                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   893                           
   894                           
   895                           ;mainsource.c: 85:     init_pines();
   896  003A  120A  118A  23D6  120A  118A  	fcall	_init_pines
   897                           
   898                           ;mainsource.c: 86:     init_interrupt();
   899  003F  120A  118A  23E9  120A  118A  	fcall	_init_interrupt
   900                           
   901                           ;mainsource.c: 87:     init_timer();
   902  0044  120A  118A  23BB  120A  118A  	fcall	_init_timer
   903  0049                     l1231:	
   904  0049                     l1233:	
   905                           
   906                           ;mainsource.c: 89:     setColumnas(0x00);
   907  0049  3000               	movlw	0
   908  004A  120A  118A  2336  120A  118A  	fcall	_setColumnas
   909  004F                     l1235:	
   910                           
   911                           ;mainsource.c: 90:     setFilas(0x0000);
   912  004F  3000               	movlw	0
   913  0050  1283               	bcf	3,5	;RP0=0, select bank0
   914  0051  1303               	bcf	3,6	;RP1=0, select bank0
   915  0052  00B1               	movwf	setFilas@reg_value
   916  0053  00B2               	movwf	setFilas@reg_value+1
   917  0054  120A  118A  221D  120A  118A  	fcall	_setFilas
   918  0059                     l1237:	
   919                           
   920                           ;mainsource.c: 93:         pantalla[2]= figuras[ficha_actual][0] << (ficha_pos-1);
   921  0059  1283               	bcf	3,5	;RP0=0, select bank0
   922  005A  1303               	bcf	3,6	;RP1=0, select bank0
   923  005B  085D               	movf	_ficha_pos,w
   924  005C  3EFF               	addlw	-1
   925  005D  1683               	bsf	3,5	;RP0=1, select bank3
   926  005E  1703               	bsf	3,6	;RP1=1, select bank3
   927  005F  0090               	movwf	??_main^(0+384)
   928  0060  0A90               	incf	??_main^(0+384),f
   929  0061  1283               	bcf	3,5	;RP0=0, select bank0
   930  0062  1303               	bcf	3,6	;RP1=0, select bank0
   931  0063  0847               	movf	_ficha_actual,w
   932  0064  1683               	bsf	3,5	;RP0=1, select bank3
   933  0065  1703               	bsf	3,6	;RP1=1, select bank3
   934  0066  0091               	movwf	(??_main+1)^(0+384)
   935  0067  3002               	movlw	2
   936  0068                     u785:	
   937  0068  1003               	clrc
   938  0069  0D91               	rlf	(??_main+1)^(0+384),f
   939  006A  3EFF               	addlw	-1
   940  006B  1D03               	skipz
   941  006C  2868               	goto	u785
   942  006D  1003               	clrc
   943  006E  0D11               	rlf	(??_main+1)^(0+384),w
   944  006F  3EA0               	addlw	(low (_figuras| 0))& (0+255)
   945  0070  0084               	movwf	4
   946  0071  1383               	bcf	3,7	;select IRP bank1
   947  0072  0800               	movf	0,w
   948  0073  0092               	movwf	(??_main+2)^(0+384)
   949  0074  0A84               	incf	4,f
   950  0075  0800               	movf	0,w
   951  0076  0093               	movwf	((??_main+2)^(0+384)+1)
   952  0077  287B               	goto	u794
   953  0078                     u795:	
   954  0078  1003               	clrc
   955  0079  0D92               	rlf	(??_main+2)^(0+384),f
   956  007A  0D93               	rlf	((??_main+2)^(0+384)+1),f
   957  007B                     u794:	
   958  007B  0B90               	decfsz	??_main^(0+384),f
   959  007C  2878               	goto	u795
   960  007D  0812               	movf	(??_main+2)^(0+384),w
   961  007E  1283               	bcf	3,5	;RP0=0, select bank0
   962  007F  1303               	bcf	3,6	;RP1=0, select bank0
   963  0080  00CD               	movwf	_pantalla+4
   964  0081  1683               	bsf	3,5	;RP0=1, select bank3
   965  0082  1703               	bsf	3,6	;RP1=1, select bank3
   966  0083  0813               	movf	(??_main+3)^(0+384),w
   967  0084  1283               	bcf	3,5	;RP0=0, select bank0
   968  0085  1303               	bcf	3,6	;RP1=0, select bank0
   969  0086  00CE               	movwf	_pantalla+5
   970  0087                     l1239:	
   971                           
   972                           ;mainsource.c: 94:         pantalla[3]= figuras[ficha_actual][1] << (ficha_pos-1);
   973  0087  085D               	movf	_ficha_pos,w
   974  0088  3EFF               	addlw	-1
   975  0089  1683               	bsf	3,5	;RP0=1, select bank3
   976  008A  1703               	bsf	3,6	;RP1=1, select bank3
   977  008B  0090               	movwf	??_main^(0+384)
   978  008C  0A90               	incf	??_main^(0+384),f
   979  008D  1283               	bcf	3,5	;RP0=0, select bank0
   980  008E  1303               	bcf	3,6	;RP1=0, select bank0
   981  008F  0847               	movf	_ficha_actual,w
   982  0090  1683               	bsf	3,5	;RP0=1, select bank3
   983  0091  1703               	bsf	3,6	;RP1=1, select bank3
   984  0092  0091               	movwf	(??_main+1)^(0+384)
   985  0093  3002               	movlw	2
   986  0094                     u805:	
   987  0094  1003               	clrc
   988  0095  0D91               	rlf	(??_main+1)^(0+384),f
   989  0096  3EFF               	addlw	-1
   990  0097  1D03               	skipz
   991  0098  2894               	goto	u805
   992  0099  1003               	clrc
   993  009A  0D11               	rlf	(??_main+1)^(0+384),w
   994  009B  3EA2               	addlw	(low ((_figuras| 0+2)))& (0+255)
   995  009C  0084               	movwf	4
   996  009D  0800               	movf	0,w
   997  009E  0092               	movwf	(??_main+2)^(0+384)
   998  009F  0A84               	incf	4,f
   999  00A0  0800               	movf	0,w
  1000  00A1  0093               	movwf	((??_main+2)^(0+384)+1)
  1001  00A2  28A6               	goto	u814
  1002  00A3                     u815:	
  1003  00A3  1003               	clrc
  1004  00A4  0D92               	rlf	(??_main+2)^(0+384),f
  1005  00A5  0D93               	rlf	((??_main+2)^(0+384)+1),f
  1006  00A6                     u814:	
  1007  00A6  0B90               	decfsz	??_main^(0+384),f
  1008  00A7  28A3               	goto	u815
  1009  00A8  0812               	movf	(??_main+2)^(0+384),w
  1010  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  1011  00AA  1303               	bcf	3,6	;RP1=0, select bank0
  1012  00AB  00CF               	movwf	_pantalla+6
  1013  00AC  1683               	bsf	3,5	;RP0=1, select bank3
  1014  00AD  1703               	bsf	3,6	;RP1=1, select bank3
  1015  00AE  0813               	movf	(??_main+3)^(0+384),w
  1016  00AF  1283               	bcf	3,5	;RP0=0, select bank0
  1017  00B0  1303               	bcf	3,6	;RP1=0, select bank0
  1018  00B1  00D0               	movwf	_pantalla+7
  1019  00B2                     l1241:	
  1020                           
  1021                           ;mainsource.c: 95:         pantalla[4]= figuras[ficha_actual][2] << (ficha_pos-1);
  1022  00B2  085D               	movf	_ficha_pos,w
  1023  00B3  3EFF               	addlw	-1
  1024  00B4  1683               	bsf	3,5	;RP0=1, select bank3
  1025  00B5  1703               	bsf	3,6	;RP1=1, select bank3
  1026  00B6  0090               	movwf	??_main^(0+384)
  1027  00B7  0A90               	incf	??_main^(0+384),f
  1028  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  1029  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  1030  00BA  0847               	movf	_ficha_actual,w
  1031  00BB  1683               	bsf	3,5	;RP0=1, select bank3
  1032  00BC  1703               	bsf	3,6	;RP1=1, select bank3
  1033  00BD  0091               	movwf	(??_main+1)^(0+384)
  1034  00BE  3002               	movlw	2
  1035  00BF                     u825:	
  1036  00BF  1003               	clrc
  1037  00C0  0D91               	rlf	(??_main+1)^(0+384),f
  1038  00C1  3EFF               	addlw	-1
  1039  00C2  1D03               	skipz
  1040  00C3  28BF               	goto	u825
  1041  00C4  1003               	clrc
  1042  00C5  0D11               	rlf	(??_main+1)^(0+384),w
  1043  00C6  3EA4               	addlw	(low ((_figuras| 0+4)))& (0+255)
  1044  00C7  0084               	movwf	4
  1045  00C8  0800               	movf	0,w
  1046  00C9  0092               	movwf	(??_main+2)^(0+384)
  1047  00CA  0A84               	incf	4,f
  1048  00CB  0800               	movf	0,w
  1049  00CC  0093               	movwf	((??_main+2)^(0+384)+1)
  1050  00CD  28D1               	goto	u834
  1051  00CE                     u835:	
  1052  00CE  1003               	clrc
  1053  00CF  0D92               	rlf	(??_main+2)^(0+384),f
  1054  00D0  0D93               	rlf	((??_main+2)^(0+384)+1),f
  1055  00D1                     u834:	
  1056  00D1  0B90               	decfsz	??_main^(0+384),f
  1057  00D2  28CE               	goto	u835
  1058  00D3  0812               	movf	(??_main+2)^(0+384),w
  1059  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  1060  00D5  1303               	bcf	3,6	;RP1=0, select bank0
  1061  00D6  00D1               	movwf	_pantalla+8
  1062  00D7  1683               	bsf	3,5	;RP0=1, select bank3
  1063  00D8  1703               	bsf	3,6	;RP1=1, select bank3
  1064  00D9  0813               	movf	(??_main+3)^(0+384),w
  1065  00DA  1283               	bcf	3,5	;RP0=0, select bank0
  1066  00DB  1303               	bcf	3,6	;RP1=0, select bank0
  1067  00DC  00D2               	movwf	_pantalla+9
  1068  00DD                     l1243:	
  1069                           
  1070                           ;mainsource.c: 96:         pantalla[5]= figuras[ficha_actual][3] << (ficha_pos-1);
  1071  00DD  085D               	movf	_ficha_pos,w
  1072  00DE  3EFF               	addlw	-1
  1073  00DF  1683               	bsf	3,5	;RP0=1, select bank3
  1074  00E0  1703               	bsf	3,6	;RP1=1, select bank3
  1075  00E1  0090               	movwf	??_main^(0+384)
  1076  00E2  0A90               	incf	??_main^(0+384),f
  1077  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  1078  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  1079  00E5  0847               	movf	_ficha_actual,w
  1080  00E6  1683               	bsf	3,5	;RP0=1, select bank3
  1081  00E7  1703               	bsf	3,6	;RP1=1, select bank3
  1082  00E8  0091               	movwf	(??_main+1)^(0+384)
  1083  00E9  3002               	movlw	2
  1084  00EA                     u845:	
  1085  00EA  1003               	clrc
  1086  00EB  0D91               	rlf	(??_main+1)^(0+384),f
  1087  00EC  3EFF               	addlw	-1
  1088  00ED  1D03               	skipz
  1089  00EE  28EA               	goto	u845
  1090  00EF  1003               	clrc
  1091  00F0  0D11               	rlf	(??_main+1)^(0+384),w
  1092  00F1  3EA6               	addlw	(low ((_figuras| 0+6)))& (0+255)
  1093  00F2  0084               	movwf	4
  1094  00F3  0800               	movf	0,w
  1095  00F4  0092               	movwf	(??_main+2)^(0+384)
  1096  00F5  0A84               	incf	4,f
  1097  00F6  0800               	movf	0,w
  1098  00F7  0093               	movwf	((??_main+2)^(0+384)+1)
  1099  00F8  28FC               	goto	u854
  1100  00F9                     u855:	
  1101  00F9  1003               	clrc
  1102  00FA  0D92               	rlf	(??_main+2)^(0+384),f
  1103  00FB  0D93               	rlf	((??_main+2)^(0+384)+1),f
  1104  00FC                     u854:	
  1105  00FC  0B90               	decfsz	??_main^(0+384),f
  1106  00FD  28F9               	goto	u855
  1107  00FE  0812               	movf	(??_main+2)^(0+384),w
  1108  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  1109  0100  1303               	bcf	3,6	;RP1=0, select bank0
  1110  0101  00D3               	movwf	_pantalla+10
  1111  0102  1683               	bsf	3,5	;RP0=1, select bank3
  1112  0103  1703               	bsf	3,6	;RP1=1, select bank3
  1113  0104  0813               	movf	(??_main+3)^(0+384),w
  1114  0105  1283               	bcf	3,5	;RP0=0, select bank0
  1115  0106  1303               	bcf	3,6	;RP1=0, select bank0
  1116  0107  00D4               	movwf	_pantalla+11
  1117  0108                     l1245:	
  1118                           
  1119                           ;mainsource.c: 98:         updateScreen(pantalla);
  1120  0108  3049               	movlw	(low (_pantalla| 0))& (0+255)
  1121  0109  120A  118A  22F1  120A  118A  	fcall	_updateScreen
  1122  010E  2859               	goto	l1237
  1123  010F  120A  118A  2810   	ljmp	start
  1124  0112                     __end_of_main:	
  1125                           
  1126                           	psect	text1
  1127  02F1                     __ptext1:	
  1128 ;; *************** function _updateScreen *****************
  1129 ;; Defined at:
  1130 ;;		line 106 in file "mainsource.c"
  1131 ;; Parameters:    Size  Location     Type
  1132 ;;  screen          1    wreg     PTR unsigned int 
  1133 ;;		 -> pantalla(16), 
  1134 ;; Auto vars:     Size  Location     Type
  1135 ;;  screen          1   31[BANK0 ] PTR unsigned int 
  1136 ;;		 -> pantalla(16), 
  1137 ;; Return value:  Size  Location     Type
  1138 ;;                  1    wreg      void 
  1139 ;; Registers used:
  1140 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1141 ;; Tracked objects:
  1142 ;;		On entry : 0/0
  1143 ;;		On exit  : 0/0
  1144 ;;		Unchanged: 0/0
  1145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1146 ;;      Params:         0       0       0       0       0
  1147 ;;      Locals:         0       1       0       0       0
  1148 ;;      Temps:          0       4       0       0       0
  1149 ;;      Totals:         0       5       0       0       0
  1150 ;;Total ram usage:        5 bytes
  1151 ;; Hardware stack levels used:    1
  1152 ;; Hardware stack levels required when called:    5
  1153 ;; This function calls:
  1154 ;;		_setFilas
  1155 ;;		_shiftBitColumna
  1156 ;; This function is called by:
  1157 ;;		_main
  1158 ;; This function uses a non-reentrant model
  1159 ;;
  1160                           
  1161                           
  1162                           ;psect for function _updateScreen
  1163  02F1                     _updateScreen:	
  1164                           
  1165                           ;incstack = 0
  1166                           ; Regs used in _updateScreen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1167                           ;updateScreen@screen stored from wreg
  1168  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  1169  02F2  1303               	bcf	3,6	;RP1=0, select bank0
  1170  02F3  00BF               	movwf	updateScreen@screen
  1171  02F4                     l1215:	
  1172                           
  1173                           ;mainsource.c: 107:     if(columna == 9){
  1174  02F4  3009               	movlw	9
  1175  02F5  065E               	xorwf	_columna,w
  1176  02F6  1D03               	btfss	3,2
  1177  02F7  2AF9               	goto	u771
  1178  02F8  2AFA               	goto	u770
  1179  02F9                     u771:	
  1180  02F9  2B14               	goto	l1223
  1181  02FA                     u770:	
  1182  02FA                     l1217:	
  1183                           
  1184                           ;mainsource.c: 108:         columna=1;
  1185  02FA  01DE               	clrf	_columna
  1186  02FB  0ADE               	incf	_columna,f
  1187  02FC                     l1219:	
  1188                           
  1189                           ;mainsource.c: 109:         setFilas(~screen[columna-1]);
  1190  02FC  083F               	movf	updateScreen@screen,w
  1191  02FD  0084               	movwf	4
  1192  02FE  1383               	bcf	3,7	;select IRP bank0
  1193  02FF  0800               	movf	0,w
  1194  0300  00BB               	movwf	??_updateScreen
  1195  0301  0A84               	incf	4,f
  1196  0302  0800               	movf	0,w
  1197  0303  00BC               	movwf	??_updateScreen+1
  1198  0304  093B               	comf	??_updateScreen,w
  1199  0305  00B1               	movwf	setFilas@reg_value
  1200  0306  093C               	comf	??_updateScreen+1,w
  1201  0307  00B2               	movwf	setFilas@reg_value+1
  1202  0308  120A  118A  221D  120A  118A  	fcall	_setFilas
  1203  030D                     l1221:	
  1204                           
  1205                           ;mainsource.c: 110:         shiftBitColumna(1);
  1206  030D  3001               	movlw	1
  1207  030E  120A  118A  2379  120A  118A  	fcall	_shiftBitColumna
  1208                           
  1209                           ;mainsource.c: 111:     }
  1210  0313  2B35               	goto	l100
  1211  0314                     l1223:	
  1212                           
  1213                           ;mainsource.c: 113:         columna++;
  1214  0314  3001               	movlw	1
  1215  0315  00BB               	movwf	??_updateScreen
  1216  0316  083B               	movf	??_updateScreen,w
  1217  0317  07DE               	addwf	_columna,f
  1218  0318                     l1225:	
  1219                           
  1220                           ;mainsource.c: 114:         setFilas(~screen[columna-1]);
  1221  0318  085E               	movf	_columna,w
  1222  0319  00BB               	movwf	??_updateScreen
  1223  031A  073B               	addwf	??_updateScreen,w
  1224  031B  073F               	addwf	updateScreen@screen,w
  1225  031C  00BC               	movwf	??_updateScreen+1
  1226  031D  083C               	movf	??_updateScreen+1,w
  1227  031E  3EFE               	addlw	-2
  1228  031F  0084               	movwf	4
  1229  0320  1383               	bcf	3,7	;select IRP bank0
  1230  0321  0800               	movf	0,w
  1231  0322  00BD               	movwf	??_updateScreen+2
  1232  0323  0A84               	incf	4,f
  1233  0324  0800               	movf	0,w
  1234  0325  00BE               	movwf	??_updateScreen+3
  1235  0326  093D               	comf	??_updateScreen+2,w
  1236  0327  00B1               	movwf	setFilas@reg_value
  1237  0328  093E               	comf	??_updateScreen+3,w
  1238  0329  00B2               	movwf	setFilas@reg_value+1
  1239  032A  120A  118A  221D  120A  118A  	fcall	_setFilas
  1240  032F                     l1227:	
  1241                           
  1242                           ;mainsource.c: 115:         shiftBitColumna(0);
  1243  032F  3000               	movlw	0
  1244  0330  120A  118A  2379  120A  118A  	fcall	_shiftBitColumna
  1245  0335                     l100:	
  1246  0335  0008               	return
  1247  0336                     __end_of_updateScreen:	
  1248                           
  1249                           	psect	text2
  1250  0379                     __ptext2:	
  1251 ;; *************** function _shiftBitColumna *****************
  1252 ;; Defined at:
  1253 ;;		line 32 in file "columnas.c"
  1254 ;; Parameters:    Size  Location     Type
  1255 ;;  bit             1    wreg     unsigned char 
  1256 ;; Auto vars:     Size  Location     Type
  1257 ;;  bit             1   18[BANK0 ] unsigned char 
  1258 ;; Return value:  Size  Location     Type
  1259 ;;                  1    wreg      void 
  1260 ;; Registers used:
  1261 ;;		wreg, status,2, status,0, pclath, cstack
  1262 ;; Tracked objects:
  1263 ;;		On entry : 0/0
  1264 ;;		On exit  : 0/0
  1265 ;;		Unchanged: 0/0
  1266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1267 ;;      Params:         0       0       0       0       0
  1268 ;;      Locals:         0       1       0       0       0
  1269 ;;      Temps:          0       1       0       0       0
  1270 ;;      Totals:         0       2       0       0       0
  1271 ;;Total ram usage:        2 bytes
  1272 ;; Hardware stack levels used:    1
  1273 ;; Hardware stack levels required when called:    4
  1274 ;; This function calls:
  1275 ;;		_latchClock_Col
  1276 ;;		_latchClock_Fil
  1277 ;;		_shiftClock_Col
  1278 ;; This function is called by:
  1279 ;;		_updateScreen
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282                           
  1283                           
  1284                           ;psect for function _shiftBitColumna
  1285  0379                     _shiftBitColumna:	
  1286                           
  1287                           ;incstack = 0
  1288                           ; Regs used in _shiftBitColumna: [wreg+status,2+status,0+pclath+cstack]
  1289                           ;shiftBitColumna@bit stored from wreg
  1290  0379  1283               	bcf	3,5	;RP0=0, select bank0
  1291  037A  1303               	bcf	3,6	;RP1=0, select bank0
  1292  037B  00B2               	movwf	shiftBitColumna@bit
  1293  037C                     l1159:	
  1294                           
  1295                           ;columnas.c: 33:     PORTDbits.RD4= bit & 0x01;
  1296  037C  0832               	movf	shiftBitColumna@bit,w
  1297  037D  3901               	andlw	1
  1298  037E  00B1               	movwf	??_shiftBitColumna
  1299  037F  0EB1               	swapf	??_shiftBitColumna,f
  1300  0380  0808               	movf	8,w	;volatile
  1301  0381  0631               	xorwf	??_shiftBitColumna,w
  1302  0382  39EF               	andlw	-17
  1303  0383  0631               	xorwf	??_shiftBitColumna,w
  1304  0384  0088               	movwf	8	;volatile
  1305  0385                     l1161:	
  1306                           
  1307                           ;columnas.c: 34:     shiftClock_Col();
  1308  0385  120A  118A  2403  120A  118A  	fcall	_shiftClock_Col
  1309  038A                     l1163:	
  1310                           
  1311                           ;columnas.c: 35:     latchClock_Col();
  1312  038A  120A  118A  2409  120A  118A  	fcall	_latchClock_Col
  1313  038F                     l1165:	
  1314                           
  1315                           ;columnas.c: 36:     latchClock_Fil();
  1316  038F  120A  118A  23F7  120A  118A  	fcall	_latchClock_Fil
  1317  0394                     l131:	
  1318  0394  0008               	return
  1319  0395                     __end_of_shiftBitColumna:	
  1320                           
  1321                           	psect	text3
  1322  03F7                     __ptext3:	
  1323 ;; *************** function _latchClock_Fil *****************
  1324 ;; Defined at:
  1325 ;;		line 7 in file "filas.c"
  1326 ;; Parameters:    Size  Location     Type
  1327 ;;		None
  1328 ;; Auto vars:     Size  Location     Type
  1329 ;;		None
  1330 ;; Return value:  Size  Location     Type
  1331 ;;                  1    wreg      void 
  1332 ;; Registers used:
  1333 ;;		None
  1334 ;; Tracked objects:
  1335 ;;		On entry : 0/0
  1336 ;;		On exit  : 0/0
  1337 ;;		Unchanged: 0/0
  1338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1339 ;;      Params:         0       0       0       0       0
  1340 ;;      Locals:         0       0       0       0       0
  1341 ;;      Temps:          0       0       0       0       0
  1342 ;;      Totals:         0       0       0       0       0
  1343 ;;Total ram usage:        0 bytes
  1344 ;; Hardware stack levels used:    1
  1345 ;; Hardware stack levels required when called:    3
  1346 ;; This function calls:
  1347 ;;		Nothing
  1348 ;; This function is called by:
  1349 ;;		_shiftBitColumna
  1350 ;; This function uses a non-reentrant model
  1351 ;;
  1352                           
  1353                           
  1354                           ;psect for function _latchClock_Fil
  1355  03F7                     _latchClock_Fil:	
  1356  03F7                     l1133:	
  1357                           ;incstack = 0
  1358                           ; Regs used in _latchClock_Fil: []
  1359                           
  1360                           
  1361                           ;filas.c: 8:     PORTCbits.RC6 = 0;
  1362  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  1363  03F8  1303               	bcf	3,6	;RP1=0, select bank0
  1364  03F9  1307               	bcf	7,6	;volatile
  1365                           
  1366                           ;filas.c: 9:     PORTCbits.RC6 = 1;
  1367  03FA  1707               	bsf	7,6	;volatile
  1368                           
  1369                           ;filas.c: 10:     PORTCbits.RC6 = 0;
  1370  03FB  1307               	bcf	7,6	;volatile
  1371  03FC                     l105:	
  1372  03FC  0008               	return
  1373  03FD                     __end_of_latchClock_Fil:	
  1374                           
  1375                           	psect	text4
  1376  021D                     __ptext4:	
  1377 ;; *************** function _setFilas *****************
  1378 ;; Defined at:
  1379 ;;		line 19 in file "filas.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;  reg_value       2   17[BANK0 ] unsigned int 
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;  i               2   25[BANK0 ] int 
  1384 ;; Return value:  Size  Location     Type
  1385 ;;                  1    wreg      void 
  1386 ;; Registers used:
  1387 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1388 ;; Tracked objects:
  1389 ;;		On entry : 0/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1393 ;;      Params:         0       2       0       0       0
  1394 ;;      Locals:         0       2       0       0       0
  1395 ;;      Temps:          0       6       0       0       0
  1396 ;;      Totals:         0      10       0       0       0
  1397 ;;Total ram usage:       10 bytes
  1398 ;; Hardware stack levels used:    1
  1399 ;; Hardware stack levels required when called:    4
  1400 ;; This function calls:
  1401 ;;		_shiftClock_Fil
  1402 ;; This function is called by:
  1403 ;;		_main
  1404 ;;		_updateScreen
  1405 ;; This function uses a non-reentrant model
  1406 ;;
  1407                           
  1408                           
  1409                           ;psect for function _setFilas
  1410  021D                     _setFilas:	
  1411  021D                     l1145:	
  1412                           ;incstack = 0
  1413                           ; Regs used in _setFilas: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1414                           
  1415                           
  1416                           ;filas.c: 20:     int i = 0;
  1417  021D  1283               	bcf	3,5	;RP0=0, select bank0
  1418  021E  1303               	bcf	3,6	;RP1=0, select bank0
  1419  021F  01B9               	clrf	setFilas@i
  1420  0220  01BA               	clrf	setFilas@i+1
  1421                           
  1422                           ;filas.c: 21:     for(i=0;i<16;i++){
  1423  0221  01B9               	clrf	setFilas@i
  1424  0222  01BA               	clrf	setFilas@i+1
  1425  0223                     l1147:	
  1426  0223  083A               	movf	setFilas@i+1,w
  1427  0224  3A80               	xorlw	128
  1428  0225  00FF               	movwf	btemp+1
  1429  0226  3080               	movlw	128
  1430  0227  027F               	subwf	btemp+1,w
  1431  0228  1D03               	skipz
  1432  0229  2A2C               	goto	u715
  1433  022A  3010               	movlw	16
  1434  022B  0239               	subwf	setFilas@i,w
  1435  022C                     u715:	
  1436  022C  1C03               	skipc
  1437  022D  2A2F               	goto	u711
  1438  022E  2A30               	goto	u710
  1439  022F                     u711:	
  1440  022F  2A31               	goto	l1151
  1441  0230                     u710:	
  1442  0230  2A63               	goto	l113
  1443  0231                     l1151:	
  1444                           
  1445                           ;filas.c: 22:         PORTCbits.RC4 = (reg_value & (1<<i) )>>i;
  1446  0231  1283               	bcf	3,5	;RP0=0, select bank0
  1447  0232  1303               	bcf	3,6	;RP1=0, select bank0
  1448  0233  0A39               	incf	setFilas@i,w
  1449  0234  00B3               	movwf	??_setFilas
  1450  0235  3001               	movlw	1
  1451  0236  00B4               	movwf	??_setFilas+1
  1452  0237  3000               	movlw	0
  1453  0238  00B5               	movwf	??_setFilas+2
  1454  0239  2A3D               	goto	u724
  1455  023A                     u725:	
  1456  023A  1003               	clrc
  1457  023B  0DB4               	rlf	??_setFilas+1,f
  1458  023C  0DB5               	rlf	??_setFilas+2,f
  1459  023D                     u724:	
  1460  023D  0BB3               	decfsz	??_setFilas,f
  1461  023E  2A3A               	goto	u725
  1462  023F  0831               	movf	setFilas@reg_value,w
  1463  0240  0534               	andwf	??_setFilas+1,w
  1464  0241  00B6               	movwf	??_setFilas+3
  1465  0242  0832               	movf	setFilas@reg_value+1,w
  1466  0243  0535               	andwf	??_setFilas+2,w
  1467  0244  00B7               	movwf	??_setFilas+4
  1468  0245  0A39               	incf	setFilas@i,w
  1469  0246  2A4A               	goto	u734
  1470  0247                     u735:	
  1471  0247  1003               	clrc
  1472  0248  0CB7               	rrf	??_setFilas+4,f
  1473  0249  0CB6               	rrf	??_setFilas+3,f
  1474  024A                     u734:	
  1475  024A  3EFF               	addlw	-1
  1476  024B  1D03               	skipz
  1477  024C  2A47               	goto	u735
  1478  024D  0836               	movf	??_setFilas+3,w
  1479  024E  00B8               	movwf	??_setFilas+5
  1480  024F  0EB8               	swapf	??_setFilas+5,f
  1481  0250  0807               	movf	7,w	;volatile
  1482  0251  0638               	xorwf	??_setFilas+5,w
  1483  0252  39EF               	andlw	-17
  1484  0253  0638               	xorwf	??_setFilas+5,w
  1485  0254  0087               	movwf	7	;volatile
  1486  0255                     l1153:	
  1487                           
  1488                           ;filas.c: 23:         shiftClock_Fil();
  1489  0255  120A  118A  23FD  120A  118A  	fcall	_shiftClock_Fil
  1490  025A                     l1155:	
  1491                           
  1492                           ;filas.c: 24:     }
  1493  025A  3001               	movlw	1
  1494  025B  1283               	bcf	3,5	;RP0=0, select bank0
  1495  025C  1303               	bcf	3,6	;RP1=0, select bank0
  1496  025D  07B9               	addwf	setFilas@i,f
  1497  025E  1803               	skipnc
  1498  025F  0ABA               	incf	setFilas@i+1,f
  1499  0260  3000               	movlw	0
  1500  0261  07BA               	addwf	setFilas@i+1,f
  1501  0262  2A23               	goto	l1147
  1502  0263                     l113:	
  1503  0263  0008               	return
  1504  0264                     __end_of_setFilas:	
  1505                           
  1506                           	psect	text5
  1507  03FD                     __ptext5:	
  1508 ;; *************** function _shiftClock_Fil *****************
  1509 ;; Defined at:
  1510 ;;		line 13 in file "filas.c"
  1511 ;; Parameters:    Size  Location     Type
  1512 ;;		None
  1513 ;; Auto vars:     Size  Location     Type
  1514 ;;		None
  1515 ;; Return value:  Size  Location     Type
  1516 ;;                  1    wreg      void 
  1517 ;; Registers used:
  1518 ;;		None
  1519 ;; Tracked objects:
  1520 ;;		On entry : 0/0
  1521 ;;		On exit  : 0/0
  1522 ;;		Unchanged: 0/0
  1523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1524 ;;      Params:         0       0       0       0       0
  1525 ;;      Locals:         0       0       0       0       0
  1526 ;;      Temps:          0       0       0       0       0
  1527 ;;      Totals:         0       0       0       0       0
  1528 ;;Total ram usage:        0 bytes
  1529 ;; Hardware stack levels used:    1
  1530 ;; Hardware stack levels required when called:    3
  1531 ;; This function calls:
  1532 ;;		Nothing
  1533 ;; This function is called by:
  1534 ;;		_setFilas
  1535 ;; This function uses a non-reentrant model
  1536 ;;
  1537                           
  1538                           
  1539                           ;psect for function _shiftClock_Fil
  1540  03FD                     _shiftClock_Fil:	
  1541  03FD                     l1135:	
  1542                           ;incstack = 0
  1543                           ; Regs used in _shiftClock_Fil: []
  1544                           
  1545                           
  1546                           ;filas.c: 14:     PORTCbits.RC7 = 0;
  1547  03FD  1283               	bcf	3,5	;RP0=0, select bank0
  1548  03FE  1303               	bcf	3,6	;RP1=0, select bank0
  1549  03FF  1387               	bcf	7,7	;volatile
  1550                           
  1551                           ;filas.c: 15:     PORTCbits.RC7 = 1;
  1552  0400  1787               	bsf	7,7	;volatile
  1553                           
  1554                           ;filas.c: 16:     PORTCbits.RC7 = 0;
  1555  0401  1387               	bcf	7,7	;volatile
  1556  0402                     l108:	
  1557  0402  0008               	return
  1558  0403                     __end_of_shiftClock_Fil:	
  1559                           
  1560                           	psect	text6
  1561  0336                     __ptext6:	
  1562 ;; *************** function _setColumnas *****************
  1563 ;; Defined at:
  1564 ;;		line 18 in file "columnas.c"
  1565 ;; Parameters:    Size  Location     Type
  1566 ;;  reg_value       1    wreg     unsigned char 
  1567 ;; Auto vars:     Size  Location     Type
  1568 ;;  reg_value       1   22[BANK0 ] unsigned char 
  1569 ;;  i               2   23[BANK0 ] int 
  1570 ;;  valor           1   21[BANK0 ] unsigned char 
  1571 ;;  indice          1    0        unsigned char 
  1572 ;; Return value:  Size  Location     Type
  1573 ;;                  1    wreg      void 
  1574 ;; Registers used:
  1575 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1576 ;; Tracked objects:
  1577 ;;		On entry : 0/0
  1578 ;;		On exit  : 0/0
  1579 ;;		Unchanged: 0/0
  1580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1581 ;;      Params:         0       0       0       0       0
  1582 ;;      Locals:         0       5       0       0       0
  1583 ;;      Temps:          0       3       0       0       0
  1584 ;;      Totals:         0       8       0       0       0
  1585 ;;Total ram usage:        8 bytes
  1586 ;; Hardware stack levels used:    1
  1587 ;; Hardware stack levels required when called:    4
  1588 ;; This function calls:
  1589 ;;		_latchClock_Col
  1590 ;;		_shiftClock_Col
  1591 ;; This function is called by:
  1592 ;;		_main
  1593 ;; This function uses a non-reentrant model
  1594 ;;
  1595                           
  1596                           
  1597                           ;psect for function _setColumnas
  1598  0336                     _setColumnas:	
  1599                           
  1600                           ;incstack = 0
  1601                           ; Regs used in _setColumnas: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1602                           ;setColumnas@reg_value stored from wreg
  1603  0336  1283               	bcf	3,5	;RP0=0, select bank0
  1604  0337  1303               	bcf	3,6	;RP1=0, select bank0
  1605  0338  00B6               	movwf	setColumnas@reg_value
  1606  0339                     l1189:	
  1607  0339                     l1191:	
  1608  0339                     l1193:	
  1609  0339                     l1195:	
  1610                           
  1611                           ;columnas.c: 22:     for(i=0;i<8;i++){
  1612  0339  01B7               	clrf	setColumnas@i
  1613  033A  01B8               	clrf	setColumnas@i+1
  1614  033B                     l1201:	
  1615                           
  1616                           ;columnas.c: 23:         valor = (reg_value & (1<<i) )>>i;
  1617  033B  3001               	movlw	1
  1618  033C  1283               	bcf	3,5	;RP0=0, select bank0
  1619  033D  1303               	bcf	3,6	;RP1=0, select bank0
  1620  033E  00B1               	movwf	??_setColumnas
  1621  033F  0A37               	incf	setColumnas@i,w
  1622  0340  2B43               	goto	u744
  1623  0341                     u745:	
  1624  0341  1003               	clrc
  1625  0342  0DB1               	rlf	??_setColumnas,f
  1626  0343                     u744:	
  1627  0343  3EFF               	addlw	-1
  1628  0344  1D03               	skipz
  1629  0345  2B41               	goto	u745
  1630  0346  0831               	movf	??_setColumnas,w
  1631  0347  0536               	andwf	setColumnas@reg_value,w
  1632  0348  00B2               	movwf	??_setColumnas+1
  1633  0349  0A37               	incf	setColumnas@i,w
  1634  034A  2B4D               	goto	u754
  1635  034B                     u755:	
  1636  034B  1003               	clrc
  1637  034C  0CB2               	rrf	??_setColumnas+1,f
  1638  034D                     u754:	
  1639  034D  3EFF               	addlw	-1
  1640  034E  1D03               	skipz
  1641  034F  2B4B               	goto	u755
  1642  0350  0832               	movf	??_setColumnas+1,w
  1643  0351  00B3               	movwf	??_setColumnas+2
  1644  0352  0833               	movf	??_setColumnas+2,w
  1645  0353  00B5               	movwf	setColumnas@valor
  1646  0354                     l1203:	
  1647                           
  1648                           ;columnas.c: 24:         PORTDbits.RD4 = valor;
  1649  0354  0C35               	rrf	setColumnas@valor,w
  1650  0355  1C03               	skipc
  1651  0356  1208               	bcf	8,4	;volatile
  1652  0357  1803               	skipnc
  1653  0358  1608               	bsf	8,4	;volatile
  1654  0359                     l1205:	
  1655                           
  1656                           ;columnas.c: 25:         shiftClock_Col();
  1657  0359  120A  118A  2403  120A  118A  	fcall	_shiftClock_Col
  1658  035E                     l1207:	
  1659                           
  1660                           ;columnas.c: 26:     }
  1661  035E  3001               	movlw	1
  1662  035F  1283               	bcf	3,5	;RP0=0, select bank0
  1663  0360  1303               	bcf	3,6	;RP1=0, select bank0
  1664  0361  07B7               	addwf	setColumnas@i,f
  1665  0362  1803               	skipnc
  1666  0363  0AB8               	incf	setColumnas@i+1,f
  1667  0364  3000               	movlw	0
  1668  0365  07B8               	addwf	setColumnas@i+1,f
  1669  0366                     l1209:	
  1670  0366  0838               	movf	setColumnas@i+1,w
  1671  0367  3A80               	xorlw	128
  1672  0368  00FF               	movwf	btemp+1
  1673  0369  3080               	movlw	128
  1674  036A  027F               	subwf	btemp+1,w
  1675  036B  1D03               	skipz
  1676  036C  2B6F               	goto	u765
  1677  036D  3008               	movlw	8
  1678  036E  0237               	subwf	setColumnas@i,w
  1679  036F                     u765:	
  1680  036F  1C03               	skipc
  1681  0370  2B72               	goto	u761
  1682  0371  2B73               	goto	u760
  1683  0372                     u761:	
  1684  0372  2B3B               	goto	l1201
  1685  0373                     u760:	
  1686  0373                     l1211:	
  1687                           
  1688                           ;columnas.c: 27:     latchClock_Col();
  1689  0373  120A  118A  2409  120A  118A  	fcall	_latchClock_Col
  1690  0378                     l128:	
  1691  0378  0008               	return
  1692  0379                     __end_of_setColumnas:	
  1693                           
  1694                           	psect	text7
  1695  0403                     __ptext7:	
  1696 ;; *************** function _shiftClock_Col *****************
  1697 ;; Defined at:
  1698 ;;		line 12 in file "columnas.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;		None
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;		None
  1703 ;; Return value:  Size  Location     Type
  1704 ;;                  1    wreg      void 
  1705 ;; Registers used:
  1706 ;;		None
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/0
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1712 ;;      Params:         0       0       0       0       0
  1713 ;;      Locals:         0       0       0       0       0
  1714 ;;      Temps:          0       0       0       0       0
  1715 ;;      Totals:         0       0       0       0       0
  1716 ;;Total ram usage:        0 bytes
  1717 ;; Hardware stack levels used:    1
  1718 ;; Hardware stack levels required when called:    3
  1719 ;; This function calls:
  1720 ;;		Nothing
  1721 ;; This function is called by:
  1722 ;;		_setColumnas
  1723 ;;		_shiftBitColumna
  1724 ;; This function uses a non-reentrant model
  1725 ;;
  1726                           
  1727                           
  1728                           ;psect for function _shiftClock_Col
  1729  0403                     _shiftClock_Col:	
  1730  0403                     l1139:	
  1731                           ;incstack = 0
  1732                           ; Regs used in _shiftClock_Col: []
  1733                           
  1734                           
  1735                           ;columnas.c: 13:     PORTDbits.RD7 = 0;
  1736  0403  1283               	bcf	3,5	;RP0=0, select bank0
  1737  0404  1303               	bcf	3,6	;RP1=0, select bank0
  1738  0405  1388               	bcf	8,7	;volatile
  1739                           
  1740                           ;columnas.c: 14:     PORTDbits.RD7 = 1;
  1741  0406  1788               	bsf	8,7	;volatile
  1742                           
  1743                           ;columnas.c: 15:     PORTDbits.RD7 = 0;
  1744  0407  1388               	bcf	8,7	;volatile
  1745  0408                     l123:	
  1746  0408  0008               	return
  1747  0409                     __end_of_shiftClock_Col:	
  1748                           
  1749                           	psect	text8
  1750  0409                     __ptext8:	
  1751 ;; *************** function _latchClock_Col *****************
  1752 ;; Defined at:
  1753 ;;		line 7 in file "columnas.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;		None
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;		None
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  1    wreg      void 
  1760 ;; Registers used:
  1761 ;;		None
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1767 ;;      Params:         0       0       0       0       0
  1768 ;;      Locals:         0       0       0       0       0
  1769 ;;      Temps:          0       0       0       0       0
  1770 ;;      Totals:         0       0       0       0       0
  1771 ;;Total ram usage:        0 bytes
  1772 ;; Hardware stack levels used:    1
  1773 ;; Hardware stack levels required when called:    3
  1774 ;; This function calls:
  1775 ;;		Nothing
  1776 ;; This function is called by:
  1777 ;;		_setColumnas
  1778 ;;		_shiftBitColumna
  1779 ;; This function uses a non-reentrant model
  1780 ;;
  1781                           
  1782                           
  1783                           ;psect for function _latchClock_Col
  1784  0409                     _latchClock_Col:	
  1785  0409                     l1137:	
  1786                           ;incstack = 0
  1787                           ; Regs used in _latchClock_Col: []
  1788                           
  1789                           
  1790                           ;columnas.c: 8:     PORTDbits.RD6 = 1;
  1791  0409  1283               	bcf	3,5	;RP0=0, select bank0
  1792  040A  1303               	bcf	3,6	;RP1=0, select bank0
  1793  040B  1708               	bsf	8,6	;volatile
  1794                           
  1795                           ;columnas.c: 9:     PORTDbits.RD6 = 0;
  1796  040C  1308               	bcf	8,6	;volatile
  1797  040D                     l120:	
  1798  040D  0008               	return
  1799  040E                     __end_of_latchClock_Col:	
  1800                           
  1801                           	psect	text9
  1802  03BB                     __ptext9:	
  1803 ;; *************** function _init_timer *****************
  1804 ;; Defined at:
  1805 ;;		line 60 in file "init.c"
  1806 ;; Parameters:    Size  Location     Type
  1807 ;;		None
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;		None
  1810 ;; Return value:  Size  Location     Type
  1811 ;;                  1    wreg      void 
  1812 ;; Registers used:
  1813 ;;		status,2
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 0/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1819 ;;      Params:         0       0       0       0       0
  1820 ;;      Locals:         0       0       0       0       0
  1821 ;;      Temps:          0       0       0       0       0
  1822 ;;      Totals:         0       0       0       0       0
  1823 ;;Total ram usage:        0 bytes
  1824 ;; Hardware stack levels used:    1
  1825 ;; Hardware stack levels required when called:    3
  1826 ;; This function calls:
  1827 ;;		Nothing
  1828 ;; This function is called by:
  1829 ;;		_main
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           
  1834                           ;psect for function _init_timer
  1835  03BB                     _init_timer:	
  1836  03BB                     l1171:	
  1837                           ;incstack = 0
  1838                           ; Regs used in _init_timer: [status,2]
  1839                           
  1840                           
  1841                           ;init.c: 62:     TMR0=0;
  1842  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  1843  03BC  1303               	bcf	3,6	;RP1=0, select bank0
  1844  03BD  0181               	clrf	1	;volatile
  1845  03BE                     l1173:	
  1846                           
  1847                           ;init.c: 70:     INTCONbits.GIE = 1;
  1848  03BE  178B               	bsf	11,7	;volatile
  1849  03BF                     l1175:	
  1850                           
  1851                           ;init.c: 71:     INTCONbits.TMR0IE = 1;
  1852  03BF  168B               	bsf	11,5	;volatile
  1853  03C0                     l1177:	
  1854                           
  1855                           ;init.c: 72:     INTCONbits.TMR0IF = 0;
  1856  03C0  110B               	bcf	11,2	;volatile
  1857  03C1                     l1179:	
  1858                           
  1859                           ;init.c: 81:     OPTION_REGbits.PSA = 1;
  1860  03C1  1683               	bsf	3,5	;RP0=1, select bank1
  1861  03C2  1303               	bcf	3,6	;RP1=0, select bank1
  1862  03C3  1581               	bsf	1,3	;volatile
  1863  03C4                     l1181:	
  1864                           
  1865                           ;init.c: 82:     OPTION_REGbits.PS0 = 1;
  1866  03C4  1401               	bsf	1,0	;volatile
  1867  03C5                     l1183:	
  1868                           
  1869                           ;init.c: 83:     OPTION_REGbits.PS1 = 1;
  1870  03C5  1481               	bsf	1,1	;volatile
  1871  03C6                     l1185:	
  1872                           
  1873                           ;init.c: 84:     OPTION_REGbits.PS2 = 1;
  1874  03C6  1501               	bsf	1,2	;volatile
  1875  03C7                     l1187:	
  1876                           
  1877                           ;init.c: 85:     OPTION_REGbits.T0CS = 0;
  1878  03C7  1281               	bcf	1,5	;volatile
  1879  03C8                     l36:	
  1880  03C8  0008               	return
  1881  03C9                     __end_of_init_timer:	
  1882                           
  1883                           	psect	text10
  1884  03D6                     __ptext10:	
  1885 ;; *************** function _init_pines *****************
  1886 ;; Defined at:
  1887 ;;		line 44 in file "init.c"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;		None
  1890 ;; Auto vars:     Size  Location     Type
  1891 ;;		None
  1892 ;; Return value:  Size  Location     Type
  1893 ;;                  1    wreg      void 
  1894 ;; Registers used:
  1895 ;;		status,2, status,0, pclath, cstack
  1896 ;; Tracked objects:
  1897 ;;		On entry : 0/0
  1898 ;;		On exit  : 0/0
  1899 ;;		Unchanged: 0/0
  1900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1901 ;;      Params:         0       0       0       0       0
  1902 ;;      Locals:         0       0       0       0       0
  1903 ;;      Temps:          0       0       0       0       0
  1904 ;;      Totals:         0       0       0       0       0
  1905 ;;Total ram usage:        0 bytes
  1906 ;; Hardware stack levels used:    1
  1907 ;; Hardware stack levels required when called:    4
  1908 ;; This function calls:
  1909 ;;		_init_pines_col
  1910 ;;		_init_pines_fil
  1911 ;; This function is called by:
  1912 ;;		_main
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916                           
  1917                           ;psect for function _init_pines
  1918  03D6                     _init_pines:	
  1919  03D6                     l1167:	
  1920                           ;incstack = 0
  1921                           ; Regs used in _init_pines: [status,2+status,0+pclath+cstack]
  1922                           
  1923                           
  1924                           ;init.c: 46:     init_pines_fil();
  1925  03D6  120A  118A  23C9  120A  118A  	fcall	_init_pines_fil
  1926                           
  1927                           ;init.c: 47:     init_pines_col();
  1928  03DB  120A  118A  23A8  120A  118A  	fcall	_init_pines_col
  1929  03E0                     l30:	
  1930  03E0  0008               	return
  1931  03E1                     __end_of_init_pines:	
  1932                           
  1933                           	psect	text11
  1934  03C9                     __ptext11:	
  1935 ;; *************** function _init_pines_fil *****************
  1936 ;; Defined at:
  1937 ;;		line 17 in file "init.c"
  1938 ;; Parameters:    Size  Location     Type
  1939 ;;		None
  1940 ;; Auto vars:     Size  Location     Type
  1941 ;;		None
  1942 ;; Return value:  Size  Location     Type
  1943 ;;                  1    wreg      void 
  1944 ;; Registers used:
  1945 ;;		None
  1946 ;; Tracked objects:
  1947 ;;		On entry : 0/0
  1948 ;;		On exit  : 0/0
  1949 ;;		Unchanged: 0/0
  1950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1951 ;;      Params:         0       0       0       0       0
  1952 ;;      Locals:         0       0       0       0       0
  1953 ;;      Temps:          0       0       0       0       0
  1954 ;;      Totals:         0       0       0       0       0
  1955 ;;Total ram usage:        0 bytes
  1956 ;; Hardware stack levels used:    1
  1957 ;; Hardware stack levels required when called:    3
  1958 ;; This function calls:
  1959 ;;		Nothing
  1960 ;; This function is called by:
  1961 ;;		_init_pines
  1962 ;; This function uses a non-reentrant model
  1963 ;;
  1964                           
  1965                           
  1966                           ;psect for function _init_pines_fil
  1967  03C9                     _init_pines_fil:	
  1968  03C9                     l1141:	
  1969                           ;incstack = 0
  1970                           ; Regs used in _init_pines_fil: []
  1971                           
  1972                           
  1973                           ;init.c: 19:     TRISCbits.TRISC4 = 0;
  1974  03C9  1683               	bsf	3,5	;RP0=1, select bank1
  1975  03CA  1303               	bcf	3,6	;RP1=0, select bank1
  1976  03CB  1207               	bcf	7,4	;volatile
  1977                           
  1978                           ;init.c: 20:     TRISCbits.TRISC5 = 0;
  1979  03CC  1287               	bcf	7,5	;volatile
  1980                           
  1981                           ;init.c: 21:     TRISCbits.TRISC6 = 0;
  1982  03CD  1307               	bcf	7,6	;volatile
  1983                           
  1984                           ;init.c: 22:     TRISCbits.TRISC7 = 0;
  1985  03CE  1387               	bcf	7,7	;volatile
  1986                           
  1987                           ;init.c: 24:     PORTCbits.RC4 = 0;
  1988  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  1989  03D0  1303               	bcf	3,6	;RP1=0, select bank0
  1990  03D1  1207               	bcf	7,4	;volatile
  1991                           
  1992                           ;init.c: 25:     PORTCbits.RC5 = 0;
  1993  03D2  1287               	bcf	7,5	;volatile
  1994                           
  1995                           ;init.c: 26:     PORTCbits.RC6 = 0;
  1996  03D3  1307               	bcf	7,6	;volatile
  1997                           
  1998                           ;init.c: 27:     PORTCbits.RC7 = 0;
  1999  03D4  1387               	bcf	7,7	;volatile
  2000  03D5                     l24:	
  2001  03D5  0008               	return
  2002  03D6                     __end_of_init_pines_fil:	
  2003                           
  2004                           	psect	text12
  2005  03A8                     __ptext12:	
  2006 ;; *************** function _init_pines_col *****************
  2007 ;; Defined at:
  2008 ;;		line 30 in file "init.c"
  2009 ;; Parameters:    Size  Location     Type
  2010 ;;		None
  2011 ;; Auto vars:     Size  Location     Type
  2012 ;;		None
  2013 ;; Return value:  Size  Location     Type
  2014 ;;                  1    wreg      void 
  2015 ;; Registers used:
  2016 ;;		None
  2017 ;; Tracked objects:
  2018 ;;		On entry : 0/0
  2019 ;;		On exit  : 0/0
  2020 ;;		Unchanged: 0/0
  2021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2022 ;;      Params:         0       0       0       0       0
  2023 ;;      Locals:         0       0       0       0       0
  2024 ;;      Temps:          0       0       0       0       0
  2025 ;;      Totals:         0       0       0       0       0
  2026 ;;Total ram usage:        0 bytes
  2027 ;; Hardware stack levels used:    1
  2028 ;; Hardware stack levels required when called:    3
  2029 ;; This function calls:
  2030 ;;		Nothing
  2031 ;; This function is called by:
  2032 ;;		_init_pines
  2033 ;; This function uses a non-reentrant model
  2034 ;;
  2035                           
  2036                           
  2037                           ;psect for function _init_pines_col
  2038  03A8                     _init_pines_col:	
  2039  03A8                     l1143:	
  2040                           ;incstack = 0
  2041                           ; Regs used in _init_pines_col: []
  2042                           
  2043                           
  2044                           ;init.c: 31:     TRISBbits.TRISB0 = 0;
  2045  03A8  1683               	bsf	3,5	;RP0=1, select bank1
  2046  03A9  1303               	bcf	3,6	;RP1=0, select bank1
  2047  03AA  1006               	bcf	6,0	;volatile
  2048                           
  2049                           ;init.c: 32:     PORTBbits.RB0 = 0;
  2050  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  2051  03AC  1303               	bcf	3,6	;RP1=0, select bank0
  2052  03AD  1006               	bcf	6,0	;volatile
  2053                           
  2054                           ;init.c: 34:     TRISDbits.TRISD4 = 0;
  2055  03AE  1683               	bsf	3,5	;RP0=1, select bank1
  2056  03AF  1303               	bcf	3,6	;RP1=0, select bank1
  2057  03B0  1208               	bcf	8,4	;volatile
  2058                           
  2059                           ;init.c: 35:     TRISDbits.TRISD5 = 0;
  2060  03B1  1288               	bcf	8,5	;volatile
  2061                           
  2062                           ;init.c: 36:     TRISDbits.TRISD6 = 0;
  2063  03B2  1308               	bcf	8,6	;volatile
  2064                           
  2065                           ;init.c: 37:     TRISDbits.TRISD7 = 0;
  2066  03B3  1388               	bcf	8,7	;volatile
  2067                           
  2068                           ;init.c: 39:     PORTDbits.RD4 = 0;
  2069  03B4  1283               	bcf	3,5	;RP0=0, select bank0
  2070  03B5  1303               	bcf	3,6	;RP1=0, select bank0
  2071  03B6  1208               	bcf	8,4	;volatile
  2072                           
  2073                           ;init.c: 40:     PORTDbits.RD5 = 0;
  2074  03B7  1288               	bcf	8,5	;volatile
  2075                           
  2076                           ;init.c: 41:     PORTDbits.RD6 = 0;
  2077  03B8  1308               	bcf	8,6	;volatile
  2078                           
  2079                           ;init.c: 42:     PORTDbits.RD7 = 0;
  2080  03B9  1388               	bcf	8,7	;volatile
  2081  03BA                     l27:	
  2082  03BA  0008               	return
  2083  03BB                     __end_of_init_pines_col:	
  2084                           
  2085                           	psect	text13
  2086  03E9                     __ptext13:	
  2087 ;; *************** function _init_interrupt *****************
  2088 ;; Defined at:
  2089 ;;		line 51 in file "init.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;		None
  2092 ;; Auto vars:     Size  Location     Type
  2093 ;;		None
  2094 ;; Return value:  Size  Location     Type
  2095 ;;                  1    wreg      void 
  2096 ;; Registers used:
  2097 ;;		None
  2098 ;; Tracked objects:
  2099 ;;		On entry : 0/0
  2100 ;;		On exit  : 0/0
  2101 ;;		Unchanged: 0/0
  2102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2103 ;;      Params:         0       0       0       0       0
  2104 ;;      Locals:         0       0       0       0       0
  2105 ;;      Temps:          0       0       0       0       0
  2106 ;;      Totals:         0       0       0       0       0
  2107 ;;Total ram usage:        0 bytes
  2108 ;; Hardware stack levels used:    1
  2109 ;; Hardware stack levels required when called:    3
  2110 ;; This function calls:
  2111 ;;		Nothing
  2112 ;; This function is called by:
  2113 ;;		_main
  2114 ;; This function uses a non-reentrant model
  2115 ;;
  2116                           
  2117                           
  2118                           ;psect for function _init_interrupt
  2119  03E9                     _init_interrupt:	
  2120  03E9                     l1169:	
  2121                           ;incstack = 0
  2122                           ; Regs used in _init_interrupt: []
  2123                           
  2124                           
  2125                           ;init.c: 52:     INTCONbits.GIE = 1;
  2126  03E9  178B               	bsf	11,7	;volatile
  2127                           
  2128                           ;init.c: 53:     INTCONbits.PEIE = 1;
  2129  03EA  170B               	bsf	11,6	;volatile
  2130                           
  2131                           ;init.c: 54:     INTCONbits.RBIE = 1;
  2132  03EB  158B               	bsf	11,3	;volatile
  2133                           
  2134                           ;init.c: 55:     INTCONbits.RBIF = 0;
  2135  03EC  100B               	bcf	11,0	;volatile
  2136                           
  2137                           ;init.c: 57:     OPTION_REGbits.nRBPU = 0;
  2138  03ED  1683               	bsf	3,5	;RP0=1, select bank1
  2139  03EE  1303               	bcf	3,6	;RP1=0, select bank1
  2140  03EF  1381               	bcf	1,7	;volatile
  2141  03F0                     l33:	
  2142  03F0  0008               	return
  2143  03F1                     __end_of_init_interrupt:	
  2144                           
  2145                           	psect	text14
  2146  0112                     __ptext14:	
  2147 ;; *************** function _Timer0_ISR *****************
  2148 ;; Defined at:
  2149 ;;		line 56 in file "mainsource.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;		None
  2152 ;; Auto vars:     Size  Location     Type
  2153 ;;		None
  2154 ;; Return value:  Size  Location     Type
  2155 ;;                  1    wreg      void 
  2156 ;; Registers used:
  2157 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2158 ;; Tracked objects:
  2159 ;;		On entry : 0/0
  2160 ;;		On exit  : 0/0
  2161 ;;		Unchanged: 0/0
  2162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2163 ;;      Params:         0       0       0       0       0
  2164 ;;      Locals:         0       0       0       0       0
  2165 ;;      Temps:          0       4       0       0       0
  2166 ;;      Totals:         0       4       0       0       0
  2167 ;;Total ram usage:        4 bytes
  2168 ;; Hardware stack levels used:    1
  2169 ;; Hardware stack levels required when called:    2
  2170 ;; This function calls:
  2171 ;;		___awmod
  2172 ;;		_rand
  2173 ;; This function is called by:
  2174 ;;		Interrupt level 1
  2175 ;; This function uses a non-reentrant model
  2176 ;;
  2177                           
  2178                           
  2179                           ;psect for function _Timer0_ISR
  2180  0112                     _Timer0_ISR:	
  2181  0112                     i1l1089:	
  2182                           
  2183                           ;mainsource.c: 58:     if(INTCONbits.TMR0IF){
  2184  0112  1D0B               	btfss	11,2	;volatile
  2185  0113  2915               	goto	u58_21
  2186  0114  2916               	goto	u58_20
  2187  0115                     u58_21:	
  2188  0115  295A               	goto	i1l81
  2189  0116                     u58_20:	
  2190  0116                     i1l1091:	
  2191                           
  2192                           ;mainsource.c: 60:         INTCONbits.TMR0IF=0;
  2193  0116  110B               	bcf	11,2	;volatile
  2194  0117                     i1l1093:	
  2195                           
  2196                           ;mainsource.c: 61:         counter ++;
  2197  0117  3001               	movlw	1
  2198  0118  07C4               	addwf	_counter,f
  2199  0119  1803               	skipnc
  2200  011A  0AC5               	incf	_counter+1,f
  2201  011B  3000               	movlw	0
  2202  011C  07C5               	addwf	_counter+1,f
  2203  011D                     i1l1095:	
  2204                           
  2205                           ;mainsource.c: 62:         if(counter >= 3906){
  2206  011D  0845               	movf	_counter+1,w
  2207  011E  3A80               	xorlw	128
  2208  011F  00FF               	movwf	btemp+1
  2209  0120  308F               	movlw	143
  2210  0121  027F               	subwf	btemp+1,w
  2211  0122  1D03               	skipz
  2212  0123  2926               	goto	u59_25
  2213  0124  3042               	movlw	66
  2214  0125  0244               	subwf	_counter,w
  2215  0126                     u59_25:	
  2216  0126  1C03               	skipc
  2217  0127  2929               	goto	u59_21
  2218  0128  292A               	goto	u59_20
  2219  0129                     u59_21:	
  2220  0129  2967               	goto	i1l87
  2221  012A                     u59_20:	
  2222  012A                     i1l1097:	
  2223                           
  2224                           ;mainsource.c: 63:             PORTBbits.RB0 = led;
  2225  012A  1283               	bcf	3,5	;RP0=0, select bank0
  2226  012B  1303               	bcf	3,6	;RP1=0, select bank0
  2227  012C  0C48               	rrf	_led,w
  2228  012D  1C03               	skipc
  2229  012E  1006               	bcf	6,0	;volatile
  2230  012F  1803               	skipnc
  2231  0130  1406               	bsf	6,0	;volatile
  2232  0131                     i1l1099:	
  2233                           
  2234                           ;mainsource.c: 64:             led= ~led;
  2235  0131  09C8               	comf	_led,f
  2236  0132                     i1l1101:	
  2237                           
  2238                           ;mainsource.c: 65:             ficha_pos--;
  2239  0132  3001               	movlw	1
  2240  0133  02DD               	subwf	_ficha_pos,f
  2241                           
  2242                           ;mainsource.c: 66:             counter=0;
  2243  0134  01C4               	clrf	_counter
  2244  0135  01C5               	clrf	_counter+1
  2245  0136                     i1l1103:	
  2246                           
  2247                           ;mainsource.c: 67:             if(ficha_pos==0){
  2248  0136  085D               	movf	_ficha_pos,w
  2249  0137  1D03               	btfss	3,2
  2250  0138  293A               	goto	u60_21
  2251  0139  293B               	goto	u60_20
  2252  013A                     u60_21:	
  2253  013A  2967               	goto	i1l87
  2254  013B                     u60_20:	
  2255  013B                     i1l1105:	
  2256                           
  2257                           ;mainsource.c: 68:                 ficha_pos=16;
  2258  013B  3010               	movlw	16
  2259  013C  00AD               	movwf	??_Timer0_ISR
  2260  013D  082D               	movf	??_Timer0_ISR,w
  2261  013E  00DD               	movwf	_ficha_pos
  2262  013F                     i1l1107:	
  2263                           
  2264                           ;mainsource.c: 69:                 ficha_actual = rand() % 5;
  2265  013F  3005               	movlw	5
  2266  0140  00A7               	movwf	___awmod@divisor
  2267  0141  3000               	movlw	0
  2268  0142  00A8               	movwf	___awmod@divisor+1
  2269  0143  120A  118A  2264  120A  118A  	fcall	_rand
  2270  0148  1283               	bcf	3,5	;RP0=0, select bank0
  2271  0149  1303               	bcf	3,6	;RP1=0, select bank0
  2272  014A  0821               	movf	?_rand+1,w
  2273  014B  00AA               	movwf	___awmod@dividend+1
  2274  014C  0820               	movf	?_rand,w
  2275  014D  00A9               	movwf	___awmod@dividend
  2276  014E  120A  118A  2172  120A  118A  	fcall	___awmod
  2277  0153  1283               	bcf	3,5	;RP0=0, select bank0
  2278  0154  1303               	bcf	3,6	;RP1=0, select bank0
  2279  0155  0827               	movf	?___awmod,w
  2280  0156  00AD               	movwf	??_Timer0_ISR
  2281  0157  082D               	movf	??_Timer0_ISR,w
  2282  0158  00C7               	movwf	_ficha_actual
  2283  0159  2967               	goto	i1l87
  2284  015A                     i1l81:	
  2285                           ;mainsource.c: 73:     else if(INTCONbits.RBIF){
  2286                           
  2287  015A  1C0B               	btfss	11,0	;volatile
  2288  015B  295D               	goto	u61_21
  2289  015C  295E               	goto	u61_20
  2290  015D                     u61_21:	
  2291  015D  2967               	goto	i1l87
  2292  015E                     u61_20:	
  2293  015E                     i1l1109:	
  2294                           
  2295                           ;mainsource.c: 74:         if(PORTBbits.RB5 == 0){
  2296  015E  1A86               	btfsc	6,5	;volatile
  2297  015F  2961               	goto	u62_21
  2298  0160  2962               	goto	u62_20
  2299  0161                     u62_21:	
  2300  0161  2966               	goto	i1l1113
  2301  0162                     u62_20:	
  2302  0162                     i1l1111:	
  2303                           
  2304                           ;mainsource.c: 75:             ficha_pos=16;
  2305  0162  3010               	movlw	16
  2306  0163  00AD               	movwf	??_Timer0_ISR
  2307  0164  082D               	movf	??_Timer0_ISR,w
  2308  0165  00DD               	movwf	_ficha_pos
  2309  0166                     i1l1113:	
  2310                           
  2311                           ;mainsource.c: 77:         INTCONbits.RBIF=0;
  2312  0166  100B               	bcf	11,0	;volatile
  2313  0167                     i1l87:	
  2314  0167  1283               	bcf	3,5	;RP0=0, select bank0
  2315  0168  1303               	bcf	3,6	;RP1=0, select bank0
  2316  0169  0830               	movf	??_Timer0_ISR+3,w
  2317  016A  00FF               	movwf	btemp+1
  2318  016B  082F               	movf	??_Timer0_ISR+2,w
  2319  016C  008A               	movwf	10
  2320  016D  0E2E               	swapf	(??_Timer0_ISR+1)^0,w
  2321  016E  0083               	movwf	3
  2322  016F  0EFE               	swapf	btemp,f
  2323  0170  0E7E               	swapf	btemp,w
  2324  0171  0009               	retfie
  2325  0172                     __end_of_Timer0_ISR:	
  2326                           
  2327                           	psect	intentry
  2328  0004                     __pintentry:	
  2329                           ;incstack = 0
  2330                           ; Regs used in _Timer0_ISR: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2331                           
  2332  0004                     interrupt_function:	
  2333  007E                     saved_w	set	btemp
  2334  0004  00FE               	movwf	btemp
  2335  0005  0E03               	swapf	3,w
  2336  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2337  0007  1303               	bcf	3,6	;RP1=0, select bank0
  2338  0008  00AE               	movwf	??_Timer0_ISR+1
  2339  0009  080A               	movf	10,w
  2340  000A  00AF               	movwf	??_Timer0_ISR+2
  2341  000B  087F               	movf	btemp+1,w
  2342  000C  00B0               	movwf	??_Timer0_ISR+3
  2343  000D  120A  118A  2912   	ljmp	_Timer0_ISR
  2344                           
  2345                           	psect	text15
  2346  0264                     __ptext15:	
  2347 ;; *************** function _rand *****************
  2348 ;; Defined at:
  2349 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  2350 ;; Parameters:    Size  Location     Type
  2351 ;;		None
  2352 ;; Auto vars:     Size  Location     Type
  2353 ;;		None
  2354 ;; Return value:  Size  Location     Type
  2355 ;;                  2    0[BANK0 ] int 
  2356 ;; Registers used:
  2357 ;;		wreg, status,2, status,0, pclath, cstack
  2358 ;; Tracked objects:
  2359 ;;		On entry : 0/0
  2360 ;;		On exit  : 0/0
  2361 ;;		Unchanged: 0/0
  2362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2363 ;;      Params:         0       2       0       0       0
  2364 ;;      Locals:         0       0       0       0       0
  2365 ;;      Temps:          0       5       0       0       0
  2366 ;;      Totals:         0       7       0       0       0
  2367 ;;Total ram usage:        7 bytes
  2368 ;; Hardware stack levels used:    1
  2369 ;; Hardware stack levels required when called:    1
  2370 ;; This function calls:
  2371 ;;		___lmul
  2372 ;; This function is called by:
  2373 ;;		_Timer0_ISR
  2374 ;; This function uses a non-reentrant model
  2375 ;;
  2376                           
  2377                           
  2378                           ;psect for function _rand
  2379  0264                     _rand:	
  2380  0264                     i1l1003:	
  2381                           ;incstack = 0
  2382                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  2383                           
  2384  0264  1283               	bcf	3,5	;RP0=0, select bank0
  2385  0265  1303               	bcf	3,6	;RP1=0, select bank0
  2386  0266  085C               	movf	_randx+3,w
  2387  0267  00F3               	movwf	___lmul@multiplier+3
  2388  0268  085B               	movf	_randx+2,w
  2389  0269  00F2               	movwf	___lmul@multiplier+2
  2390  026A  085A               	movf	_randx+1,w
  2391  026B  00F1               	movwf	___lmul@multiplier+1
  2392  026C  0859               	movf	_randx,w
  2393  026D  00F0               	movwf	___lmul@multiplier
  2394  026E  3041               	movlw	65
  2395  026F  00F7               	movwf	___lmul@multiplicand+3
  2396  0270  30C6               	movlw	198
  2397  0271  00F6               	movwf	___lmul@multiplicand+2
  2398  0272  304E               	movlw	78
  2399  0273  00F5               	movwf	___lmul@multiplicand+1
  2400  0274  306D               	movlw	109
  2401  0275  00F4               	movwf	___lmul@multiplicand
  2402  0276  120A  118A  22AB  120A  118A  	fcall	___lmul
  2403  027B  0873               	movf	?___lmul+3,w
  2404  027C  1283               	bcf	3,5	;RP0=0, select bank0
  2405  027D  1303               	bcf	3,6	;RP1=0, select bank0
  2406  027E  00DC               	movwf	_randx+3
  2407  027F  0872               	movf	?___lmul+2,w
  2408  0280  00DB               	movwf	_randx+2
  2409  0281  0871               	movf	?___lmul+1,w
  2410  0282  00DA               	movwf	_randx+1
  2411  0283  0870               	movf	?___lmul,w
  2412  0284  00D9               	movwf	_randx
  2413  0285                     i1l1005:	
  2414  0285  3039               	movlw	57
  2415  0286  07D9               	addwf	_randx,f
  2416  0287  3030               	movlw	48
  2417  0288  1803               	skipnc
  2418  0289  3031               	movlw	49
  2419  028A  07DA               	addwf	_randx+1,f
  2420  028B  3000               	movlw	0
  2421  028C  1803               	skipnc
  2422  028D  3001               	movlw	1
  2423  028E  07DB               	addwf	_randx+2,f
  2424  028F  3000               	movlw	0
  2425  0290  1803               	skipnc
  2426  0291  3001               	movlw	1
  2427  0292  07DC               	addwf	_randx+3,f
  2428  0293                     i1l1007:	
  2429  0293  0859               	movf	_randx,w
  2430  0294  00A2               	movwf	??_rand
  2431  0295  085A               	movf	_randx+1,w
  2432  0296  00A3               	movwf	??_rand+1
  2433  0297  085B               	movf	_randx+2,w
  2434  0298  00A4               	movwf	??_rand+2
  2435  0299  085C               	movf	_randx+3,w
  2436  029A  00A5               	movwf	??_rand+3
  2437  029B  3010               	movlw	16
  2438  029C  00A6               	movwf	??_rand+4
  2439  029D                     u44_25:	
  2440  029D  0D25               	rlf	??_rand+3,w
  2441  029E  0CA5               	rrf	??_rand+3,f
  2442  029F  0CA4               	rrf	??_rand+2,f
  2443  02A0  0CA3               	rrf	??_rand+1,f
  2444  02A1  0CA2               	rrf	??_rand,f
  2445  02A2                     u44_20:	
  2446  02A2  0BA6               	decfsz	??_rand+4,f
  2447  02A3  2A9D               	goto	u44_25
  2448  02A4  30FF               	movlw	255
  2449  02A5  0522               	andwf	??_rand,w
  2450  02A6  00A0               	movwf	?_rand
  2451  02A7  307F               	movlw	127
  2452  02A8  0523               	andwf	??_rand+1,w
  2453  02A9  00A1               	movwf	?_rand+1
  2454  02AA                     i1l667:	
  2455  02AA  0008               	return
  2456  02AB                     __end_of_rand:	
  2457                           
  2458                           	psect	text16
  2459  02AB                     __ptext16:	
  2460 ;; *************** function ___lmul *****************
  2461 ;; Defined at:
  2462 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  2463 ;; Parameters:    Size  Location     Type
  2464 ;;  multiplier      4    0[COMMON] unsigned long 
  2465 ;;  multiplicand    4    4[COMMON] unsigned long 
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;  product         4    9[COMMON] unsigned long 
  2468 ;; Return value:  Size  Location     Type
  2469 ;;                  4    0[COMMON] unsigned long 
  2470 ;; Registers used:
  2471 ;;		wreg, status,2, status,0
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/0
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2477 ;;      Params:         8       0       0       0       0
  2478 ;;      Locals:         4       0       0       0       0
  2479 ;;      Temps:          1       0       0       0       0
  2480 ;;      Totals:        13       0       0       0       0
  2481 ;;Total ram usage:       13 bytes
  2482 ;; Hardware stack levels used:    1
  2483 ;; This function calls:
  2484 ;;		Nothing
  2485 ;; This function is called by:
  2486 ;;		_rand
  2487 ;; This function uses a non-reentrant model
  2488 ;;
  2489                           
  2490                           
  2491                           ;psect for function ___lmul
  2492  02AB                     ___lmul:	
  2493  02AB                     i1l967:	
  2494                           ;incstack = 0
  2495                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2496                           
  2497  02AB  3000               	movlw	0
  2498  02AC  00FC               	movwf	___lmul@product+3
  2499  02AD  3000               	movlw	0
  2500  02AE  00FB               	movwf	___lmul@product+2
  2501  02AF  3000               	movlw	0
  2502  02B0  00FA               	movwf	___lmul@product+1
  2503  02B1  3000               	movlw	0
  2504  02B2  00F9               	movwf	___lmul@product
  2505  02B3                     i1l969:	
  2506  02B3  1C70               	btfss	___lmul@multiplier,0
  2507  02B4  2AB6               	goto	u39_21
  2508  02B5  2AB7               	goto	u39_20
  2509  02B6                     u39_21:	
  2510  02B6  2ACE               	goto	i1l973
  2511  02B7                     u39_20:	
  2512  02B7                     i1l971:	
  2513  02B7  0874               	movf	___lmul@multiplicand,w
  2514  02B8  07F9               	addwf	___lmul@product,f
  2515  02B9  0875               	movf	___lmul@multiplicand+1,w
  2516  02BA  1103               	clrz
  2517  02BB  1803               	skipnc
  2518  02BC  3E01               	addlw	1
  2519  02BD  1903               	skipnz
  2520  02BE  2AC0               	goto	u40_21
  2521  02BF  07FA               	addwf	___lmul@product+1,f
  2522  02C0                     u40_21:	
  2523  02C0  0876               	movf	___lmul@multiplicand+2,w
  2524  02C1  1103               	clrz
  2525  02C2  1803               	skipnc
  2526  02C3  3E01               	addlw	1
  2527  02C4  1903               	skipnz
  2528  02C5  2AC7               	goto	u40_22
  2529  02C6  07FB               	addwf	___lmul@product+2,f
  2530  02C7                     u40_22:	
  2531  02C7  0877               	movf	___lmul@multiplicand+3,w
  2532  02C8  1103               	clrz
  2533  02C9  1803               	skipnc
  2534  02CA  3E01               	addlw	1
  2535  02CB  1903               	skipnz
  2536  02CC  2ACE               	goto	u40_23
  2537  02CD  07FC               	addwf	___lmul@product+3,f
  2538  02CE                     u40_23:	
  2539  02CE                     i1l973:	
  2540  02CE  3001               	movlw	1
  2541  02CF  00F8               	movwf	??___lmul
  2542  02D0                     u41_25:	
  2543  02D0  1003               	clrc
  2544  02D1  0DF4               	rlf	___lmul@multiplicand,f
  2545  02D2  0DF5               	rlf	___lmul@multiplicand+1,f
  2546  02D3  0DF6               	rlf	___lmul@multiplicand+2,f
  2547  02D4  0DF7               	rlf	___lmul@multiplicand+3,f
  2548  02D5  0BF8               	decfsz	??___lmul,f
  2549  02D6  2AD0               	goto	u41_25
  2550  02D7                     i1l975:	
  2551  02D7  3001               	movlw	1
  2552  02D8                     u42_25:	
  2553  02D8  1003               	clrc
  2554  02D9  0CF3               	rrf	___lmul@multiplier+3,f
  2555  02DA  0CF2               	rrf	___lmul@multiplier+2,f
  2556  02DB  0CF1               	rrf	___lmul@multiplier+1,f
  2557  02DC  0CF0               	rrf	___lmul@multiplier,f
  2558  02DD  3EFF               	addlw	-1
  2559  02DE  1D03               	skipz
  2560  02DF  2AD8               	goto	u42_25
  2561  02E0  0873               	movf	___lmul@multiplier+3,w
  2562  02E1  0472               	iorwf	___lmul@multiplier+2,w
  2563  02E2  0471               	iorwf	___lmul@multiplier+1,w
  2564  02E3  0470               	iorwf	___lmul@multiplier,w
  2565  02E4  1D03               	skipz
  2566  02E5  2AE7               	goto	u43_21
  2567  02E6  2AE8               	goto	u43_20
  2568  02E7                     u43_21:	
  2569  02E7  2AB3               	goto	i1l969
  2570  02E8                     u43_20:	
  2571  02E8                     i1l977:	
  2572  02E8  087C               	movf	___lmul@product+3,w
  2573  02E9  00F3               	movwf	?___lmul+3
  2574  02EA  087B               	movf	___lmul@product+2,w
  2575  02EB  00F2               	movwf	?___lmul+2
  2576  02EC  087A               	movf	___lmul@product+1,w
  2577  02ED  00F1               	movwf	?___lmul+1
  2578  02EE  0879               	movf	___lmul@product,w
  2579  02EF  00F0               	movwf	?___lmul
  2580  02F0                     i1l231:	
  2581  02F0  0008               	return
  2582  02F1                     __end_of___lmul:	
  2583                           
  2584                           	psect	text17
  2585  0172                     __ptext17:	
  2586 ;; *************** function ___awmod *****************
  2587 ;; Defined at:
  2588 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  2589 ;; Parameters:    Size  Location     Type
  2590 ;;  divisor         2    7[BANK0 ] int 
  2591 ;;  dividend        2    9[BANK0 ] int 
  2592 ;; Auto vars:     Size  Location     Type
  2593 ;;  sign            1   12[BANK0 ] unsigned char 
  2594 ;;  counter         1   11[BANK0 ] unsigned char 
  2595 ;; Return value:  Size  Location     Type
  2596 ;;                  2    7[BANK0 ] int 
  2597 ;; Registers used:
  2598 ;;		wreg, status,2, status,0
  2599 ;; Tracked objects:
  2600 ;;		On entry : 0/0
  2601 ;;		On exit  : 0/0
  2602 ;;		Unchanged: 0/0
  2603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2604 ;;      Params:         0       4       0       0       0
  2605 ;;      Locals:         0       2       0       0       0
  2606 ;;      Temps:          1       0       0       0       0
  2607 ;;      Totals:         1       6       0       0       0
  2608 ;;Total ram usage:        7 bytes
  2609 ;; Hardware stack levels used:    1
  2610 ;; This function calls:
  2611 ;;		Nothing
  2612 ;; This function is called by:
  2613 ;;		_Timer0_ISR
  2614 ;; This function uses a non-reentrant model
  2615 ;;
  2616                           
  2617                           
  2618                           ;psect for function ___awmod
  2619  0172                     ___awmod:	
  2620  0172                     i1l1051:	
  2621                           ;incstack = 0
  2622                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2623                           
  2624  0172  1283               	bcf	3,5	;RP0=0, select bank0
  2625  0173  1303               	bcf	3,6	;RP1=0, select bank0
  2626  0174  01AC               	clrf	___awmod@sign
  2627  0175                     i1l1053:	
  2628  0175  1FAA               	btfss	___awmod@dividend+1,7
  2629  0176  2978               	goto	u49_21
  2630  0177  2979               	goto	u49_20
  2631  0178                     u49_21:	
  2632  0178  2980               	goto	i1l1059
  2633  0179                     u49_20:	
  2634  0179                     i1l1055:	
  2635  0179  09A9               	comf	___awmod@dividend,f
  2636  017A  09AA               	comf	___awmod@dividend+1,f
  2637  017B  0AA9               	incf	___awmod@dividend,f
  2638  017C  1903               	skipnz
  2639  017D  0AAA               	incf	___awmod@dividend+1,f
  2640  017E                     i1l1057:	
  2641  017E  01AC               	clrf	___awmod@sign
  2642  017F  0AAC               	incf	___awmod@sign,f
  2643  0180                     i1l1059:	
  2644  0180  1FA8               	btfss	___awmod@divisor+1,7
  2645  0181  2983               	goto	u50_21
  2646  0182  2984               	goto	u50_20
  2647  0183                     u50_21:	
  2648  0183  2989               	goto	i1l1063
  2649  0184                     u50_20:	
  2650  0184                     i1l1061:	
  2651  0184  09A7               	comf	___awmod@divisor,f
  2652  0185  09A8               	comf	___awmod@divisor+1,f
  2653  0186  0AA7               	incf	___awmod@divisor,f
  2654  0187  1903               	skipnz
  2655  0188  0AA8               	incf	___awmod@divisor+1,f
  2656  0189                     i1l1063:	
  2657  0189  0827               	movf	___awmod@divisor,w
  2658  018A  0428               	iorwf	___awmod@divisor+1,w
  2659  018B  1903               	btfsc	3,2
  2660  018C  298E               	goto	u51_21
  2661  018D  298F               	goto	u51_20
  2662  018E                     u51_21:	
  2663  018E  29BE               	goto	i1l1081
  2664  018F                     u51_20:	
  2665  018F                     i1l1065:	
  2666  018F  01AB               	clrf	___awmod@counter
  2667  0190  0AAB               	incf	___awmod@counter,f
  2668  0191  299D               	goto	i1l1071
  2669  0192                     i1l1067:	
  2670  0192  3001               	movlw	1
  2671  0193                     u52_25:	
  2672  0193  1003               	clrc
  2673  0194  0DA7               	rlf	___awmod@divisor,f
  2674  0195  0DA8               	rlf	___awmod@divisor+1,f
  2675  0196  3EFF               	addlw	-1
  2676  0197  1D03               	skipz
  2677  0198  2993               	goto	u52_25
  2678  0199                     i1l1069:	
  2679  0199  3001               	movlw	1
  2680  019A  00FD               	movwf	??___awmod
  2681  019B  087D               	movf	??___awmod,w
  2682  019C  07AB               	addwf	___awmod@counter,f
  2683  019D                     i1l1071:	
  2684  019D  1FA8               	btfss	___awmod@divisor+1,7
  2685  019E  29A0               	goto	u53_21
  2686  019F  29A1               	goto	u53_20
  2687  01A0                     u53_21:	
  2688  01A0  2992               	goto	i1l1067
  2689  01A1                     u53_20:	
  2690  01A1                     i1l1073:	
  2691  01A1  0828               	movf	___awmod@divisor+1,w
  2692  01A2  022A               	subwf	___awmod@dividend+1,w
  2693  01A3  1D03               	skipz
  2694  01A4  29A7               	goto	u54_25
  2695  01A5  0827               	movf	___awmod@divisor,w
  2696  01A6  0229               	subwf	___awmod@dividend,w
  2697  01A7                     u54_25:	
  2698  01A7  1C03               	skipc
  2699  01A8  29AA               	goto	u54_21
  2700  01A9  29AB               	goto	u54_20
  2701  01AA                     u54_21:	
  2702  01AA  29B1               	goto	i1l1077
  2703  01AB                     u54_20:	
  2704  01AB                     i1l1075:	
  2705  01AB  0827               	movf	___awmod@divisor,w
  2706  01AC  02A9               	subwf	___awmod@dividend,f
  2707  01AD  0828               	movf	___awmod@divisor+1,w
  2708  01AE  1C03               	skipc
  2709  01AF  03AA               	decf	___awmod@dividend+1,f
  2710  01B0  02AA               	subwf	___awmod@dividend+1,f
  2711  01B1                     i1l1077:	
  2712  01B1  3001               	movlw	1
  2713  01B2                     u55_25:	
  2714  01B2  1003               	clrc
  2715  01B3  0CA8               	rrf	___awmod@divisor+1,f
  2716  01B4  0CA7               	rrf	___awmod@divisor,f
  2717  01B5  3EFF               	addlw	-1
  2718  01B6  1D03               	skipz
  2719  01B7  29B2               	goto	u55_25
  2720  01B8                     i1l1079:	
  2721  01B8  3001               	movlw	1
  2722  01B9  02AB               	subwf	___awmod@counter,f
  2723  01BA  1D03               	btfss	3,2
  2724  01BB  29BD               	goto	u56_21
  2725  01BC  29BE               	goto	u56_20
  2726  01BD                     u56_21:	
  2727  01BD  29A1               	goto	i1l1073
  2728  01BE                     u56_20:	
  2729  01BE                     i1l1081:	
  2730  01BE  082C               	movf	___awmod@sign,w
  2731  01BF  1903               	btfsc	3,2
  2732  01C0  29C2               	goto	u57_21
  2733  01C1  29C3               	goto	u57_20
  2734  01C2                     u57_21:	
  2735  01C2  29C8               	goto	i1l1085
  2736  01C3                     u57_20:	
  2737  01C3                     i1l1083:	
  2738  01C3  09A9               	comf	___awmod@dividend,f
  2739  01C4  09AA               	comf	___awmod@dividend+1,f
  2740  01C5  0AA9               	incf	___awmod@dividend,f
  2741  01C6  1903               	skipnz
  2742  01C7  0AAA               	incf	___awmod@dividend+1,f
  2743  01C8                     i1l1085:	
  2744  01C8  082A               	movf	___awmod@dividend+1,w
  2745  01C9  00A8               	movwf	?___awmod+1
  2746  01CA  0829               	movf	___awmod@dividend,w
  2747  01CB  00A7               	movwf	?___awmod
  2748  01CC                     i1l383:	
  2749  01CC  0008               	return
  2750  01CD                     __end_of___awmod:	
  2751  007E                     btemp	set	126	;btemp
  2752  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        86
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     36      63
    BANK1            80      0      80
    BANK3            96      6       6
    BANK2            96      0       0

Pointer List with Targets:

    updateScreen@screen	PTR unsigned int  size(1) Largest target is 16
		 -> pantalla(BANK0[16]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _Timer0_ISR in COMMON

    _Timer0_ISR->___awmod
    _rand->___lmul

Critical Paths under _main in BANK0

    _main->_updateScreen
    _updateScreen->_setFilas

Critical Paths under _Timer0_ISR in BANK0

    _Timer0_ISR->___awmod
    ___awmod->_rand

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer0_ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10     6      4    1266
                                             32 BANK0      4     0      4
                                              0 BANK3      6     6      0
                     _init_interrupt
                         _init_pines
                         _init_timer
                        _setColumnas
                           _setFilas
                       _updateScreen
 ---------------------------------------------------------------------------------
 (1) _updateScreen                                         5     5      0     563
                                             27 BANK0      5     5      0
                           _setFilas
                    _shiftBitColumna
 ---------------------------------------------------------------------------------
 (2) _shiftBitColumna                                      2     2      0      31
                                             17 BANK0      2     2      0
                     _latchClock_Col
                     _latchClock_Fil
                     _shiftClock_Col
 ---------------------------------------------------------------------------------
 (3) _latchClock_Fil                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setFilas                                            10     8      2     434
                                             17 BANK0     10     8      2
                     _shiftClock_Fil
 ---------------------------------------------------------------------------------
 (3) _shiftClock_Fil                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setColumnas                                          8     8      0     266
                                             17 BANK0      8     8      0
                     _latchClock_Col
                     _shiftClock_Col
 ---------------------------------------------------------------------------------
 (3) _shiftClock_Col                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _latchClock_Col                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_timer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_pines                                           0     0      0       0
                     _init_pines_col
                     _init_pines_fil
 ---------------------------------------------------------------------------------
 (2) _init_pines_fil                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_pines_col                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_interrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Timer0_ISR                                           4     4      0     692
                                             13 BANK0      4     4      0
                            ___awmod
                               _rand
 ---------------------------------------------------------------------------------
 (5) _rand                                                 7     5      2     244
                                              0 BANK0      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     448
                                             13 COMMON     1     1      0
                                              7 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_interrupt
   _init_pines
     _init_pines_col
     _init_pines_fil
   _init_timer
   _setColumnas
     _latchClock_Col
     _shiftClock_Col
   _setFilas
     _shiftClock_Fil
   _updateScreen
     _setFilas
       _shiftClock_Fil
     _shiftBitColumna
       _latchClock_Col
       _latchClock_Fil
       _shiftClock_Col

 _Timer0_ISR (ROOT)
   ___awmod
     _rand (ARG)
       ___lmul
   _rand
     ___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      6       6       9        6.3%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      50       7      100.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     24      3F       5       78.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      A3      12        0.0%
ABS                  0      0      A3       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat May 02 00:06:18 2020

                       pc 0002               __CFG_CP$OFF 0000          ??_init_interrupt 0031  
                      l30 03E0                        l24 03D5                        l33 03F0  
                      l27 03BA                        l36 03C8                        fsr 0004  
        ??_init_pines_col 0031          ??_init_pines_fil 0031                       l100 0335  
                     l120 040D                       l113 0263                       l105 03FC  
                     l123 0408                       l131 0394                       l108 0402  
                     l128 0378              __CFG_CPD$OFF 0000                       u710 0230  
                     u711 022F                       u715 022C                       u724 023D  
                     u725 023A                       u805 0094                       u734 024A  
                     u814 00A6                       u735 0247                       u815 00A3  
                     u760 0373                       u744 0343                       u761 0372  
                     u745 0341                       u825 00BF                       u754 034D  
                     u770 02FA                       u834 00D1                       u755 034B  
                     u771 02F9                       u835 00CE                       u765 036F  
                     u845 00EA                       u854 00FC                       u855 00F9  
                     u785 0068                       u794 007B                       u795 0078  
                     _led 0048                       fsr0 0004                       indf 0000  
            ___awmod@sign 002C              __CFG_FOSC$XT 0000              __CFG_LVP$OFF 0000  
                    l1201 033B                      l1211 0373                      l1203 0354  
                    l1141 03C9                      l1205 0359                      l1133 03F7  
                    l1221 030D                      l1143 03A8                      l1207 035E  
                    l1135 03FD                      l1151 0231                      l1223 0314  
                    l1215 02F4                      l1231 0049                      l1137 0409  
                    l1209 0366                      l1153 0255                      l1145 021D  
                    l1161 0385                      l1225 0318                      l1217 02FA  
                    l1241 00B2                      l1233 0049                      l1171 03BB  
                    l1139 0403                      l1155 025A                      l1147 0223  
                    l1163 038A                      l1227 032F                      l1219 02FC  
                    l1243 00DD                      l1235 004F                      l1181 03C4  
                    l1173 03BE                      l1165 038F                      l1245 0108  
                    l1237 0059                      l1229 003A                      l1167 03D6  
                    l1183 03C5                      l1175 03BF                      l1191 0339  
                    l1159 037C                      l1239 0087                      l1169 03E9  
                    l1185 03C6                      l1177 03C0                      l1193 0339  
                    l1187 03C7                      l1179 03C1                      l1195 0339  
                    l1189 0339                      i1l81 015A                      i1l87 0167  
                    _TMR0 0001              __CFG_WRT$OFF 0000                      _main 003A  
                    _rand 0264                      _test 00D0                      btemp 007E  
           __CFG_BOREN$ON 0000                      start 0010        shiftBitColumna@bit 0032  
                   ?_main 0040                     ?_rand 0020             __CFG_WDTE$OFF 0000  
         __end_of___awmod 01CD                     i1l231 02F0                     i1l383 01CC  
                   i1l667 02AA                     i1l971 02B7                     i1l973 02CE  
                   i1l975 02D7                     i1l967 02AB                     i1l977 02E8  
                   i1l969 02B3                     u40_21 02C0                     u40_22 02C7  
                   u40_23 02CE                     u41_25 02D0                     u50_20 0184  
                   u50_21 0183                     u42_25 02D8                     u51_20 018F  
                   u43_20 02E8                     u51_21 018E                     u43_21 02E7  
                   u44_20 02A2                     u60_20 013B                     u60_21 013A  
                   u52_25 0193                     u44_25 029D                     u53_20 01A1  
                   u61_20 015E                     u53_21 01A0                     u61_21 015D  
                   u54_20 01AB                     u62_20 0162                     u54_21 01AA  
                   u62_21 0161                     u54_25 01A7                     u39_20 02B7  
                   u39_21 02B6                     u55_25 01B2                     u56_20 01BE  
                   u56_21 01BD                     u57_20 01C3                     u49_20 0179  
                   u57_21 01C2                     u49_21 0178                     u58_20 0116  
                   u58_21 0115                     u59_20 012A                     u59_21 0129  
                   u59_25 0126       ___lmul@multiplicand 0074                     _randx 0059  
                   _tecla 0046                     pclath 000A                     status 0003  
                   wtemp0 007E           __initialization 0013              __end_of_main 0112  
            __end_of_rand 02AB            _latchClock_Fil 03F7            _latchClock_Col 0409  
 __size_of_shiftClock_Col 0006   __size_of_shiftClock_Fil 0006              ?_setColumnas 0070  
                  ??_main 0190                    ??_rand 0022                    i1l1003 0264  
                  i1l1005 0285                    i1l1101 0132                    i1l1007 0293  
                  i1l1111 0162                    i1l1103 0136                    i1l1113 0166  
                  i1l1105 013B                    i1l1051 0172                    i1l1107 013F  
                  i1l1061 0184                    i1l1053 0175                    i1l1109 015E  
                  i1l1071 019D                    i1l1063 0189                    i1l1055 0179  
                  i1l1073 01A1                    i1l1065 018F                    i1l1081 01BE  
                  i1l1057 017E                    i1l1083 01C3                    i1l1075 01AB  
                  i1l1067 0192                    i1l1059 0180                    i1l1091 0116  
                  i1l1085 01C8                    i1l1077 01B1                    i1l1069 0199  
                  i1l1093 0117                    i1l1079 01B8                    i1l1095 011D  
                  i1l1097 012A                    i1l1089 0112                    i1l1099 0131  
          __CFG_PWRTE$OFF 0000                _Timer0_ISR 0112    __end_of_latchClock_Col 040E  
  __end_of_latchClock_Fil 03FD                    ___lmul 02AB                 ??___awmod 007D  
         ___awmod@divisor 0027           ___awmod@counter 002B          __end_of_setFilas 0264  
                  saved_w 007E   __end_of__initialization 0036  __size_of_shiftBitColumna 001C  
      updateScreen@screen 003F           ?_latchClock_Col 0070           ?_latchClock_Fil 0070  
          __pcstackCOMMON 0070              __pidataBANK0 03F1              __pidataBANK1 01CD  
          _OPTION_REGbits 0081                __pbssBANK0 0044               ?_Timer0_ISR 0070  
              __pmaintext 003A                   ?___lmul 0070                __pintentry 0004  
          _shiftClock_Fil 03FD            _shiftClock_Col 0403            ___lmul@product 0079  
            _ficha_actual 0047      __size_of_setColumnas 0043                 ?_setFilas 0031  
  __end_of_shiftClock_Col 0409    __end_of_shiftClock_Fil 0403           __size_of___lmul 0046  
                 ___awmod 0172         ??_shiftBitColumna 0031                _init_pines 03D6  
              _init_timer 03BB                   __ptext1 02F1                   __ptext2 0379  
                 __ptext3 03F7                   __ptext4 021D                   __ptext5 03FD  
                 __ptext6 0336                   __ptext7 0403                   __ptext8 0409  
                 __ptext9 03BB                   _figuras 00A0                   _columna 005E  
                 _corazon 00E0                   _counter 0044          ___awmod@dividend 0029  
     __size_of_Timer0_ISR 0060   __size_of_init_interrupt 0008                   clrloop0 03E2  
    end_of_initialization 0036   __size_of_init_pines_col 0013   __size_of_init_pines_fil 000D  
              ??_setFilas 0033           ?_shiftClock_Col 0070           ?_shiftClock_Fil 0070  
               _PORTBbits 0006                 _PORTCbits 0007                 _PORTDbits 0008  
               _TRISBbits 0086                 _TRISCbits 0087                 _TRISDbits 0088  
        ??_latchClock_Col 0031          ??_latchClock_Fil 0031             ?_updateScreen 0070  
          __end_of___lmul 02F1               ?_init_pines 0070               ?_init_timer 0070  
     start_initialization 0013            ??_updateScreen 003B              ??_Timer0_ISR 002D  
                ??___lmul 0078         setFilas@reg_value 0031                init_fetch0 0395  
             __pdataBANK0 0059               __pdataBANK1 00A0                 ___latbits 0002  
           __pcstackBANK0 0020             __pcstackBANK3 0190            _init_interrupt 03E9  
      __end_of_Timer0_ISR 0172            _init_pines_fil 03C9            _init_pines_col 03A8  
     __size_of_init_pines 000B           _shiftBitColumna 0379       __size_of_init_timer 000E  
       __size_of_setFilas 0047                 _ficha_pos 005D              setColumnas@i 0037  
                ?___awmod 0027             ??_setColumnas 0031    __end_of_init_interrupt 03F1  
  __end_of_init_pines_col 03BB    __end_of_init_pines_fil 03D6         interrupt_function 0004  
        ??_shiftClock_Col 0031          ??_shiftClock_Fil 0031                 clear_ram0 03E1  
        setColumnas@valor 0035           ?_init_interrupt 0070      __end_of_updateScreen 0336  
     __end_of_setColumnas 0379           ?_init_pines_col 0070           ?_init_pines_fil 0070  
 __end_of_shiftBitColumna 0395         ___lmul@multiplier 0070          __size_of___awmod 005B  
            ??_init_pines 0031              ??_init_timer 0031                 setFilas@i 0039  
                __ptext10 03D6                  __ptext11 03C9                  __ptext12 03A8  
                __ptext13 03E9                  __ptext14 0112                  __ptext15 0264  
                __ptext16 02AB                  __ptext17 0172             __size_of_main 00D8  
           __size_of_rand 0047        __end_of_init_pines 03E1        __end_of_init_timer 03C9  
                _pantalla 0049                  _setFilas 021D                  main@argc 0040  
                main@argv 0042               _setColumnas 0336                _INTCONbits 000B  
                init_ram0 0399          ?_shiftBitColumna 0070                  intlevel1 0000  
    setColumnas@reg_value 0036   __size_of_latchClock_Col 0005   __size_of_latchClock_Fil 0006  
   __size_of_updateScreen 0045              _updateScreen 02F1  
