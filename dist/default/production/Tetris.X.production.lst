

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri May 15 16:25:01 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2
    49                           	psect	text34,local,class=CODE,merge=1,delta=2
    50                           	psect	text35,local,class=CODE,merge=1,delta=2
    51                           	psect	text36,local,class=CODE,merge=1,delta=2
    52                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
    53                           	psect	text38,local,class=CODE,merge=1,delta=2,group=1
    54                           	psect	text39,local,class=CODE,merge=1,delta=2
    55                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
    56                           	psect	text41,local,class=CODE,merge=1,delta=2
    57                           	psect	intentry,global,class=CODE,delta=2
    58                           	dabs	1,0x7E,2
    59  0000                     
    60                           ; Version 2.10
    61                           ; Generated 31/07/2019 GMT
    62                           ; 
    63                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC16F877A Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     	;# 
    95  0001                     	;# 
    96  0002                     	;# 
    97  0003                     	;# 
    98  0004                     	;# 
    99  0005                     	;# 
   100  0006                     	;# 
   101  0007                     	;# 
   102  0008                     	;# 
   103  0009                     	;# 
   104  000A                     	;# 
   105  000B                     	;# 
   106  000C                     	;# 
   107  000D                     	;# 
   108  000E                     	;# 
   109  000E                     	;# 
   110  000F                     	;# 
   111  0010                     	;# 
   112  0011                     	;# 
   113  0012                     	;# 
   114  0013                     	;# 
   115  0014                     	;# 
   116  0015                     	;# 
   117  0015                     	;# 
   118  0016                     	;# 
   119  0017                     	;# 
   120  0018                     	;# 
   121  0019                     	;# 
   122  001A                     	;# 
   123  001B                     	;# 
   124  001B                     	;# 
   125  001C                     	;# 
   126  001D                     	;# 
   127  001E                     	;# 
   128  001F                     	;# 
   129  0081                     	;# 
   130  0085                     	;# 
   131  0086                     	;# 
   132  0087                     	;# 
   133  0088                     	;# 
   134  0089                     	;# 
   135  008C                     	;# 
   136  008D                     	;# 
   137  008E                     	;# 
   138  0091                     	;# 
   139  0092                     	;# 
   140  0093                     	;# 
   141  0094                     	;# 
   142  0098                     	;# 
   143  0099                     	;# 
   144  009C                     	;# 
   145  009D                     	;# 
   146  009E                     	;# 
   147  009F                     	;# 
   148  010C                     	;# 
   149  010D                     	;# 
   150  010E                     	;# 
   151  010F                     	;# 
   152  018C                     	;# 
   153  018D                     	;# 
   154  0000                     	;# 
   155  0001                     	;# 
   156  0002                     	;# 
   157  0003                     	;# 
   158  0004                     	;# 
   159  0005                     	;# 
   160  0006                     	;# 
   161  0007                     	;# 
   162  0008                     	;# 
   163  0009                     	;# 
   164  000A                     	;# 
   165  000B                     	;# 
   166  000C                     	;# 
   167  000D                     	;# 
   168  000E                     	;# 
   169  000E                     	;# 
   170  000F                     	;# 
   171  0010                     	;# 
   172  0011                     	;# 
   173  0012                     	;# 
   174  0013                     	;# 
   175  0014                     	;# 
   176  0015                     	;# 
   177  0015                     	;# 
   178  0016                     	;# 
   179  0017                     	;# 
   180  0018                     	;# 
   181  0019                     	;# 
   182  001A                     	;# 
   183  001B                     	;# 
   184  001B                     	;# 
   185  001C                     	;# 
   186  001D                     	;# 
   187  001E                     	;# 
   188  001F                     	;# 
   189  0081                     	;# 
   190  0085                     	;# 
   191  0086                     	;# 
   192  0087                     	;# 
   193  0088                     	;# 
   194  0089                     	;# 
   195  008C                     	;# 
   196  008D                     	;# 
   197  008E                     	;# 
   198  0091                     	;# 
   199  0092                     	;# 
   200  0093                     	;# 
   201  0094                     	;# 
   202  0098                     	;# 
   203  0099                     	;# 
   204  009C                     	;# 
   205  009D                     	;# 
   206  009E                     	;# 
   207  009F                     	;# 
   208  010C                     	;# 
   209  010D                     	;# 
   210  010E                     	;# 
   211  010F                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  0000                     	;# 
   215  0001                     	;# 
   216  0002                     	;# 
   217  0003                     	;# 
   218  0004                     	;# 
   219  0005                     	;# 
   220  0006                     	;# 
   221  0007                     	;# 
   222  0008                     	;# 
   223  0009                     	;# 
   224  000A                     	;# 
   225  000B                     	;# 
   226  000C                     	;# 
   227  000D                     	;# 
   228  000E                     	;# 
   229  000E                     	;# 
   230  000F                     	;# 
   231  0010                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0013                     	;# 
   235  0014                     	;# 
   236  0015                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  001D                     	;# 
   247  001E                     	;# 
   248  001F                     	;# 
   249  0081                     	;# 
   250  0085                     	;# 
   251  0086                     	;# 
   252  0087                     	;# 
   253  0088                     	;# 
   254  0089                     	;# 
   255  008C                     	;# 
   256  008D                     	;# 
   257  008E                     	;# 
   258  0091                     	;# 
   259  0092                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009C                     	;# 
   265  009D                     	;# 
   266  009E                     	;# 
   267  009F                     	;# 
   268  010C                     	;# 
   269  010D                     	;# 
   270  010E                     	;# 
   271  010F                     	;# 
   272  018C                     	;# 
   273  018D                     	;# 
   274  0000                     	;# 
   275  0001                     	;# 
   276  0002                     	;# 
   277  0003                     	;# 
   278  0004                     	;# 
   279  0005                     	;# 
   280  0006                     	;# 
   281  0007                     	;# 
   282  0008                     	;# 
   283  0009                     	;# 
   284  000A                     	;# 
   285  000B                     	;# 
   286  000C                     	;# 
   287  000D                     	;# 
   288  000E                     	;# 
   289  000E                     	;# 
   290  000F                     	;# 
   291  0010                     	;# 
   292  0011                     	;# 
   293  0012                     	;# 
   294  0013                     	;# 
   295  0014                     	;# 
   296  0015                     	;# 
   297  0015                     	;# 
   298  0016                     	;# 
   299  0017                     	;# 
   300  0018                     	;# 
   301  0019                     	;# 
   302  001A                     	;# 
   303  001B                     	;# 
   304  001B                     	;# 
   305  001C                     	;# 
   306  001D                     	;# 
   307  001E                     	;# 
   308  001F                     	;# 
   309  0081                     	;# 
   310  0085                     	;# 
   311  0086                     	;# 
   312  0087                     	;# 
   313  0088                     	;# 
   314  0089                     	;# 
   315  008C                     	;# 
   316  008D                     	;# 
   317  008E                     	;# 
   318  0091                     	;# 
   319  0092                     	;# 
   320  0093                     	;# 
   321  0094                     	;# 
   322  0098                     	;# 
   323  0099                     	;# 
   324  009C                     	;# 
   325  009D                     	;# 
   326  009E                     	;# 
   327  009F                     	;# 
   328  010C                     	;# 
   329  010D                     	;# 
   330  010E                     	;# 
   331  010F                     	;# 
   332  018C                     	;# 
   333  018D                     	;# 
   334  0000                     	;# 
   335  0001                     	;# 
   336  0002                     	;# 
   337  0003                     	;# 
   338  0004                     	;# 
   339  0005                     	;# 
   340  0006                     	;# 
   341  0007                     	;# 
   342  0008                     	;# 
   343  0009                     	;# 
   344  000A                     	;# 
   345  000B                     	;# 
   346  000C                     	;# 
   347  000D                     	;# 
   348  000E                     	;# 
   349  000E                     	;# 
   350  000F                     	;# 
   351  0010                     	;# 
   352  0011                     	;# 
   353  0012                     	;# 
   354  0013                     	;# 
   355  0014                     	;# 
   356  0015                     	;# 
   357  0015                     	;# 
   358  0016                     	;# 
   359  0017                     	;# 
   360  0018                     	;# 
   361  0019                     	;# 
   362  001A                     	;# 
   363  001B                     	;# 
   364  001B                     	;# 
   365  001C                     	;# 
   366  001D                     	;# 
   367  001E                     	;# 
   368  001F                     	;# 
   369  0081                     	;# 
   370  0085                     	;# 
   371  0086                     	;# 
   372  0087                     	;# 
   373  0088                     	;# 
   374  0089                     	;# 
   375  008C                     	;# 
   376  008D                     	;# 
   377  008E                     	;# 
   378  0091                     	;# 
   379  0092                     	;# 
   380  0093                     	;# 
   381  0094                     	;# 
   382  0098                     	;# 
   383  0099                     	;# 
   384  009C                     	;# 
   385  009D                     	;# 
   386  009E                     	;# 
   387  009F                     	;# 
   388  010C                     	;# 
   389  010D                     	;# 
   390  010E                     	;# 
   391  010F                     	;# 
   392  018C                     	;# 
   393  018D                     	;# 
   394  0000                     	;# 
   395  0001                     	;# 
   396  0002                     	;# 
   397  0003                     	;# 
   398  0004                     	;# 
   399  0005                     	;# 
   400  0006                     	;# 
   401  0007                     	;# 
   402  0008                     	;# 
   403  0009                     	;# 
   404  000A                     	;# 
   405  000B                     	;# 
   406  000C                     	;# 
   407  000D                     	;# 
   408  000E                     	;# 
   409  000E                     	;# 
   410  000F                     	;# 
   411  0010                     	;# 
   412  0011                     	;# 
   413  0012                     	;# 
   414  0013                     	;# 
   415  0014                     	;# 
   416  0015                     	;# 
   417  0015                     	;# 
   418  0016                     	;# 
   419  0017                     	;# 
   420  0018                     	;# 
   421  0019                     	;# 
   422  001A                     	;# 
   423  001B                     	;# 
   424  001B                     	;# 
   425  001C                     	;# 
   426  001D                     	;# 
   427  001E                     	;# 
   428  001F                     	;# 
   429  0081                     	;# 
   430  0085                     	;# 
   431  0086                     	;# 
   432  0087                     	;# 
   433  0088                     	;# 
   434  0089                     	;# 
   435  008C                     	;# 
   436  008D                     	;# 
   437  008E                     	;# 
   438  0091                     	;# 
   439  0092                     	;# 
   440  0093                     	;# 
   441  0094                     	;# 
   442  0098                     	;# 
   443  0099                     	;# 
   444  009C                     	;# 
   445  009D                     	;# 
   446  009E                     	;# 
   447  009F                     	;# 
   448  010C                     	;# 
   449  010D                     	;# 
   450  010E                     	;# 
   451  010F                     	;# 
   452  018C                     	;# 
   453  018D                     	;# 
   454  0000                     	;# 
   455  0001                     	;# 
   456  0002                     	;# 
   457  0003                     	;# 
   458  0004                     	;# 
   459  0005                     	;# 
   460  0006                     	;# 
   461  0007                     	;# 
   462  0008                     	;# 
   463  0009                     	;# 
   464  000A                     	;# 
   465  000B                     	;# 
   466  000C                     	;# 
   467  000D                     	;# 
   468  000E                     	;# 
   469  000E                     	;# 
   470  000F                     	;# 
   471  0010                     	;# 
   472  0011                     	;# 
   473  0012                     	;# 
   474  0013                     	;# 
   475  0014                     	;# 
   476  0015                     	;# 
   477  0015                     	;# 
   478  0016                     	;# 
   479  0017                     	;# 
   480  0018                     	;# 
   481  0019                     	;# 
   482  001A                     	;# 
   483  001B                     	;# 
   484  001B                     	;# 
   485  001C                     	;# 
   486  001D                     	;# 
   487  001E                     	;# 
   488  001F                     	;# 
   489  0081                     	;# 
   490  0085                     	;# 
   491  0086                     	;# 
   492  0087                     	;# 
   493  0088                     	;# 
   494  0089                     	;# 
   495  008C                     	;# 
   496  008D                     	;# 
   497  008E                     	;# 
   498  0091                     	;# 
   499  0092                     	;# 
   500  0093                     	;# 
   501  0094                     	;# 
   502  0098                     	;# 
   503  0099                     	;# 
   504  009C                     	;# 
   505  009D                     	;# 
   506  009E                     	;# 
   507  009F                     	;# 
   508  010C                     	;# 
   509  010D                     	;# 
   510  010E                     	;# 
   511  010F                     	;# 
   512  018C                     	;# 
   513  018D                     	;# 
   514  0000                     	;# 
   515  0001                     	;# 
   516  0002                     	;# 
   517  0003                     	;# 
   518  0004                     	;# 
   519  0005                     	;# 
   520  0006                     	;# 
   521  0007                     	;# 
   522  0008                     	;# 
   523  0009                     	;# 
   524  000A                     	;# 
   525  000B                     	;# 
   526  000C                     	;# 
   527  000D                     	;# 
   528  000E                     	;# 
   529  000E                     	;# 
   530  000F                     	;# 
   531  0010                     	;# 
   532  0011                     	;# 
   533  0012                     	;# 
   534  0013                     	;# 
   535  0014                     	;# 
   536  0015                     	;# 
   537  0015                     	;# 
   538  0016                     	;# 
   539  0017                     	;# 
   540  0018                     	;# 
   541  0019                     	;# 
   542  001A                     	;# 
   543  001B                     	;# 
   544  001B                     	;# 
   545  001C                     	;# 
   546  001D                     	;# 
   547  001E                     	;# 
   548  001F                     	;# 
   549  0081                     	;# 
   550  0085                     	;# 
   551  0086                     	;# 
   552  0087                     	;# 
   553  0088                     	;# 
   554  0089                     	;# 
   555  008C                     	;# 
   556  008D                     	;# 
   557  008E                     	;# 
   558  0091                     	;# 
   559  0092                     	;# 
   560  0093                     	;# 
   561  0094                     	;# 
   562  0098                     	;# 
   563  0099                     	;# 
   564  009C                     	;# 
   565  009D                     	;# 
   566  009E                     	;# 
   567  009F                     	;# 
   568  010C                     	;# 
   569  010D                     	;# 
   570  010E                     	;# 
   571  010F                     	;# 
   572  018C                     	;# 
   573  018D                     	;# 
   574  0000                     	;# 
   575  0001                     	;# 
   576  0002                     	;# 
   577  0003                     	;# 
   578  0004                     	;# 
   579  0005                     	;# 
   580  0006                     	;# 
   581  0007                     	;# 
   582  0008                     	;# 
   583  0009                     	;# 
   584  000A                     	;# 
   585  000B                     	;# 
   586  000C                     	;# 
   587  000D                     	;# 
   588  000E                     	;# 
   589  000E                     	;# 
   590  000F                     	;# 
   591  0010                     	;# 
   592  0011                     	;# 
   593  0012                     	;# 
   594  0013                     	;# 
   595  0014                     	;# 
   596  0015                     	;# 
   597  0015                     	;# 
   598  0016                     	;# 
   599  0017                     	;# 
   600  0018                     	;# 
   601  0019                     	;# 
   602  001A                     	;# 
   603  001B                     	;# 
   604  001B                     	;# 
   605  001C                     	;# 
   606  001D                     	;# 
   607  001E                     	;# 
   608  001F                     	;# 
   609  0081                     	;# 
   610  0085                     	;# 
   611  0086                     	;# 
   612  0087                     	;# 
   613  0088                     	;# 
   614  0089                     	;# 
   615  008C                     	;# 
   616  008D                     	;# 
   617  008E                     	;# 
   618  0091                     	;# 
   619  0092                     	;# 
   620  0093                     	;# 
   621  0094                     	;# 
   622  0098                     	;# 
   623  0099                     	;# 
   624  009C                     	;# 
   625  009D                     	;# 
   626  009E                     	;# 
   627  009F                     	;# 
   628  010C                     	;# 
   629  010D                     	;# 
   630  010E                     	;# 
   631  010F                     	;# 
   632  018C                     	;# 
   633  018D                     	;# 
   634  0000                     	;# 
   635  0001                     	;# 
   636  0002                     	;# 
   637  0003                     	;# 
   638  0004                     	;# 
   639  0005                     	;# 
   640  0006                     	;# 
   641  0007                     	;# 
   642  0008                     	;# 
   643  0009                     	;# 
   644  000A                     	;# 
   645  000B                     	;# 
   646  000C                     	;# 
   647  000D                     	;# 
   648  000E                     	;# 
   649  000E                     	;# 
   650  000F                     	;# 
   651  0010                     	;# 
   652  0011                     	;# 
   653  0012                     	;# 
   654  0013                     	;# 
   655  0014                     	;# 
   656  0015                     	;# 
   657  0015                     	;# 
   658  0016                     	;# 
   659  0017                     	;# 
   660  0018                     	;# 
   661  0019                     	;# 
   662  001A                     	;# 
   663  001B                     	;# 
   664  001B                     	;# 
   665  001C                     	;# 
   666  001D                     	;# 
   667  001E                     	;# 
   668  001F                     	;# 
   669  0081                     	;# 
   670  0085                     	;# 
   671  0086                     	;# 
   672  0087                     	;# 
   673  0088                     	;# 
   674  0089                     	;# 
   675  008C                     	;# 
   676  008D                     	;# 
   677  008E                     	;# 
   678  0091                     	;# 
   679  0092                     	;# 
   680  0093                     	;# 
   681  0094                     	;# 
   682  0098                     	;# 
   683  0099                     	;# 
   684  009C                     	;# 
   685  009D                     	;# 
   686  009E                     	;# 
   687  009F                     	;# 
   688  010C                     	;# 
   689  010D                     	;# 
   690  010E                     	;# 
   691  010F                     	;# 
   692  018C                     	;# 
   693  018D                     	;# 
   694                           
   695                           	psect	idataBANK0
   696  0DE2                     __pidataBANK0:	
   697                           
   698                           ;initializer for _randx
   699  0DE2  3401               	retlw	1
   700  0DE3  3400               	retlw	0
   701  0DE4  3400               	retlw	0
   702  0DE5  3400               	retlw	0
   703                           
   704                           	psect	idataBANK1
   705  0EC0                     __pidataBANK1:	
   706                           
   707                           ;initializer for _figuras
   708  0EC0  3402               	retlw	2
   709  0EC1  3402               	retlw	2
   710  0EC2  3403               	retlw	3
   711  0EC3  3400               	retlw	0
   712  0EC4  3403               	retlw	3
   713  0EC5  3402               	retlw	2
   714  0EC6  3402               	retlw	2
   715  0EC7  3400               	retlw	0
   716  0EC8  3401               	retlw	1
   717  0EC9  3403               	retlw	3
   718  0ECA  3402               	retlw	2
   719  0ECB  3400               	retlw	0
   720  0ECC  3402               	retlw	2
   721  0ECD  3403               	retlw	3
   722  0ECE  3401               	retlw	1
   723  0ECF  3400               	retlw	0
   724  0ED0  3401               	retlw	1
   725  0ED1  3401               	retlw	1
   726  0ED2  3401               	retlw	1
   727  0ED3  3401               	retlw	1
   728  0ED4  3403               	retlw	3
   729  0ED5  3403               	retlw	3
   730  0ED6  3400               	retlw	0
   731  0ED7  3400               	retlw	0
   732  0ED8  3401               	retlw	1
   733  0ED9  3403               	retlw	3
   734  0EDA  3401               	retlw	1
   735  0EDB  3400               	retlw	0
   736  0001                     _TMR0	set	1
   737  000B                     _INTCONbits	set	11
   738  0008                     _PORTDbits	set	8
   739  0006                     _PORTBbits	set	6
   740  0007                     _PORTCbits	set	7
   741  0009                     _PORTEbits	set	9
   742  0005                     _PORTAbits	set	5
   743  0081                     _OPTION_REGbits	set	129
   744  0088                     _TRISDbits	set	136
   745  0087                     _TRISCbits	set	135
   746  0089                     _TRISEbits	set	137
   747  0085                     _TRISAbits	set	133
   748  009F                     _ADCON1	set	159
   749  0086                     _TRISBbits	set	134
   750                           
   751                           ; #config settings
   752  0000                     
   753                           	psect	cinit
   754  000F                     start_initialization:	
   755  000F                     __initialization:	
   756                           
   757                           ; Initialize objects allocated to BANK1
   758  000F  1383               	bcf	3,7	;select IRP bank0
   759  0010  30DC               	movlw	low (__pdataBANK1+28)
   760  0011  00FD               	movwf	btemp+-1
   761  0012  300E               	movlw	high __pidataBANK1
   762  0013  00FE               	movwf	btemp
   763  0014  30C0               	movlw	low __pidataBANK1
   764  0015  00FF               	movwf	btemp+1
   765  0016  30C0               	movlw	low __pdataBANK1
   766  0017  0084               	movwf	4
   767  0018  120A  158A  264C  120A  118A  	fcall	init_ram0
   768                           
   769                           ; Initialize objects allocated to BANK0
   770  001D  306B               	movlw	low (__pdataBANK0+4)
   771  001E  00FD               	movwf	btemp+-1
   772  001F  300D               	movlw	high __pidataBANK0
   773  0020  00FE               	movwf	btemp
   774  0021  30E2               	movlw	low __pidataBANK0
   775  0022  00FF               	movwf	btemp+1
   776  0023  3067               	movlw	low __pdataBANK0
   777  0024  0084               	movwf	4
   778  0025  120A  158A  264C  120A  118A  	fcall	init_ram0
   779                           
   780                           ; Clear objects allocated to BANK1
   781  002A  30A0               	movlw	low __pbssBANK1
   782  002B  0084               	movwf	4
   783  002C  30C0               	movlw	low (__pbssBANK1+32)
   784  002D  120A  158A  25FD  120A  118A  	fcall	clear_ram0
   785                           
   786                           ; Clear objects allocated to BANK0
   787  0032  3045               	movlw	low __pbssBANK0
   788  0033  0084               	movwf	4
   789  0034  3067               	movlw	low (__pbssBANK0+34)
   790  0035  120A  158A  25FD  120A  118A  	fcall	clear_ram0
   791  003A                     end_of_initialization:	
   792                           ;End of C runtime variable initialization code
   793                           
   794  003A                     __end_of__initialization:	
   795  003A  0183               	clrf	3
   796  003B  120A  118A  2C97   	ljmp	_main	;jump to C main() function
   797                           
   798                           	psect	bssBANK0
   799  0045                     __pbssBANK0:	
   800  0045                     _con:	
   801  0045                     	ds	10
   802  004F                     gire@F1224:	
   803  004F                     	ds	4
   804  0053                     _timerCount:	
   805  0053                     	ds	4
   806  0057                     _ficha:	
   807  0057                     	ds	16
   808                           
   809                           	psect	dataBANK0
   810  0067                     __pdataBANK0:	
   811  0067                     _randx:	
   812  0067                     	ds	4
   813                           
   814                           	psect	bssBANK1
   815  00A0                     __pbssBANK1:	
   816  00A0                     _fondo:	
   817  00A0                     	ds	16
   818  00B0                     _pantalla:	
   819  00B0                     	ds	16
   820                           
   821                           	psect	dataBANK1
   822  00C0                     __pdataBANK1:	
   823  00C0                     _figuras:	
   824  00C0                     	ds	28
   825                           
   826                           	psect	inittext
   827  0E48                     init_fetch0:	
   828                           ;	Called with low address in FSR and high address in W
   829                           
   830  0E48  087E               	movf	btemp,w
   831  0E49  008A               	movwf	10
   832  0E4A  087F               	movf	btemp+1,w
   833  0E4B  0082               	movwf	2
   834  0E4C                     init_ram0:	
   835                           ;Called with:
   836                           ;	high address of idata address in btemp 
   837                           ;	low address of idata address in btemp+1 
   838                           ;	low address of data in FSR
   839                           ;	high address + 1 of data in btemp-1
   840                           
   841  0E4C  120A  158A  2648  120A  158A  	fcall	init_fetch0
   842  0E51  0080               	movwf	0
   843  0E52  0A84               	incf	4,f
   844  0E53  0804               	movf	4,w
   845  0E54  067D               	xorwf	btemp+-1,w
   846  0E55  1903               	btfsc	3,2
   847  0E56  3400               	retlw	0
   848  0E57  0AFF               	incf	btemp+1,f
   849  0E58  1903               	btfsc	3,2
   850  0E59  0AFE               	incf	btemp,f
   851  0E5A  2E4C               	goto	init_ram0
   852                           
   853                           	psect	clrtext
   854  0DFD                     clear_ram0:	
   855                           ;	Called with FSR containing the base address, and
   856                           ;	W with the last address+1
   857                           
   858  0DFD  0064               	clrwdt	;clear the watchdog before getting into this loop
   859  0DFE                     clrloop0:	
   860  0DFE  0180               	clrf	0	;clear RAM location pointed to by FSR
   861  0DFF  0A84               	incf	4,f	;increment pointer
   862  0E00  0604               	xorwf	4,w	;XOR with final address
   863  0E01  1903               	btfsc	3,2	;have we reached the end yet?
   864  0E02  3400               	retlw	0	;all done for this memory range, return
   865  0E03  0604               	xorwf	4,w	;XOR again to restore value
   866  0E04  2DFE               	goto	clrloop0	;do the next byte
   867                           
   868                           	psect	cstackCOMMON
   869  0070                     __pcstackCOMMON:	
   870  0070                     ?_init_pines_LCD:	
   871  0070                     ?_init_pines_fil:	
   872                           ; 1 bytes @ 0x0
   873                           
   874  0070                     ?_init_pines_col:	
   875                           ; 1 bytes @ 0x0
   876                           
   877  0070                     ?_init_pines_in:	
   878                           ; 1 bytes @ 0x0
   879                           
   880  0070                     ?_init_LCD:	
   881                           ; 1 bytes @ 0x0
   882                           
   883  0070                     ?_checkCount:	
   884                           ; 1 bytes @ 0x0
   885                           
   886  0070                     ?_updateScreen:	
   887                           ; 1 bytes @ 0x0
   888                           
   889  0070                     ?_drawFigure:	
   890                           ; 1 bytes @ 0x0
   891                           
   892  0070                     ?_checkColission_R:	
   893                           ; 1 bytes @ 0x0
   894                           
   895  0070                     ?_checkRight:	
   896                           ; 1 bytes @ 0x0
   897                           
   898  0070                     ?_checkColission_L:	
   899                           ; 1 bytes @ 0x0
   900                           
   901  0070                     ?_checkBottom:	
   902                           ; 1 bytes @ 0x0
   903                           
   904  0070                     ?_checkColission_D:	
   905                           ; 1 bytes @ 0x0
   906                           
   907  0070                     ?_perdio:	
   908                           ; 1 bytes @ 0x0
   909                           
   910  0070                     ?_sumaPuntos:	
   911                           ; 1 bytes @ 0x0
   912                           
   913  0070                     ?_addToScreen:	
   914                           ; 1 bytes @ 0x0
   915                           
   916  0070                     ?_clearDisplay:	
   917                           ; 1 bytes @ 0x0
   918                           
   919  0070                     ?_returnHome:	
   920                           ; 1 bytes @ 0x0
   921                           
   922  0070                     ?_clearRS:	
   923                           ; 1 bytes @ 0x0
   924                           
   925  0070                     ?_clearRW:	
   926                           ; 1 bytes @ 0x0
   927                           
   928  0070                     ?_setData:	
   929                           ; 1 bytes @ 0x0
   930                           
   931  0070                     ?_init_pines:	
   932                           ; 1 bytes @ 0x0
   933                           
   934  0070                     ?_init_timer:	
   935                           ; 1 bytes @ 0x0
   936                           
   937  0070                     ?_gire:	
   938                           ; 1 bytes @ 0x0
   939                           
   940  0070                     ?_leerEntradas:	
   941                           ; 1 bytes @ 0x0
   942                           
   943  0070                     ?_Timer0_ISR:	
   944                           ; 1 bytes @ 0x0
   945                           
   946  0070                     ??_Timer0_ISR:	
   947                           ; 1 bytes @ 0x0
   948                           
   949  0070                     ?_latchClock_Fil:	
   950                           ; 1 bytes @ 0x0
   951                           
   952  0070                     ?_shiftClock_Fil:	
   953                           ; 1 bytes @ 0x0
   954                           
   955  0070                     ?_latchClock_Col:	
   956                           ; 1 bytes @ 0x0
   957                           
   958  0070                     ?_shiftClock_Col:	
   959                           ; 1 bytes @ 0x0
   960                           
   961  0070                     ?_shiftBitColumna:	
   962                           ; 1 bytes @ 0x0
   963                           
   964  0070                     ?_drawBground:	
   965                           ; 1 bytes @ 0x0
   966                           
   967                           
   968                           ; 1 bytes @ 0x0
   969  0070                     	ds	2
   970  0072                     ??_init_pines_LCD:	
   971  0072                     ??_init_pines_fil:	
   972                           ; 1 bytes @ 0x2
   973                           
   974  0072                     ??_init_pines_col:	
   975                           ; 1 bytes @ 0x2
   976                           
   977  0072                     ??_init_pines_in:	
   978                           ; 1 bytes @ 0x2
   979                           
   980  0072                     ?_srand:	
   981                           ; 1 bytes @ 0x2
   982                           
   983  0072                     ??_checkColission_R:	
   984                           ; 1 bytes @ 0x2
   985                           
   986  0072                     ??_checkRight:	
   987                           ; 1 bytes @ 0x2
   988                           
   989  0072                     ??_checkColission_L:	
   990                           ; 1 bytes @ 0x2
   991                           
   992  0072                     ??_sumaPuntos:	
   993                           ; 1 bytes @ 0x2
   994                           
   995  0072                     ??_addToScreen:	
   996                           ; 1 bytes @ 0x2
   997                           
   998  0072                     ?_memset:	
   999                           ; 1 bytes @ 0x2
  1000                           
  1001  0072                     ??_clearRS:	
  1002                           ; 1 bytes @ 0x2
  1003                           
  1004  0072                     ??_clearRW:	
  1005                           ; 1 bytes @ 0x2
  1006                           
  1007  0072                     ??_setData:	
  1008                           ; 1 bytes @ 0x2
  1009                           
  1010  0072                     ??_init_pines:	
  1011                           ; 1 bytes @ 0x2
  1012                           
  1013  0072                     ??_init_timer:	
  1014                           ; 1 bytes @ 0x2
  1015                           
  1016  0072                     ??_gire:	
  1017                           ; 1 bytes @ 0x2
  1018                           
  1019  0072                     ??_latchClock_Fil:	
  1020                           ; 1 bytes @ 0x2
  1021                           
  1022  0072                     ??_shiftClock_Fil:	
  1023                           ; 1 bytes @ 0x2
  1024                           
  1025  0072                     ?_setFilas:	
  1026                           ; 1 bytes @ 0x2
  1027                           
  1028  0072                     ??_latchClock_Col:	
  1029                           ; 1 bytes @ 0x2
  1030                           
  1031  0072                     ??_shiftClock_Col:	
  1032                           ; 1 bytes @ 0x2
  1033                           
  1034  0072                     ??_shiftBitColumna:	
  1035                           ; 1 bytes @ 0x2
  1036                           
  1037  0072                     ??_drawBground:	
  1038                           ; 1 bytes @ 0x2
  1039                           
  1040  0072                     ?___lmul:	
  1041                           ; 1 bytes @ 0x2
  1042                           
  1043  0072                     setFilas@reg_value:	
  1044                           ; 4 bytes @ 0x2
  1045                           
  1046  0072                     memset@c:	
  1047                           ; 2 bytes @ 0x2
  1048                           
  1049  0072                     srand@x:	
  1050                           ; 2 bytes @ 0x2
  1051                           
  1052  0072                     ___lmul@multiplier:	
  1053                           ; 2 bytes @ 0x2
  1054                           
  1055                           
  1056                           ; 4 bytes @ 0x2
  1057  0072                     	ds	1
  1058  0073                     shiftBitColumna@bit:	
  1059                           
  1060                           ; 1 bytes @ 0x3
  1061  0073                     	ds	1
  1062  0074                     ??_srand:	
  1063  0074                     ??_setFilas:	
  1064                           ; 1 bytes @ 0x4
  1065                           
  1066  0074                     setData@data:	
  1067                           ; 1 bytes @ 0x4
  1068                           
  1069  0074                     memset@n:	
  1070                           ; 1 bytes @ 0x4
  1071                           
  1072                           
  1073                           ; 2 bytes @ 0x4
  1074  0074                     	ds	1
  1075  0075                     ?_functionSet:	
  1076  0075                     ?_displayONOFF:	
  1077                           ; 1 bytes @ 0x5
  1078                           
  1079  0075                     ??_clearDisplay:	
  1080                           ; 1 bytes @ 0x5
  1081                           
  1082  0075                     ?_entryModeSet:	
  1083                           ; 1 bytes @ 0x5
  1084                           
  1085  0075                     ??_returnHome:	
  1086                           ; 1 bytes @ 0x5
  1087                           
  1088  0075                     entryModeSet@SH:	
  1089                           ; 1 bytes @ 0x5
  1090                           
  1091  0075                     displayONOFF@C:	
  1092                           ; 1 bytes @ 0x5
  1093                           
  1094  0075                     functionSet@N:	
  1095                           ; 1 bytes @ 0x5
  1096                           
  1097                           
  1098                           ; 1 bytes @ 0x5
  1099  0075                     	ds	1
  1100  0076                     ??_memset:	
  1101  0076                     ??_entryModeSet:	
  1102                           ; 1 bytes @ 0x6
  1103                           
  1104  0076                     sumaPuntos@aux:	
  1105                           ; 1 bytes @ 0x6
  1106                           
  1107  0076                     displayONOFF@B:	
  1108                           ; 1 bytes @ 0x6
  1109                           
  1110  0076                     functionSet@F:	
  1111                           ; 1 bytes @ 0x6
  1112                           
  1113  0076                     ___lmul@multiplicand:	
  1114                           ; 1 bytes @ 0x6
  1115                           
  1116                           
  1117                           ; 4 bytes @ 0x6
  1118  0076                     	ds	1
  1119  0077                     ??_functionSet:	
  1120  0077                     ??_displayONOFF:	
  1121                           ; 1 bytes @ 0x7
  1122                           
  1123  0077                     memset@p:	
  1124                           ; 1 bytes @ 0x7
  1125                           
  1126  0077                     sumaPuntos@i:	
  1127                           ; 1 bytes @ 0x7
  1128                           
  1129                           
  1130                           ; 2 bytes @ 0x7
  1131  0077                     	ds	1
  1132  0078                     entryModeSet@ID:	
  1133  0078                     memset@p1:	
  1134                           ; 1 bytes @ 0x8
  1135                           
  1136                           
  1137                           ; 1 bytes @ 0x8
  1138  0078                     	ds	1
  1139  0079                     sumaPuntos@j:	
  1140  0079                     _entryModeSet$753:	
  1141                           ; 2 bytes @ 0x9
  1142                           
  1143                           
  1144                           ; 2 bytes @ 0x9
  1145  0079                     	ds	1
  1146  007A                     ??___lmul:	
  1147  007A                     setFilas@i:	
  1148                           ; 1 bytes @ 0xA
  1149                           
  1150  007A                     checkColission_R@i:	
  1151                           ; 2 bytes @ 0xA
  1152                           
  1153  007A                     checkColission_L@i:	
  1154                           ; 2 bytes @ 0xA
  1155                           
  1156                           
  1157                           ; 2 bytes @ 0xA
  1158  007A                     	ds	1
  1159  007B                     ??___awmod:	
  1160  007B                     entryModeSet@data:	
  1161                           ; 1 bytes @ 0xB
  1162                           
  1163                           
  1164                           ; 1 bytes @ 0xB
  1165  007B                     	ds	1
  1166                           
  1167                           	psect	cstackBANK0
  1168  0020                     __pcstackBANK0:	
  1169  0020                     ??_drawFigure:	
  1170  0020                     displayONOFF@D:	
  1171                           ; 1 bytes @ 0x0
  1172                           
  1173  0020                     functionSet@DL:	
  1174                           ; 1 bytes @ 0x0
  1175                           
  1176  0020                     gire@k:	
  1177                           ; 1 bytes @ 0x0
  1178                           
  1179  0020                     addToScreen@i:	
  1180                           ; 2 bytes @ 0x0
  1181                           
  1182  0020                     drawBground@i:	
  1183                           ; 2 bytes @ 0x0
  1184                           
  1185  0020                     ___lmul@product:	
  1186                           ; 2 bytes @ 0x0
  1187                           
  1188                           
  1189                           ; 4 bytes @ 0x0
  1190  0020                     	ds	1
  1191  0021                     _displayONOFF$759:	
  1192  0021                     _functionSet$766:	
  1193                           ; 2 bytes @ 0x1
  1194                           
  1195                           
  1196                           ; 2 bytes @ 0x1
  1197  0021                     	ds	1
  1198  0022                     ??_updateScreen:	
  1199  0022                     gire@mask:	
  1200                           ; 1 bytes @ 0x2
  1201                           
  1202                           
  1203                           ; 1 bytes @ 0x2
  1204  0022                     	ds	1
  1205  0023                     _displayONOFF$760:	
  1206  0023                     _functionSet$767:	
  1207                           ; 2 bytes @ 0x3
  1208                           
  1209  0023                     gire@aux:	
  1210                           ; 2 bytes @ 0x3
  1211                           
  1212                           
  1213                           ; 4 bytes @ 0x3
  1214  0023                     	ds	1
  1215  0024                     ?_rand:	
  1216                           
  1217                           ; 2 bytes @ 0x4
  1218  0024                     	ds	1
  1219  0025                     displayONOFF@data:	
  1220  0025                     _functionSet$768:	
  1221                           ; 1 bytes @ 0x5
  1222                           
  1223                           
  1224                           ; 2 bytes @ 0x5
  1225  0025                     	ds	1
  1226  0026                     ??_rand:	
  1227  0026                     updateScreen@screen:	
  1228                           ; 1 bytes @ 0x6
  1229                           
  1230                           
  1231                           ; 1 bytes @ 0x6
  1232  0026                     	ds	1
  1233  0027                     functionSet@data:	
  1234  0027                     gire@j:	
  1235                           ; 1 bytes @ 0x7
  1236                           
  1237  0027                     updateScreen@i:	
  1238                           ; 2 bytes @ 0x7
  1239                           
  1240                           
  1241                           ; 2 bytes @ 0x7
  1242  0027                     	ds	1
  1243  0028                     ??_init_LCD:	
  1244                           
  1245                           ; 1 bytes @ 0x8
  1246  0028                     	ds	1
  1247  0029                     gire@i:	
  1248                           
  1249                           ; 2 bytes @ 0x9
  1250  0029                     	ds	2
  1251  002B                     ??_leerEntradas:	
  1252  002B                     ?___awmod:	
  1253                           ; 1 bytes @ 0xB
  1254                           
  1255  002B                     ___awmod@divisor:	
  1256                           ; 2 bytes @ 0xB
  1257                           
  1258                           
  1259                           ; 2 bytes @ 0xB
  1260  002B                     	ds	1
  1261  002C                     init_LCD@N:	
  1262                           
  1263                           ; 1 bytes @ 0xC
  1264  002C                     	ds	1
  1265  002D                     ___awmod@dividend:	
  1266                           
  1267                           ; 2 bytes @ 0xD
  1268  002D                     	ds	2
  1269  002F                     init_LCD@S:	
  1270  002F                     ___awmod@counter:	
  1271                           ; 1 bytes @ 0xF
  1272                           
  1273                           
  1274                           ; 1 bytes @ 0xF
  1275  002F                     	ds	1
  1276  0030                     ___awmod@sign:	
  1277                           
  1278                           ; 1 bytes @ 0x10
  1279  0030                     	ds	1
  1280  0031                     ??_checkBottom:	
  1281  0031                     ??_checkColission_D:	
  1282                           ; 1 bytes @ 0x11
  1283                           
  1284  0031                     ??_perdio:	
  1285                           ; 1 bytes @ 0x11
  1286                           
  1287                           
  1288                           ; 1 bytes @ 0x11
  1289  0031                     	ds	3
  1290  0034                     perdio@i:	
  1291                           
  1292                           ; 2 bytes @ 0x14
  1293  0034                     	ds	5
  1294  0039                     checkColission_D@i:	
  1295                           
  1296                           ; 2 bytes @ 0x19
  1297  0039                     	ds	2
  1298  003B                     ??_checkCount:	
  1299                           
  1300                           ; 1 bytes @ 0x1B
  1301  003B                     	ds	3
  1302  003E                     checkCount@j:	
  1303                           
  1304                           ; 2 bytes @ 0x1E
  1305  003E                     	ds	2
  1306  0040                     ?_main:	
  1307  0040                     main@argc:	
  1308                           ; 2 bytes @ 0x20
  1309                           
  1310                           
  1311                           ; 2 bytes @ 0x20
  1312  0040                     	ds	2
  1313  0042                     main@argv:	
  1314                           
  1315                           ; 2 bytes @ 0x22
  1316  0042                     	ds	2
  1317  0044                     ??_main:	
  1318                           
  1319                           ; 1 bytes @ 0x24
  1320  0044                     	ds	1
  1321                           
  1322                           	psect	maintext
  1323  0497                     __pmaintext:	
  1324 ;;
  1325 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1326 ;;
  1327 ;; *************** function _main *****************
  1328 ;; Defined at:
  1329 ;;		line 45 in file "mainsource.c"
  1330 ;; Parameters:    Size  Location     Type
  1331 ;;  argc            2   32[BANK0 ] int 
  1332 ;;  argv            2   34[BANK0 ] PTR PTR unsigned char 
  1333 ;; Auto vars:     Size  Location     Type
  1334 ;;  j               2    0        int 
  1335 ;;  i               2    0        int 
  1336 ;; Return value:  Size  Location     Type
  1337 ;;                  2   32[BANK0 ] int 
  1338 ;; Registers used:
  1339 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1340 ;; Tracked objects:
  1341 ;;		On entry : B00/0
  1342 ;;		On exit  : 0/0
  1343 ;;		Unchanged: 0/0
  1344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1345 ;;      Params:         0       4       0       0       0
  1346 ;;      Locals:         0       4       0       0       0
  1347 ;;      Temps:          0       1       0       0       0
  1348 ;;      Totals:         0       9       0       0       0
  1349 ;;Total ram usage:        9 bytes
  1350 ;; Hardware stack levels required when called:    5
  1351 ;; This function calls:
  1352 ;;		___awmod
  1353 ;;		_checkCount
  1354 ;;		_init_LCD
  1355 ;;		_init_pines
  1356 ;;		_init_timer
  1357 ;;		_rand
  1358 ;;		_srand
  1359 ;;		_updateScreen
  1360 ;; This function is called by:
  1361 ;;		Startup code after reset
  1362 ;; This function uses a non-reentrant model
  1363 ;;
  1364                           
  1365                           
  1366                           ;psect for function _main
  1367  0497                     _main:	
  1368  0497                     l2312:	
  1369                           ;incstack = 0
  1370                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1371                           
  1372                           
  1373                           ;mainsource.c: 49:     init_timer();
  1374  0497  120A  158A  2627  120A  118A  	fcall	_init_timer
  1375  049C                     l2314:	
  1376                           
  1377                           ;mainsource.c: 50:     init_pines();
  1378  049C  120A  158A  265B  120A  118A  	fcall	_init_pines
  1379  04A1                     l2316:	
  1380                           
  1381                           ;mainsource.c: 51:     init_LCD();
  1382  04A1  120A  118A  21FB  120A  118A  	fcall	_init_LCD
  1383  04A6                     l2318:	
  1384  04A6                     l2320:	
  1385  04A6                     l2322:	
  1386                           
  1387                           ;mainsource.c: 54:     con.girar =0;
  1388  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  1389  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  1390  04A8  01C5               	clrf	_con
  1391  04A9                     l2324:	
  1392                           
  1393                           ;mainsource.c: 55:     con.ficha_Vpos = 16;
  1394  04A9  3010               	movlw	16
  1395  04AA  00C4               	movwf	??_main
  1396  04AB  0844               	movf	??_main,w
  1397  04AC  00C7               	movwf	_con+2
  1398  04AD                     l2326:	
  1399                           
  1400                           ;mainsource.c: 56:     con.ficha_Hpos = 2;
  1401  04AD  3002               	movlw	2
  1402  04AE  00C4               	movwf	??_main
  1403  04AF  0844               	movf	??_main,w
  1404  04B0  00C8               	movwf	_con+3
  1405  04B1                     l2328:	
  1406                           
  1407                           ;mainsource.c: 57:     con.puntaje = 0;
  1408  04B1  01CD               	clrf	_con+8
  1409  04B2  01CE               	clrf	_con+9
  1410  04B3                     l2330:	
  1411                           
  1412                           ;mainsource.c: 58:     srand(2);
  1413  04B3  3002               	movlw	2
  1414  04B4  00F2               	movwf	srand@x
  1415  04B5  3000               	movlw	0
  1416  04B6  00F3               	movwf	srand@x+1
  1417  04B7  120A  158A  2605  120A  118A  	fcall	_srand
  1418  04BC                     l2332:	
  1419                           
  1420                           ;mainsource.c: 59:     con.ficha_actual = rand() % 7;
  1421  04BC  3007               	movlw	7
  1422  04BD  1283               	bcf	3,5	;RP0=0, select bank0
  1423  04BE  1303               	bcf	3,6	;RP1=0, select bank0
  1424  04BF  00AB               	movwf	___awmod@divisor
  1425  04C0  3000               	movlw	0
  1426  04C1  00AC               	movwf	___awmod@divisor+1
  1427  04C2  120A  118A  26F5  120A  118A  	fcall	_rand
  1428  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  1429  04C8  1303               	bcf	3,6	;RP1=0, select bank0
  1430  04C9  0825               	movf	?_rand+1,w
  1431  04CA  00AE               	movwf	___awmod@dividend+1
  1432  04CB  0824               	movf	?_rand,w
  1433  04CC  00AD               	movwf	___awmod@dividend
  1434  04CD  120A  118A  243C  120A  118A  	fcall	___awmod
  1435  04D2  1283               	bcf	3,5	;RP0=0, select bank0
  1436  04D3  1303               	bcf	3,6	;RP1=0, select bank0
  1437  04D4  082B               	movf	?___awmod,w
  1438  04D5  00C4               	movwf	??_main
  1439  04D6  0844               	movf	??_main,w
  1440  04D7  00C9               	movwf	_con+4
  1441  04D8                     l2334:	
  1442                           
  1443                           ;mainsource.c: 62:         checkCount();
  1444  04D8  120A  118A  24E7  120A  118A  	fcall	_checkCount
  1445  04DD                     l2336:	
  1446                           
  1447                           ;mainsource.c: 63:         updateScreen(pantalla);
  1448  04DD  30B0               	movlw	(low (_pantalla| 0))& (0+255)
  1449  04DE  120A  118A  23D9  120A  118A  	fcall	_updateScreen
  1450  04E3  2CD8               	goto	l2334
  1451  04E4  120A  118A  280C   	ljmp	start
  1452  04E7                     __end_of_main:	
  1453                           
  1454                           	psect	text1
  1455  03D9                     __ptext1:	
  1456 ;; *************** function _updateScreen *****************
  1457 ;; Defined at:
  1458 ;;		line 17 in file "screen.c"
  1459 ;; Parameters:    Size  Location     Type
  1460 ;;  screen          1    wreg     PTR unsigned int 
  1461 ;;		 -> pantalla(16), 
  1462 ;; Auto vars:     Size  Location     Type
  1463 ;;  screen          1    6[BANK0 ] PTR unsigned int 
  1464 ;;		 -> pantalla(16), 
  1465 ;;  i               2    7[BANK0 ] int 
  1466 ;; Return value:  Size  Location     Type
  1467 ;;                  1    wreg      void 
  1468 ;; Registers used:
  1469 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1470 ;; Tracked objects:
  1471 ;;		On entry : 0/0
  1472 ;;		On exit  : 0/0
  1473 ;;		Unchanged: 0/0
  1474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1475 ;;      Params:         0       0       0       0       0
  1476 ;;      Locals:         0       3       0       0       0
  1477 ;;      Temps:          0       4       0       0       0
  1478 ;;      Totals:         0       7       0       0       0
  1479 ;;Total ram usage:        7 bytes
  1480 ;; Hardware stack levels used:    1
  1481 ;; Hardware stack levels required when called:    3
  1482 ;; This function calls:
  1483 ;;		_addToScreen
  1484 ;;		_setFilas
  1485 ;;		_shiftBitColumna
  1486 ;; This function is called by:
  1487 ;;		_main
  1488 ;; This function uses a non-reentrant model
  1489 ;;
  1490                           
  1491                           
  1492                           ;psect for function _updateScreen
  1493  03D9                     _updateScreen:	
  1494                           
  1495                           ;incstack = 0
  1496                           ; Regs used in _updateScreen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1497                           ;updateScreen@screen stored from wreg
  1498  03D9  1283               	bcf	3,5	;RP0=0, select bank0
  1499  03DA  1303               	bcf	3,6	;RP1=0, select bank0
  1500  03DB  00A6               	movwf	updateScreen@screen
  1501  03DC                     l2288:	
  1502  03DC                     l2290:	
  1503                           
  1504                           ;screen.c: 20:     addToScreen();
  1505  03DC  120A  158A  27BF  120A  118A  	fcall	_addToScreen
  1506  03E1                     l2292:	
  1507                           
  1508                           ;screen.c: 22:     for(i=0; i<=7;i++){
  1509  03E1  1283               	bcf	3,5	;RP0=0, select bank0
  1510  03E2  1303               	bcf	3,6	;RP1=0, select bank0
  1511  03E3  01A7               	clrf	updateScreen@i
  1512  03E4  01A8               	clrf	updateScreen@i+1
  1513  03E5                     l2298:	
  1514                           
  1515                           ;screen.c: 23:        if(i == 0){
  1516  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  1517  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  1518  03E7  0827               	movf	updateScreen@i,w
  1519  03E8  0428               	iorwf	updateScreen@i+1,w
  1520  03E9  1D03               	btfss	3,2
  1521  03EA  2BEC               	goto	u1681
  1522  03EB  2BED               	goto	u1680
  1523  03EC                     u1681:	
  1524  03EC  2C0A               	goto	l2304
  1525  03ED                     u1680:	
  1526  03ED                     l2300:	
  1527                           
  1528                           ;screen.c: 24:             setFilas(~screen[i]);
  1529  03ED  0827               	movf	updateScreen@i,w
  1530  03EE  00A2               	movwf	??_updateScreen
  1531  03EF  0722               	addwf	??_updateScreen,w
  1532  03F0  0726               	addwf	updateScreen@screen,w
  1533  03F1  00A3               	movwf	??_updateScreen+1
  1534  03F2  0823               	movf	??_updateScreen+1,w
  1535  03F3  0084               	movwf	4
  1536  03F4  1383               	bcf	3,7	;select IRP bank0
  1537  03F5  0800               	movf	0,w
  1538  03F6  00A4               	movwf	??_updateScreen+2
  1539  03F7  0A84               	incf	4,f
  1540  03F8  0800               	movf	0,w
  1541  03F9  00A5               	movwf	??_updateScreen+3
  1542  03FA  0924               	comf	??_updateScreen+2,w
  1543  03FB  00F2               	movwf	setFilas@reg_value
  1544  03FC  0925               	comf	??_updateScreen+3,w
  1545  03FD  00F3               	movwf	setFilas@reg_value+1
  1546  03FE  120A  118A  2780  120A  118A  	fcall	_setFilas
  1547  0403                     l2302:	
  1548                           
  1549                           ;screen.c: 25:             shiftBitColumna(1);
  1550  0403  3001               	movlw	1
  1551  0404  120A  158A  26A4  120A  118A  	fcall	_shiftBitColumna
  1552                           
  1553                           ;screen.c: 26:         }
  1554  0409  2C26               	goto	l2308
  1555  040A                     l2304:	
  1556                           
  1557                           ;screen.c: 28:             setFilas(~screen[i]);
  1558  040A  0827               	movf	updateScreen@i,w
  1559  040B  00A2               	movwf	??_updateScreen
  1560  040C  0722               	addwf	??_updateScreen,w
  1561  040D  0726               	addwf	updateScreen@screen,w
  1562  040E  00A3               	movwf	??_updateScreen+1
  1563  040F  0823               	movf	??_updateScreen+1,w
  1564  0410  0084               	movwf	4
  1565  0411  1383               	bcf	3,7	;select IRP bank0
  1566  0412  0800               	movf	0,w
  1567  0413  00A4               	movwf	??_updateScreen+2
  1568  0414  0A84               	incf	4,f
  1569  0415  0800               	movf	0,w
  1570  0416  00A5               	movwf	??_updateScreen+3
  1571  0417  0924               	comf	??_updateScreen+2,w
  1572  0418  00F2               	movwf	setFilas@reg_value
  1573  0419  0925               	comf	??_updateScreen+3,w
  1574  041A  00F3               	movwf	setFilas@reg_value+1
  1575  041B  120A  118A  2780  120A  118A  	fcall	_setFilas
  1576  0420                     l2306:	
  1577                           
  1578                           ;screen.c: 29:             shiftBitColumna(0);
  1579  0420  3000               	movlw	0
  1580  0421  120A  158A  26A4  120A  118A  	fcall	_shiftBitColumna
  1581  0426                     l2308:	
  1582                           
  1583                           ;screen.c: 31:     }
  1584  0426  3001               	movlw	1
  1585  0427  1283               	bcf	3,5	;RP0=0, select bank0
  1586  0428  1303               	bcf	3,6	;RP1=0, select bank0
  1587  0429  07A7               	addwf	updateScreen@i,f
  1588  042A  1803               	skipnc
  1589  042B  0AA8               	incf	updateScreen@i+1,f
  1590  042C  3000               	movlw	0
  1591  042D  07A8               	addwf	updateScreen@i+1,f
  1592  042E                     l2310:	
  1593  042E  0828               	movf	updateScreen@i+1,w
  1594  042F  3A80               	xorlw	128
  1595  0430  00FF               	movwf	btemp+1
  1596  0431  3080               	movlw	128
  1597  0432  027F               	subwf	btemp+1,w
  1598  0433  1D03               	skipz
  1599  0434  2C37               	goto	u1695
  1600  0435  3008               	movlw	8
  1601  0436  0227               	subwf	updateScreen@i,w
  1602  0437                     u1695:	
  1603  0437  1C03               	skipc
  1604  0438  2C3A               	goto	u1691
  1605  0439  2C3B               	goto	u1690
  1606  043A                     u1691:	
  1607  043A  2BE5               	goto	l2298
  1608  043B                     u1690:	
  1609  043B                     l213:	
  1610  043B  0008               	return
  1611  043C                     __end_of_updateScreen:	
  1612                           
  1613                           	psect	text2
  1614  0EA4                     __ptext2:	
  1615 ;; *************** function _shiftBitColumna *****************
  1616 ;; Defined at:
  1617 ;;		line 33 in file "columnas.c"
  1618 ;; Parameters:    Size  Location     Type
  1619 ;;  bit             1    wreg     unsigned char 
  1620 ;; Auto vars:     Size  Location     Type
  1621 ;;  bit             1    3[COMMON] unsigned char 
  1622 ;; Return value:  Size  Location     Type
  1623 ;;                  1    wreg      void 
  1624 ;; Registers used:
  1625 ;;		wreg, status,2, status,0, pclath, cstack
  1626 ;; Tracked objects:
  1627 ;;		On entry : 0/0
  1628 ;;		On exit  : 0/0
  1629 ;;		Unchanged: 0/0
  1630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1631 ;;      Params:         0       0       0       0       0
  1632 ;;      Locals:         1       0       0       0       0
  1633 ;;      Temps:          1       0       0       0       0
  1634 ;;      Totals:         2       0       0       0       0
  1635 ;;Total ram usage:        2 bytes
  1636 ;; Hardware stack levels used:    1
  1637 ;; Hardware stack levels required when called:    2
  1638 ;; This function calls:
  1639 ;;		_latchClock_Col
  1640 ;;		_latchClock_Fil
  1641 ;;		_shiftClock_Col
  1642 ;; This function is called by:
  1643 ;;		_updateScreen
  1644 ;; This function uses a non-reentrant model
  1645 ;;
  1646                           
  1647                           
  1648                           ;psect for function _shiftBitColumna
  1649  0EA4                     _shiftBitColumna:	
  1650                           
  1651                           ;incstack = 0
  1652                           ; Regs used in _shiftBitColumna: [wreg+status,2+status,0+pclath+cstack]
  1653                           ;shiftBitColumna@bit stored from wreg
  1654  0EA4  00F3               	movwf	shiftBitColumna@bit
  1655  0EA5                     l2098:	
  1656                           
  1657                           ;columnas.c: 34:     PORTDbits.RD4= bit & 0x01;
  1658  0EA5  0873               	movf	shiftBitColumna@bit,w
  1659  0EA6  3901               	andlw	1
  1660  0EA7  00F2               	movwf	??_shiftBitColumna
  1661  0EA8  0EF2               	swapf	??_shiftBitColumna,f
  1662  0EA9  1283               	bcf	3,5	;RP0=0, select bank0
  1663  0EAA  1303               	bcf	3,6	;RP1=0, select bank0
  1664  0EAB  0808               	movf	8,w	;volatile
  1665  0EAC  0672               	xorwf	??_shiftBitColumna,w
  1666  0EAD  39EF               	andlw	-17
  1667  0EAE  0672               	xorwf	??_shiftBitColumna,w
  1668  0EAF  0088               	movwf	8	;volatile
  1669  0EB0                     l2100:	
  1670                           
  1671                           ;columnas.c: 35:     shiftClock_Col();
  1672  0EB0  120A  118A  27FA  120A  158A  	fcall	_shiftClock_Col
  1673  0EB5                     l2102:	
  1674                           
  1675                           ;columnas.c: 36:     latchClock_Col();
  1676  0EB5  120A  158A  25E6  120A  158A  	fcall	_latchClock_Col
  1677  0EBA                     l2104:	
  1678                           
  1679                           ;columnas.c: 37:     latchClock_Fil();
  1680  0EBA  120A  158A  25F7  120A  158A  	fcall	_latchClock_Fil
  1681  0EBF                     l186:	
  1682  0EBF  0008               	return
  1683  0EC0                     __end_of_shiftBitColumna:	
  1684                           
  1685                           	psect	text3
  1686  07FA                     __ptext3:	
  1687 ;; *************** function _shiftClock_Col *****************
  1688 ;; Defined at:
  1689 ;;		line 13 in file "columnas.c"
  1690 ;; Parameters:    Size  Location     Type
  1691 ;;		None
  1692 ;; Auto vars:     Size  Location     Type
  1693 ;;		None
  1694 ;; Return value:  Size  Location     Type
  1695 ;;                  1    wreg      void 
  1696 ;; Registers used:
  1697 ;;		None
  1698 ;; Tracked objects:
  1699 ;;		On entry : 0/0
  1700 ;;		On exit  : 0/0
  1701 ;;		Unchanged: 0/0
  1702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1703 ;;      Params:         0       0       0       0       0
  1704 ;;      Locals:         0       0       0       0       0
  1705 ;;      Temps:          0       0       0       0       0
  1706 ;;      Totals:         0       0       0       0       0
  1707 ;;Total ram usage:        0 bytes
  1708 ;; Hardware stack levels used:    1
  1709 ;; Hardware stack levels required when called:    1
  1710 ;; This function calls:
  1711 ;;		Nothing
  1712 ;; This function is called by:
  1713 ;;		_shiftBitColumna
  1714 ;;		_setColumnas
  1715 ;; This function uses a non-reentrant model
  1716 ;;
  1717                           
  1718                           
  1719                           ;psect for function _shiftClock_Col
  1720  07FA                     _shiftClock_Col:	
  1721  07FA                     l1862:	
  1722                           ;incstack = 0
  1723                           ; Regs used in _shiftClock_Col: []
  1724                           
  1725                           
  1726                           ;columnas.c: 14:     PORTDbits.RD7 = 0;
  1727  07FA  1283               	bcf	3,5	;RP0=0, select bank0
  1728  07FB  1303               	bcf	3,6	;RP1=0, select bank0
  1729  07FC  1388               	bcf	8,7	;volatile
  1730                           
  1731                           ;columnas.c: 15:     PORTDbits.RD7 = 1;
  1732  07FD  1788               	bsf	8,7	;volatile
  1733                           
  1734                           ;columnas.c: 16:     PORTDbits.RD7 = 0;
  1735  07FE  1388               	bcf	8,7	;volatile
  1736  07FF                     l178:	
  1737  07FF  0008               	return
  1738  0800                     __end_of_shiftClock_Col:	
  1739                           
  1740                           	psect	text4
  1741  0DF7                     __ptext4:	
  1742 ;; *************** function _latchClock_Fil *****************
  1743 ;; Defined at:
  1744 ;;		line 7 in file "filas.c"
  1745 ;; Parameters:    Size  Location     Type
  1746 ;;		None
  1747 ;; Auto vars:     Size  Location     Type
  1748 ;;		None
  1749 ;; Return value:  Size  Location     Type
  1750 ;;                  1    wreg      void 
  1751 ;; Registers used:
  1752 ;;		None
  1753 ;; Tracked objects:
  1754 ;;		On entry : 0/0
  1755 ;;		On exit  : 0/0
  1756 ;;		Unchanged: 0/0
  1757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1758 ;;      Params:         0       0       0       0       0
  1759 ;;      Locals:         0       0       0       0       0
  1760 ;;      Temps:          0       0       0       0       0
  1761 ;;      Totals:         0       0       0       0       0
  1762 ;;Total ram usage:        0 bytes
  1763 ;; Hardware stack levels used:    1
  1764 ;; Hardware stack levels required when called:    1
  1765 ;; This function calls:
  1766 ;;		Nothing
  1767 ;; This function is called by:
  1768 ;;		_shiftBitColumna
  1769 ;; This function uses a non-reentrant model
  1770 ;;
  1771                           
  1772                           
  1773                           ;psect for function _latchClock_Fil
  1774  0DF7                     _latchClock_Fil:	
  1775  0DF7                     l1856:	
  1776                           ;incstack = 0
  1777                           ; Regs used in _latchClock_Fil: []
  1778                           
  1779                           
  1780                           ;filas.c: 8:     PORTCbits.RC6 = 0;
  1781  0DF7  1283               	bcf	3,5	;RP0=0, select bank0
  1782  0DF8  1303               	bcf	3,6	;RP1=0, select bank0
  1783  0DF9  1307               	bcf	7,6	;volatile
  1784                           
  1785                           ;filas.c: 9:     PORTCbits.RC6 = 1;
  1786  0DFA  1707               	bsf	7,6	;volatile
  1787                           
  1788                           ;filas.c: 10:     PORTCbits.RC6 = 0;
  1789  0DFB  1307               	bcf	7,6	;volatile
  1790  0DFC                     l160:	
  1791  0DFC  0008               	return
  1792  0DFD                     __end_of_latchClock_Fil:	
  1793                           
  1794                           	psect	text5
  1795  0DE6                     __ptext5:	
  1796 ;; *************** function _latchClock_Col *****************
  1797 ;; Defined at:
  1798 ;;		line 8 in file "columnas.c"
  1799 ;; Parameters:    Size  Location     Type
  1800 ;;		None
  1801 ;; Auto vars:     Size  Location     Type
  1802 ;;		None
  1803 ;; Return value:  Size  Location     Type
  1804 ;;                  1    wreg      void 
  1805 ;; Registers used:
  1806 ;;		None
  1807 ;; Tracked objects:
  1808 ;;		On entry : 0/0
  1809 ;;		On exit  : 0/0
  1810 ;;		Unchanged: 0/0
  1811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1812 ;;      Params:         0       0       0       0       0
  1813 ;;      Locals:         0       0       0       0       0
  1814 ;;      Temps:          0       0       0       0       0
  1815 ;;      Totals:         0       0       0       0       0
  1816 ;;Total ram usage:        0 bytes
  1817 ;; Hardware stack levels used:    1
  1818 ;; Hardware stack levels required when called:    1
  1819 ;; This function calls:
  1820 ;;		Nothing
  1821 ;; This function is called by:
  1822 ;;		_shiftBitColumna
  1823 ;;		_setColumnas
  1824 ;; This function uses a non-reentrant model
  1825 ;;
  1826                           
  1827                           
  1828                           ;psect for function _latchClock_Col
  1829  0DE6                     _latchClock_Col:	
  1830  0DE6                     l1860:	
  1831                           ;incstack = 0
  1832                           ; Regs used in _latchClock_Col: []
  1833                           
  1834                           
  1835                           ;columnas.c: 9:     PORTDbits.RD6 = 1;
  1836  0DE6  1283               	bcf	3,5	;RP0=0, select bank0
  1837  0DE7  1303               	bcf	3,6	;RP1=0, select bank0
  1838  0DE8  1708               	bsf	8,6	;volatile
  1839                           
  1840                           ;columnas.c: 10:     PORTDbits.RD6 = 0;
  1841  0DE9  1308               	bcf	8,6	;volatile
  1842  0DEA                     l175:	
  1843  0DEA  0008               	return
  1844  0DEB                     __end_of_latchClock_Col:	
  1845                           
  1846                           	psect	text6
  1847  0780                     __ptext6:	
  1848 ;; *************** function _setFilas *****************
  1849 ;; Defined at:
  1850 ;;		line 19 in file "filas.c"
  1851 ;; Parameters:    Size  Location     Type
  1852 ;;  reg_value       2    2[COMMON] unsigned int 
  1853 ;; Auto vars:     Size  Location     Type
  1854 ;;  i               2   10[COMMON] int 
  1855 ;; Return value:  Size  Location     Type
  1856 ;;                  1    wreg      void 
  1857 ;; Registers used:
  1858 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1859 ;; Tracked objects:
  1860 ;;		On entry : 0/0
  1861 ;;		On exit  : 0/0
  1862 ;;		Unchanged: 0/0
  1863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1864 ;;      Params:         2       0       0       0       0
  1865 ;;      Locals:         2       0       0       0       0
  1866 ;;      Temps:          6       0       0       0       0
  1867 ;;      Totals:        10       0       0       0       0
  1868 ;;Total ram usage:       10 bytes
  1869 ;; Hardware stack levels used:    1
  1870 ;; Hardware stack levels required when called:    2
  1871 ;; This function calls:
  1872 ;;		_shiftClock_Fil
  1873 ;; This function is called by:
  1874 ;;		_updateScreen
  1875 ;; This function uses a non-reentrant model
  1876 ;;
  1877                           
  1878                           
  1879                           ;psect for function _setFilas
  1880  0780                     _setFilas:	
  1881  0780                     l2084:	
  1882                           ;incstack = 0
  1883                           ; Regs used in _setFilas: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1884                           
  1885                           
  1886                           ;filas.c: 20:     int i = 0;
  1887  0780  01FA               	clrf	setFilas@i
  1888  0781  01FB               	clrf	setFilas@i+1
  1889                           
  1890                           ;filas.c: 21:     for(i=0;i<16;i++){
  1891  0782  01FA               	clrf	setFilas@i
  1892  0783  01FB               	clrf	setFilas@i+1
  1893  0784                     l2086:	
  1894  0784  087B               	movf	setFilas@i+1,w
  1895  0785  3A80               	xorlw	128
  1896  0786  00FF               	movwf	btemp+1
  1897  0787  3080               	movlw	128
  1898  0788  027F               	subwf	btemp+1,w
  1899  0789  1D03               	skipz
  1900  078A  2F8D               	goto	u1525
  1901  078B  3010               	movlw	16
  1902  078C  027A               	subwf	setFilas@i,w
  1903  078D                     u1525:	
  1904  078D  1C03               	skipc
  1905  078E  2F90               	goto	u1521
  1906  078F  2F91               	goto	u1520
  1907  0790                     u1521:	
  1908  0790  2F92               	goto	l2090
  1909  0791                     u1520:	
  1910  0791  2FC2               	goto	l168
  1911  0792                     l2090:	
  1912                           
  1913                           ;filas.c: 22:         PORTCbits.RC4 = (reg_value & (1<<i) )>>i;
  1914  0792  0A7A               	incf	setFilas@i,w
  1915  0793  00F4               	movwf	??_setFilas
  1916  0794  3001               	movlw	1
  1917  0795  00F5               	movwf	??_setFilas+1
  1918  0796  3000               	movlw	0
  1919  0797  00F6               	movwf	??_setFilas+2
  1920  0798  2F9C               	goto	u1534
  1921  0799                     u1535:	
  1922  0799  1003               	clrc
  1923  079A  0DF5               	rlf	??_setFilas+1,f
  1924  079B  0DF6               	rlf	??_setFilas+2,f
  1925  079C                     u1534:	
  1926  079C  0BF4               	decfsz	??_setFilas,f
  1927  079D  2F99               	goto	u1535
  1928  079E  0872               	movf	setFilas@reg_value,w
  1929  079F  0575               	andwf	??_setFilas+1,w
  1930  07A0  00F7               	movwf	??_setFilas+3
  1931  07A1  0873               	movf	setFilas@reg_value+1,w
  1932  07A2  0576               	andwf	??_setFilas+2,w
  1933  07A3  00F8               	movwf	??_setFilas+4
  1934  07A4  0A7A               	incf	setFilas@i,w
  1935  07A5  2FA9               	goto	u1544
  1936  07A6                     u1545:	
  1937  07A6  1003               	clrc
  1938  07A7  0CF8               	rrf	??_setFilas+4,f
  1939  07A8  0CF7               	rrf	??_setFilas+3,f
  1940  07A9                     u1544:	
  1941  07A9  3EFF               	addlw	-1
  1942  07AA  1D03               	skipz
  1943  07AB  2FA6               	goto	u1545
  1944  07AC  0877               	movf	??_setFilas+3,w
  1945  07AD  00F9               	movwf	??_setFilas+5
  1946  07AE  0EF9               	swapf	??_setFilas+5,f
  1947  07AF  1283               	bcf	3,5	;RP0=0, select bank0
  1948  07B0  1303               	bcf	3,6	;RP1=0, select bank0
  1949  07B1  0807               	movf	7,w	;volatile
  1950  07B2  0679               	xorwf	??_setFilas+5,w
  1951  07B3  39EF               	andlw	-17
  1952  07B4  0679               	xorwf	??_setFilas+5,w
  1953  07B5  0087               	movwf	7	;volatile
  1954  07B6                     l2092:	
  1955                           
  1956                           ;filas.c: 23:         shiftClock_Fil();
  1957  07B6  120A  158A  25F1  120A  118A  	fcall	_shiftClock_Fil
  1958  07BB                     l2094:	
  1959                           
  1960                           ;filas.c: 24:     }
  1961  07BB  3001               	movlw	1
  1962  07BC  07FA               	addwf	setFilas@i,f
  1963  07BD  1803               	skipnc
  1964  07BE  0AFB               	incf	setFilas@i+1,f
  1965  07BF  3000               	movlw	0
  1966  07C0  07FB               	addwf	setFilas@i+1,f
  1967  07C1  2F84               	goto	l2086
  1968  07C2                     l168:	
  1969  07C2  0008               	return
  1970  07C3                     __end_of_setFilas:	
  1971                           
  1972                           	psect	text7
  1973  0DF1                     __ptext7:	
  1974 ;; *************** function _shiftClock_Fil *****************
  1975 ;; Defined at:
  1976 ;;		line 13 in file "filas.c"
  1977 ;; Parameters:    Size  Location     Type
  1978 ;;		None
  1979 ;; Auto vars:     Size  Location     Type
  1980 ;;		None
  1981 ;; Return value:  Size  Location     Type
  1982 ;;                  1    wreg      void 
  1983 ;; Registers used:
  1984 ;;		None
  1985 ;; Tracked objects:
  1986 ;;		On entry : 0/0
  1987 ;;		On exit  : 0/0
  1988 ;;		Unchanged: 0/0
  1989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1990 ;;      Params:         0       0       0       0       0
  1991 ;;      Locals:         0       0       0       0       0
  1992 ;;      Temps:          0       0       0       0       0
  1993 ;;      Totals:         0       0       0       0       0
  1994 ;;Total ram usage:        0 bytes
  1995 ;; Hardware stack levels used:    1
  1996 ;; Hardware stack levels required when called:    1
  1997 ;; This function calls:
  1998 ;;		Nothing
  1999 ;; This function is called by:
  2000 ;;		_setFilas
  2001 ;; This function uses a non-reentrant model
  2002 ;;
  2003                           
  2004                           
  2005                           ;psect for function _shiftClock_Fil
  2006  0DF1                     _shiftClock_Fil:	
  2007  0DF1                     l1858:	
  2008                           ;incstack = 0
  2009                           ; Regs used in _shiftClock_Fil: []
  2010                           
  2011                           
  2012                           ;filas.c: 14:     PORTCbits.RC7 = 0;
  2013  0DF1  1283               	bcf	3,5	;RP0=0, select bank0
  2014  0DF2  1303               	bcf	3,6	;RP1=0, select bank0
  2015  0DF3  1387               	bcf	7,7	;volatile
  2016                           
  2017                           ;filas.c: 15:     PORTCbits.RC7 = 1;
  2018  0DF4  1787               	bsf	7,7	;volatile
  2019                           
  2020                           ;filas.c: 16:     PORTCbits.RC7 = 0;
  2021  0DF5  1387               	bcf	7,7	;volatile
  2022  0DF6                     l163:	
  2023  0DF6  0008               	return
  2024  0DF7                     __end_of_shiftClock_Fil:	
  2025                           
  2026                           	psect	text8
  2027  0FBF                     __ptext8:	
  2028 ;; *************** function _addToScreen *****************
  2029 ;; Defined at:
  2030 ;;		line 39 in file "screen.c"
  2031 ;; Parameters:    Size  Location     Type
  2032 ;;		None
  2033 ;; Auto vars:     Size  Location     Type
  2034 ;;  i               2    0[BANK0 ] int 
  2035 ;; Return value:  Size  Location     Type
  2036 ;;                  1    wreg      void 
  2037 ;; Registers used:
  2038 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2039 ;; Tracked objects:
  2040 ;;		On entry : 0/0
  2041 ;;		On exit  : 0/0
  2042 ;;		Unchanged: 0/0
  2043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2044 ;;      Params:         0       0       0       0       0
  2045 ;;      Locals:         0       2       0       0       0
  2046 ;;      Temps:          9       0       0       0       0
  2047 ;;      Totals:         9       2       0       0       0
  2048 ;;Total ram usage:       11 bytes
  2049 ;; Hardware stack levels used:    1
  2050 ;; Hardware stack levels required when called:    1
  2051 ;; This function calls:
  2052 ;;		Nothing
  2053 ;; This function is called by:
  2054 ;;		_updateScreen
  2055 ;; This function uses a non-reentrant model
  2056 ;;
  2057                           
  2058                           
  2059                           ;psect for function _addToScreen
  2060  0FBF                     _addToScreen:	
  2061  0FBF                     l2106:	
  2062                           ;incstack = 0
  2063                           ; Regs used in _addToScreen: [wreg-fsr0h+status,2+status,0+btemp+1]
  2064                           
  2065                           
  2066                           ;screen.c: 40:     int i=0;
  2067  0FBF  1283               	bcf	3,5	;RP0=0, select bank0
  2068  0FC0  1303               	bcf	3,6	;RP1=0, select bank0
  2069  0FC1  01A0               	clrf	addToScreen@i
  2070  0FC2  01A1               	clrf	addToScreen@i+1
  2071                           
  2072                           ;screen.c: 41:     for(i=0; i<8; i++){
  2073  0FC3  01A0               	clrf	addToScreen@i
  2074  0FC4  01A1               	clrf	addToScreen@i+1
  2075  0FC5                     l2112:	
  2076                           
  2077                           ;screen.c: 42:         pantalla[i] = ficha[i] | fondo[i];
  2078  0FC5  1283               	bcf	3,5	;RP0=0, select bank0
  2079  0FC6  1303               	bcf	3,6	;RP1=0, select bank0
  2080  0FC7  0820               	movf	addToScreen@i,w
  2081  0FC8  00F2               	movwf	??_addToScreen
  2082  0FC9  0772               	addwf	??_addToScreen,w
  2083  0FCA  3EA0               	addlw	(low (_fondo| 0))& (0+255)
  2084  0FCB  0084               	movwf	4
  2085  0FCC  1383               	bcf	3,7	;select IRP bank1
  2086  0FCD  0800               	movf	0,w
  2087  0FCE  00F3               	movwf	??_addToScreen+1
  2088  0FCF  0A84               	incf	4,f
  2089  0FD0  0800               	movf	0,w
  2090  0FD1  00F4               	movwf	??_addToScreen+2
  2091  0FD2  0820               	movf	addToScreen@i,w
  2092  0FD3  00F5               	movwf	??_addToScreen+3
  2093  0FD4  0775               	addwf	??_addToScreen+3,w
  2094  0FD5  3E57               	addlw	(low (_ficha| 0))& (0+255)
  2095  0FD6  0084               	movwf	4
  2096  0FD7  0800               	movf	0,w
  2097  0FD8  00F6               	movwf	??_addToScreen+4
  2098  0FD9  0A84               	incf	4,f
  2099  0FDA  0800               	movf	0,w
  2100  0FDB  00F7               	movwf	??_addToScreen+5
  2101  0FDC  0873               	movf	??_addToScreen+1,w
  2102  0FDD  0476               	iorwf	??_addToScreen+4,w
  2103  0FDE  00F8               	movwf	??_addToScreen+6
  2104  0FDF  0874               	movf	??_addToScreen+2,w
  2105  0FE0  0477               	iorwf	??_addToScreen+5,w
  2106  0FE1  00F9               	movwf	??_addToScreen+7
  2107  0FE2  0820               	movf	addToScreen@i,w
  2108  0FE3  00FA               	movwf	??_addToScreen+8
  2109  0FE4  077A               	addwf	??_addToScreen+8,w
  2110  0FE5  3EB0               	addlw	(low (_pantalla| 0))& (0+255)
  2111  0FE6  0084               	movwf	4
  2112  0FE7  0878               	movf	??_addToScreen+6,w
  2113  0FE8  0080               	movwf	0
  2114  0FE9  0A84               	incf	4,f
  2115  0FEA  0879               	movf	??_addToScreen+7,w
  2116  0FEB  0080               	movwf	0
  2117  0FEC                     l2114:	
  2118                           
  2119                           ;screen.c: 43:     }
  2120  0FEC  3001               	movlw	1
  2121  0FED  07A0               	addwf	addToScreen@i,f
  2122  0FEE  1803               	skipnc
  2123  0FEF  0AA1               	incf	addToScreen@i+1,f
  2124  0FF0  3000               	movlw	0
  2125  0FF1  07A1               	addwf	addToScreen@i+1,f
  2126  0FF2                     l2116:	
  2127  0FF2  0821               	movf	addToScreen@i+1,w
  2128  0FF3  3A80               	xorlw	128
  2129  0FF4  00FF               	movwf	btemp+1
  2130  0FF5  3080               	movlw	128
  2131  0FF6  027F               	subwf	btemp+1,w
  2132  0FF7  1D03               	skipz
  2133  0FF8  2FFB               	goto	u1555
  2134  0FF9  3008               	movlw	8
  2135  0FFA  0220               	subwf	addToScreen@i,w
  2136  0FFB                     u1555:	
  2137  0FFB  1C03               	skipc
  2138  0FFC  2FFE               	goto	u1551
  2139  0FFD  2FFF               	goto	u1550
  2140  0FFE                     u1551:	
  2141  0FFE  2FC5               	goto	l2112
  2142  0FFF                     u1550:	
  2143  0FFF                     l218:	
  2144  0FFF  0008               	return
  2145  1000                     __end_of_addToScreen:	
  2146                           
  2147                           	psect	text9
  2148  0E05                     __ptext9:	
  2149 ;; *************** function _srand *****************
  2150 ;; Defined at:
  2151 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  2152 ;; Parameters:    Size  Location     Type
  2153 ;;  x               2    2[COMMON] unsigned int 
  2154 ;; Auto vars:     Size  Location     Type
  2155 ;;		None
  2156 ;; Return value:  Size  Location     Type
  2157 ;;                  1    wreg      void 
  2158 ;; Registers used:
  2159 ;;		wreg
  2160 ;; Tracked objects:
  2161 ;;		On entry : 0/0
  2162 ;;		On exit  : 0/0
  2163 ;;		Unchanged: 0/0
  2164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2165 ;;      Params:         2       0       0       0       0
  2166 ;;      Locals:         0       0       0       0       0
  2167 ;;      Temps:          0       0       0       0       0
  2168 ;;      Totals:         2       0       0       0       0
  2169 ;;Total ram usage:        2 bytes
  2170 ;; Hardware stack levels used:    1
  2171 ;; Hardware stack levels required when called:    1
  2172 ;; This function calls:
  2173 ;;		Nothing
  2174 ;; This function is called by:
  2175 ;;		_main
  2176 ;; This function uses a non-reentrant model
  2177 ;;
  2178                           
  2179                           
  2180                           ;psect for function _srand
  2181  0E05                     _srand:	
  2182  0E05                     l2262:	
  2183                           ;incstack = 0
  2184                           ; Regs used in _srand: [wreg]
  2185                           
  2186  0E05  0872               	movf	srand@x,w
  2187  0E06  1283               	bcf	3,5	;RP0=0, select bank0
  2188  0E07  1303               	bcf	3,6	;RP1=0, select bank0
  2189  0E08  00E7               	movwf	_randx
  2190  0E09  0873               	movf	srand@x+1,w
  2191  0E0A  00E8               	movwf	_randx+1
  2192  0E0B  01E9               	clrf	_randx+2
  2193  0E0C  01EA               	clrf	_randx+3
  2194  0E0D                     l927:	
  2195  0E0D  0008               	return
  2196  0E0E                     __end_of_srand:	
  2197                           
  2198                           	psect	text10
  2199  0E27                     __ptext10:	
  2200 ;; *************** function _init_timer *****************
  2201 ;; Defined at:
  2202 ;;		line 86 in file "init.c"
  2203 ;; Parameters:    Size  Location     Type
  2204 ;;		None
  2205 ;; Auto vars:     Size  Location     Type
  2206 ;;		None
  2207 ;; Return value:  Size  Location     Type
  2208 ;;                  1    wreg      void 
  2209 ;; Registers used:
  2210 ;;		status,2
  2211 ;; Tracked objects:
  2212 ;;		On entry : 0/0
  2213 ;;		On exit  : 0/0
  2214 ;;		Unchanged: 0/0
  2215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2216 ;;      Params:         0       0       0       0       0
  2217 ;;      Locals:         0       0       0       0       0
  2218 ;;      Temps:          0       0       0       0       0
  2219 ;;      Totals:         0       0       0       0       0
  2220 ;;Total ram usage:        0 bytes
  2221 ;; Hardware stack levels used:    1
  2222 ;; Hardware stack levels required when called:    1
  2223 ;; This function calls:
  2224 ;;		Nothing
  2225 ;; This function is called by:
  2226 ;;		_main
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230                           
  2231                           ;psect for function _init_timer
  2232  0E27                     _init_timer:	
  2233  0E27                     l2204:	
  2234                           ;incstack = 0
  2235                           ; Regs used in _init_timer: [status,2]
  2236                           
  2237                           
  2238                           ;init.c: 88:     TMR0=0;
  2239  0E27  1283               	bcf	3,5	;RP0=0, select bank0
  2240  0E28  1303               	bcf	3,6	;RP1=0, select bank0
  2241  0E29  0181               	clrf	1	;volatile
  2242  0E2A                     l2206:	
  2243                           
  2244                           ;init.c: 96:     INTCONbits.GIE = 1;
  2245  0E2A  178B               	bsf	11,7	;volatile
  2246  0E2B                     l2208:	
  2247                           
  2248                           ;init.c: 97:     INTCONbits.TMR0IE = 1;
  2249  0E2B  168B               	bsf	11,5	;volatile
  2250  0E2C                     l2210:	
  2251                           
  2252                           ;init.c: 98:     INTCONbits.TMR0IF = 0;
  2253  0E2C  110B               	bcf	11,2	;volatile
  2254  0E2D                     l2212:	
  2255                           
  2256                           ;init.c: 107:     OPTION_REGbits.PSA = 0;
  2257  0E2D  1683               	bsf	3,5	;RP0=1, select bank1
  2258  0E2E  1303               	bcf	3,6	;RP1=0, select bank1
  2259  0E2F  1181               	bcf	1,3	;volatile
  2260  0E30                     l2214:	
  2261                           
  2262                           ;init.c: 108:     OPTION_REGbits.PS0 = 1;
  2263  0E30  1401               	bsf	1,0	;volatile
  2264  0E31                     l2216:	
  2265                           
  2266                           ;init.c: 109:     OPTION_REGbits.PS1 = 1;
  2267  0E31  1481               	bsf	1,1	;volatile
  2268  0E32                     l2218:	
  2269                           
  2270                           ;init.c: 110:     OPTION_REGbits.PS2 = 1;
  2271  0E32  1501               	bsf	1,2	;volatile
  2272  0E33                     l2220:	
  2273                           
  2274                           ;init.c: 111:     OPTION_REGbits.T0CS = 0;
  2275  0E33  1281               	bcf	1,5	;volatile
  2276  0E34                     l57:	
  2277  0E34  0008               	return
  2278  0E35                     __end_of_init_timer:	
  2279                           
  2280                           	psect	text11
  2281  0E5B                     __ptext11:	
  2282 ;; *************** function _init_pines *****************
  2283 ;; Defined at:
  2284 ;;		line 5 in file "init.c"
  2285 ;; Parameters:    Size  Location     Type
  2286 ;;		None
  2287 ;; Auto vars:     Size  Location     Type
  2288 ;;		None
  2289 ;; Return value:  Size  Location     Type
  2290 ;;                  1    wreg      void 
  2291 ;; Registers used:
  2292 ;;		wreg, status,2, status,0, pclath, cstack
  2293 ;; Tracked objects:
  2294 ;;		On entry : 0/0
  2295 ;;		On exit  : 0/0
  2296 ;;		Unchanged: 0/0
  2297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2298 ;;      Params:         0       0       0       0       0
  2299 ;;      Locals:         0       0       0       0       0
  2300 ;;      Temps:          0       0       0       0       0
  2301 ;;      Totals:         0       0       0       0       0
  2302 ;;Total ram usage:        0 bytes
  2303 ;; Hardware stack levels used:    1
  2304 ;; Hardware stack levels required when called:    2
  2305 ;; This function calls:
  2306 ;;		_init_pines_LCD
  2307 ;;		_init_pines_col
  2308 ;;		_init_pines_fil
  2309 ;;		_init_pines_in
  2310 ;; This function is called by:
  2311 ;;		_main
  2312 ;; This function uses a non-reentrant model
  2313 ;;
  2314                           
  2315                           
  2316                           ;psect for function _init_pines
  2317  0E5B                     _init_pines:	
  2318  0E5B                     l2196:	
  2319                           ;incstack = 0
  2320                           ; Regs used in _init_pines: [wreg+status,2+status,0+pclath+cstack]
  2321                           
  2322                           
  2323                           ;init.c: 6:     init_pines_LCD();
  2324  0E5B  120A  158A  26DC  120A  158A  	fcall	_init_pines_LCD
  2325  0E60                     l2198:	
  2326                           
  2327                           ;init.c: 7:     init_pines_fil();
  2328  0E60  120A  158A  261A  120A  158A  	fcall	_init_pines_fil
  2329  0E65                     l2200:	
  2330                           
  2331                           ;init.c: 8:     init_pines_col();
  2332  0E65  120A  158A  2635  120A  158A  	fcall	_init_pines_col
  2333  0E6A                     l2202:	
  2334                           
  2335                           ;init.c: 9:     init_pines_in();
  2336  0E6A  120A  158A  25EB  120A  158A  	fcall	_init_pines_in
  2337  0E6F                     l39:	
  2338  0E6F  0008               	return
  2339  0E70                     __end_of_init_pines:	
  2340                           
  2341                           	psect	text12
  2342  0DEB                     __ptext12:	
  2343 ;; *************** function _init_pines_in *****************
  2344 ;; Defined at:
  2345 ;;		line 12 in file "init.c"
  2346 ;; Parameters:    Size  Location     Type
  2347 ;;		None
  2348 ;; Auto vars:     Size  Location     Type
  2349 ;;		None
  2350 ;; Return value:  Size  Location     Type
  2351 ;;                  1    wreg      void 
  2352 ;; Registers used:
  2353 ;;		None
  2354 ;; Tracked objects:
  2355 ;;		On entry : 0/0
  2356 ;;		On exit  : 0/0
  2357 ;;		Unchanged: 0/0
  2358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2359 ;;      Params:         0       0       0       0       0
  2360 ;;      Locals:         0       0       0       0       0
  2361 ;;      Temps:          0       0       0       0       0
  2362 ;;      Totals:         0       0       0       0       0
  2363 ;;Total ram usage:        0 bytes
  2364 ;; Hardware stack levels used:    1
  2365 ;; Hardware stack levels required when called:    1
  2366 ;; This function calls:
  2367 ;;		Nothing
  2368 ;; This function is called by:
  2369 ;;		_init_pines
  2370 ;; This function uses a non-reentrant model
  2371 ;;
  2372                           
  2373                           
  2374                           ;psect for function _init_pines_in
  2375  0DEB                     _init_pines_in:	
  2376  0DEB                     l1970:	
  2377                           ;incstack = 0
  2378                           ; Regs used in _init_pines_in: []
  2379                           
  2380                           
  2381                           ;init.c: 13:     TRISBbits.TRISB5 = 1;
  2382  0DEB  1683               	bsf	3,5	;RP0=1, select bank1
  2383  0DEC  1303               	bcf	3,6	;RP1=0, select bank1
  2384  0DED  1686               	bsf	6,5	;volatile
  2385                           
  2386                           ;init.c: 14:     TRISBbits.TRISB4 = 1;
  2387  0DEE  1606               	bsf	6,4	;volatile
  2388                           
  2389                           ;init.c: 15:     TRISBbits.TRISB3 = 1;
  2390  0DEF  1586               	bsf	6,3	;volatile
  2391  0DF0                     l42:	
  2392  0DF0  0008               	return
  2393  0DF1                     __end_of_init_pines_in:	
  2394                           
  2395                           	psect	text13
  2396  0E1A                     __ptext13:	
  2397 ;; *************** function _init_pines_fil *****************
  2398 ;; Defined at:
  2399 ;;		line 49 in file "init.c"
  2400 ;; Parameters:    Size  Location     Type
  2401 ;;		None
  2402 ;; Auto vars:     Size  Location     Type
  2403 ;;		None
  2404 ;; Return value:  Size  Location     Type
  2405 ;;                  1    wreg      void 
  2406 ;; Registers used:
  2407 ;;		None
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/0
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2413 ;;      Params:         0       0       0       0       0
  2414 ;;      Locals:         0       0       0       0       0
  2415 ;;      Temps:          0       0       0       0       0
  2416 ;;      Totals:         0       0       0       0       0
  2417 ;;Total ram usage:        0 bytes
  2418 ;; Hardware stack levels used:    1
  2419 ;; Hardware stack levels required when called:    1
  2420 ;; This function calls:
  2421 ;;		Nothing
  2422 ;; This function is called by:
  2423 ;;		_init_pines
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           
  2427                           
  2428                           ;psect for function _init_pines_fil
  2429  0E1A                     _init_pines_fil:	
  2430  0E1A                     l1966:	
  2431                           ;incstack = 0
  2432                           ; Regs used in _init_pines_fil: []
  2433                           
  2434                           
  2435                           ;init.c: 51:     TRISCbits.TRISC4 = 0;
  2436  0E1A  1683               	bsf	3,5	;RP0=1, select bank1
  2437  0E1B  1303               	bcf	3,6	;RP1=0, select bank1
  2438  0E1C  1207               	bcf	7,4	;volatile
  2439                           
  2440                           ;init.c: 52:     TRISCbits.TRISC5 = 0;
  2441  0E1D  1287               	bcf	7,5	;volatile
  2442                           
  2443                           ;init.c: 53:     TRISCbits.TRISC6 = 0;
  2444  0E1E  1307               	bcf	7,6	;volatile
  2445                           
  2446                           ;init.c: 54:     TRISCbits.TRISC7 = 0;
  2447  0E1F  1387               	bcf	7,7	;volatile
  2448                           
  2449                           ;init.c: 56:     PORTCbits.RC4 = 0;
  2450  0E20  1283               	bcf	3,5	;RP0=0, select bank0
  2451  0E21  1303               	bcf	3,6	;RP1=0, select bank0
  2452  0E22  1207               	bcf	7,4	;volatile
  2453                           
  2454                           ;init.c: 57:     PORTCbits.RC5 = 0;
  2455  0E23  1287               	bcf	7,5	;volatile
  2456                           
  2457                           ;init.c: 58:     PORTCbits.RC6 = 0;
  2458  0E24  1307               	bcf	7,6	;volatile
  2459                           
  2460                           ;init.c: 59:     PORTCbits.RC7 = 0;
  2461  0E25  1387               	bcf	7,7	;volatile
  2462  0E26                     l48:	
  2463  0E26  0008               	return
  2464  0E27                     __end_of_init_pines_fil:	
  2465                           
  2466                           	psect	text14
  2467  0E35                     __ptext14:	
  2468 ;; *************** function _init_pines_col *****************
  2469 ;; Defined at:
  2470 ;;		line 62 in file "init.c"
  2471 ;; Parameters:    Size  Location     Type
  2472 ;;		None
  2473 ;; Auto vars:     Size  Location     Type
  2474 ;;		None
  2475 ;; Return value:  Size  Location     Type
  2476 ;;                  1    wreg      void 
  2477 ;; Registers used:
  2478 ;;		None
  2479 ;; Tracked objects:
  2480 ;;		On entry : 0/0
  2481 ;;		On exit  : 0/0
  2482 ;;		Unchanged: 0/0
  2483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2484 ;;      Params:         0       0       0       0       0
  2485 ;;      Locals:         0       0       0       0       0
  2486 ;;      Temps:          0       0       0       0       0
  2487 ;;      Totals:         0       0       0       0       0
  2488 ;;Total ram usage:        0 bytes
  2489 ;; Hardware stack levels used:    1
  2490 ;; Hardware stack levels required when called:    1
  2491 ;; This function calls:
  2492 ;;		Nothing
  2493 ;; This function is called by:
  2494 ;;		_init_pines
  2495 ;; This function uses a non-reentrant model
  2496 ;;
  2497                           
  2498                           
  2499                           ;psect for function _init_pines_col
  2500  0E35                     _init_pines_col:	
  2501  0E35                     l1968:	
  2502                           ;incstack = 0
  2503                           ; Regs used in _init_pines_col: []
  2504                           
  2505                           
  2506                           ;init.c: 63:     TRISBbits.TRISB0 = 0;
  2507  0E35  1683               	bsf	3,5	;RP0=1, select bank1
  2508  0E36  1303               	bcf	3,6	;RP1=0, select bank1
  2509  0E37  1006               	bcf	6,0	;volatile
  2510                           
  2511                           ;init.c: 64:     PORTBbits.RB0 = 0;
  2512  0E38  1283               	bcf	3,5	;RP0=0, select bank0
  2513  0E39  1303               	bcf	3,6	;RP1=0, select bank0
  2514  0E3A  1006               	bcf	6,0	;volatile
  2515                           
  2516                           ;init.c: 66:     TRISDbits.TRISD4 = 0;
  2517  0E3B  1683               	bsf	3,5	;RP0=1, select bank1
  2518  0E3C  1303               	bcf	3,6	;RP1=0, select bank1
  2519  0E3D  1208               	bcf	8,4	;volatile
  2520                           
  2521                           ;init.c: 67:     TRISDbits.TRISD5 = 0;
  2522  0E3E  1288               	bcf	8,5	;volatile
  2523                           
  2524                           ;init.c: 68:     TRISDbits.TRISD6 = 0;
  2525  0E3F  1308               	bcf	8,6	;volatile
  2526                           
  2527                           ;init.c: 69:     TRISDbits.TRISD7 = 0;
  2528  0E40  1388               	bcf	8,7	;volatile
  2529                           
  2530                           ;init.c: 71:     PORTDbits.RD4 = 0;
  2531  0E41  1283               	bcf	3,5	;RP0=0, select bank0
  2532  0E42  1303               	bcf	3,6	;RP1=0, select bank0
  2533  0E43  1208               	bcf	8,4	;volatile
  2534                           
  2535                           ;init.c: 72:     PORTDbits.RD5 = 0;
  2536  0E44  1288               	bcf	8,5	;volatile
  2537                           
  2538                           ;init.c: 73:     PORTDbits.RD6 = 0;
  2539  0E45  1308               	bcf	8,6	;volatile
  2540                           
  2541                           ;init.c: 74:     PORTDbits.RD7 = 0;
  2542  0E46  1388               	bcf	8,7	;volatile
  2543  0E47                     l51:	
  2544  0E47  0008               	return
  2545  0E48                     __end_of_init_pines_col:	
  2546                           
  2547                           	psect	text15
  2548  0EDC                     __ptext15:	
  2549 ;; *************** function _init_pines_LCD *****************
  2550 ;; Defined at:
  2551 ;;		line 18 in file "init.c"
  2552 ;; Parameters:    Size  Location     Type
  2553 ;;		None
  2554 ;; Auto vars:     Size  Location     Type
  2555 ;;		None
  2556 ;; Return value:  Size  Location     Type
  2557 ;;                  1    wreg      void 
  2558 ;; Registers used:
  2559 ;;		wreg
  2560 ;; Tracked objects:
  2561 ;;		On entry : 0/0
  2562 ;;		On exit  : 0/0
  2563 ;;		Unchanged: 0/0
  2564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2565 ;;      Params:         0       0       0       0       0
  2566 ;;      Locals:         0       0       0       0       0
  2567 ;;      Temps:          0       0       0       0       0
  2568 ;;      Totals:         0       0       0       0       0
  2569 ;;Total ram usage:        0 bytes
  2570 ;; Hardware stack levels used:    1
  2571 ;; Hardware stack levels required when called:    1
  2572 ;; This function calls:
  2573 ;;		Nothing
  2574 ;; This function is called by:
  2575 ;;		_init_pines
  2576 ;; This function uses a non-reentrant model
  2577 ;;
  2578                           
  2579                           
  2580                           ;psect for function _init_pines_LCD
  2581  0EDC                     _init_pines_LCD:	
  2582  0EDC                     l1920:	
  2583                           ;incstack = 0
  2584                           ; Regs used in _init_pines_LCD: [wreg]
  2585                           
  2586                           
  2587                           ;init.c: 20:     ADCON1 = 0x7;
  2588  0EDC  3007               	movlw	7
  2589  0EDD  1683               	bsf	3,5	;RP0=1, select bank1
  2590  0EDE  1303               	bcf	3,6	;RP1=0, select bank1
  2591  0EDF  009F               	movwf	31	;volatile
  2592  0EE0                     l1922:	
  2593                           
  2594                           ;init.c: 22:     TRISAbits.TRISA0 = 0;
  2595  0EE0  1005               	bcf	5,0	;volatile
  2596  0EE1                     l1924:	
  2597                           
  2598                           ;init.c: 23:     TRISAbits.TRISA1 = 0;
  2599  0EE1  1085               	bcf	5,1	;volatile
  2600  0EE2                     l1926:	
  2601                           
  2602                           ;init.c: 24:     TRISAbits.TRISA2 = 0;
  2603  0EE2  1105               	bcf	5,2	;volatile
  2604  0EE3                     l1928:	
  2605                           
  2606                           ;init.c: 25:     TRISAbits.TRISA3 = 0;
  2607  0EE3  1185               	bcf	5,3	;volatile
  2608  0EE4                     l1930:	
  2609                           
  2610                           ;init.c: 26:     TRISAbits.TRISA4 = 0;
  2611  0EE4  1205               	bcf	5,4	;volatile
  2612  0EE5                     l1932:	
  2613                           
  2614                           ;init.c: 27:     TRISAbits.TRISA5 = 0;
  2615  0EE5  1285               	bcf	5,5	;volatile
  2616  0EE6                     l1934:	
  2617                           
  2618                           ;init.c: 28:     TRISEbits.TRISE0 = 0;
  2619  0EE6  1009               	bcf	9,0	;volatile
  2620  0EE7                     l1936:	
  2621                           
  2622                           ;init.c: 29:     TRISEbits.TRISE1 = 0;
  2623  0EE7  1089               	bcf	9,1	;volatile
  2624  0EE8                     l1938:	
  2625                           
  2626                           ;init.c: 31:     TRISCbits.TRISC0 = 0;
  2627  0EE8  1007               	bcf	7,0	;volatile
  2628  0EE9                     l1940:	
  2629                           
  2630                           ;init.c: 32:     TRISCbits.TRISC1 = 0;
  2631  0EE9  1087               	bcf	7,1	;volatile
  2632  0EEA                     l1942:	
  2633                           
  2634                           ;init.c: 33:     TRISCbits.TRISC2 = 0;
  2635  0EEA  1107               	bcf	7,2	;volatile
  2636  0EEB                     l1944:	
  2637                           
  2638                           ;init.c: 35:     PORTAbits.RA0 = 0;
  2639  0EEB  1283               	bcf	3,5	;RP0=0, select bank0
  2640  0EEC  1303               	bcf	3,6	;RP1=0, select bank0
  2641  0EED  1005               	bcf	5,0	;volatile
  2642  0EEE                     l1946:	
  2643                           
  2644                           ;init.c: 36:     PORTAbits.RA1 = 0;
  2645  0EEE  1085               	bcf	5,1	;volatile
  2646  0EEF                     l1948:	
  2647                           
  2648                           ;init.c: 37:     PORTAbits.RA2 = 0;
  2649  0EEF  1105               	bcf	5,2	;volatile
  2650  0EF0                     l1950:	
  2651                           
  2652                           ;init.c: 38:     PORTAbits.RA3 = 0;
  2653  0EF0  1185               	bcf	5,3	;volatile
  2654  0EF1                     l1952:	
  2655                           
  2656                           ;init.c: 39:     PORTAbits.RA4 = 0;
  2657  0EF1  1205               	bcf	5,4	;volatile
  2658  0EF2                     l1954:	
  2659                           
  2660                           ;init.c: 40:     PORTAbits.RA5 = 0;
  2661  0EF2  1285               	bcf	5,5	;volatile
  2662  0EF3                     l1956:	
  2663                           
  2664                           ;init.c: 41:     PORTEbits.RE0 = 0;
  2665  0EF3  1009               	bcf	9,0	;volatile
  2666  0EF4                     l1958:	
  2667                           
  2668                           ;init.c: 42:     PORTEbits.RE1 = 0;
  2669  0EF4  1089               	bcf	9,1	;volatile
  2670  0EF5                     l1960:	
  2671                           
  2672                           ;init.c: 44:     PORTCbits.RC0 = 0;
  2673  0EF5  1007               	bcf	7,0	;volatile
  2674  0EF6                     l1962:	
  2675                           
  2676                           ;init.c: 45:     PORTCbits.RC1 = 0;
  2677  0EF6  1087               	bcf	7,1	;volatile
  2678  0EF7                     l1964:	
  2679                           
  2680                           ;init.c: 46:     PORTCbits.RC2 = 0;
  2681  0EF7  1107               	bcf	7,2	;volatile
  2682  0EF8                     l45:	
  2683  0EF8  0008               	return
  2684  0EF9                     __end_of_init_pines_LCD:	
  2685                           
  2686                           	psect	text16
  2687  01FB                     __ptext16:	
  2688 ;; *************** function _init_LCD *****************
  2689 ;; Defined at:
  2690 ;;		line 12 in file "LCD.c"
  2691 ;; Parameters:    Size  Location     Type
  2692 ;;		None
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;  B               1    0        _Bool 
  2695 ;;  C               1    0        _Bool 
  2696 ;;  D               1    0        _Bool 
  2697 ;;  S               1   15[BANK0 ] _Bool 
  2698 ;;  ID              1    0        _Bool 
  2699 ;;  F               1    0        _Bool 
  2700 ;;  N               1   12[BANK0 ] _Bool 
  2701 ;;  DL              1    0        _Bool 
  2702 ;; Return value:  Size  Location     Type
  2703 ;;                  1    wreg      void 
  2704 ;; Registers used:
  2705 ;;		wreg, status,2, status,0, pclath, cstack
  2706 ;; Tracked objects:
  2707 ;;		On entry : 0/0
  2708 ;;		On exit  : 0/0
  2709 ;;		Unchanged: 0/0
  2710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2711 ;;      Params:         0       0       0       0       0
  2712 ;;      Locals:         0       8       0       0       0
  2713 ;;      Temps:          0       3       0       0       0
  2714 ;;      Totals:         0      11       0       0       0
  2715 ;;Total ram usage:       11 bytes
  2716 ;; Hardware stack levels used:    1
  2717 ;; Hardware stack levels required when called:    3
  2718 ;; This function calls:
  2719 ;;		_clearDisplay
  2720 ;;		_displayONOFF
  2721 ;;		_entryModeSet
  2722 ;;		_functionSet
  2723 ;;		_returnHome
  2724 ;; This function is called by:
  2725 ;;		_main
  2726 ;; This function uses a non-reentrant model
  2727 ;;
  2728                           
  2729                           
  2730                           ;psect for function _init_LCD
  2731  01FB                     _init_LCD:	
  2732  01FB                     l2222:	
  2733                           ;incstack = 0
  2734                           ; Regs used in _init_LCD: [wreg+status,2+status,0+pclath+cstack]
  2735                           
  2736                           
  2737                           ;LCD.c: 14:     _Bool N=1;
  2738  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  2739  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  2740  01FD  01AC               	clrf	init_LCD@N
  2741  01FE  0AAC               	incf	init_LCD@N,f
  2742  01FF                     l2224:	
  2743  01FF                     l2226:	
  2744                           
  2745                           ;LCD.c: 18:     _Bool S=0;
  2746  01FF  01AF               	clrf	init_LCD@S
  2747  0200                     l2228:	
  2748  0200                     l2230:	
  2749  0200                     l2232:	
  2750  0200                     l2234:	
  2751                           
  2752                           ;LCD.c: 22:     _delay((unsigned long)((200)*(4000000/4000.0)));
  2753  0200  3002               	movlw	2
  2754  0201  1283               	bcf	3,5	;RP0=0, select bank0
  2755  0202  1303               	bcf	3,6	;RP1=0, select bank0
  2756  0203  00AA               	movwf	??_init_LCD+2
  2757  0204  3004               	movlw	4
  2758  0205  00A9               	movwf	??_init_LCD+1
  2759  0206  30B9               	movlw	185
  2760  0207  00A8               	movwf	??_init_LCD
  2761  0208                     u1777:	
  2762  0208  0BA8               	decfsz	??_init_LCD,f
  2763  0209  2A08               	goto	u1777
  2764  020A  0BA9               	decfsz	??_init_LCD+1,f
  2765  020B  2A08               	goto	u1777
  2766  020C  0BAA               	decfsz	??_init_LCD+2,f
  2767  020D  2A08               	goto	u1777
  2768  020E  2A0F               	nop2
  2769  020F                     l2236:	
  2770                           
  2771                           ;LCD.c: 23:     functionSet(1, 0, 0);
  2772  020F  01F5               	clrf	functionSet@N
  2773  0210  01F6               	clrf	functionSet@F
  2774  0211  3001               	movlw	1
  2775  0212  120A  118A  2667  120A  118A  	fcall	_functionSet
  2776  0217                     l2238:	
  2777                           
  2778                           ;LCD.c: 24:     _delay((unsigned long)((10)*(4000000/4000.0)));
  2779  0217  300D               	movlw	13
  2780  0218  1283               	bcf	3,5	;RP0=0, select bank0
  2781  0219  1303               	bcf	3,6	;RP1=0, select bank0
  2782  021A  00A9               	movwf	??_init_LCD+1
  2783  021B  30FB               	movlw	251
  2784  021C  00A8               	movwf	??_init_LCD
  2785  021D                     u1787:	
  2786  021D  0BA8               	decfsz	??_init_LCD,f
  2787  021E  2A1D               	goto	u1787
  2788  021F  0BA9               	decfsz	??_init_LCD+1,f
  2789  0220  2A1D               	goto	u1787
  2790  0221                     l2240:	
  2791                           
  2792                           ;LCD.c: 25:     functionSet(1, 0, 0);
  2793  0221  01F5               	clrf	functionSet@N
  2794  0222  01F6               	clrf	functionSet@F
  2795  0223  3001               	movlw	1
  2796  0224  120A  118A  2667  120A  118A  	fcall	_functionSet
  2797  0229                     l2242:	
  2798                           
  2799                           ;LCD.c: 26:     _delay((unsigned long)((10)*(4000000/4000.0)));
  2800  0229  300D               	movlw	13
  2801  022A  1283               	bcf	3,5	;RP0=0, select bank0
  2802  022B  1303               	bcf	3,6	;RP1=0, select bank0
  2803  022C  00A9               	movwf	??_init_LCD+1
  2804  022D  30FB               	movlw	251
  2805  022E  00A8               	movwf	??_init_LCD
  2806  022F                     u1797:	
  2807  022F  0BA8               	decfsz	??_init_LCD,f
  2808  0230  2A2F               	goto	u1797
  2809  0231  0BA9               	decfsz	??_init_LCD+1,f
  2810  0232  2A2F               	goto	u1797
  2811  0233                     l2244:	
  2812                           
  2813                           ;LCD.c: 27:     functionSet(1, 0, 0);
  2814  0233  01F5               	clrf	functionSet@N
  2815  0234  01F6               	clrf	functionSet@F
  2816  0235  3001               	movlw	1
  2817  0236  120A  118A  2667  120A  118A  	fcall	_functionSet
  2818  023B                     l2246:	
  2819                           
  2820                           ;LCD.c: 28:     _delay((unsigned long)((10)*(4000000/4000.0)));
  2821  023B  300D               	movlw	13
  2822  023C  1283               	bcf	3,5	;RP0=0, select bank0
  2823  023D  1303               	bcf	3,6	;RP1=0, select bank0
  2824  023E  00A9               	movwf	??_init_LCD+1
  2825  023F  30FB               	movlw	251
  2826  0240  00A8               	movwf	??_init_LCD
  2827  0241                     u1807:	
  2828  0241  0BA8               	decfsz	??_init_LCD,f
  2829  0242  2A41               	goto	u1807
  2830  0243  0BA9               	decfsz	??_init_LCD+1,f
  2831  0244  2A41               	goto	u1807
  2832  0245                     l2248:	
  2833                           
  2834                           ;LCD.c: 30:     functionSet(DL, N, F);
  2835  0245  01F5               	clrf	functionSet@N
  2836  0246  0AF5               	incf	functionSet@N,f
  2837  0247  01F6               	clrf	functionSet@F
  2838  0248  3001               	movlw	1
  2839  0249  120A  118A  2667  120A  118A  	fcall	_functionSet
  2840  024E                     l2250:	
  2841                           
  2842                           ;LCD.c: 31:     _delay((unsigned long)((10)*(4000000/4000.0)));
  2843  024E  300D               	movlw	13
  2844  024F  1283               	bcf	3,5	;RP0=0, select bank0
  2845  0250  1303               	bcf	3,6	;RP1=0, select bank0
  2846  0251  00A9               	movwf	??_init_LCD+1
  2847  0252  30FB               	movlw	251
  2848  0253  00A8               	movwf	??_init_LCD
  2849  0254                     u1817:	
  2850  0254  0BA8               	decfsz	??_init_LCD,f
  2851  0255  2A54               	goto	u1817
  2852  0256  0BA9               	decfsz	??_init_LCD+1,f
  2853  0257  2A54               	goto	u1817
  2854  0258                     l2252:	
  2855                           
  2856                           ;LCD.c: 32:     displayONOFF(0,0,0);
  2857  0258  01F5               	clrf	displayONOFF@C
  2858  0259  01F6               	clrf	displayONOFF@B
  2859  025A  3000               	movlw	0
  2860  025B  120A  118A  261D  120A  118A  	fcall	_displayONOFF
  2861  0260                     l2254:	
  2862                           
  2863                           ;LCD.c: 33:     clearDisplay();
  2864  0260  120A  158A  2670  120A  118A  	fcall	_clearDisplay
  2865  0265                     l2256:	
  2866                           
  2867                           ;LCD.c: 34:     entryModeSet(ID, S);
  2868  0265  01F5               	clrf	entryModeSet@SH
  2869  0266  3001               	movlw	1
  2870  0267  120A  118A  27C3  120A  118A  	fcall	_entryModeSet
  2871  026C                     l2258:	
  2872                           
  2873                           ;LCD.c: 36:     displayONOFF(D,C,B);
  2874  026C  01F5               	clrf	displayONOFF@C
  2875  026D  0AF5               	incf	displayONOFF@C,f
  2876  026E  01F6               	clrf	displayONOFF@B
  2877  026F  0AF6               	incf	displayONOFF@B,f
  2878  0270  3001               	movlw	1
  2879  0271  120A  118A  261D  120A  118A  	fcall	_displayONOFF
  2880  0276                     l2260:	
  2881                           
  2882                           ;LCD.c: 37:     returnHome();
  2883  0276  120A  158A  268A  120A  118A  	fcall	_returnHome
  2884  027B                     l328:	
  2885  027B  0008               	return
  2886  027C                     __end_of_init_LCD:	
  2887                           
  2888                           	psect	text17
  2889  0E8A                     __ptext17:	
  2890 ;; *************** function _returnHome *****************
  2891 ;; Defined at:
  2892 ;;		line 47 in file "LCD.c"
  2893 ;; Parameters:    Size  Location     Type
  2894 ;;		None
  2895 ;; Auto vars:     Size  Location     Type
  2896 ;;		None
  2897 ;; Return value:  Size  Location     Type
  2898 ;;                  1    wreg      void 
  2899 ;; Registers used:
  2900 ;;		wreg, status,2, status,0, pclath, cstack
  2901 ;; Tracked objects:
  2902 ;;		On entry : 0/0
  2903 ;;		On exit  : 0/0
  2904 ;;		Unchanged: 0/0
  2905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2906 ;;      Params:         0       0       0       0       0
  2907 ;;      Locals:         0       0       0       0       0
  2908 ;;      Temps:          2       0       0       0       0
  2909 ;;      Totals:         2       0       0       0       0
  2910 ;;Total ram usage:        2 bytes
  2911 ;; Hardware stack levels used:    1
  2912 ;; Hardware stack levels required when called:    2
  2913 ;; This function calls:
  2914 ;;		_clearRS
  2915 ;;		_clearRW
  2916 ;;		_setData
  2917 ;; This function is called by:
  2918 ;;		_init_LCD
  2919 ;; This function uses a non-reentrant model
  2920 ;;
  2921                           
  2922                           
  2923                           ;psect for function _returnHome
  2924  0E8A                     _returnHome:	
  2925  0E8A                     l2192:	
  2926                           ;incstack = 0
  2927                           ; Regs used in _returnHome: [wreg+status,2+status,0+pclath+cstack]
  2928                           
  2929                           
  2930                           ;LCD.c: 48:     clearRS();
  2931  0E8A  120A  158A  25DA  120A  158A  	fcall	_clearRS
  2932                           
  2933                           ;LCD.c: 49:     clearRW();
  2934  0E8F  120A  158A  25DE  120A  158A  	fcall	_clearRW
  2935  0E94                     l2194:	
  2936                           
  2937                           ;LCD.c: 50:     setData(0x2);
  2938  0E94  3002               	movlw	2
  2939  0E95  120A  118A  227C  120A  158A  	fcall	_setData
  2940                           
  2941                           ;LCD.c: 51:     _delay((unsigned long)((10)*(4000000/4000.0)));
  2942  0E9A  300D               	movlw	13
  2943  0E9B  00F6               	movwf	??_returnHome+1
  2944  0E9C  30FB               	movlw	251
  2945  0E9D  00F5               	movwf	??_returnHome
  2946  0E9E                     u1827:	
  2947  0E9E  0BF5               	decfsz	??_returnHome,f
  2948  0E9F  2E9E               	goto	u1827
  2949  0EA0  0BF6               	decfsz	??_returnHome+1,f
  2950  0EA1  2E9E               	goto	u1827
  2951  0EA2  2EA3               	nop2
  2952  0EA3                     l334:	
  2953  0EA3  0008               	return
  2954  0EA4                     __end_of_returnHome:	
  2955                           
  2956                           	psect	text18
  2957  0667                     __ptext18:	
  2958 ;; *************** function _functionSet *****************
  2959 ;; Defined at:
  2960 ;;		line 72 in file "LCD.c"
  2961 ;; Parameters:    Size  Location     Type
  2962 ;;  DL              1    wreg     _Bool 
  2963 ;;  N               1    5[COMMON] _Bool 
  2964 ;;  F               1    6[COMMON] _Bool 
  2965 ;; Auto vars:     Size  Location     Type
  2966 ;;  DL              1    0[BANK0 ] _Bool 
  2967 ;;  data            1    7[BANK0 ] unsigned char 
  2968 ;; Return value:  Size  Location     Type
  2969 ;;                  1    wreg      void 
  2970 ;; Registers used:
  2971 ;;		wreg, status,2, status,0, pclath, cstack
  2972 ;; Tracked objects:
  2973 ;;		On entry : 0/0
  2974 ;;		On exit  : 0/0
  2975 ;;		Unchanged: 0/0
  2976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2977 ;;      Params:         2       0       0       0       0
  2978 ;;      Locals:         0       8       0       0       0
  2979 ;;      Temps:          1       0       0       0       0
  2980 ;;      Totals:         3       8       0       0       0
  2981 ;;Total ram usage:       11 bytes
  2982 ;; Hardware stack levels used:    1
  2983 ;; Hardware stack levels required when called:    2
  2984 ;; This function calls:
  2985 ;;		_clearRS
  2986 ;;		_clearRW
  2987 ;;		_setData
  2988 ;; This function is called by:
  2989 ;;		_init_LCD
  2990 ;; This function uses a non-reentrant model
  2991 ;;
  2992                           
  2993                           
  2994                           ;psect for function _functionSet
  2995  0667                     _functionSet:	
  2996                           
  2997                           ;incstack = 0
  2998                           ; Regs used in _functionSet: [wreg+status,2+status,0+pclath+cstack]
  2999                           ;functionSet@DL stored from wreg
  3000  0667  1283               	bcf	3,5	;RP0=0, select bank0
  3001  0668  1303               	bcf	3,6	;RP1=0, select bank0
  3002  0669  00A0               	movwf	functionSet@DL
  3003  066A                     l2118:	
  3004                           
  3005                           ;LCD.c: 73:     uint8_t data = 0x20;
  3006  066A  3020               	movlw	32
  3007  066B  00F7               	movwf	??_functionSet
  3008  066C  0877               	movf	??_functionSet,w
  3009  066D  00A7               	movwf	functionSet@data
  3010  066E                     l2120:	
  3011                           
  3012                           ;LCD.c: 74:     clearRS();
  3013  066E  120A  158A  25DA  120A  118A  	fcall	_clearRS
  3014  0673                     l2122:	
  3015                           
  3016                           ;LCD.c: 75:     clearRW();
  3017  0673  120A  158A  25DE  120A  118A  	fcall	_clearRW
  3018  0678                     l2124:	
  3019                           
  3020                           ;LCD.c: 76:     data = data | (DL?0x10:0x00) | (N?0x08:0x00) | (F?0x04:0x00);
  3021  0678  0876               	movf	functionSet@F,w
  3022  0679  1D03               	btfss	3,2
  3023  067A  2E7C               	goto	u1561
  3024  067B  2E7D               	goto	u1560
  3025  067C                     u1561:	
  3026  067C  2E82               	goto	l2128
  3027  067D                     u1560:	
  3028  067D                     l2126:	
  3029  067D  1283               	bcf	3,5	;RP0=0, select bank0
  3030  067E  1303               	bcf	3,6	;RP1=0, select bank0
  3031  067F  01A1               	clrf	_functionSet$766
  3032  0680  01A2               	clrf	_functionSet$766+1
  3033  0681  2E88               	goto	l2130
  3034  0682                     l2128:	
  3035  0682  3004               	movlw	4
  3036  0683  1283               	bcf	3,5	;RP0=0, select bank0
  3037  0684  1303               	bcf	3,6	;RP1=0, select bank0
  3038  0685  00A1               	movwf	_functionSet$766
  3039  0686  3000               	movlw	0
  3040  0687  00A2               	movwf	_functionSet$766+1
  3041  0688                     l2130:	
  3042  0688  0875               	movf	functionSet@N,w
  3043  0689  1D03               	btfss	3,2
  3044  068A  2E8C               	goto	u1571
  3045  068B  2E8D               	goto	u1570
  3046  068C                     u1571:	
  3047  068C  2E90               	goto	l2134
  3048  068D                     u1570:	
  3049  068D                     l2132:	
  3050  068D  01A3               	clrf	_functionSet$767
  3051  068E  01A4               	clrf	_functionSet$767+1
  3052  068F  2E94               	goto	l2136
  3053  0690                     l2134:	
  3054  0690  3008               	movlw	8
  3055  0691  00A3               	movwf	_functionSet$767
  3056  0692  3000               	movlw	0
  3057  0693  00A4               	movwf	_functionSet$767+1
  3058  0694                     l2136:	
  3059  0694  0820               	movf	functionSet@DL,w
  3060  0695  1D03               	btfss	3,2
  3061  0696  2E98               	goto	u1581
  3062  0697  2E99               	goto	u1580
  3063  0698                     u1581:	
  3064  0698  2E9C               	goto	l2140
  3065  0699                     u1580:	
  3066  0699                     l2138:	
  3067  0699  01A5               	clrf	_functionSet$768
  3068  069A  01A6               	clrf	_functionSet$768+1
  3069  069B  2EA0               	goto	l2142
  3070  069C                     l2140:	
  3071  069C  3010               	movlw	16
  3072  069D  00A5               	movwf	_functionSet$768
  3073  069E  3000               	movlw	0
  3074  069F  00A6               	movwf	_functionSet$768+1
  3075  06A0                     l2142:	
  3076  06A0  0827               	movf	functionSet@data,w
  3077  06A1  0425               	iorwf	_functionSet$768,w
  3078  06A2  0423               	iorwf	_functionSet$767,w
  3079  06A3  0421               	iorwf	_functionSet$766,w
  3080  06A4  00F7               	movwf	??_functionSet
  3081  06A5  0877               	movf	??_functionSet,w
  3082  06A6  00A7               	movwf	functionSet@data
  3083  06A7                     l2144:	
  3084                           
  3085                           ;LCD.c: 77:     setData(data);
  3086  06A7  0827               	movf	functionSet@data,w
  3087  06A8  120A  118A  227C  120A  118A  	fcall	_setData
  3088  06AD                     l367:	
  3089  06AD  0008               	return
  3090  06AE                     __end_of_functionSet:	
  3091                           
  3092                           	psect	text19
  3093  07C3                     __ptext19:	
  3094 ;; *************** function _entryModeSet *****************
  3095 ;; Defined at:
  3096 ;;		line 54 in file "LCD.c"
  3097 ;; Parameters:    Size  Location     Type
  3098 ;;  ID              1    wreg     _Bool 
  3099 ;;  SH              1    5[COMMON] _Bool 
  3100 ;; Auto vars:     Size  Location     Type
  3101 ;;  ID              1    8[COMMON] _Bool 
  3102 ;;  data            1   11[COMMON] unsigned char 
  3103 ;; Return value:  Size  Location     Type
  3104 ;;                  1    wreg      void 
  3105 ;; Registers used:
  3106 ;;		wreg, status,2, status,0, pclath, cstack
  3107 ;; Tracked objects:
  3108 ;;		On entry : 0/0
  3109 ;;		On exit  : 0/0
  3110 ;;		Unchanged: 0/0
  3111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3112 ;;      Params:         1       0       0       0       0
  3113 ;;      Locals:         4       0       0       0       0
  3114 ;;      Temps:          2       0       0       0       0
  3115 ;;      Totals:         7       0       0       0       0
  3116 ;;Total ram usage:        7 bytes
  3117 ;; Hardware stack levels used:    1
  3118 ;; Hardware stack levels required when called:    2
  3119 ;; This function calls:
  3120 ;;		_clearRS
  3121 ;;		_clearRW
  3122 ;;		_setData
  3123 ;; This function is called by:
  3124 ;;		_init_LCD
  3125 ;; This function uses a non-reentrant model
  3126 ;;
  3127                           
  3128                           
  3129                           ;psect for function _entryModeSet
  3130  07C3                     _entryModeSet:	
  3131                           
  3132                           ;incstack = 0
  3133                           ; Regs used in _entryModeSet: [wreg+status,2+status,0+pclath+cstack]
  3134                           ;entryModeSet@ID stored from wreg
  3135  07C3  00F8               	movwf	entryModeSet@ID
  3136  07C4                     l2174:	
  3137                           
  3138                           ;LCD.c: 55:     uint8_t data = 0x04;
  3139  07C4  3004               	movlw	4
  3140  07C5  00F6               	movwf	??_entryModeSet
  3141  07C6  0876               	movf	??_entryModeSet,w
  3142  07C7  00FB               	movwf	entryModeSet@data
  3143  07C8                     l2176:	
  3144                           
  3145                           ;LCD.c: 56:     clearRS();
  3146  07C8  120A  158A  25DA  120A  118A  	fcall	_clearRS
  3147  07CD                     l2178:	
  3148                           
  3149                           ;LCD.c: 57:     clearRW();
  3150  07CD  120A  158A  25DE  120A  118A  	fcall	_clearRW
  3151  07D2                     l2180:	
  3152                           
  3153                           ;LCD.c: 58:     data = data | (ID?0x2:0x0) | (SH?0x1:0x0);
  3154  07D2  0878               	movf	entryModeSet@ID,w
  3155  07D3  1D03               	btfss	3,2
  3156  07D4  2FD6               	goto	u1631
  3157  07D5  2FD7               	goto	u1630
  3158  07D6                     u1631:	
  3159  07D6  2FDA               	goto	l2184
  3160  07D7                     u1630:	
  3161  07D7                     l2182:	
  3162  07D7  01F9               	clrf	_entryModeSet$753
  3163  07D8  01FA               	clrf	_entryModeSet$753+1
  3164  07D9  2FDE               	goto	l2186
  3165  07DA                     l2184:	
  3166  07DA  3002               	movlw	2
  3167  07DB  00F9               	movwf	_entryModeSet$753
  3168  07DC  3000               	movlw	0
  3169  07DD  00FA               	movwf	_entryModeSet$753+1
  3170  07DE                     l2186:	
  3171  07DE  0875               	movf	entryModeSet@SH,w
  3172  07DF  1D03               	btfss	3,2
  3173  07E0  2FE2               	goto	u1641
  3174  07E1  2FE4               	goto	u1640
  3175  07E2                     u1641:	
  3176  07E2  3001               	movlw	1
  3177  07E3  2FE5               	goto	u1650
  3178  07E4                     u1640:	
  3179  07E4  3000               	movlw	0
  3180  07E5                     u1650:	
  3181  07E5  047B               	iorwf	entryModeSet@data,w
  3182  07E6  0479               	iorwf	_entryModeSet$753,w
  3183  07E7  00F6               	movwf	??_entryModeSet
  3184  07E8  0876               	movf	??_entryModeSet,w
  3185  07E9  00FB               	movwf	entryModeSet@data
  3186  07EA                     l2188:	
  3187                           
  3188                           ;LCD.c: 59:     setData(data);
  3189  07EA  087B               	movf	entryModeSet@data,w
  3190  07EB  120A  118A  227C  120A  118A  	fcall	_setData
  3191  07F0                     l2190:	
  3192                           
  3193                           ;LCD.c: 60:     _delay((unsigned long)((10)*(4000000/4000.0)));
  3194  07F0  300D               	movlw	13
  3195  07F1  00F7               	movwf	??_entryModeSet+1
  3196  07F2  30FB               	movlw	251
  3197  07F3  00F6               	movwf	??_entryModeSet
  3198  07F4                     u1837:	
  3199  07F4  0BF6               	decfsz	??_entryModeSet,f
  3200  07F5  2FF4               	goto	u1837
  3201  07F6  0BF7               	decfsz	??_entryModeSet+1,f
  3202  07F7  2FF4               	goto	u1837
  3203  07F8  2FF9               	nop2
  3204  07F9                     l341:	
  3205  07F9  0008               	return
  3206  07FA                     __end_of_entryModeSet:	
  3207                           
  3208                           	psect	text20
  3209  061D                     __ptext20:	
  3210 ;; *************** function _displayONOFF *****************
  3211 ;; Defined at:
  3212 ;;		line 63 in file "LCD.c"
  3213 ;; Parameters:    Size  Location     Type
  3214 ;;  D               1    wreg     _Bool 
  3215 ;;  C               1    5[COMMON] _Bool 
  3216 ;;  B               1    6[COMMON] _Bool 
  3217 ;; Auto vars:     Size  Location     Type
  3218 ;;  D               1    0[BANK0 ] _Bool 
  3219 ;;  data            1    5[BANK0 ] unsigned char 
  3220 ;; Return value:  Size  Location     Type
  3221 ;;                  1    wreg      void 
  3222 ;; Registers used:
  3223 ;;		wreg, status,2, status,0, pclath, cstack
  3224 ;; Tracked objects:
  3225 ;;		On entry : 0/0
  3226 ;;		On exit  : 0/0
  3227 ;;		Unchanged: 0/0
  3228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3229 ;;      Params:         2       0       0       0       0
  3230 ;;      Locals:         0       6       0       0       0
  3231 ;;      Temps:          2       0       0       0       0
  3232 ;;      Totals:         4       6       0       0       0
  3233 ;;Total ram usage:       10 bytes
  3234 ;; Hardware stack levels used:    1
  3235 ;; Hardware stack levels required when called:    2
  3236 ;; This function calls:
  3237 ;;		_clearRS
  3238 ;;		_clearRW
  3239 ;;		_setData
  3240 ;; This function is called by:
  3241 ;;		_init_LCD
  3242 ;; This function uses a non-reentrant model
  3243 ;;
  3244                           
  3245                           
  3246                           ;psect for function _displayONOFF
  3247  061D                     _displayONOFF:	
  3248                           
  3249                           ;incstack = 0
  3250                           ; Regs used in _displayONOFF: [wreg+status,2+status,0+pclath+cstack]
  3251                           ;displayONOFF@D stored from wreg
  3252  061D  1283               	bcf	3,5	;RP0=0, select bank0
  3253  061E  1303               	bcf	3,6	;RP1=0, select bank0
  3254  061F  00A0               	movwf	displayONOFF@D
  3255  0620                     l2146:	
  3256                           
  3257                           ;LCD.c: 64:     uint8_t data = 0x08;
  3258  0620  3008               	movlw	8
  3259  0621  00F7               	movwf	??_displayONOFF
  3260  0622  0877               	movf	??_displayONOFF,w
  3261  0623  00A5               	movwf	displayONOFF@data
  3262  0624                     l2148:	
  3263                           
  3264                           ;LCD.c: 65:     clearRS();
  3265  0624  120A  158A  25DA  120A  118A  	fcall	_clearRS
  3266  0629                     l2150:	
  3267                           
  3268                           ;LCD.c: 66:     clearRW();
  3269  0629  120A  158A  25DE  120A  118A  	fcall	_clearRW
  3270  062E                     l2152:	
  3271                           
  3272                           ;LCD.c: 67:     data = data | (D?0x04:0x00) | (C?0x02:0x00) | (B?0x01:0x00);
  3273  062E  0875               	movf	displayONOFF@C,w
  3274  062F  1D03               	btfss	3,2
  3275  0630  2E32               	goto	u1591
  3276  0631  2E33               	goto	u1590
  3277  0632                     u1591:	
  3278  0632  2E38               	goto	l2156
  3279  0633                     u1590:	
  3280  0633                     l2154:	
  3281  0633  1283               	bcf	3,5	;RP0=0, select bank0
  3282  0634  1303               	bcf	3,6	;RP1=0, select bank0
  3283  0635  01A1               	clrf	_displayONOFF$759
  3284  0636  01A2               	clrf	_displayONOFF$759+1
  3285  0637  2E3E               	goto	l2158
  3286  0638                     l2156:	
  3287  0638  3002               	movlw	2
  3288  0639  1283               	bcf	3,5	;RP0=0, select bank0
  3289  063A  1303               	bcf	3,6	;RP1=0, select bank0
  3290  063B  00A1               	movwf	_displayONOFF$759
  3291  063C  3000               	movlw	0
  3292  063D  00A2               	movwf	_displayONOFF$759+1
  3293  063E                     l2158:	
  3294  063E  0820               	movf	displayONOFF@D,w
  3295  063F  1D03               	btfss	3,2
  3296  0640  2E42               	goto	u1601
  3297  0641  2E43               	goto	u1600
  3298  0642                     u1601:	
  3299  0642  2E46               	goto	l2162
  3300  0643                     u1600:	
  3301  0643                     l2160:	
  3302  0643  01A3               	clrf	_displayONOFF$760
  3303  0644  01A4               	clrf	_displayONOFF$760+1
  3304  0645  2E4A               	goto	l2164
  3305  0646                     l2162:	
  3306  0646  3004               	movlw	4
  3307  0647  00A3               	movwf	_displayONOFF$760
  3308  0648  3000               	movlw	0
  3309  0649  00A4               	movwf	_displayONOFF$760+1
  3310  064A                     l2164:	
  3311  064A  0876               	movf	displayONOFF@B,w
  3312  064B  1D03               	btfss	3,2
  3313  064C  2E4E               	goto	u1611
  3314  064D  2E50               	goto	u1610
  3315  064E                     u1611:	
  3316  064E  3001               	movlw	1
  3317  064F  2E51               	goto	u1620
  3318  0650                     u1610:	
  3319  0650  3000               	movlw	0
  3320  0651                     u1620:	
  3321  0651  0425               	iorwf	displayONOFF@data,w
  3322  0652  0423               	iorwf	_displayONOFF$760,w
  3323  0653  0421               	iorwf	_displayONOFF$759,w
  3324  0654  00F7               	movwf	??_displayONOFF
  3325  0655  0877               	movf	??_displayONOFF,w
  3326  0656  00A5               	movwf	displayONOFF@data
  3327  0657                     l2166:	
  3328                           
  3329                           ;LCD.c: 68:     setData(data);
  3330  0657  0825               	movf	displayONOFF@data,w
  3331  0658  120A  118A  227C  120A  118A  	fcall	_setData
  3332  065D                     l2168:	
  3333                           
  3334                           ;LCD.c: 69:     _delay((unsigned long)((10)*(4000000/4000.0)));
  3335  065D  300D               	movlw	13
  3336  065E  00F8               	movwf	??_displayONOFF+1
  3337  065F  30FB               	movlw	251
  3338  0660  00F7               	movwf	??_displayONOFF
  3339  0661                     u1847:	
  3340  0661  0BF7               	decfsz	??_displayONOFF,f
  3341  0662  2E61               	goto	u1847
  3342  0663  0BF8               	decfsz	??_displayONOFF+1,f
  3343  0664  2E61               	goto	u1847
  3344  0665  2E66               	nop2
  3345  0666                     l352:	
  3346  0666  0008               	return
  3347  0667                     __end_of_displayONOFF:	
  3348                           
  3349                           	psect	text21
  3350  0E70                     __ptext21:	
  3351 ;; *************** function _clearDisplay *****************
  3352 ;; Defined at:
  3353 ;;		line 40 in file "LCD.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;		None
  3356 ;; Auto vars:     Size  Location     Type
  3357 ;;		None
  3358 ;; Return value:  Size  Location     Type
  3359 ;;                  1    wreg      void 
  3360 ;; Registers used:
  3361 ;;		wreg, status,2, status,0, pclath, cstack
  3362 ;; Tracked objects:
  3363 ;;		On entry : 0/0
  3364 ;;		On exit  : 0/0
  3365 ;;		Unchanged: 0/0
  3366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3367 ;;      Params:         0       0       0       0       0
  3368 ;;      Locals:         0       0       0       0       0
  3369 ;;      Temps:          2       0       0       0       0
  3370 ;;      Totals:         2       0       0       0       0
  3371 ;;Total ram usage:        2 bytes
  3372 ;; Hardware stack levels used:    1
  3373 ;; Hardware stack levels required when called:    2
  3374 ;; This function calls:
  3375 ;;		_clearRS
  3376 ;;		_clearRW
  3377 ;;		_setData
  3378 ;; This function is called by:
  3379 ;;		_init_LCD
  3380 ;; This function uses a non-reentrant model
  3381 ;;
  3382                           
  3383                           
  3384                           ;psect for function _clearDisplay
  3385  0E70                     _clearDisplay:	
  3386  0E70                     l2170:	
  3387                           ;incstack = 0
  3388                           ; Regs used in _clearDisplay: [wreg+status,2+status,0+pclath+cstack]
  3389                           
  3390                           
  3391                           ;LCD.c: 41:     clearRS();
  3392  0E70  120A  158A  25DA  120A  158A  	fcall	_clearRS
  3393                           
  3394                           ;LCD.c: 42:     clearRW();
  3395  0E75  120A  158A  25DE  120A  158A  	fcall	_clearRW
  3396  0E7A                     l2172:	
  3397                           
  3398                           ;LCD.c: 43:     setData(0x01);
  3399  0E7A  3001               	movlw	1
  3400  0E7B  120A  118A  227C  120A  158A  	fcall	_setData
  3401                           
  3402                           ;LCD.c: 44:     _delay((unsigned long)((10)*(4000000/4000.0)));
  3403  0E80  300D               	movlw	13
  3404  0E81  00F6               	movwf	??_clearDisplay+1
  3405  0E82  30FB               	movlw	251
  3406  0E83  00F5               	movwf	??_clearDisplay
  3407  0E84                     u1857:	
  3408  0E84  0BF5               	decfsz	??_clearDisplay,f
  3409  0E85  2E84               	goto	u1857
  3410  0E86  0BF6               	decfsz	??_clearDisplay+1,f
  3411  0E87  2E84               	goto	u1857
  3412  0E88  2E89               	nop2
  3413  0E89                     l331:	
  3414  0E89  0008               	return
  3415  0E8A                     __end_of_clearDisplay:	
  3416                           
  3417                           	psect	text22
  3418  027C                     __ptext22:	
  3419 ;; *************** function _setData *****************
  3420 ;; Defined at:
  3421 ;;		line 104 in file "LCD.c"
  3422 ;; Parameters:    Size  Location     Type
  3423 ;;  data            1    wreg     unsigned char 
  3424 ;; Auto vars:     Size  Location     Type
  3425 ;;  data            1    4[COMMON] unsigned char 
  3426 ;; Return value:  Size  Location     Type
  3427 ;;                  1    wreg      void 
  3428 ;; Registers used:
  3429 ;;		wreg, status,2, status,0
  3430 ;; Tracked objects:
  3431 ;;		On entry : 0/0
  3432 ;;		On exit  : 0/0
  3433 ;;		Unchanged: 0/0
  3434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3435 ;;      Params:         0       0       0       0       0
  3436 ;;      Locals:         1       0       0       0       0
  3437 ;;      Temps:          2       0       0       0       0
  3438 ;;      Totals:         3       0       0       0       0
  3439 ;;Total ram usage:        3 bytes
  3440 ;; Hardware stack levels used:    1
  3441 ;; Hardware stack levels required when called:    1
  3442 ;; This function calls:
  3443 ;;		Nothing
  3444 ;; This function is called by:
  3445 ;;		_clearDisplay
  3446 ;;		_returnHome
  3447 ;;		_entryModeSet
  3448 ;;		_displayONOFF
  3449 ;;		_functionSet
  3450 ;; This function uses a non-reentrant model
  3451 ;;
  3452                           
  3453                           
  3454                           ;psect for function _setData
  3455  027C                     _setData:	
  3456                           
  3457                           ;incstack = 0
  3458                           ; Regs used in _setData: [wreg+status,2+status,0]
  3459                           ;setData@data stored from wreg
  3460  027C  00F4               	movwf	setData@data
  3461  027D                     l1880:	
  3462                           
  3463                           ;LCD.c: 105:     PORTAbits.RA0 = data & 0x1;
  3464  027D  3001               	movlw	1
  3465  027E  0574               	andwf	setData@data,w
  3466  027F  00F2               	movwf	??_setData
  3467  0280  1283               	bcf	3,5	;RP0=0, select bank0
  3468  0281  1303               	bcf	3,6	;RP1=0, select bank0
  3469  0282  0805               	movf	5,w	;volatile
  3470  0283  0672               	xorwf	??_setData,w
  3471  0284  39FE               	andlw	-2
  3472  0285  0672               	xorwf	??_setData,w
  3473  0286  0085               	movwf	5	;volatile
  3474                           
  3475                           ;LCD.c: 106:     PORTAbits.RA1 = (data >>1) & 0x1;
  3476  0287  0874               	movf	setData@data,w
  3477  0288  00F2               	movwf	??_setData
  3478  0289  1003               	clrc
  3479  028A  0C72               	rrf	??_setData,w
  3480  028B  3901               	andlw	1
  3481  028C  00F3               	movwf	??_setData+1
  3482  028D  0DF3               	rlf	??_setData+1,f
  3483  028E  0805               	movf	5,w	;volatile
  3484  028F  0673               	xorwf	??_setData+1,w
  3485  0290  39FD               	andlw	-3
  3486  0291  0673               	xorwf	??_setData+1,w
  3487  0292  0085               	movwf	5	;volatile
  3488                           
  3489                           ;LCD.c: 107:     PORTAbits.RA2 = (data >>2) & 0x1;
  3490  0293  0874               	movf	setData@data,w
  3491  0294  00F2               	movwf	??_setData
  3492  0295  3002               	movlw	2
  3493  0296                     u1235:	
  3494  0296  1003               	clrc
  3495  0297  0CF2               	rrf	??_setData,f
  3496  0298  3EFF               	addlw	-1
  3497  0299  1D03               	skipz
  3498  029A  2A96               	goto	u1235
  3499  029B  0872               	movf	??_setData,w
  3500  029C  3901               	andlw	1
  3501  029D  00F3               	movwf	??_setData+1
  3502  029E  0DF3               	rlf	??_setData+1,f
  3503  029F  0DF3               	rlf	??_setData+1,f
  3504  02A0  0805               	movf	5,w	;volatile
  3505  02A1  0673               	xorwf	??_setData+1,w
  3506  02A2  39FB               	andlw	-5
  3507  02A3  0673               	xorwf	??_setData+1,w
  3508  02A4  0085               	movwf	5	;volatile
  3509                           
  3510                           ;LCD.c: 108:     PORTAbits.RA3 = (data >>3) & 0x1;
  3511  02A5  0874               	movf	setData@data,w
  3512  02A6  00F2               	movwf	??_setData
  3513  02A7  3003               	movlw	3
  3514  02A8                     u1245:	
  3515  02A8  1003               	clrc
  3516  02A9  0CF2               	rrf	??_setData,f
  3517  02AA  3EFF               	addlw	-1
  3518  02AB  1D03               	skipz
  3519  02AC  2AA8               	goto	u1245
  3520  02AD  0872               	movf	??_setData,w
  3521  02AE  3901               	andlw	1
  3522  02AF  00F3               	movwf	??_setData+1
  3523  02B0  0DF3               	rlf	??_setData+1,f
  3524  02B1  0DF3               	rlf	??_setData+1,f
  3525  02B2  0DF3               	rlf	??_setData+1,f
  3526  02B3  0805               	movf	5,w	;volatile
  3527  02B4  0673               	xorwf	??_setData+1,w
  3528  02B5  39F7               	andlw	-9
  3529  02B6  0673               	xorwf	??_setData+1,w
  3530  02B7  0085               	movwf	5	;volatile
  3531                           
  3532                           ;LCD.c: 109:     PORTAbits.RA4 = (data >>4) & 0x1;
  3533  02B8  0874               	movf	setData@data,w
  3534  02B9  00F2               	movwf	??_setData
  3535  02BA  3004               	movlw	4
  3536  02BB                     u1255:	
  3537  02BB  1003               	clrc
  3538  02BC  0CF2               	rrf	??_setData,f
  3539  02BD  3EFF               	addlw	-1
  3540  02BE  1D03               	skipz
  3541  02BF  2ABB               	goto	u1255
  3542  02C0  0872               	movf	??_setData,w
  3543  02C1  3901               	andlw	1
  3544  02C2  00F3               	movwf	??_setData+1
  3545  02C3  0EF3               	swapf	??_setData+1,f
  3546  02C4  0805               	movf	5,w	;volatile
  3547  02C5  0673               	xorwf	??_setData+1,w
  3548  02C6  39EF               	andlw	-17
  3549  02C7  0673               	xorwf	??_setData+1,w
  3550  02C8  0085               	movwf	5	;volatile
  3551                           
  3552                           ;LCD.c: 110:     PORTAbits.RA5 = (data >>5) & 0x1;
  3553  02C9  0874               	movf	setData@data,w
  3554  02CA  00F2               	movwf	??_setData
  3555  02CB  3005               	movlw	5
  3556  02CC                     u1265:	
  3557  02CC  1003               	clrc
  3558  02CD  0CF2               	rrf	??_setData,f
  3559  02CE  3EFF               	addlw	-1
  3560  02CF  1D03               	skipz
  3561  02D0  2ACC               	goto	u1265
  3562  02D1  0872               	movf	??_setData,w
  3563  02D2  3901               	andlw	1
  3564  02D3  00F3               	movwf	??_setData+1
  3565  02D4  0EF3               	swapf	??_setData+1,f
  3566  02D5  0DF3               	rlf	??_setData+1,f
  3567  02D6  0805               	movf	5,w	;volatile
  3568  02D7  0673               	xorwf	??_setData+1,w
  3569  02D8  39DF               	andlw	-33
  3570  02D9  0673               	xorwf	??_setData+1,w
  3571  02DA  0085               	movwf	5	;volatile
  3572                           
  3573                           ;LCD.c: 111:     PORTEbits.RE0 = (data >>6) & 0x1;
  3574  02DB  0874               	movf	setData@data,w
  3575  02DC  00F2               	movwf	??_setData
  3576  02DD  3006               	movlw	6
  3577  02DE                     u1275:	
  3578  02DE  1003               	clrc
  3579  02DF  0CF2               	rrf	??_setData,f
  3580  02E0  3EFF               	addlw	-1
  3581  02E1  1D03               	skipz
  3582  02E2  2ADE               	goto	u1275
  3583  02E3  3001               	movlw	1
  3584  02E4  0572               	andwf	??_setData,w
  3585  02E5  00F3               	movwf	??_setData+1
  3586  02E6  0809               	movf	9,w	;volatile
  3587  02E7  0673               	xorwf	??_setData+1,w
  3588  02E8  39FE               	andlw	-2
  3589  02E9  0673               	xorwf	??_setData+1,w
  3590  02EA  0089               	movwf	9	;volatile
  3591                           
  3592                           ;LCD.c: 112:     PORTEbits.RE1 = (data >>7) & 0x1;
  3593  02EB  0874               	movf	setData@data,w
  3594  02EC  00F2               	movwf	??_setData
  3595  02ED  3007               	movlw	7
  3596  02EE                     u1285:	
  3597  02EE  1003               	clrc
  3598  02EF  0CF2               	rrf	??_setData,f
  3599  02F0  3EFF               	addlw	-1
  3600  02F1  1D03               	skipz
  3601  02F2  2AEE               	goto	u1285
  3602  02F3  0872               	movf	??_setData,w
  3603  02F4  3901               	andlw	1
  3604  02F5  00F3               	movwf	??_setData+1
  3605  02F6  0DF3               	rlf	??_setData+1,f
  3606  02F7  0809               	movf	9,w	;volatile
  3607  02F8  0673               	xorwf	??_setData+1,w
  3608  02F9  39FD               	andlw	-3
  3609  02FA  0673               	xorwf	??_setData+1,w
  3610  02FB  0089               	movwf	9	;volatile
  3611  02FC                     l388:	
  3612  02FC  0008               	return
  3613  02FD                     __end_of_setData:	
  3614                           
  3615                           	psect	text23
  3616  0DDE                     __ptext23:	
  3617 ;; *************** function _clearRW *****************
  3618 ;; Defined at:
  3619 ;;		line 92 in file "LCD.c"
  3620 ;; Parameters:    Size  Location     Type
  3621 ;;		None
  3622 ;; Auto vars:     Size  Location     Type
  3623 ;;		None
  3624 ;; Return value:  Size  Location     Type
  3625 ;;                  1    wreg      void 
  3626 ;; Registers used:
  3627 ;;		None
  3628 ;; Tracked objects:
  3629 ;;		On entry : 0/0
  3630 ;;		On exit  : 0/0
  3631 ;;		Unchanged: 0/0
  3632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3633 ;;      Params:         0       0       0       0       0
  3634 ;;      Locals:         0       0       0       0       0
  3635 ;;      Temps:          0       0       0       0       0
  3636 ;;      Totals:         0       0       0       0       0
  3637 ;;Total ram usage:        0 bytes
  3638 ;; Hardware stack levels used:    1
  3639 ;; Hardware stack levels required when called:    1
  3640 ;; This function calls:
  3641 ;;		Nothing
  3642 ;; This function is called by:
  3643 ;;		_clearDisplay
  3644 ;;		_returnHome
  3645 ;;		_entryModeSet
  3646 ;;		_displayONOFF
  3647 ;;		_functionSet
  3648 ;; This function uses a non-reentrant model
  3649 ;;
  3650                           
  3651                           
  3652                           ;psect for function _clearRW
  3653  0DDE                     _clearRW:	
  3654  0DDE                     l1878:	
  3655                           ;incstack = 0
  3656                           ; Regs used in _clearRW: []
  3657                           
  3658                           
  3659                           ;LCD.c: 93:     PORTCbits.RC1 = 0;
  3660  0DDE  1283               	bcf	3,5	;RP0=0, select bank0
  3661  0DDF  1303               	bcf	3,6	;RP1=0, select bank0
  3662  0DE0  1087               	bcf	7,1	;volatile
  3663  0DE1                     l379:	
  3664  0DE1  0008               	return
  3665  0DE2                     __end_of_clearRW:	
  3666                           
  3667                           	psect	text24
  3668  0DDA                     __ptext24:	
  3669 ;; *************** function _clearRS *****************
  3670 ;; Defined at:
  3671 ;;		line 84 in file "LCD.c"
  3672 ;; Parameters:    Size  Location     Type
  3673 ;;		None
  3674 ;; Auto vars:     Size  Location     Type
  3675 ;;		None
  3676 ;; Return value:  Size  Location     Type
  3677 ;;                  1    wreg      void 
  3678 ;; Registers used:
  3679 ;;		None
  3680 ;; Tracked objects:
  3681 ;;		On entry : 0/0
  3682 ;;		On exit  : 0/0
  3683 ;;		Unchanged: 0/0
  3684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3685 ;;      Params:         0       0       0       0       0
  3686 ;;      Locals:         0       0       0       0       0
  3687 ;;      Temps:          0       0       0       0       0
  3688 ;;      Totals:         0       0       0       0       0
  3689 ;;Total ram usage:        0 bytes
  3690 ;; Hardware stack levels used:    1
  3691 ;; Hardware stack levels required when called:    1
  3692 ;; This function calls:
  3693 ;;		Nothing
  3694 ;; This function is called by:
  3695 ;;		_clearDisplay
  3696 ;;		_returnHome
  3697 ;;		_entryModeSet
  3698 ;;		_displayONOFF
  3699 ;;		_functionSet
  3700 ;; This function uses a non-reentrant model
  3701 ;;
  3702                           
  3703                           
  3704                           ;psect for function _clearRS
  3705  0DDA                     _clearRS:	
  3706  0DDA                     l1876:	
  3707                           ;incstack = 0
  3708                           ; Regs used in _clearRS: []
  3709                           
  3710                           
  3711                           ;LCD.c: 85:     PORTCbits.RC0 = 0;
  3712  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  3713  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  3714  0DDC  1007               	bcf	7,0	;volatile
  3715  0DDD                     l373:	
  3716  0DDD  0008               	return
  3717  0DDE                     __end_of_clearRS:	
  3718                           
  3719                           	psect	text25
  3720  04E7                     __ptext25:	
  3721 ;; *************** function _checkCount *****************
  3722 ;; Defined at:
  3723 ;;		line 137 in file "mainsource.c"
  3724 ;; Parameters:    Size  Location     Type
  3725 ;;		None
  3726 ;; Auto vars:     Size  Location     Type
  3727 ;;  j               2   30[BANK0 ] int 
  3728 ;;  i               2    0        int 
  3729 ;; Return value:  Size  Location     Type
  3730 ;;                  1    wreg      void 
  3731 ;; Registers used:
  3732 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3733 ;; Tracked objects:
  3734 ;;		On entry : 0/0
  3735 ;;		On exit  : 0/0
  3736 ;;		Unchanged: 0/0
  3737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3738 ;;      Params:         0       0       0       0       0
  3739 ;;      Locals:         0       4       0       0       0
  3740 ;;      Temps:          0       1       0       0       0
  3741 ;;      Totals:         0       5       0       0       0
  3742 ;;Total ram usage:        5 bytes
  3743 ;; Hardware stack levels used:    1
  3744 ;; Hardware stack levels required when called:    4
  3745 ;; This function calls:
  3746 ;;		_checkBottom
  3747 ;;		_checkColission_D
  3748 ;;		_drawFigure
  3749 ;;		_leerEntradas
  3750 ;;		_perdio
  3751 ;;		_sumaPuntos
  3752 ;; This function is called by:
  3753 ;;		_main
  3754 ;; This function uses a non-reentrant model
  3755 ;;
  3756                           
  3757                           
  3758                           ;psect for function _checkCount
  3759  04E7                     _checkCount:	
  3760  04E7                     l2264:	
  3761                           ;incstack = 0
  3762                           ; Regs used in _checkCount: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3763                           
  3764                           
  3765                           ;mainsource.c: 138:     if(con.check_count == 1){
  3766  04E7  1283               	bcf	3,5	;RP0=0, select bank0
  3767  04E8  1303               	bcf	3,6	;RP1=0, select bank0
  3768  04E9  034C               	decf	_con+7,w
  3769  04EA  1D03               	btfss	3,2
  3770  04EB  2CED               	goto	u1661
  3771  04EC  2CEE               	goto	u1660
  3772  04ED                     u1661:	
  3773  04ED  2D35               	goto	l146
  3774  04EE                     u1660:	
  3775  04EE                     l2266:	
  3776  04EE  01BE               	clrf	checkCount@j
  3777  04EF  01BF               	clrf	checkCount@j+1
  3778                           
  3779                           ;mainsource.c: 140:         con.check_count = 0;
  3780  04F0  01CC               	clrf	_con+7
  3781  04F1                     l2268:	
  3782                           
  3783                           ;mainsource.c: 142:         leerEntradas();
  3784  04F1  120A  118A  2536  120A  118A  	fcall	_leerEntradas
  3785  04F6                     l2270:	
  3786                           
  3787                           ;mainsource.c: 145:         if(timerCount >= 15 ){
  3788  04F6  1283               	bcf	3,5	;RP0=0, select bank0
  3789  04F7  1303               	bcf	3,6	;RP1=0, select bank0
  3790  04F8  0856               	movf	_timerCount+3,w
  3791  04F9  1D03               	btfss	3,2
  3792  04FA  2D09               	goto	u1670
  3793  04FB  0855               	movf	_timerCount+2,w
  3794  04FC  1D03               	btfss	3,2
  3795  04FD  2D09               	goto	u1670
  3796  04FE  0854               	movf	_timerCount+1,w
  3797  04FF  1D03               	btfss	3,2
  3798  0500  2D09               	goto	u1670
  3799  0501  300F               	movlw	15
  3800  0502  0253               	subwf	_timerCount,w
  3801  0503  1D03               	skipz
  3802  0504  2D05               	goto	u1673
  3803  0505                     u1673:	
  3804  0505  1C03               	btfss	3,0
  3805  0506  2D08               	goto	u1671
  3806  0507  2D09               	goto	u1670
  3807  0508                     u1671:	
  3808  0508  2D35               	goto	l146
  3809  0509                     u1670:	
  3810  0509                     l2272:	
  3811                           
  3812                           ;mainsource.c: 146:             timerCount = 0;
  3813  0509  3000               	movlw	0
  3814  050A  00D6               	movwf	_timerCount+3
  3815  050B  3000               	movlw	0
  3816  050C  00D5               	movwf	_timerCount+2
  3817  050D  3000               	movlw	0
  3818  050E  00D4               	movwf	_timerCount+1
  3819  050F  3000               	movlw	0
  3820  0510  00D3               	movwf	_timerCount
  3821  0511                     l2274:	
  3822                           
  3823                           ;mainsource.c: 148:             PORTBbits.RB0 = con.led;
  3824  0511  0C46               	rrf	_con+1,w
  3825  0512  1C03               	skipc
  3826  0513  1006               	bcf	6,0	;volatile
  3827  0514  1803               	skipnc
  3828  0515  1406               	bsf	6,0	;volatile
  3829  0516                     l2276:	
  3830                           
  3831                           ;mainsource.c: 149:             con.led= ~con.led;
  3832  0516  0946               	comf	_con+1,w
  3833  0517  00BB               	movwf	??_checkCount
  3834  0518  083B               	movf	??_checkCount,w
  3835  0519  00C6               	movwf	_con+1
  3836                           
  3837                           ;mainsource.c: 151:             con.ficha_Vpos--;
  3838  051A  3001               	movlw	1
  3839  051B  02C7               	subwf	_con+2,f
  3840  051C                     l2278:	
  3841                           
  3842                           ;mainsource.c: 153:             checkBottom();
  3843  051C  120A  158A  2719  120A  118A  	fcall	_checkBottom
  3844  0521                     l2280:	
  3845                           
  3846                           ;mainsource.c: 154:             checkColission_D();
  3847  0521  120A  118A  22FD  120A  118A  	fcall	_checkColission_D
  3848  0526                     l2282:	
  3849                           
  3850                           ;mainsource.c: 155:             drawFigure();
  3851  0526  120A  118A  215E  120A  118A  	fcall	_drawFigure
  3852  052B                     l2284:	
  3853                           
  3854                           ;mainsource.c: 157:             perdio();
  3855  052B  120A  118A  2373  120A  118A  	fcall	_perdio
  3856  0530                     l2286:	
  3857                           
  3858                           ;mainsource.c: 158:             sumaPuntos();
  3859  0530  120A  118A  26AE  120A  118A  	fcall	_sumaPuntos
  3860  0535                     l146:	
  3861  0535  0008               	return
  3862  0536                     __end_of_checkCount:	
  3863                           
  3864                           	psect	text26
  3865  06AE                     __ptext26:	
  3866 ;; *************** function _sumaPuntos *****************
  3867 ;; Defined at:
  3868 ;;		line 30 in file "puntuacion.c"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;		None
  3871 ;; Auto vars:     Size  Location     Type
  3872 ;;  j               2    9[COMMON] int 
  3873 ;;  i               2    7[COMMON] int 
  3874 ;;  aux             1    6[COMMON] unsigned char 
  3875 ;; Return value:  Size  Location     Type
  3876 ;;                  1    wreg      void 
  3877 ;; Registers used:
  3878 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3879 ;; Tracked objects:
  3880 ;;		On entry : 0/0
  3881 ;;		On exit  : 0/0
  3882 ;;		Unchanged: 0/0
  3883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3884 ;;      Params:         0       0       0       0       0
  3885 ;;      Locals:         5       0       0       0       0
  3886 ;;      Temps:          4       0       0       0       0
  3887 ;;      Totals:         9       0       0       0       0
  3888 ;;Total ram usage:        9 bytes
  3889 ;; Hardware stack levels used:    1
  3890 ;; Hardware stack levels required when called:    1
  3891 ;; This function calls:
  3892 ;;		Nothing
  3893 ;; This function is called by:
  3894 ;;		_checkCount
  3895 ;; This function uses a non-reentrant model
  3896 ;;
  3897                           
  3898                           
  3899                           ;psect for function _sumaPuntos
  3900  06AE                     _sumaPuntos:	
  3901  06AE                     l2058:	
  3902                           ;incstack = 0
  3903                           ; Regs used in _sumaPuntos: [wreg-fsr0h+status,2+status,0+btemp+1]
  3904                           
  3905  06AE  01F9               	clrf	sumaPuntos@j
  3906  06AF  01FA               	clrf	sumaPuntos@j+1
  3907  06B0                     l2060:	
  3908                           
  3909                           ;puntuacion.c: 32:     uint8_t aux = 1;
  3910  06B0  01F6               	clrf	sumaPuntos@aux
  3911  06B1  0AF6               	incf	sumaPuntos@aux,f
  3912                           
  3913                           ;puntuacion.c: 33:     for (i=0; i<16; i++){
  3914  06B2  01F7               	clrf	sumaPuntos@i
  3915  06B3  01F8               	clrf	sumaPuntos@i+1
  3916  06B4                     l2066:	
  3917                           
  3918                           ;puntuacion.c: 34:         for(j=0; j<8; j++){
  3919  06B4  01F9               	clrf	sumaPuntos@j
  3920  06B5  01FA               	clrf	sumaPuntos@j+1
  3921  06B6                     l2072:	
  3922                           
  3923                           ;puntuacion.c: 35:             aux = aux & fondo[j]>>i;
  3924  06B6  0879               	movf	sumaPuntos@j,w
  3925  06B7  00F2               	movwf	??_sumaPuntos
  3926  06B8  0772               	addwf	??_sumaPuntos,w
  3927  06B9  3EA0               	addlw	(low (_fondo| 0))& (0+255)
  3928  06BA  0084               	movwf	4
  3929  06BB  1383               	bcf	3,7	;select IRP bank1
  3930  06BC  0800               	movf	0,w
  3931  06BD  00F3               	movwf	??_sumaPuntos+1
  3932  06BE  0A84               	incf	4,f
  3933  06BF  0800               	movf	0,w
  3934  06C0  00F4               	movwf	??_sumaPuntos+2
  3935  06C1  0A77               	incf	sumaPuntos@i,w
  3936  06C2  2EC6               	goto	u1494
  3937  06C3                     u1495:	
  3938  06C3  1003               	clrc
  3939  06C4  0CF4               	rrf	??_sumaPuntos+2,f
  3940  06C5  0CF3               	rrf	??_sumaPuntos+1,f
  3941  06C6                     u1494:	
  3942  06C6  3EFF               	addlw	-1
  3943  06C7  1D03               	skipz
  3944  06C8  2EC3               	goto	u1495
  3945  06C9  0873               	movf	??_sumaPuntos+1,w
  3946  06CA  0576               	andwf	sumaPuntos@aux,w
  3947  06CB  00F5               	movwf	??_sumaPuntos+3
  3948  06CC  0875               	movf	??_sumaPuntos+3,w
  3949  06CD  00F6               	movwf	sumaPuntos@aux
  3950  06CE                     l2074:	
  3951                           
  3952                           ;puntuacion.c: 36:         }
  3953  06CE  3001               	movlw	1
  3954  06CF  07F9               	addwf	sumaPuntos@j,f
  3955  06D0  1803               	skipnc
  3956  06D1  0AFA               	incf	sumaPuntos@j+1,f
  3957  06D2  3000               	movlw	0
  3958  06D3  07FA               	addwf	sumaPuntos@j+1,f
  3959  06D4                     l2076:	
  3960  06D4  087A               	movf	sumaPuntos@j+1,w
  3961  06D5  3A80               	xorlw	128
  3962  06D6  00FF               	movwf	btemp+1
  3963  06D7  3080               	movlw	128
  3964  06D8  027F               	subwf	btemp+1,w
  3965  06D9  1D03               	skipz
  3966  06DA  2EDD               	goto	u1505
  3967  06DB  3008               	movlw	8
  3968  06DC  0279               	subwf	sumaPuntos@j,w
  3969  06DD                     u1505:	
  3970  06DD  1C03               	skipc
  3971  06DE  2EE0               	goto	u1501
  3972  06DF  2EE1               	goto	u1500
  3973  06E0                     u1501:	
  3974  06E0  2EB6               	goto	l2072
  3975  06E1                     u1500:	
  3976  06E1                     l2080:	
  3977                           
  3978                           ;puntuacion.c: 42:     }
  3979  06E1  3001               	movlw	1
  3980  06E2  07F7               	addwf	sumaPuntos@i,f
  3981  06E3  1803               	skipnc
  3982  06E4  0AF8               	incf	sumaPuntos@i+1,f
  3983  06E5  3000               	movlw	0
  3984  06E6  07F8               	addwf	sumaPuntos@i+1,f
  3985  06E7                     l2082:	
  3986  06E7  0878               	movf	sumaPuntos@i+1,w
  3987  06E8  3A80               	xorlw	128
  3988  06E9  00FF               	movwf	btemp+1
  3989  06EA  3080               	movlw	128
  3990  06EB  027F               	subwf	btemp+1,w
  3991  06EC  1D03               	skipz
  3992  06ED  2EF0               	goto	u1515
  3993  06EE  3010               	movlw	16
  3994  06EF  0277               	subwf	sumaPuntos@i,w
  3995  06F0                     u1515:	
  3996  06F0  1C03               	skipc
  3997  06F1  2EF3               	goto	u1511
  3998  06F2  2EF4               	goto	u1510
  3999  06F3                     u1511:	
  4000  06F3  2EB4               	goto	l2066
  4001  06F4                     u1510:	
  4002  06F4                     l301:	
  4003  06F4  0008               	return
  4004  06F5                     __end_of_sumaPuntos:	
  4005                           
  4006                           	psect	text27
  4007  0373                     __ptext27:	
  4008 ;; *************** function _perdio *****************
  4009 ;; Defined at:
  4010 ;;		line 13 in file "puntuacion.c"
  4011 ;; Parameters:    Size  Location     Type
  4012 ;;		None
  4013 ;; Auto vars:     Size  Location     Type
  4014 ;;  i               2   20[BANK0 ] int 
  4015 ;; Return value:  Size  Location     Type
  4016 ;;                  1    wreg      void 
  4017 ;; Registers used:
  4018 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4019 ;; Tracked objects:
  4020 ;;		On entry : 0/0
  4021 ;;		On exit  : 0/0
  4022 ;;		Unchanged: 0/0
  4023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4024 ;;      Params:         0       0       0       0       0
  4025 ;;      Locals:         0       2       0       0       0
  4026 ;;      Temps:          0       3       0       0       0
  4027 ;;      Totals:         0       5       0       0       0
  4028 ;;Total ram usage:        5 bytes
  4029 ;; Hardware stack levels used:    1
  4030 ;; Hardware stack levels required when called:    3
  4031 ;; This function calls:
  4032 ;;		___awmod
  4033 ;;		_memset
  4034 ;;		_rand
  4035 ;; This function is called by:
  4036 ;;		_checkCount
  4037 ;; This function uses a non-reentrant model
  4038 ;;
  4039                           
  4040                           
  4041                           ;psect for function _perdio
  4042  0373                     _perdio:	
  4043  0373                     l2040:	
  4044                           ;incstack = 0
  4045                           ; Regs used in _perdio: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4046                           
  4047                           
  4048                           ;puntuacion.c: 14:     int i = 0;
  4049  0373  1283               	bcf	3,5	;RP0=0, select bank0
  4050  0374  1303               	bcf	3,6	;RP1=0, select bank0
  4051  0375  01B4               	clrf	perdio@i
  4052  0376  01B5               	clrf	perdio@i+1
  4053                           
  4054                           ;puntuacion.c: 15:     for(i=0; i<8; i++){
  4055  0377  01B4               	clrf	perdio@i
  4056  0378  01B5               	clrf	perdio@i+1
  4057  0379                     l2046:	
  4058                           
  4059                           ;puntuacion.c: 16:         if((fondo[i] & 0x8000) != 0){
  4060  0379  1283               	bcf	3,5	;RP0=0, select bank0
  4061  037A  1303               	bcf	3,6	;RP1=0, select bank0
  4062  037B  0834               	movf	perdio@i,w
  4063  037C  00B1               	movwf	??_perdio
  4064  037D  0731               	addwf	??_perdio,w
  4065  037E  3EA0               	addlw	(low (_fondo| 0))& (0+255)
  4066  037F  0084               	movwf	4
  4067  0380  1383               	bcf	3,7	;select IRP bank1
  4068  0381  0800               	movf	0,w
  4069  0382  00B2               	movwf	??_perdio+1
  4070  0383  0A84               	incf	4,f
  4071  0384  0800               	movf	0,w
  4072  0385  00B3               	movwf	??_perdio+2
  4073  0386  1FB3               	btfss	??_perdio+2,7
  4074  0387  2B89               	goto	u1471
  4075  0388  2B8A               	goto	u1470
  4076  0389                     u1471:	
  4077  0389  2BC5               	goto	l2054
  4078  038A                     u1470:	
  4079  038A                     l2048:	
  4080                           
  4081                           ;puntuacion.c: 17:             memset(ficha, 0, sizeof(ficha));
  4082  038A  3000               	movlw	0
  4083  038B  00F2               	movwf	memset@c
  4084  038C  00F3               	movwf	memset@c+1
  4085  038D  3010               	movlw	16
  4086  038E  00F4               	movwf	memset@n
  4087  038F  3000               	movlw	0
  4088  0390  00F5               	movwf	memset@n+1
  4089  0391  3057               	movlw	(low (_ficha| 0))& (0+255)
  4090  0392  120A  158A  26F9  120A  118A  	fcall	_memset
  4091                           
  4092                           ;puntuacion.c: 18:             memset(fondo, 0, sizeof(fondo));
  4093  0397  3000               	movlw	0
  4094  0398  00F2               	movwf	memset@c
  4095  0399  00F3               	movwf	memset@c+1
  4096  039A  3010               	movlw	16
  4097  039B  00F4               	movwf	memset@n
  4098  039C  3000               	movlw	0
  4099  039D  00F5               	movwf	memset@n+1
  4100  039E  30A0               	movlw	(low (_fondo| 0))& (0+255)
  4101  039F  120A  158A  26F9  120A  118A  	fcall	_memset
  4102  03A4                     l2050:	
  4103                           
  4104                           ;puntuacion.c: 19:             con.ficha_Vpos = 16;
  4105  03A4  3010               	movlw	16
  4106  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  4107  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  4108  03A7  00B1               	movwf	??_perdio
  4109  03A8  0831               	movf	??_perdio,w
  4110  03A9  00C7               	movwf	_con+2
  4111  03AA                     l2052:	
  4112                           
  4113                           ;puntuacion.c: 20:             con.ficha_actual = rand() % 7;
  4114  03AA  3007               	movlw	7
  4115  03AB  00AB               	movwf	___awmod@divisor
  4116  03AC  3000               	movlw	0
  4117  03AD  00AC               	movwf	___awmod@divisor+1
  4118  03AE  120A  118A  26F5  120A  118A  	fcall	_rand
  4119  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  4120  03B4  1303               	bcf	3,6	;RP1=0, select bank0
  4121  03B5  0825               	movf	?_rand+1,w
  4122  03B6  00AE               	movwf	___awmod@dividend+1
  4123  03B7  0824               	movf	?_rand,w
  4124  03B8  00AD               	movwf	___awmod@dividend
  4125  03B9  120A  118A  243C  120A  118A  	fcall	___awmod
  4126  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  4127  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  4128  03C0  082B               	movf	?___awmod,w
  4129  03C1  00B1               	movwf	??_perdio
  4130  03C2  0831               	movf	??_perdio,w
  4131  03C3  00C9               	movwf	_con+4
  4132                           
  4133                           ;puntuacion.c: 21:             break;
  4134  03C4  2BD8               	goto	l293
  4135  03C5                     l2054:	
  4136                           
  4137                           ;puntuacion.c: 23:     }
  4138  03C5  3001               	movlw	1
  4139  03C6  07B4               	addwf	perdio@i,f
  4140  03C7  1803               	skipnc
  4141  03C8  0AB5               	incf	perdio@i+1,f
  4142  03C9  3000               	movlw	0
  4143  03CA  07B5               	addwf	perdio@i+1,f
  4144  03CB                     l2056:	
  4145  03CB  0835               	movf	perdio@i+1,w
  4146  03CC  3A80               	xorlw	128
  4147  03CD  00FF               	movwf	btemp+1
  4148  03CE  3080               	movlw	128
  4149  03CF  027F               	subwf	btemp+1,w
  4150  03D0  1D03               	skipz
  4151  03D1  2BD4               	goto	u1485
  4152  03D2  3008               	movlw	8
  4153  03D3  0234               	subwf	perdio@i,w
  4154  03D4                     u1485:	
  4155  03D4  1C03               	skipc
  4156  03D5  2BD7               	goto	u1481
  4157  03D6  2BD8               	goto	u1480
  4158  03D7                     u1481:	
  4159  03D7  2B79               	goto	l2046
  4160  03D8                     u1480:	
  4161  03D8                     l293:	
  4162  03D8  0008               	return
  4163  03D9                     __end_of_perdio:	
  4164                           
  4165                           	psect	text28
  4166  0536                     __ptext28:	
  4167 ;; *************** function _leerEntradas *****************
  4168 ;; Defined at:
  4169 ;;		line 108 in file "mainsource.c"
  4170 ;; Parameters:    Size  Location     Type
  4171 ;;		None
  4172 ;; Auto vars:     Size  Location     Type
  4173 ;;		None
  4174 ;; Return value:  Size  Location     Type
  4175 ;;                  1    wreg      void 
  4176 ;; Registers used:
  4177 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4178 ;; Tracked objects:
  4179 ;;		On entry : 0/0
  4180 ;;		On exit  : 0/0
  4181 ;;		Unchanged: 0/0
  4182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4183 ;;      Params:         0       0       0       0       0
  4184 ;;      Locals:         0       0       0       0       0
  4185 ;;      Temps:          0       1       0       0       0
  4186 ;;      Totals:         0       1       0       0       0
  4187 ;;Total ram usage:        1 bytes
  4188 ;; Hardware stack levels used:    1
  4189 ;; Hardware stack levels required when called:    3
  4190 ;; This function calls:
  4191 ;;		_checkColission_L
  4192 ;;		_checkColission_R
  4193 ;;		_checkRight
  4194 ;;		_drawFigure
  4195 ;;		_gire
  4196 ;; This function is called by:
  4197 ;;		_checkCount
  4198 ;; This function uses a non-reentrant model
  4199 ;;
  4200                           
  4201                           
  4202                           ;psect for function _leerEntradas
  4203  0536                     _leerEntradas:	
  4204  0536                     l1972:	
  4205                           ;incstack = 0
  4206                           ; Regs used in _leerEntradas: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4207                           
  4208                           
  4209                           ;mainsource.c: 110:     if(con.girar){
  4210  0536  1283               	bcf	3,5	;RP0=0, select bank0
  4211  0537  1303               	bcf	3,6	;RP1=0, select bank0
  4212  0538  0845               	movf	_con,w
  4213  0539  1903               	btfsc	3,2
  4214  053A  2D3C               	goto	u1381
  4215  053B  2D3D               	goto	u1380
  4216  053C                     u1381:	
  4217  053C  2D49               	goto	l1982
  4218  053D                     u1380:	
  4219  053D                     l1974:	
  4220                           
  4221                           ;mainsource.c: 111:         con.girar=0;
  4222  053D  01C5               	clrf	_con
  4223  053E                     l1976:	
  4224                           
  4225                           ;mainsource.c: 112:         gire();
  4226  053E  120A  118A  203E  120A  118A  	fcall	_gire
  4227  0543                     l1978:	
  4228                           
  4229                           ;mainsource.c: 113:         drawFigure();
  4230  0543  120A  118A  215E  120A  118A  	fcall	_drawFigure
  4231  0548  2D84               	goto	l136
  4232  0549                     l1982:	
  4233                           
  4234                           ;mainsource.c: 117:     if(con.derecha == 1 ){
  4235  0549  034A               	decf	_con+5,w
  4236  054A  1D03               	btfss	3,2
  4237  054B  2D4D               	goto	u1391
  4238  054C  2D4E               	goto	u1390
  4239  054D                     u1391:	
  4240  054D  2D69               	goto	l1998
  4241  054E                     u1390:	
  4242  054E                     l1984:	
  4243                           
  4244                           ;mainsource.c: 118:         con.derecha = 0;
  4245  054E  01CA               	clrf	_con+5
  4246  054F                     l1986:	
  4247                           
  4248                           ;mainsource.c: 119:         if(checkColission_R() | checkRight()){
  4249  054F  120A  158A  260E  120A  118A  	fcall	_checkRight
  4250  0554  1283               	bcf	3,5	;RP0=0, select bank0
  4251  0555  1303               	bcf	3,6	;RP1=0, select bank0
  4252  0556  00AB               	movwf	??_leerEntradas
  4253  0557  120A  118A  273C  120A  118A  	fcall	_checkColission_R
  4254  055C  1283               	bcf	3,5	;RP0=0, select bank0
  4255  055D  1303               	bcf	3,6	;RP1=0, select bank0
  4256  055E  042B               	iorwf	??_leerEntradas,w
  4257  055F  1903               	btfsc	3,2
  4258  0560  2D62               	goto	u1401
  4259  0561  2D63               	goto	u1400
  4260  0562                     u1401:	
  4261  0562  2D64               	goto	l1990
  4262  0563                     u1400:	
  4263  0563  2D84               	goto	l136
  4264  0564                     l1990:	
  4265                           
  4266                           ;mainsource.c: 122:         con.ficha_Hpos++;
  4267  0564  3001               	movlw	1
  4268  0565  00AB               	movwf	??_leerEntradas
  4269  0566  082B               	movf	??_leerEntradas,w
  4270  0567  07C8               	addwf	_con+3,f
  4271  0568  2D43               	goto	l1978
  4272  0569                     l1998:	
  4273  0569  034B               	decf	_con+6,w
  4274  056A  1D03               	btfss	3,2
  4275  056B  2D6D               	goto	u1411
  4276  056C  2D6E               	goto	u1410
  4277  056D                     u1411:	
  4278  056D  2D84               	goto	l136
  4279  056E                     u1410:	
  4280  056E                     l2000:	
  4281  056E  0848               	movf	_con+3,w
  4282  056F  1903               	btfsc	3,2
  4283  0570  2D72               	goto	u1421
  4284  0571  2D73               	goto	u1420
  4285  0572                     u1421:	
  4286  0572  2D84               	goto	l136
  4287  0573                     u1420:	
  4288  0573                     l2002:	
  4289                           
  4290                           ;mainsource.c: 127:         con.izquierda = 0;
  4291  0573  01CB               	clrf	_con+6
  4292  0574                     l2004:	
  4293                           
  4294                           ;mainsource.c: 128:         if(checkColission_L()==1){
  4295  0574  120A  118A  2585  120A  118A  	fcall	_checkColission_L
  4296  0579  3A01               	xorlw	1
  4297  057A  1D03               	skipz
  4298  057B  2D7D               	goto	u1431
  4299  057C  2D7E               	goto	u1430
  4300  057D                     u1431:	
  4301  057D  2D7F               	goto	l2008
  4302  057E                     u1430:	
  4303  057E  2D84               	goto	l136
  4304  057F                     l2008:	
  4305                           
  4306                           ;mainsource.c: 131:         con.ficha_Hpos--;
  4307  057F  3001               	movlw	1
  4308  0580  1283               	bcf	3,5	;RP0=0, select bank0
  4309  0581  1303               	bcf	3,6	;RP1=0, select bank0
  4310  0582  02C8               	subwf	_con+3,f
  4311  0583  2D43               	goto	l1978
  4312  0584                     l136:	
  4313  0584  0008               	return
  4314  0585                     __end_of_leerEntradas:	
  4315                           
  4316                           	psect	text29
  4317  003E                     __ptext29:	
  4318 ;; *************** function _gire *****************
  4319 ;; Defined at:
  4320 ;;		line 68 in file "mainsource.c"
  4321 ;; Parameters:    Size  Location     Type
  4322 ;;		None
  4323 ;; Auto vars:     Size  Location     Type
  4324 ;;  aux             4    3[BANK0 ] unsigned char [4]
  4325 ;;  i               2    9[BANK0 ] int 
  4326 ;;  j               2    7[BANK0 ] int 
  4327 ;;  k               2    0[BANK0 ] int 
  4328 ;;  mask            1    2[BANK0 ] unsigned char 
  4329 ;; Return value:  Size  Location     Type
  4330 ;;                  1    wreg      void 
  4331 ;; Registers used:
  4332 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4333 ;; Tracked objects:
  4334 ;;		On entry : 0/0
  4335 ;;		On exit  : 0/0
  4336 ;;		Unchanged: 0/0
  4337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4338 ;;      Params:         0       0       0       0       0
  4339 ;;      Locals:         0      11       0       0       0
  4340 ;;      Temps:          5       0       0       0       0
  4341 ;;      Totals:         5      11       0       0       0
  4342 ;;Total ram usage:       16 bytes
  4343 ;; Hardware stack levels used:    1
  4344 ;; Hardware stack levels required when called:    1
  4345 ;; This function calls:
  4346 ;;		Nothing
  4347 ;; This function is called by:
  4348 ;;		_leerEntradas
  4349 ;; This function uses a non-reentrant model
  4350 ;;
  4351                           
  4352                           
  4353                           ;psect for function _gire
  4354  003E                     _gire:	
  4355  003E                     l1726:	
  4356                           ;incstack = 0
  4357                           ; Regs used in _gire: [wreg-fsr0h+status,2+status,0+btemp+1]
  4358                           
  4359  003E  1283               	bcf	3,5	;RP0=0, select bank0
  4360  003F  1303               	bcf	3,6	;RP1=0, select bank0
  4361  0040  01A7               	clrf	gire@j
  4362  0041  01A8               	clrf	gire@j+1
  4363  0042  01A0               	clrf	gire@k
  4364  0043  01A1               	clrf	gire@k+1
  4365  0044                     l1728:	
  4366                           
  4367                           ;mainsource.c: 70:     uint8_t aux[4]={0x0000};
  4368  0044  3000               	movlw	0
  4369  0045  00A6               	movwf	gire@aux+3
  4370  0046  3000               	movlw	0
  4371  0047  00A5               	movwf	gire@aux+2
  4372  0048  3000               	movlw	0
  4373  0049  00A4               	movwf	gire@aux+1
  4374  004A  3000               	movlw	0
  4375  004B  00A3               	movwf	gire@aux
  4376  004C                     l1730:	
  4377  004C                     l1732:	
  4378                           
  4379                           ;mainsource.c: 72:     for(i=0; i<4; i++){
  4380  004C  01A9               	clrf	gire@i
  4381  004D  01AA               	clrf	gire@i+1
  4382  004E                     l1738:	
  4383                           
  4384                           ;mainsource.c: 73:         for(j=0; j<4; j++){
  4385  004E  1283               	bcf	3,5	;RP0=0, select bank0
  4386  004F  1303               	bcf	3,6	;RP1=0, select bank0
  4387  0050  01A7               	clrf	gire@j
  4388  0051  01A8               	clrf	gire@j+1
  4389  0052                     l1744:	
  4390                           
  4391                           ;mainsource.c: 74:             mask = (figuras[con.ficha_actual][j] >> i) & 0x01;
  4392  0052  1283               	bcf	3,5	;RP0=0, select bank0
  4393  0053  1303               	bcf	3,6	;RP1=0, select bank0
  4394  0054  0849               	movf	_con+4,w
  4395  0055  00F2               	movwf	??_gire
  4396  0056  3002               	movlw	2
  4397  0057                     u965:	
  4398  0057  1003               	clrc
  4399  0058  0DF2               	rlf	??_gire,f
  4400  0059  3EFF               	addlw	-1
  4401  005A  1D03               	skipz
  4402  005B  2857               	goto	u965
  4403  005C  30C0               	movlw	(low (_figuras| 0))& (0+255)
  4404  005D  0772               	addwf	??_gire,w
  4405  005E  00F3               	movwf	??_gire+1
  4406  005F  0827               	movf	gire@j,w
  4407  0060  0773               	addwf	??_gire+1,w
  4408  0061  00F4               	movwf	??_gire+2
  4409  0062  0874               	movf	??_gire+2,w
  4410  0063  0084               	movwf	4
  4411  0064  1383               	bcf	3,7	;select IRP bank1
  4412  0065  0800               	movf	0,w
  4413  0066  00F5               	movwf	??_gire+3
  4414  0067  0A29               	incf	gire@i,w
  4415  0068  286B               	goto	u974
  4416  0069                     u975:	
  4417  0069  1003               	clrc
  4418  006A  0CF5               	rrf	??_gire+3,f
  4419  006B                     u974:	
  4420  006B  3EFF               	addlw	-1
  4421  006C  1D03               	skipz
  4422  006D  2869               	goto	u975
  4423  006E  0875               	movf	??_gire+3,w
  4424  006F  3901               	andlw	1
  4425  0070  00F6               	movwf	??_gire+4
  4426  0071  0876               	movf	??_gire+4,w
  4427  0072  00A2               	movwf	gire@mask
  4428                           
  4429                           ;mainsource.c: 75:             aux[i] = aux[i] | (mask<<(3-j));
  4430  0073  0829               	movf	gire@i,w
  4431  0074  3E23               	addlw	(low (gire@aux| 0))& (0+255)
  4432  0075  0084               	movwf	4
  4433  0076  0822               	movf	gire@mask,w
  4434  0077  00F2               	movwf	??_gire
  4435  0078  0827               	movf	gire@j,w
  4436  0079  3C03               	sublw	3
  4437  007A  3E01               	addlw	1
  4438  007B  287E               	goto	u984
  4439  007C                     u985:	
  4440  007C  1003               	clrc
  4441  007D  0DF2               	rlf	??_gire,f
  4442  007E                     u984:	
  4443  007E  3EFF               	addlw	-1
  4444  007F  1D03               	skipz
  4445  0080  287C               	goto	u985
  4446  0081  0872               	movf	??_gire,w
  4447  0082  0400               	iorwf	0,w
  4448  0083  00F3               	movwf	??_gire+1
  4449  0084  0829               	movf	gire@i,w
  4450  0085  3E23               	addlw	(low (gire@aux| 0))& (0+255)
  4451  0086  0084               	movwf	4
  4452  0087  0873               	movf	??_gire+1,w
  4453  0088  0080               	movwf	0
  4454  0089                     l1746:	
  4455                           
  4456                           ;mainsource.c: 76:         }
  4457  0089  3001               	movlw	1
  4458  008A  07A7               	addwf	gire@j,f
  4459  008B  1803               	skipnc
  4460  008C  0AA8               	incf	gire@j+1,f
  4461  008D  3000               	movlw	0
  4462  008E  07A8               	addwf	gire@j+1,f
  4463  008F                     l1748:	
  4464  008F  0828               	movf	gire@j+1,w
  4465  0090  3A80               	xorlw	128
  4466  0091  00FF               	movwf	btemp+1
  4467  0092  3080               	movlw	128
  4468  0093  027F               	subwf	btemp+1,w
  4469  0094  1D03               	skipz
  4470  0095  2898               	goto	u995
  4471  0096  3004               	movlw	4
  4472  0097  0227               	subwf	gire@j,w
  4473  0098                     u995:	
  4474  0098  1C03               	skipc
  4475  0099  289B               	goto	u991
  4476  009A  289C               	goto	u990
  4477  009B                     u991:	
  4478  009B  2852               	goto	l1744
  4479  009C                     u990:	
  4480  009C                     l1750:	
  4481                           
  4482                           ;mainsource.c: 77:     }
  4483  009C  3001               	movlw	1
  4484  009D  1283               	bcf	3,5	;RP0=0, select bank0
  4485  009E  1303               	bcf	3,6	;RP1=0, select bank0
  4486  009F  07A9               	addwf	gire@i,f
  4487  00A0  1803               	skipnc
  4488  00A1  0AAA               	incf	gire@i+1,f
  4489  00A2  3000               	movlw	0
  4490  00A3  07AA               	addwf	gire@i+1,f
  4491  00A4                     l1752:	
  4492  00A4  082A               	movf	gire@i+1,w
  4493  00A5  3A80               	xorlw	128
  4494  00A6  00FF               	movwf	btemp+1
  4495  00A7  3080               	movlw	128
  4496  00A8  027F               	subwf	btemp+1,w
  4497  00A9  1D03               	skipz
  4498  00AA  28AD               	goto	u1005
  4499  00AB  3004               	movlw	4
  4500  00AC  0229               	subwf	gire@i,w
  4501  00AD                     u1005:	
  4502  00AD  1C03               	skipc
  4503  00AE  28B0               	goto	u1001
  4504  00AF  28B1               	goto	u1000
  4505  00B0                     u1001:	
  4506  00B0  284E               	goto	l1738
  4507  00B1                     u1000:	
  4508  00B1  290A               	goto	l1784
  4509  00B2                     l1754:	
  4510                           
  4511                           ;mainsource.c: 83:         for(i=0; i<4; i++){
  4512  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  4513  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  4514  00B4  01A9               	clrf	gire@i
  4515  00B5  01AA               	clrf	gire@i+1
  4516  00B6                     l1760:	
  4517                           
  4518                           ;mainsource.c: 84:             if( aux[i] & 0x01 ){
  4519  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  4520  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  4521  00B8  0829               	movf	gire@i,w
  4522  00B9  3E23               	addlw	(low (gire@aux| 0))& (0+255)
  4523  00BA  0084               	movwf	4
  4524  00BB  1383               	bcf	3,7	;select IRP bank0
  4525  00BC  1C00               	btfss	0,0
  4526  00BD  28BF               	goto	u1011
  4527  00BE  28C0               	goto	u1010
  4528  00BF                     u1011:	
  4529  00BF  28C1               	goto	l1764
  4530  00C0                     u1010:	
  4531  00C0  2902               	goto	l1782
  4532  00C1                     l1764:	
  4533                           
  4534                           ;mainsource.c: 87:             if(i==3){
  4535  00C1  3003               	movlw	3
  4536  00C2  0629               	xorwf	gire@i,w
  4537  00C3  042A               	iorwf	gire@i+1,w
  4538  00C4  1D03               	btfss	3,2
  4539  00C5  28C7               	goto	u1021
  4540  00C6  28C8               	goto	u1020
  4541  00C7                     u1021:	
  4542  00C7  28ED               	goto	l1778
  4543  00C8                     u1020:	
  4544  00C8                     l1766:	
  4545                           
  4546                           ;mainsource.c: 88:                 for(j=0; j<4; j++){
  4547  00C8  01A7               	clrf	gire@j
  4548  00C9  01A8               	clrf	gire@j+1
  4549  00CA                     l1772:	
  4550                           
  4551                           ;mainsource.c: 89:                     aux[j] = aux[j]>>1;
  4552  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  4553  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  4554  00CC  0827               	movf	gire@j,w
  4555  00CD  3E23               	addlw	(low (gire@aux| 0))& (0+255)
  4556  00CE  0084               	movwf	4
  4557  00CF  1383               	bcf	3,7	;select IRP bank0
  4558  00D0  0800               	movf	0,w
  4559  00D1  00F2               	movwf	??_gire
  4560  00D2  1003               	clrc
  4561  00D3  0C72               	rrf	??_gire,w
  4562  00D4  00F3               	movwf	??_gire+1
  4563  00D5  0827               	movf	gire@j,w
  4564  00D6  3E23               	addlw	(low (gire@aux| 0))& (0+255)
  4565  00D7  0084               	movwf	4
  4566  00D8  0873               	movf	??_gire+1,w
  4567  00D9  0080               	movwf	0
  4568  00DA                     l1774:	
  4569                           
  4570                           ;mainsource.c: 90:                 }
  4571  00DA  3001               	movlw	1
  4572  00DB  07A7               	addwf	gire@j,f
  4573  00DC  1803               	skipnc
  4574  00DD  0AA8               	incf	gire@j+1,f
  4575  00DE  3000               	movlw	0
  4576  00DF  07A8               	addwf	gire@j+1,f
  4577  00E0                     l1776:	
  4578  00E0  0828               	movf	gire@j+1,w
  4579  00E1  3A80               	xorlw	128
  4580  00E2  00FF               	movwf	btemp+1
  4581  00E3  3080               	movlw	128
  4582  00E4  027F               	subwf	btemp+1,w
  4583  00E5  1D03               	skipz
  4584  00E6  28E9               	goto	u1035
  4585  00E7  3004               	movlw	4
  4586  00E8  0227               	subwf	gire@j,w
  4587  00E9                     u1035:	
  4588  00E9  1C03               	skipc
  4589  00EA  28EC               	goto	u1031
  4590  00EB  28ED               	goto	u1030
  4591  00EC                     u1031:	
  4592  00EC  28CA               	goto	l1772
  4593  00ED                     u1030:	
  4594  00ED                     l1778:	
  4595                           
  4596                           ;mainsource.c: 92:         }
  4597  00ED  3001               	movlw	1
  4598  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  4599  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  4600  00F0  07A9               	addwf	gire@i,f
  4601  00F1  1803               	skipnc
  4602  00F2  0AAA               	incf	gire@i+1,f
  4603  00F3  3000               	movlw	0
  4604  00F4  07AA               	addwf	gire@i+1,f
  4605  00F5                     l1780:	
  4606  00F5  082A               	movf	gire@i+1,w
  4607  00F6  3A80               	xorlw	128
  4608  00F7  00FF               	movwf	btemp+1
  4609  00F8  3080               	movlw	128
  4610  00F9  027F               	subwf	btemp+1,w
  4611  00FA  1D03               	skipz
  4612  00FB  28FE               	goto	u1045
  4613  00FC  3004               	movlw	4
  4614  00FD  0229               	subwf	gire@i,w
  4615  00FE                     u1045:	
  4616  00FE  1C03               	skipc
  4617  00FF  2901               	goto	u1041
  4618  0100  2902               	goto	u1040
  4619  0101                     u1041:	
  4620  0101  28B6               	goto	l1760
  4621  0102                     u1040:	
  4622  0102                     l1782:	
  4623                           
  4624                           ;mainsource.c: 93:         k++;
  4625  0102  3001               	movlw	1
  4626  0103  1283               	bcf	3,5	;RP0=0, select bank0
  4627  0104  1303               	bcf	3,6	;RP1=0, select bank0
  4628  0105  07A0               	addwf	gire@k,f
  4629  0106  1803               	skipnc
  4630  0107  0AA1               	incf	gire@k+1,f
  4631  0108  3000               	movlw	0
  4632  0109  07A1               	addwf	gire@k+1,f
  4633  010A                     l1784:	
  4634                           
  4635                           ;mainsource.c: 82:     while(k<3){
  4636  010A  1283               	bcf	3,5	;RP0=0, select bank0
  4637  010B  1303               	bcf	3,6	;RP1=0, select bank0
  4638  010C  0821               	movf	gire@k+1,w
  4639  010D  3A80               	xorlw	128
  4640  010E  00FF               	movwf	btemp+1
  4641  010F  3080               	movlw	128
  4642  0110  027F               	subwf	btemp+1,w
  4643  0111  1D03               	skipz
  4644  0112  2915               	goto	u1055
  4645  0113  3003               	movlw	3
  4646  0114  0220               	subwf	gire@k,w
  4647  0115                     u1055:	
  4648  0115  1C03               	skipc
  4649  0116  2918               	goto	u1051
  4650  0117  2919               	goto	u1050
  4651  0118                     u1051:	
  4652  0118  28B2               	goto	l1754
  4653  0119                     u1050:	
  4654  0119                     l1786:	
  4655                           
  4656                           ;mainsource.c: 96:     if((aux[0] & 0xF) == 0){
  4657  0119  1283               	bcf	3,5	;RP0=0, select bank0
  4658  011A  1303               	bcf	3,6	;RP1=0, select bank0
  4659  011B  0823               	movf	gire@aux,w
  4660  011C  390F               	andlw	15
  4661  011D  1D03               	btfss	3,2
  4662  011E  2920               	goto	u1061
  4663  011F  2921               	goto	u1060
  4664  0120                     u1061:	
  4665  0120  292E               	goto	l1792
  4666  0121                     u1060:	
  4667  0121                     l1788:	
  4668                           
  4669                           ;mainsource.c: 97:         aux[0] = aux[1];
  4670  0121  0824               	movf	gire@aux+1,w
  4671  0122  00F2               	movwf	??_gire
  4672  0123  0872               	movf	??_gire,w
  4673  0124  00A3               	movwf	gire@aux
  4674                           
  4675                           ;mainsource.c: 98:         aux[1] = aux[2];
  4676  0125  0825               	movf	gire@aux+2,w
  4677  0126  00F2               	movwf	??_gire
  4678  0127  0872               	movf	??_gire,w
  4679  0128  00A4               	movwf	gire@aux+1
  4680                           
  4681                           ;mainsource.c: 99:         aux[2] = aux[3];
  4682  0129  0826               	movf	gire@aux+3,w
  4683  012A  00F2               	movwf	??_gire
  4684  012B  0872               	movf	??_gire,w
  4685  012C  00A5               	movwf	gire@aux+2
  4686  012D                     l1790:	
  4687                           
  4688                           ;mainsource.c: 100:         aux[3] = 0x0;
  4689  012D  01A6               	clrf	gire@aux+3
  4690  012E                     l1792:	
  4691                           
  4692                           ;mainsource.c: 103:     for(i=0; i<4; i++){
  4693  012E  01A9               	clrf	gire@i
  4694  012F  01AA               	clrf	gire@i+1
  4695  0130                     l1798:	
  4696                           
  4697                           ;mainsource.c: 104:         figuras[con.ficha_actual][i] = aux[i];
  4698  0130  1283               	bcf	3,5	;RP0=0, select bank0
  4699  0131  1303               	bcf	3,6	;RP1=0, select bank0
  4700  0132  0829               	movf	gire@i,w
  4701  0133  3E23               	addlw	(low (gire@aux| 0))& (0+255)
  4702  0134  0084               	movwf	4
  4703  0135  1383               	bcf	3,7	;select IRP bank0
  4704  0136  0800               	movf	0,w
  4705  0137  00F2               	movwf	??_gire
  4706  0138  0849               	movf	_con+4,w
  4707  0139  00F3               	movwf	??_gire+1
  4708  013A  3002               	movlw	2
  4709  013B                     u1075:	
  4710  013B  1003               	clrc
  4711  013C  0DF3               	rlf	??_gire+1,f
  4712  013D  3EFF               	addlw	-1
  4713  013E  1D03               	skipz
  4714  013F  293B               	goto	u1075
  4715  0140  30C0               	movlw	(low (_figuras| 0))& (0+255)
  4716  0141  0773               	addwf	??_gire+1,w
  4717  0142  00F4               	movwf	??_gire+2
  4718  0143  0829               	movf	gire@i,w
  4719  0144  0774               	addwf	??_gire+2,w
  4720  0145  00F5               	movwf	??_gire+3
  4721  0146  0875               	movf	??_gire+3,w
  4722  0147  0084               	movwf	4
  4723  0148  0872               	movf	??_gire,w
  4724  0149  0080               	movwf	0
  4725  014A                     l1800:	
  4726                           
  4727                           ;mainsource.c: 105:     }
  4728  014A  3001               	movlw	1
  4729  014B  07A9               	addwf	gire@i,f
  4730  014C  1803               	skipnc
  4731  014D  0AAA               	incf	gire@i+1,f
  4732  014E  3000               	movlw	0
  4733  014F  07AA               	addwf	gire@i+1,f
  4734  0150                     l1802:	
  4735  0150  082A               	movf	gire@i+1,w
  4736  0151  3A80               	xorlw	128
  4737  0152  00FF               	movwf	btemp+1
  4738  0153  3080               	movlw	128
  4739  0154  027F               	subwf	btemp+1,w
  4740  0155  1D03               	skipz
  4741  0156  2959               	goto	u1085
  4742  0157  3004               	movlw	4
  4743  0158  0229               	subwf	gire@i,w
  4744  0159                     u1085:	
  4745  0159  1C03               	skipc
  4746  015A  295C               	goto	u1081
  4747  015B  295D               	goto	u1080
  4748  015C                     u1081:	
  4749  015C  2930               	goto	l1798
  4750  015D                     u1080:	
  4751  015D                     l132:	
  4752  015D  0008               	return
  4753  015E                     __end_of_gire:	
  4754                           
  4755                           	psect	text30
  4756  015E                     __ptext30:	
  4757 ;; *************** function _drawFigure *****************
  4758 ;; Defined at:
  4759 ;;		line 57 in file "screen.c"
  4760 ;; Parameters:    Size  Location     Type
  4761 ;;		None
  4762 ;; Auto vars:     Size  Location     Type
  4763 ;;		None
  4764 ;; Return value:  Size  Location     Type
  4765 ;;                  1    wreg      void 
  4766 ;; Registers used:
  4767 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4768 ;; Tracked objects:
  4769 ;;		On entry : 0/0
  4770 ;;		On exit  : 0/0
  4771 ;;		Unchanged: 0/0
  4772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4773 ;;      Params:         0       0       0       0       0
  4774 ;;      Locals:         0       0       0       0       0
  4775 ;;      Temps:          0       5       0       0       0
  4776 ;;      Totals:         0       5       0       0       0
  4777 ;;Total ram usage:        5 bytes
  4778 ;; Hardware stack levels used:    1
  4779 ;; Hardware stack levels required when called:    2
  4780 ;; This function calls:
  4781 ;;		_memset
  4782 ;; This function is called by:
  4783 ;;		_leerEntradas
  4784 ;;		_checkCount
  4785 ;; This function uses a non-reentrant model
  4786 ;;
  4787                           
  4788                           
  4789                           ;psect for function _drawFigure
  4790  015E                     _drawFigure:	
  4791  015E                     l1804:	
  4792                           ;incstack = 0
  4793                           ; Regs used in _drawFigure: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4794                           
  4795                           
  4796                           ;screen.c: 58:     memset(ficha, 0, sizeof(ficha));
  4797  015E  3000               	movlw	0
  4798  015F  00F2               	movwf	memset@c
  4799  0160  00F3               	movwf	memset@c+1
  4800  0161  3010               	movlw	16
  4801  0162  00F4               	movwf	memset@n
  4802  0163  3000               	movlw	0
  4803  0164  00F5               	movwf	memset@n+1
  4804  0165  3057               	movlw	(low (_ficha| 0))& (0+255)
  4805  0166  120A  158A  26F9  120A  118A  	fcall	_memset
  4806  016B                     l1806:	
  4807                           
  4808                           ;screen.c: 59:     ficha[con.ficha_Hpos ] = figuras[con.ficha_actual][0] << (con.ficha_V
      +                          pos-1);
  4809  016B  1283               	bcf	3,5	;RP0=0, select bank0
  4810  016C  1303               	bcf	3,6	;RP1=0, select bank0
  4811  016D  0847               	movf	_con+2,w
  4812  016E  3EFF               	addlw	-1
  4813  016F  00A0               	movwf	??_drawFigure
  4814  0170  0AA0               	incf	??_drawFigure,f
  4815  0171  0849               	movf	_con+4,w
  4816  0172  00A1               	movwf	??_drawFigure+1
  4817  0173  3001               	movlw	1
  4818  0174                     u1095:	
  4819  0174  1003               	clrc
  4820  0175  0DA1               	rlf	??_drawFigure+1,f
  4821  0176  3EFF               	addlw	-1
  4822  0177  1D03               	skipz
  4823  0178  2974               	goto	u1095
  4824  0179  1003               	clrc
  4825  017A  0D21               	rlf	??_drawFigure+1,w
  4826  017B  3EC0               	addlw	(low (_figuras| 0))& (0+255)
  4827  017C  0084               	movwf	4
  4828  017D  1383               	bcf	3,7	;select IRP bank1
  4829  017E  0800               	movf	0,w
  4830  017F  00A2               	movwf	??_drawFigure+2
  4831  0180  01A3               	clrf	??_drawFigure+3
  4832  0181  2985               	goto	u1104
  4833  0182                     u1105:	
  4834  0182  1003               	clrc
  4835  0183  0DA2               	rlf	??_drawFigure+2,f
  4836  0184  0DA3               	rlf	??_drawFigure+3,f
  4837  0185                     u1104:	
  4838  0185  0BA0               	decfsz	??_drawFigure,f
  4839  0186  2982               	goto	u1105
  4840  0187  0848               	movf	_con+3,w
  4841  0188  00A4               	movwf	??_drawFigure+4
  4842  0189  0724               	addwf	??_drawFigure+4,w
  4843  018A  3E57               	addlw	(low (_ficha| 0))& (0+255)
  4844  018B  0084               	movwf	4
  4845  018C  0822               	movf	??_drawFigure+2,w
  4846  018D  0080               	movwf	0
  4847  018E  0A84               	incf	4,f
  4848  018F  0823               	movf	??_drawFigure+3,w
  4849  0190  0080               	movwf	0
  4850  0191                     l1808:	
  4851                           
  4852                           ;screen.c: 60:     ficha[con.ficha_Hpos +1] = figuras[con.ficha_actual][1] << (con.ficha
      +                          _Vpos-1);
  4853  0191  0847               	movf	_con+2,w
  4854  0192  3EFF               	addlw	-1
  4855  0193  00A0               	movwf	??_drawFigure
  4856  0194  0AA0               	incf	??_drawFigure,f
  4857  0195  0849               	movf	_con+4,w
  4858  0196  00A1               	movwf	??_drawFigure+1
  4859  0197  3001               	movlw	1
  4860  0198                     u1115:	
  4861  0198  1003               	clrc
  4862  0199  0DA1               	rlf	??_drawFigure+1,f
  4863  019A  3EFF               	addlw	-1
  4864  019B  1D03               	skipz
  4865  019C  2998               	goto	u1115
  4866  019D  1003               	clrc
  4867  019E  0D21               	rlf	??_drawFigure+1,w
  4868  019F  3EC1               	addlw	(low ((_figuras| 0+1)))& (0+255)
  4869  01A0  0084               	movwf	4
  4870  01A1  0800               	movf	0,w
  4871  01A2  00A2               	movwf	??_drawFigure+2
  4872  01A3  01A3               	clrf	??_drawFigure+3
  4873  01A4  29A8               	goto	u1124
  4874  01A5                     u1125:	
  4875  01A5  1003               	clrc
  4876  01A6  0DA2               	rlf	??_drawFigure+2,f
  4877  01A7  0DA3               	rlf	??_drawFigure+3,f
  4878  01A8                     u1124:	
  4879  01A8  0BA0               	decfsz	??_drawFigure,f
  4880  01A9  29A5               	goto	u1125
  4881  01AA  0848               	movf	_con+3,w
  4882  01AB  00A4               	movwf	??_drawFigure+4
  4883  01AC  0724               	addwf	??_drawFigure+4,w
  4884  01AD  3E59               	addlw	(low ((_ficha| 0+2)))& (0+255)
  4885  01AE  0084               	movwf	4
  4886  01AF  0822               	movf	??_drawFigure+2,w
  4887  01B0  0080               	movwf	0
  4888  01B1  0A84               	incf	4,f
  4889  01B2  0823               	movf	??_drawFigure+3,w
  4890  01B3  0080               	movwf	0
  4891  01B4                     l1810:	
  4892                           
  4893                           ;screen.c: 61:     ficha[con.ficha_Hpos +2] = figuras[con.ficha_actual][2] << (con.ficha
      +                          _Vpos-1);
  4894  01B4  0847               	movf	_con+2,w
  4895  01B5  3EFF               	addlw	-1
  4896  01B6  00A0               	movwf	??_drawFigure
  4897  01B7  0AA0               	incf	??_drawFigure,f
  4898  01B8  0849               	movf	_con+4,w
  4899  01B9  00A1               	movwf	??_drawFigure+1
  4900  01BA  3001               	movlw	1
  4901  01BB                     u1135:	
  4902  01BB  1003               	clrc
  4903  01BC  0DA1               	rlf	??_drawFigure+1,f
  4904  01BD  3EFF               	addlw	-1
  4905  01BE  1D03               	skipz
  4906  01BF  29BB               	goto	u1135
  4907  01C0  1003               	clrc
  4908  01C1  0D21               	rlf	??_drawFigure+1,w
  4909  01C2  3EC2               	addlw	(low ((_figuras| 0+2)))& (0+255)
  4910  01C3  0084               	movwf	4
  4911  01C4  0800               	movf	0,w
  4912  01C5  00A2               	movwf	??_drawFigure+2
  4913  01C6  01A3               	clrf	??_drawFigure+3
  4914  01C7  29CB               	goto	u1144
  4915  01C8                     u1145:	
  4916  01C8  1003               	clrc
  4917  01C9  0DA2               	rlf	??_drawFigure+2,f
  4918  01CA  0DA3               	rlf	??_drawFigure+3,f
  4919  01CB                     u1144:	
  4920  01CB  0BA0               	decfsz	??_drawFigure,f
  4921  01CC  29C8               	goto	u1145
  4922  01CD  0848               	movf	_con+3,w
  4923  01CE  00A4               	movwf	??_drawFigure+4
  4924  01CF  0724               	addwf	??_drawFigure+4,w
  4925  01D0  3E5B               	addlw	(low ((_ficha| 0+4)))& (0+255)
  4926  01D1  0084               	movwf	4
  4927  01D2  0822               	movf	??_drawFigure+2,w
  4928  01D3  0080               	movwf	0
  4929  01D4  0A84               	incf	4,f
  4930  01D5  0823               	movf	??_drawFigure+3,w
  4931  01D6  0080               	movwf	0
  4932  01D7                     l1812:	
  4933                           
  4934                           ;screen.c: 62:     ficha[con.ficha_Hpos +3] = figuras[con.ficha_actual][3] << (con.ficha
      +                          _Vpos-1);
  4935  01D7  0847               	movf	_con+2,w
  4936  01D8  3EFF               	addlw	-1
  4937  01D9  00A0               	movwf	??_drawFigure
  4938  01DA  0AA0               	incf	??_drawFigure,f
  4939  01DB  0849               	movf	_con+4,w
  4940  01DC  00A1               	movwf	??_drawFigure+1
  4941  01DD  3001               	movlw	1
  4942  01DE                     u1155:	
  4943  01DE  1003               	clrc
  4944  01DF  0DA1               	rlf	??_drawFigure+1,f
  4945  01E0  3EFF               	addlw	-1
  4946  01E1  1D03               	skipz
  4947  01E2  29DE               	goto	u1155
  4948  01E3  1003               	clrc
  4949  01E4  0D21               	rlf	??_drawFigure+1,w
  4950  01E5  3EC3               	addlw	(low ((_figuras| 0+3)))& (0+255)
  4951  01E6  0084               	movwf	4
  4952  01E7  0800               	movf	0,w
  4953  01E8  00A2               	movwf	??_drawFigure+2
  4954  01E9  01A3               	clrf	??_drawFigure+3
  4955  01EA  29EE               	goto	u1164
  4956  01EB                     u1165:	
  4957  01EB  1003               	clrc
  4958  01EC  0DA2               	rlf	??_drawFigure+2,f
  4959  01ED  0DA3               	rlf	??_drawFigure+3,f
  4960  01EE                     u1164:	
  4961  01EE  0BA0               	decfsz	??_drawFigure,f
  4962  01EF  29EB               	goto	u1165
  4963  01F0  0848               	movf	_con+3,w
  4964  01F1  00A4               	movwf	??_drawFigure+4
  4965  01F2  0724               	addwf	??_drawFigure+4,w
  4966  01F3  3E5D               	addlw	(low ((_ficha| 0+6)))& (0+255)
  4967  01F4  0084               	movwf	4
  4968  01F5  0822               	movf	??_drawFigure+2,w
  4969  01F6  0080               	movwf	0
  4970  01F7  0A84               	incf	4,f
  4971  01F8  0823               	movf	??_drawFigure+3,w
  4972  01F9  0080               	movwf	0
  4973  01FA                     l226:	
  4974  01FA  0008               	return
  4975  01FB                     __end_of_drawFigure:	
  4976                           
  4977                           	psect	text31
  4978  0EF9                     __ptext31:	
  4979 ;; *************** function _memset *****************
  4980 ;; Defined at:
  4981 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\memset.c"
  4982 ;; Parameters:    Size  Location     Type
  4983 ;;  p1              1    wreg     PTR void 
  4984 ;;		 -> fondo(16), ficha(16), 
  4985 ;;  c               2    2[COMMON] int 
  4986 ;;  n               2    4[COMMON] unsigned int 
  4987 ;; Auto vars:     Size  Location     Type
  4988 ;;  p1              1    8[COMMON] PTR void 
  4989 ;;		 -> fondo(16), ficha(16), 
  4990 ;;  p               1    7[COMMON] PTR unsigned char 
  4991 ;;		 -> fondo(16), ficha(16), 
  4992 ;; Return value:  Size  Location     Type
  4993 ;;                  1    wreg      PTR void 
  4994 ;; Registers used:
  4995 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4996 ;; Tracked objects:
  4997 ;;		On entry : 0/0
  4998 ;;		On exit  : 0/0
  4999 ;;		Unchanged: 0/0
  5000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5001 ;;      Params:         4       0       0       0       0
  5002 ;;      Locals:         2       0       0       0       0
  5003 ;;      Temps:          1       0       0       0       0
  5004 ;;      Totals:         7       0       0       0       0
  5005 ;;Total ram usage:        7 bytes
  5006 ;; Hardware stack levels used:    1
  5007 ;; Hardware stack levels required when called:    1
  5008 ;; This function calls:
  5009 ;;		Nothing
  5010 ;; This function is called by:
  5011 ;;		_drawFigure
  5012 ;;		_perdio
  5013 ;; This function uses a non-reentrant model
  5014 ;;
  5015                           
  5016                           
  5017                           ;psect for function _memset
  5018  0EF9                     _memset:	
  5019                           
  5020                           ;incstack = 0
  5021                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0]
  5022                           ;memset@p1 stored from wreg
  5023  0EF9  00F8               	movwf	memset@p1
  5024  0EFA                     l1696:	
  5025  0EFA  0878               	movf	memset@p1,w
  5026  0EFB  00F6               	movwf	??_memset
  5027  0EFC  0876               	movf	??_memset,w
  5028  0EFD  00F7               	movwf	memset@p
  5029  0EFE  2F0A               	goto	l1702
  5030  0EFF                     l1698:	
  5031  0EFF  0872               	movf	memset@c,w
  5032  0F00  00F6               	movwf	??_memset
  5033  0F01  0877               	movf	memset@p,w
  5034  0F02  0084               	movwf	4
  5035  0F03  0876               	movf	??_memset,w
  5036  0F04  1383               	bcf	3,7	;select IRP bank0
  5037  0F05  0080               	movwf	0
  5038  0F06                     l1700:	
  5039  0F06  3001               	movlw	1
  5040  0F07  00F6               	movwf	??_memset
  5041  0F08  0876               	movf	??_memset,w
  5042  0F09  07F7               	addwf	memset@p,f
  5043  0F0A                     l1702:	
  5044  0F0A  3001               	movlw	1
  5045  0F0B  02F4               	subwf	memset@n,f
  5046  0F0C  3000               	movlw	0
  5047  0F0D  1C03               	skipc
  5048  0F0E  03F5               	decf	memset@n+1,f
  5049  0F0F  02F5               	subwf	memset@n+1,f
  5050  0F10  0A74               	incf	memset@n,w
  5051  0F11  1D03               	skipz
  5052  0F12  2F17               	goto	u891
  5053  0F13  0A75               	incf	memset@n+1,w
  5054  0F14  1D03               	btfss	3,2
  5055  0F15  2F17               	goto	u891
  5056  0F16  2F18               	goto	u890
  5057  0F17                     u891:	
  5058  0F17  2EFF               	goto	l1698
  5059  0F18                     u890:	
  5060  0F18                     l922:	
  5061  0F18  0008               	return
  5062  0F19                     __end_of_memset:	
  5063                           
  5064                           	psect	text32
  5065  0E0E                     __ptext32:	
  5066 ;; *************** function _checkRight *****************
  5067 ;; Defined at:
  5068 ;;		line 26 in file "colisiones.c"
  5069 ;; Parameters:    Size  Location     Type
  5070 ;;		None
  5071 ;; Auto vars:     Size  Location     Type
  5072 ;;		None
  5073 ;; Return value:  Size  Location     Type
  5074 ;;                  1    wreg      _Bool 
  5075 ;; Registers used:
  5076 ;;		wreg, status,2, status,0
  5077 ;; Tracked objects:
  5078 ;;		On entry : 0/0
  5079 ;;		On exit  : 0/0
  5080 ;;		Unchanged: 0/0
  5081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5082 ;;      Params:         0       0       0       0       0
  5083 ;;      Locals:         0       0       0       0       0
  5084 ;;      Temps:          0       0       0       0       0
  5085 ;;      Totals:         0       0       0       0       0
  5086 ;;Total ram usage:        0 bytes
  5087 ;; Hardware stack levels used:    1
  5088 ;; Hardware stack levels required when called:    1
  5089 ;; This function calls:
  5090 ;;		Nothing
  5091 ;; This function is called by:
  5092 ;;		_leerEntradas
  5093 ;; This function uses a non-reentrant model
  5094 ;;
  5095                           
  5096                           
  5097                           ;psect for function _checkRight
  5098  0E0E                     _checkRight:	
  5099  0E0E                     l1830:	
  5100                           ;incstack = 0
  5101                           ; Regs used in _checkRight: [wreg+status,2+status,0]
  5102                           
  5103                           
  5104                           ;colisiones.c: 27:     if(ficha[7]!=0){
  5105  0E0E  1283               	bcf	3,5	;RP0=0, select bank0
  5106  0E0F  1303               	bcf	3,6	;RP1=0, select bank0
  5107  0E10  0865               	movf	_ficha+14,w
  5108  0E11  0466               	iorwf	_ficha+15,w
  5109  0E12  1903               	btfsc	3,2
  5110  0E13  2E15               	goto	u1191
  5111  0E14  2E16               	goto	u1190
  5112  0E15                     u1191:	
  5113  0E15  2E18               	goto	l1836
  5114  0E16                     u1190:	
  5115  0E16                     l1832:	
  5116                           
  5117                           ;colisiones.c: 28:         return 1;
  5118  0E16  3001               	movlw	1
  5119  0E17  2E19               	goto	l250
  5120  0E18                     l1836:	
  5121                           
  5122                           ;colisiones.c: 30:     return 0;
  5123  0E18  3000               	movlw	0
  5124  0E19                     l250:	
  5125  0E19  0008               	return
  5126  0E1A                     __end_of_checkRight:	
  5127                           
  5128                           	psect	text33
  5129  073C                     __ptext33:	
  5130 ;; *************** function _checkColission_R *****************
  5131 ;; Defined at:
  5132 ;;		line 51 in file "colisiones.c"
  5133 ;; Parameters:    Size  Location     Type
  5134 ;;		None
  5135 ;; Auto vars:     Size  Location     Type
  5136 ;;  i               2   10[COMMON] int 
  5137 ;; Return value:  Size  Location     Type
  5138 ;;                  1    wreg      _Bool 
  5139 ;; Registers used:
  5140 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5141 ;; Tracked objects:
  5142 ;;		On entry : 0/0
  5143 ;;		On exit  : 0/0
  5144 ;;		Unchanged: 0/0
  5145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5146 ;;      Params:         0       0       0       0       0
  5147 ;;      Locals:         2       0       0       0       0
  5148 ;;      Temps:          8       0       0       0       0
  5149 ;;      Totals:        10       0       0       0       0
  5150 ;;Total ram usage:       10 bytes
  5151 ;; Hardware stack levels used:    1
  5152 ;; Hardware stack levels required when called:    1
  5153 ;; This function calls:
  5154 ;;		Nothing
  5155 ;; This function is called by:
  5156 ;;		_leerEntradas
  5157 ;; This function uses a non-reentrant model
  5158 ;;
  5159                           
  5160                           
  5161                           ;psect for function _checkColission_R
  5162  073C                     _checkColission_R:	
  5163  073C                     l1814:	
  5164                           ;incstack = 0
  5165                           ; Regs used in _checkColission_R: [wreg-fsr0h+status,2+status,0]
  5166                           
  5167  073C                     l1816:	
  5168                           
  5169                           ;colisiones.c: 53:     for(i=(con.ficha_Hpos+3); i>=con.ficha_Hpos; i--){
  5170  073C  1283               	bcf	3,5	;RP0=0, select bank0
  5171  073D  1303               	bcf	3,6	;RP1=0, select bank0
  5172  073E  0848               	movf	_con+3,w
  5173  073F  3E03               	addlw	3
  5174  0740  00FA               	movwf	checkColission_R@i
  5175  0741  3000               	movlw	0
  5176  0742  1803               	skipnc
  5177  0743  3001               	movlw	1
  5178  0744  00FB               	movwf	checkColission_R@i+1
  5179  0745  2F6F               	goto	l260
  5180  0746                     l1818:	
  5181                           
  5182                           ;colisiones.c: 54:         if((ficha[i] & fondo[i+1]) != 0){
  5183  0746  087A               	movf	checkColission_R@i,w
  5184  0747  00F2               	movwf	??_checkColission_R
  5185  0748  0772               	addwf	??_checkColission_R,w
  5186  0749  3EA2               	addlw	(low ((_fondo| 0+2)))& (0+255)
  5187  074A  0084               	movwf	4
  5188  074B  1383               	bcf	3,7	;select IRP bank1
  5189  074C  0800               	movf	0,w
  5190  074D  00F3               	movwf	??_checkColission_R+1
  5191  074E  0A84               	incf	4,f
  5192  074F  0800               	movf	0,w
  5193  0750  00F4               	movwf	??_checkColission_R+2
  5194  0751  087A               	movf	checkColission_R@i,w
  5195  0752  00F5               	movwf	??_checkColission_R+3
  5196  0753  0775               	addwf	??_checkColission_R+3,w
  5197  0754  3E57               	addlw	(low (_ficha| 0))& (0+255)
  5198  0755  0084               	movwf	4
  5199  0756  0800               	movf	0,w
  5200  0757  00F6               	movwf	??_checkColission_R+4
  5201  0758  0A84               	incf	4,f
  5202  0759  0800               	movf	0,w
  5203  075A  00F7               	movwf	??_checkColission_R+5
  5204  075B  0873               	movf	??_checkColission_R+1,w
  5205  075C  0576               	andwf	??_checkColission_R+4,w
  5206  075D  00F8               	movwf	??_checkColission_R+6
  5207  075E  0874               	movf	??_checkColission_R+2,w
  5208  075F  0577               	andwf	??_checkColission_R+5,w
  5209  0760  00F9               	movwf	??_checkColission_R+7
  5210  0761  0878               	movf	??_checkColission_R+6,w
  5211  0762  0479               	iorwf	??_checkColission_R+7,w
  5212  0763  1903               	btfsc	3,2
  5213  0764  2F66               	goto	u1171
  5214  0765  2F67               	goto	u1170
  5215  0766                     u1171:	
  5216  0766  2F69               	goto	l1824
  5217  0767                     u1170:	
  5218  0767                     l1820:	
  5219                           
  5220                           ;colisiones.c: 55:             return 1;
  5221  0767  3001               	movlw	1
  5222  0768  2F7F               	goto	l263
  5223  0769                     l1824:	
  5224                           
  5225                           ;colisiones.c: 57:     }
  5226  0769  30FF               	movlw	255
  5227  076A  07FA               	addwf	checkColission_R@i,f
  5228  076B  1803               	skipnc
  5229  076C  0AFB               	incf	checkColission_R@i+1,f
  5230  076D  30FF               	movlw	255
  5231  076E  07FB               	addwf	checkColission_R@i+1,f
  5232  076F                     l260:	
  5233  076F  087B               	movf	checkColission_R@i+1,w
  5234  0770  3A80               	xorlw	128
  5235  0771  00F2               	movwf	??_checkColission_R
  5236  0772  3080               	movlw	128
  5237  0773  0272               	subwf	??_checkColission_R,w
  5238  0774  1D03               	skipz
  5239  0775  2F7A               	goto	u1185
  5240  0776  1283               	bcf	3,5	;RP0=0, select bank0
  5241  0777  1303               	bcf	3,6	;RP1=0, select bank0
  5242  0778  0848               	movf	_con+3,w
  5243  0779  027A               	subwf	checkColission_R@i,w
  5244  077A                     u1185:	
  5245  077A  1803               	skipnc
  5246  077B  2F7D               	goto	u1181
  5247  077C  2F7E               	goto	u1180
  5248  077D                     u1181:	
  5249  077D  2F46               	goto	l1818
  5250  077E                     u1180:	
  5251  077E                     l1826:	
  5252                           
  5253                           ;colisiones.c: 58:     return 0;
  5254  077E  3000               	movlw	0
  5255  077F                     l263:	
  5256  077F  0008               	return
  5257  0780                     __end_of_checkColission_R:	
  5258                           
  5259                           	psect	text34
  5260  0585                     __ptext34:	
  5261 ;; *************** function _checkColission_L *****************
  5262 ;; Defined at:
  5263 ;;		line 61 in file "colisiones.c"
  5264 ;; Parameters:    Size  Location     Type
  5265 ;;		None
  5266 ;; Auto vars:     Size  Location     Type
  5267 ;;  i               2   10[COMMON] int 
  5268 ;; Return value:  Size  Location     Type
  5269 ;;                  1    wreg      _Bool 
  5270 ;; Registers used:
  5271 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5272 ;; Tracked objects:
  5273 ;;		On entry : 0/0
  5274 ;;		On exit  : 0/0
  5275 ;;		Unchanged: 0/0
  5276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5277 ;;      Params:         0       0       0       0       0
  5278 ;;      Locals:         2       0       0       0       0
  5279 ;;      Temps:          8       0       0       0       0
  5280 ;;      Totals:        10       0       0       0       0
  5281 ;;Total ram usage:       10 bytes
  5282 ;; Hardware stack levels used:    1
  5283 ;; Hardware stack levels required when called:    1
  5284 ;; This function calls:
  5285 ;;		Nothing
  5286 ;; This function is called by:
  5287 ;;		_leerEntradas
  5288 ;; This function uses a non-reentrant model
  5289 ;;
  5290                           
  5291                           
  5292                           ;psect for function _checkColission_L
  5293  0585                     _checkColission_L:	
  5294  0585                     l1840:	
  5295                           ;incstack = 0
  5296                           ; Regs used in _checkColission_L: [wreg-fsr0h+status,2+status,0]
  5297                           
  5298  0585                     l1842:	
  5299                           
  5300                           ;colisiones.c: 63:     for(i=con.ficha_Hpos; i<(con.ficha_Hpos+4); i++){
  5301  0585  1283               	bcf	3,5	;RP0=0, select bank0
  5302  0586  1303               	bcf	3,6	;RP1=0, select bank0
  5303  0587  0848               	movf	_con+3,w
  5304  0588  00F2               	movwf	??_checkColission_L
  5305  0589  01F3               	clrf	??_checkColission_L+1
  5306  058A  0872               	movf	??_checkColission_L,w
  5307  058B  00FA               	movwf	checkColission_L@i
  5308  058C  0873               	movf	??_checkColission_L+1,w
  5309  058D  00FB               	movwf	checkColission_L@i+1
  5310  058E  2DB8               	goto	l267
  5311  058F                     l1844:	
  5312                           
  5313                           ;colisiones.c: 64:         if((ficha[i] & fondo[i-1]) != 0){
  5314  058F  087A               	movf	checkColission_L@i,w
  5315  0590  00F2               	movwf	??_checkColission_L
  5316  0591  0772               	addwf	??_checkColission_L,w
  5317  0592  3E9E               	addlw	(low ((_fondo| 0+254)))& (0+255)
  5318  0593  0084               	movwf	4
  5319  0594  1383               	bcf	3,7	;select IRP bank1
  5320  0595  0800               	movf	0,w
  5321  0596  00F3               	movwf	??_checkColission_L+1
  5322  0597  0A84               	incf	4,f
  5323  0598  0800               	movf	0,w
  5324  0599  00F4               	movwf	??_checkColission_L+2
  5325  059A  087A               	movf	checkColission_L@i,w
  5326  059B  00F5               	movwf	??_checkColission_L+3
  5327  059C  0775               	addwf	??_checkColission_L+3,w
  5328  059D  3E57               	addlw	(low (_ficha| 0))& (0+255)
  5329  059E  0084               	movwf	4
  5330  059F  0800               	movf	0,w
  5331  05A0  00F6               	movwf	??_checkColission_L+4
  5332  05A1  0A84               	incf	4,f
  5333  05A2  0800               	movf	0,w
  5334  05A3  00F7               	movwf	??_checkColission_L+5
  5335  05A4  0873               	movf	??_checkColission_L+1,w
  5336  05A5  0576               	andwf	??_checkColission_L+4,w
  5337  05A6  00F8               	movwf	??_checkColission_L+6
  5338  05A7  0874               	movf	??_checkColission_L+2,w
  5339  05A8  0577               	andwf	??_checkColission_L+5,w
  5340  05A9  00F9               	movwf	??_checkColission_L+7
  5341  05AA  0878               	movf	??_checkColission_L+6,w
  5342  05AB  0479               	iorwf	??_checkColission_L+7,w
  5343  05AC  1903               	btfsc	3,2
  5344  05AD  2DAF               	goto	u1201
  5345  05AE  2DB0               	goto	u1200
  5346  05AF                     u1201:	
  5347  05AF  2DB2               	goto	l1850
  5348  05B0                     u1200:	
  5349  05B0                     l1846:	
  5350                           
  5351                           ;colisiones.c: 65:             return 1;
  5352  05B0  3001               	movlw	1
  5353  05B1  2DD0               	goto	l270
  5354  05B2                     l1850:	
  5355                           
  5356                           ;colisiones.c: 67:     }
  5357  05B2  3001               	movlw	1
  5358  05B3  07FA               	addwf	checkColission_L@i,f
  5359  05B4  1803               	skipnc
  5360  05B5  0AFB               	incf	checkColission_L@i+1,f
  5361  05B6  3000               	movlw	0
  5362  05B7  07FB               	addwf	checkColission_L@i+1,f
  5363  05B8                     l267:	
  5364  05B8  1283               	bcf	3,5	;RP0=0, select bank0
  5365  05B9  1303               	bcf	3,6	;RP1=0, select bank0
  5366  05BA  0848               	movf	_con+3,w
  5367  05BB  3E04               	addlw	4
  5368  05BC  00F2               	movwf	??_checkColission_L
  5369  05BD  3000               	movlw	0
  5370  05BE  1803               	skipnc
  5371  05BF  3001               	movlw	1
  5372  05C0  00F3               	movwf	??_checkColission_L+1
  5373  05C1  087B               	movf	checkColission_L@i+1,w
  5374  05C2  3A80               	xorlw	128
  5375  05C3  00F4               	movwf	??_checkColission_L+2
  5376  05C4  0873               	movf	??_checkColission_L+1,w
  5377  05C5  3A80               	xorlw	128
  5378  05C6  0274               	subwf	??_checkColission_L+2,w
  5379  05C7  1D03               	skipz
  5380  05C8  2DCB               	goto	u1215
  5381  05C9  0872               	movf	??_checkColission_L,w
  5382  05CA  027A               	subwf	checkColission_L@i,w
  5383  05CB                     u1215:	
  5384  05CB  1C03               	skipc
  5385  05CC  2DCE               	goto	u1211
  5386  05CD  2DCF               	goto	u1210
  5387  05CE                     u1211:	
  5388  05CE  2D8F               	goto	l1844
  5389  05CF                     u1210:	
  5390  05CF                     l1852:	
  5391                           
  5392                           ;colisiones.c: 68:     return 0;
  5393  05CF  3000               	movlw	0
  5394  05D0                     l270:	
  5395  05D0  0008               	return
  5396  05D1                     __end_of_checkColission_L:	
  5397                           
  5398                           	psect	text35
  5399  02FD                     __ptext35:	
  5400 ;; *************** function _checkColission_D *****************
  5401 ;; Defined at:
  5402 ;;		line 38 in file "colisiones.c"
  5403 ;; Parameters:    Size  Location     Type
  5404 ;;		None
  5405 ;; Auto vars:     Size  Location     Type
  5406 ;;  i               2   25[BANK0 ] int 
  5407 ;; Return value:  Size  Location     Type
  5408 ;;                  1    wreg      void 
  5409 ;; Registers used:
  5410 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5411 ;; Tracked objects:
  5412 ;;		On entry : 0/0
  5413 ;;		On exit  : 0/0
  5414 ;;		Unchanged: 0/0
  5415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5416 ;;      Params:         0       0       0       0       0
  5417 ;;      Locals:         0       2       0       0       0
  5418 ;;      Temps:          0       8       0       0       0
  5419 ;;      Totals:         0      10       0       0       0
  5420 ;;Total ram usage:       10 bytes
  5421 ;; Hardware stack levels used:    1
  5422 ;; Hardware stack levels required when called:    3
  5423 ;; This function calls:
  5424 ;;		___awmod
  5425 ;;		_drawBground
  5426 ;;		_rand
  5427 ;; This function is called by:
  5428 ;;		_checkCount
  5429 ;; This function uses a non-reentrant model
  5430 ;;
  5431                           
  5432                           
  5433                           ;psect for function _checkColission_D
  5434  02FD                     _checkColission_D:	
  5435  02FD                     l2024:	
  5436                           ;incstack = 0
  5437                           ; Regs used in _checkColission_D: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5438                           
  5439  02FD                     l2026:	
  5440                           
  5441                           ;colisiones.c: 40:     for(i=con.ficha_Hpos; i<(con.ficha_Hpos+4); i++){
  5442  02FD  1283               	bcf	3,5	;RP0=0, select bank0
  5443  02FE  1303               	bcf	3,6	;RP1=0, select bank0
  5444  02FF  0848               	movf	_con+3,w
  5445  0300  00B1               	movwf	??_checkColission_D
  5446  0301  01B2               	clrf	??_checkColission_D+1
  5447  0302  0831               	movf	??_checkColission_D,w
  5448  0303  00B9               	movwf	checkColission_D@i
  5449  0304  0832               	movf	??_checkColission_D+1,w
  5450  0305  00BA               	movwf	checkColission_D@i+1
  5451  0306  2B5D               	goto	l253
  5452  0307                     l2028:	
  5453                           
  5454                           ;colisiones.c: 41:         if((ficha[i]>>1 & fondo[i]) != 0){
  5455  0307  1283               	bcf	3,5	;RP0=0, select bank0
  5456  0308  1303               	bcf	3,6	;RP1=0, select bank0
  5457  0309  0839               	movf	checkColission_D@i,w
  5458  030A  00B1               	movwf	??_checkColission_D
  5459  030B  0731               	addwf	??_checkColission_D,w
  5460  030C  3EA0               	addlw	(low (_fondo| 0))& (0+255)
  5461  030D  0084               	movwf	4
  5462  030E  1383               	bcf	3,7	;select IRP bank1
  5463  030F  0800               	movf	0,w
  5464  0310  00B2               	movwf	??_checkColission_D+1
  5465  0311  0A84               	incf	4,f
  5466  0312  0800               	movf	0,w
  5467  0313  00B3               	movwf	??_checkColission_D+2
  5468  0314  0839               	movf	checkColission_D@i,w
  5469  0315  00B4               	movwf	??_checkColission_D+3
  5470  0316  0734               	addwf	??_checkColission_D+3,w
  5471  0317  3E57               	addlw	(low (_ficha| 0))& (0+255)
  5472  0318  0084               	movwf	4
  5473  0319  0800               	movf	0,w
  5474  031A  00B5               	movwf	??_checkColission_D+4
  5475  031B  0A84               	incf	4,f
  5476  031C  0800               	movf	0,w
  5477  031D  00B6               	movwf	??_checkColission_D+5
  5478  031E  1003               	clrc
  5479  031F  0CB6               	rrf	??_checkColission_D+5,f
  5480  0320  0CB5               	rrf	??_checkColission_D+4,f
  5481  0321  0832               	movf	??_checkColission_D+1,w
  5482  0322  0535               	andwf	??_checkColission_D+4,w
  5483  0323  00B7               	movwf	??_checkColission_D+6
  5484  0324  0833               	movf	??_checkColission_D+2,w
  5485  0325  0536               	andwf	??_checkColission_D+5,w
  5486  0326  00B8               	movwf	??_checkColission_D+7
  5487  0327  0837               	movf	??_checkColission_D+6,w
  5488  0328  0438               	iorwf	??_checkColission_D+7,w
  5489  0329  1903               	btfsc	3,2
  5490  032A  2B2C               	goto	u1451
  5491  032B  2B2D               	goto	u1450
  5492  032C                     u1451:	
  5493  032C  2B57               	goto	l2038
  5494  032D                     u1450:	
  5495  032D                     l2030:	
  5496                           
  5497                           ;colisiones.c: 42:             drawBground();
  5498  032D  120A  158A  277E  120A  118A  	fcall	_drawBground
  5499  0332                     l2032:	
  5500                           
  5501                           ;colisiones.c: 43:             con.ficha_Vpos = 16;
  5502  0332  3010               	movlw	16
  5503  0333  1283               	bcf	3,5	;RP0=0, select bank0
  5504  0334  1303               	bcf	3,6	;RP1=0, select bank0
  5505  0335  00B1               	movwf	??_checkColission_D
  5506  0336  0831               	movf	??_checkColission_D,w
  5507  0337  00C7               	movwf	_con+2
  5508  0338                     l2034:	
  5509                           
  5510                           ;colisiones.c: 44:             con.ficha_Hpos = 2;
  5511  0338  3002               	movlw	2
  5512  0339  00B1               	movwf	??_checkColission_D
  5513  033A  0831               	movf	??_checkColission_D,w
  5514  033B  00C8               	movwf	_con+3
  5515  033C                     l2036:	
  5516                           
  5517                           ;colisiones.c: 45:             con.ficha_actual = rand() % 7;
  5518  033C  3007               	movlw	7
  5519  033D  00AB               	movwf	___awmod@divisor
  5520  033E  3000               	movlw	0
  5521  033F  00AC               	movwf	___awmod@divisor+1
  5522  0340  120A  118A  26F5  120A  118A  	fcall	_rand
  5523  0345  1283               	bcf	3,5	;RP0=0, select bank0
  5524  0346  1303               	bcf	3,6	;RP1=0, select bank0
  5525  0347  0825               	movf	?_rand+1,w
  5526  0348  00AE               	movwf	___awmod@dividend+1
  5527  0349  0824               	movf	?_rand,w
  5528  034A  00AD               	movwf	___awmod@dividend
  5529  034B  120A  118A  243C  120A  118A  	fcall	___awmod
  5530  0350  1283               	bcf	3,5	;RP0=0, select bank0
  5531  0351  1303               	bcf	3,6	;RP1=0, select bank0
  5532  0352  082B               	movf	?___awmod,w
  5533  0353  00B1               	movwf	??_checkColission_D
  5534  0354  0831               	movf	??_checkColission_D,w
  5535  0355  00C9               	movwf	_con+4
  5536                           
  5537                           ;colisiones.c: 46:             break;
  5538  0356  2B72               	goto	l257
  5539  0357                     l2038:	
  5540                           
  5541                           ;colisiones.c: 48:     }
  5542  0357  3001               	movlw	1
  5543  0358  07B9               	addwf	checkColission_D@i,f
  5544  0359  1803               	skipnc
  5545  035A  0ABA               	incf	checkColission_D@i+1,f
  5546  035B  3000               	movlw	0
  5547  035C  07BA               	addwf	checkColission_D@i+1,f
  5548  035D                     l253:	
  5549  035D  0848               	movf	_con+3,w
  5550  035E  3E04               	addlw	4
  5551  035F  00B1               	movwf	??_checkColission_D
  5552  0360  3000               	movlw	0
  5553  0361  1803               	skipnc
  5554  0362  3001               	movlw	1
  5555  0363  00B2               	movwf	??_checkColission_D+1
  5556  0364  083A               	movf	checkColission_D@i+1,w
  5557  0365  3A80               	xorlw	128
  5558  0366  00B3               	movwf	??_checkColission_D+2
  5559  0367  0832               	movf	??_checkColission_D+1,w
  5560  0368  3A80               	xorlw	128
  5561  0369  0233               	subwf	??_checkColission_D+2,w
  5562  036A  1D03               	skipz
  5563  036B  2B6E               	goto	u1465
  5564  036C  0831               	movf	??_checkColission_D,w
  5565  036D  0239               	subwf	checkColission_D@i,w
  5566  036E                     u1465:	
  5567  036E  1C03               	skipc
  5568  036F  2B71               	goto	u1461
  5569  0370  2B72               	goto	u1460
  5570  0371                     u1461:	
  5571  0371  2B07               	goto	l2028
  5572  0372                     u1460:	
  5573  0372                     l257:	
  5574  0372  0008               	return
  5575  0373                     __end_of_checkColission_D:	
  5576                           
  5577                           	psect	text36
  5578  0F19                     __ptext36:	
  5579 ;; *************** function _checkBottom *****************
  5580 ;; Defined at:
  5581 ;;		line 17 in file "colisiones.c"
  5582 ;; Parameters:    Size  Location     Type
  5583 ;;		None
  5584 ;; Auto vars:     Size  Location     Type
  5585 ;;		None
  5586 ;; Return value:  Size  Location     Type
  5587 ;;                  1    wreg      void 
  5588 ;; Registers used:
  5589 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5590 ;; Tracked objects:
  5591 ;;		On entry : 0/0
  5592 ;;		On exit  : 0/0
  5593 ;;		Unchanged: 0/0
  5594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5595 ;;      Params:         0       0       0       0       0
  5596 ;;      Locals:         0       0       0       0       0
  5597 ;;      Temps:          0       1       0       0       0
  5598 ;;      Totals:         0       1       0       0       0
  5599 ;;Total ram usage:        1 bytes
  5600 ;; Hardware stack levels used:    1
  5601 ;; Hardware stack levels required when called:    3
  5602 ;; This function calls:
  5603 ;;		___awmod
  5604 ;;		_drawBground
  5605 ;;		_rand
  5606 ;; This function is called by:
  5607 ;;		_checkCount
  5608 ;; This function uses a non-reentrant model
  5609 ;;
  5610                           
  5611                           
  5612                           ;psect for function _checkBottom
  5613  0F19                     _checkBottom:	
  5614  0F19                     l2014:	
  5615                           ;incstack = 0
  5616                           ; Regs used in _checkBottom: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5617                           
  5618                           
  5619                           ;colisiones.c: 18:     if(con.ficha_Vpos==0){
  5620  0F19  1283               	bcf	3,5	;RP0=0, select bank0
  5621  0F1A  1303               	bcf	3,6	;RP1=0, select bank0
  5622  0F1B  0847               	movf	_con+2,w
  5623  0F1C  1D03               	btfss	3,2
  5624  0F1D  2F1F               	goto	u1441
  5625  0F1E  2F20               	goto	u1440
  5626  0F1F                     u1441:	
  5627  0F1F  2F49               	goto	l246
  5628  0F20                     u1440:	
  5629  0F20                     l2016:	
  5630                           
  5631                           ;colisiones.c: 19:         drawBground();
  5632  0F20  120A  158A  277E  120A  158A  	fcall	_drawBground
  5633  0F25                     l2018:	
  5634                           
  5635                           ;colisiones.c: 20:         con.ficha_Vpos = 16;
  5636  0F25  3010               	movlw	16
  5637  0F26  1283               	bcf	3,5	;RP0=0, select bank0
  5638  0F27  1303               	bcf	3,6	;RP1=0, select bank0
  5639  0F28  00B1               	movwf	??_checkBottom
  5640  0F29  0831               	movf	??_checkBottom,w
  5641  0F2A  00C7               	movwf	_con+2
  5642  0F2B                     l2020:	
  5643                           
  5644                           ;colisiones.c: 21:         con.ficha_Hpos = 2;
  5645  0F2B  3002               	movlw	2
  5646  0F2C  00B1               	movwf	??_checkBottom
  5647  0F2D  0831               	movf	??_checkBottom,w
  5648  0F2E  00C8               	movwf	_con+3
  5649  0F2F                     l2022:	
  5650                           
  5651                           ;colisiones.c: 22:         con.ficha_actual = rand() % 7;
  5652  0F2F  3007               	movlw	7
  5653  0F30  00AB               	movwf	___awmod@divisor
  5654  0F31  3000               	movlw	0
  5655  0F32  00AC               	movwf	___awmod@divisor+1
  5656  0F33  120A  118A  26F5  120A  158A  	fcall	_rand
  5657  0F38  1283               	bcf	3,5	;RP0=0, select bank0
  5658  0F39  1303               	bcf	3,6	;RP1=0, select bank0
  5659  0F3A  0825               	movf	?_rand+1,w
  5660  0F3B  00AE               	movwf	___awmod@dividend+1
  5661  0F3C  0824               	movf	?_rand,w
  5662  0F3D  00AD               	movwf	___awmod@dividend
  5663  0F3E  120A  118A  243C  120A  158A  	fcall	___awmod
  5664  0F43  1283               	bcf	3,5	;RP0=0, select bank0
  5665  0F44  1303               	bcf	3,6	;RP1=0, select bank0
  5666  0F45  082B               	movf	?___awmod,w
  5667  0F46  00B1               	movwf	??_checkBottom
  5668  0F47  0831               	movf	??_checkBottom,w
  5669  0F48  00C9               	movwf	_con+4
  5670  0F49                     l246:	
  5671  0F49  0008               	return
  5672  0F4A                     __end_of_checkBottom:	
  5673                           
  5674                           	psect	text37
  5675  06F5                     __ptext37:	
  5676 ;; *************** function _rand *****************
  5677 ;; Defined at:
  5678 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  5679 ;; Parameters:    Size  Location     Type
  5680 ;;		None
  5681 ;; Auto vars:     Size  Location     Type
  5682 ;;		None
  5683 ;; Return value:  Size  Location     Type
  5684 ;;                  2    4[BANK0 ] int 
  5685 ;; Registers used:
  5686 ;;		wreg, status,2, status,0, pclath, cstack
  5687 ;; Tracked objects:
  5688 ;;		On entry : 0/0
  5689 ;;		On exit  : 0/0
  5690 ;;		Unchanged: 0/0
  5691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5692 ;;      Params:         0       2       0       0       0
  5693 ;;      Locals:         0       0       0       0       0
  5694 ;;      Temps:          0       5       0       0       0
  5695 ;;      Totals:         0       7       0       0       0
  5696 ;;Total ram usage:        7 bytes
  5697 ;; Hardware stack levels used:    1
  5698 ;; Hardware stack levels required when called:    2
  5699 ;; This function calls:
  5700 ;;		___lmul
  5701 ;; This function is called by:
  5702 ;;		_main
  5703 ;;		_checkBottom
  5704 ;;		_checkColission_D
  5705 ;;		_perdio
  5706 ;; This function uses a non-reentrant model
  5707 ;;
  5708                           
  5709                           
  5710                           ;psect for function _rand
  5711  06F5                     _rand:	
  5712  06F5                     l1718:	
  5713                           ;incstack = 0
  5714                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  5715                           
  5716  06F5  1283               	bcf	3,5	;RP0=0, select bank0
  5717  06F6  1303               	bcf	3,6	;RP1=0, select bank0
  5718  06F7  086A               	movf	_randx+3,w
  5719  06F8  00F5               	movwf	___lmul@multiplier+3
  5720  06F9  0869               	movf	_randx+2,w
  5721  06FA  00F4               	movwf	___lmul@multiplier+2
  5722  06FB  0868               	movf	_randx+1,w
  5723  06FC  00F3               	movwf	___lmul@multiplier+1
  5724  06FD  0867               	movf	_randx,w
  5725  06FE  00F2               	movwf	___lmul@multiplier
  5726  06FF  3041               	movlw	65
  5727  0700  00F9               	movwf	___lmul@multiplicand+3
  5728  0701  30C6               	movlw	198
  5729  0702  00F8               	movwf	___lmul@multiplicand+2
  5730  0703  304E               	movlw	78
  5731  0704  00F7               	movwf	___lmul@multiplicand+1
  5732  0705  306D               	movlw	109
  5733  0706  00F6               	movwf	___lmul@multiplicand
  5734  0707  120A  118A  25D1  120A  118A  	fcall	___lmul
  5735  070C  0875               	movf	?___lmul+3,w
  5736  070D  1283               	bcf	3,5	;RP0=0, select bank0
  5737  070E  1303               	bcf	3,6	;RP1=0, select bank0
  5738  070F  00EA               	movwf	_randx+3
  5739  0710  0874               	movf	?___lmul+2,w
  5740  0711  00E9               	movwf	_randx+2
  5741  0712  0873               	movf	?___lmul+1,w
  5742  0713  00E8               	movwf	_randx+1
  5743  0714  0872               	movf	?___lmul,w
  5744  0715  00E7               	movwf	_randx
  5745  0716                     l1720:	
  5746  0716  3039               	movlw	57
  5747  0717  07E7               	addwf	_randx,f
  5748  0718  3030               	movlw	48
  5749  0719  1803               	skipnc
  5750  071A  3031               	movlw	49
  5751  071B  07E8               	addwf	_randx+1,f
  5752  071C  3000               	movlw	0
  5753  071D  1803               	skipnc
  5754  071E  3001               	movlw	1
  5755  071F  07E9               	addwf	_randx+2,f
  5756  0720  3000               	movlw	0
  5757  0721  1803               	skipnc
  5758  0722  3001               	movlw	1
  5759  0723  07EA               	addwf	_randx+3,f
  5760  0724                     l1722:	
  5761  0724  0867               	movf	_randx,w
  5762  0725  00A6               	movwf	??_rand
  5763  0726  0868               	movf	_randx+1,w
  5764  0727  00A7               	movwf	??_rand+1
  5765  0728  0869               	movf	_randx+2,w
  5766  0729  00A8               	movwf	??_rand+2
  5767  072A  086A               	movf	_randx+3,w
  5768  072B  00A9               	movwf	??_rand+3
  5769  072C  3010               	movlw	16
  5770  072D  00AA               	movwf	??_rand+4
  5771  072E                     u955:	
  5772  072E  0D29               	rlf	??_rand+3,w
  5773  072F  0CA9               	rrf	??_rand+3,f
  5774  0730  0CA8               	rrf	??_rand+2,f
  5775  0731  0CA7               	rrf	??_rand+1,f
  5776  0732  0CA6               	rrf	??_rand,f
  5777  0733                     u950:	
  5778  0733  0BAA               	decfsz	??_rand+4,f
  5779  0734  2F2E               	goto	u955
  5780  0735  30FF               	movlw	255
  5781  0736  0526               	andwf	??_rand,w
  5782  0737  00A4               	movwf	?_rand
  5783  0738  307F               	movlw	127
  5784  0739  0527               	andwf	??_rand+1,w
  5785  073A  00A5               	movwf	?_rand+1
  5786  073B                     l930:	
  5787  073B  0008               	return
  5788  073C                     __end_of_rand:	
  5789                           
  5790                           	psect	text38
  5791  05D1                     __ptext38:	
  5792 ;; *************** function ___lmul *****************
  5793 ;; Defined at:
  5794 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  5795 ;; Parameters:    Size  Location     Type
  5796 ;;  multiplier      4    2[COMMON] unsigned long 
  5797 ;;  multiplicand    4    6[COMMON] unsigned long 
  5798 ;; Auto vars:     Size  Location     Type
  5799 ;;  product         4    0[BANK0 ] unsigned long 
  5800 ;; Return value:  Size  Location     Type
  5801 ;;                  4    2[COMMON] unsigned long 
  5802 ;; Registers used:
  5803 ;;		wreg, status,2, status,0
  5804 ;; Tracked objects:
  5805 ;;		On entry : 0/0
  5806 ;;		On exit  : 0/0
  5807 ;;		Unchanged: 0/0
  5808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5809 ;;      Params:         8       0       0       0       0
  5810 ;;      Locals:         0       4       0       0       0
  5811 ;;      Temps:          1       0       0       0       0
  5812 ;;      Totals:         9       4       0       0       0
  5813 ;;Total ram usage:       13 bytes
  5814 ;; Hardware stack levels used:    1
  5815 ;; Hardware stack levels required when called:    1
  5816 ;; This function calls:
  5817 ;;		Nothing
  5818 ;; This function is called by:
  5819 ;;		_rand
  5820 ;; This function uses a non-reentrant model
  5821 ;;
  5822                           
  5823                           
  5824                           ;psect for function ___lmul
  5825  05D1                     ___lmul:	
  5826  05D1                     l1704:	
  5827                           ;incstack = 0
  5828                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  5829                           
  5830  05D1  3000               	movlw	0
  5831  05D2  1283               	bcf	3,5	;RP0=0, select bank0
  5832  05D3  1303               	bcf	3,6	;RP1=0, select bank0
  5833  05D4  00A3               	movwf	___lmul@product+3
  5834  05D5  3000               	movlw	0
  5835  05D6  00A2               	movwf	___lmul@product+2
  5836  05D7  3000               	movlw	0
  5837  05D8  00A1               	movwf	___lmul@product+1
  5838  05D9  3000               	movlw	0
  5839  05DA  00A0               	movwf	___lmul@product
  5840  05DB                     l1706:	
  5841  05DB  1C72               	btfss	___lmul@multiplier,0
  5842  05DC  2DDE               	goto	u901
  5843  05DD  2DDF               	goto	u900
  5844  05DE                     u901:	
  5845  05DE  2DF8               	goto	l1710
  5846  05DF                     u900:	
  5847  05DF                     l1708:	
  5848  05DF  0876               	movf	___lmul@multiplicand,w
  5849  05E0  1283               	bcf	3,5	;RP0=0, select bank0
  5850  05E1  1303               	bcf	3,6	;RP1=0, select bank0
  5851  05E2  07A0               	addwf	___lmul@product,f
  5852  05E3  0877               	movf	___lmul@multiplicand+1,w
  5853  05E4  1103               	clrz
  5854  05E5  1803               	skipnc
  5855  05E6  3E01               	addlw	1
  5856  05E7  1903               	skipnz
  5857  05E8  2DEA               	goto	u911
  5858  05E9  07A1               	addwf	___lmul@product+1,f
  5859  05EA                     u911:	
  5860  05EA  0878               	movf	___lmul@multiplicand+2,w
  5861  05EB  1103               	clrz
  5862  05EC  1803               	skipnc
  5863  05ED  3E01               	addlw	1
  5864  05EE  1903               	skipnz
  5865  05EF  2DF1               	goto	u912
  5866  05F0  07A2               	addwf	___lmul@product+2,f
  5867  05F1                     u912:	
  5868  05F1  0879               	movf	___lmul@multiplicand+3,w
  5869  05F2  1103               	clrz
  5870  05F3  1803               	skipnc
  5871  05F4  3E01               	addlw	1
  5872  05F5  1903               	skipnz
  5873  05F6  2DF8               	goto	u913
  5874  05F7  07A3               	addwf	___lmul@product+3,f
  5875  05F8                     u913:	
  5876  05F8                     l1710:	
  5877  05F8  3001               	movlw	1
  5878  05F9  00FA               	movwf	??___lmul
  5879  05FA                     u925:	
  5880  05FA  1003               	clrc
  5881  05FB  0DF6               	rlf	___lmul@multiplicand,f
  5882  05FC  0DF7               	rlf	___lmul@multiplicand+1,f
  5883  05FD  0DF8               	rlf	___lmul@multiplicand+2,f
  5884  05FE  0DF9               	rlf	___lmul@multiplicand+3,f
  5885  05FF  0BFA               	decfsz	??___lmul,f
  5886  0600  2DFA               	goto	u925
  5887  0601                     l1712:	
  5888  0601  3001               	movlw	1
  5889  0602                     u935:	
  5890  0602  1003               	clrc
  5891  0603  0CF5               	rrf	___lmul@multiplier+3,f
  5892  0604  0CF4               	rrf	___lmul@multiplier+2,f
  5893  0605  0CF3               	rrf	___lmul@multiplier+1,f
  5894  0606  0CF2               	rrf	___lmul@multiplier,f
  5895  0607  3EFF               	addlw	-1
  5896  0608  1D03               	skipz
  5897  0609  2E02               	goto	u935
  5898  060A  0875               	movf	___lmul@multiplier+3,w
  5899  060B  0474               	iorwf	___lmul@multiplier+2,w
  5900  060C  0473               	iorwf	___lmul@multiplier+1,w
  5901  060D  0472               	iorwf	___lmul@multiplier,w
  5902  060E  1D03               	skipz
  5903  060F  2E11               	goto	u941
  5904  0610  2E12               	goto	u940
  5905  0611                     u941:	
  5906  0611  2DDB               	goto	l1706
  5907  0612                     u940:	
  5908  0612                     l1714:	
  5909  0612  1283               	bcf	3,5	;RP0=0, select bank0
  5910  0613  1303               	bcf	3,6	;RP1=0, select bank0
  5911  0614  0823               	movf	___lmul@product+3,w
  5912  0615  00F5               	movwf	?___lmul+3
  5913  0616  0822               	movf	___lmul@product+2,w
  5914  0617  00F4               	movwf	?___lmul+2
  5915  0618  0821               	movf	___lmul@product+1,w
  5916  0619  00F3               	movwf	?___lmul+1
  5917  061A  0820               	movf	___lmul@product,w
  5918  061B  00F2               	movwf	?___lmul
  5919  061C                     l488:	
  5920  061C  0008               	return
  5921  061D                     __end_of___lmul:	
  5922                           
  5923                           	psect	text39
  5924  0F7E                     __ptext39:	
  5925 ;; *************** function _drawBground *****************
  5926 ;; Defined at:
  5927 ;;		line 46 in file "screen.c"
  5928 ;; Parameters:    Size  Location     Type
  5929 ;;		None
  5930 ;; Auto vars:     Size  Location     Type
  5931 ;;  i               2    0[BANK0 ] int 
  5932 ;; Return value:  Size  Location     Type
  5933 ;;                  1    wreg      void 
  5934 ;; Registers used:
  5935 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  5936 ;; Tracked objects:
  5937 ;;		On entry : 0/0
  5938 ;;		On exit  : 0/0
  5939 ;;		Unchanged: 0/0
  5940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5941 ;;      Params:         0       0       0       0       0
  5942 ;;      Locals:         0       2       0       0       0
  5943 ;;      Temps:          9       0       0       0       0
  5944 ;;      Totals:         9       2       0       0       0
  5945 ;;Total ram usage:       11 bytes
  5946 ;; Hardware stack levels used:    1
  5947 ;; Hardware stack levels required when called:    1
  5948 ;; This function calls:
  5949 ;;		Nothing
  5950 ;; This function is called by:
  5951 ;;		_checkBottom
  5952 ;;		_checkColission_D
  5953 ;; This function uses a non-reentrant model
  5954 ;;
  5955                           
  5956                           
  5957                           ;psect for function _drawBground
  5958  0F7E                     _drawBground:	
  5959  0F7E                     l1864:	
  5960                           ;incstack = 0
  5961                           ; Regs used in _drawBground: [wreg-fsr0h+status,2+status,0+btemp+1]
  5962                           
  5963                           
  5964                           ;screen.c: 47:     int i=0;
  5965  0F7E  1283               	bcf	3,5	;RP0=0, select bank0
  5966  0F7F  1303               	bcf	3,6	;RP1=0, select bank0
  5967  0F80  01A0               	clrf	drawBground@i
  5968  0F81  01A1               	clrf	drawBground@i+1
  5969                           
  5970                           ;screen.c: 48:     for(i=0; i<8; i++){
  5971  0F82  01A0               	clrf	drawBground@i
  5972  0F83  01A1               	clrf	drawBground@i+1
  5973  0F84                     l1870:	
  5974                           
  5975                           ;screen.c: 49:         fondo[i] = fondo[i] | ficha[i];
  5976  0F84  1283               	bcf	3,5	;RP0=0, select bank0
  5977  0F85  1303               	bcf	3,6	;RP1=0, select bank0
  5978  0F86  0820               	movf	drawBground@i,w
  5979  0F87  00F2               	movwf	??_drawBground
  5980  0F88  0772               	addwf	??_drawBground,w
  5981  0F89  3E57               	addlw	(low (_ficha| 0))& (0+255)
  5982  0F8A  0084               	movwf	4
  5983  0F8B  1383               	bcf	3,7	;select IRP bank0
  5984  0F8C  0800               	movf	0,w
  5985  0F8D  00F3               	movwf	??_drawBground+1
  5986  0F8E  0A84               	incf	4,f
  5987  0F8F  0800               	movf	0,w
  5988  0F90  00F4               	movwf	??_drawBground+2
  5989  0F91  0820               	movf	drawBground@i,w
  5990  0F92  00F5               	movwf	??_drawBground+3
  5991  0F93  0775               	addwf	??_drawBground+3,w
  5992  0F94  3EA0               	addlw	(low (_fondo| 0))& (0+255)
  5993  0F95  0084               	movwf	4
  5994  0F96  0800               	movf	0,w
  5995  0F97  00F6               	movwf	??_drawBground+4
  5996  0F98  0A84               	incf	4,f
  5997  0F99  0800               	movf	0,w
  5998  0F9A  00F7               	movwf	??_drawBground+5
  5999  0F9B  0873               	movf	??_drawBground+1,w
  6000  0F9C  0476               	iorwf	??_drawBground+4,w
  6001  0F9D  00F8               	movwf	??_drawBground+6
  6002  0F9E  0874               	movf	??_drawBground+2,w
  6003  0F9F  0477               	iorwf	??_drawBground+5,w
  6004  0FA0  00F9               	movwf	??_drawBground+7
  6005  0FA1  0820               	movf	drawBground@i,w
  6006  0FA2  00FA               	movwf	??_drawBground+8
  6007  0FA3  077A               	addwf	??_drawBground+8,w
  6008  0FA4  3EA0               	addlw	(low (_fondo| 0))& (0+255)
  6009  0FA5  0084               	movwf	4
  6010  0FA6  0878               	movf	??_drawBground+6,w
  6011  0FA7  0080               	movwf	0
  6012  0FA8  0A84               	incf	4,f
  6013  0FA9  0879               	movf	??_drawBground+7,w
  6014  0FAA  0080               	movwf	0
  6015  0FAB                     l1872:	
  6016                           
  6017                           ;screen.c: 50:     }
  6018  0FAB  3001               	movlw	1
  6019  0FAC  07A0               	addwf	drawBground@i,f
  6020  0FAD  1803               	skipnc
  6021  0FAE  0AA1               	incf	drawBground@i+1,f
  6022  0FAF  3000               	movlw	0
  6023  0FB0  07A1               	addwf	drawBground@i+1,f
  6024  0FB1                     l1874:	
  6025  0FB1  0821               	movf	drawBground@i+1,w
  6026  0FB2  3A80               	xorlw	128
  6027  0FB3  00FF               	movwf	btemp+1
  6028  0FB4  3080               	movlw	128
  6029  0FB5  027F               	subwf	btemp+1,w
  6030  0FB6  1D03               	skipz
  6031  0FB7  2FBA               	goto	u1225
  6032  0FB8  3008               	movlw	8
  6033  0FB9  0220               	subwf	drawBground@i,w
  6034  0FBA                     u1225:	
  6035  0FBA  1C03               	skipc
  6036  0FBB  2FBD               	goto	u1221
  6037  0FBC  2FBE               	goto	u1220
  6038  0FBD                     u1221:	
  6039  0FBD  2F84               	goto	l1870
  6040  0FBE                     u1220:	
  6041  0FBE                     l223:	
  6042  0FBE  0008               	return
  6043  0FBF                     __end_of_drawBground:	
  6044                           
  6045                           	psect	text40
  6046  043C                     __ptext40:	
  6047 ;; *************** function ___awmod *****************
  6048 ;; Defined at:
  6049 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  6050 ;; Parameters:    Size  Location     Type
  6051 ;;  divisor         2   11[BANK0 ] int 
  6052 ;;  dividend        2   13[BANK0 ] int 
  6053 ;; Auto vars:     Size  Location     Type
  6054 ;;  sign            1   16[BANK0 ] unsigned char 
  6055 ;;  counter         1   15[BANK0 ] unsigned char 
  6056 ;; Return value:  Size  Location     Type
  6057 ;;                  2   11[BANK0 ] int 
  6058 ;; Registers used:
  6059 ;;		wreg, status,2, status,0
  6060 ;; Tracked objects:
  6061 ;;		On entry : 0/0
  6062 ;;		On exit  : 0/0
  6063 ;;		Unchanged: 0/0
  6064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6065 ;;      Params:         0       4       0       0       0
  6066 ;;      Locals:         0       2       0       0       0
  6067 ;;      Temps:          1       0       0       0       0
  6068 ;;      Totals:         1       6       0       0       0
  6069 ;;Total ram usage:        7 bytes
  6070 ;; Hardware stack levels used:    1
  6071 ;; Hardware stack levels required when called:    1
  6072 ;; This function calls:
  6073 ;;		Nothing
  6074 ;; This function is called by:
  6075 ;;		_main
  6076 ;;		_checkBottom
  6077 ;;		_checkColission_D
  6078 ;;		_perdio
  6079 ;; This function uses a non-reentrant model
  6080 ;;
  6081                           
  6082                           
  6083                           ;psect for function ___awmod
  6084  043C                     ___awmod:	
  6085  043C                     l1882:	
  6086                           ;incstack = 0
  6087                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6088                           
  6089  043C  1283               	bcf	3,5	;RP0=0, select bank0
  6090  043D  1303               	bcf	3,6	;RP1=0, select bank0
  6091  043E  01B0               	clrf	___awmod@sign
  6092  043F                     l1884:	
  6093  043F  1FAE               	btfss	___awmod@dividend+1,7
  6094  0440  2C42               	goto	u1291
  6095  0441  2C43               	goto	u1290
  6096  0442                     u1291:	
  6097  0442  2C4A               	goto	l1890
  6098  0443                     u1290:	
  6099  0443                     l1886:	
  6100  0443  09AD               	comf	___awmod@dividend,f
  6101  0444  09AE               	comf	___awmod@dividend+1,f
  6102  0445  0AAD               	incf	___awmod@dividend,f
  6103  0446  1903               	skipnz
  6104  0447  0AAE               	incf	___awmod@dividend+1,f
  6105  0448                     l1888:	
  6106  0448  01B0               	clrf	___awmod@sign
  6107  0449  0AB0               	incf	___awmod@sign,f
  6108  044A                     l1890:	
  6109  044A  1FAC               	btfss	___awmod@divisor+1,7
  6110  044B  2C4D               	goto	u1301
  6111  044C  2C4E               	goto	u1300
  6112  044D                     u1301:	
  6113  044D  2C53               	goto	l1894
  6114  044E                     u1300:	
  6115  044E                     l1892:	
  6116  044E  09AB               	comf	___awmod@divisor,f
  6117  044F  09AC               	comf	___awmod@divisor+1,f
  6118  0450  0AAB               	incf	___awmod@divisor,f
  6119  0451  1903               	skipnz
  6120  0452  0AAC               	incf	___awmod@divisor+1,f
  6121  0453                     l1894:	
  6122  0453  082B               	movf	___awmod@divisor,w
  6123  0454  042C               	iorwf	___awmod@divisor+1,w
  6124  0455  1903               	btfsc	3,2
  6125  0456  2C58               	goto	u1311
  6126  0457  2C59               	goto	u1310
  6127  0458                     u1311:	
  6128  0458  2C88               	goto	l1912
  6129  0459                     u1310:	
  6130  0459                     l1896:	
  6131  0459  01AF               	clrf	___awmod@counter
  6132  045A  0AAF               	incf	___awmod@counter,f
  6133  045B  2C67               	goto	l1902
  6134  045C                     l1898:	
  6135  045C  3001               	movlw	1
  6136  045D                     u1325:	
  6137  045D  1003               	clrc
  6138  045E  0DAB               	rlf	___awmod@divisor,f
  6139  045F  0DAC               	rlf	___awmod@divisor+1,f
  6140  0460  3EFF               	addlw	-1
  6141  0461  1D03               	skipz
  6142  0462  2C5D               	goto	u1325
  6143  0463                     l1900:	
  6144  0463  3001               	movlw	1
  6145  0464  00FB               	movwf	??___awmod
  6146  0465  087B               	movf	??___awmod,w
  6147  0466  07AF               	addwf	___awmod@counter,f
  6148  0467                     l1902:	
  6149  0467  1FAC               	btfss	___awmod@divisor+1,7
  6150  0468  2C6A               	goto	u1331
  6151  0469  2C6B               	goto	u1330
  6152  046A                     u1331:	
  6153  046A  2C5C               	goto	l1898
  6154  046B                     u1330:	
  6155  046B                     l1904:	
  6156  046B  082C               	movf	___awmod@divisor+1,w
  6157  046C  022E               	subwf	___awmod@dividend+1,w
  6158  046D  1D03               	skipz
  6159  046E  2C71               	goto	u1345
  6160  046F  082B               	movf	___awmod@divisor,w
  6161  0470  022D               	subwf	___awmod@dividend,w
  6162  0471                     u1345:	
  6163  0471  1C03               	skipc
  6164  0472  2C74               	goto	u1341
  6165  0473  2C75               	goto	u1340
  6166  0474                     u1341:	
  6167  0474  2C7B               	goto	l1908
  6168  0475                     u1340:	
  6169  0475                     l1906:	
  6170  0475  082B               	movf	___awmod@divisor,w
  6171  0476  02AD               	subwf	___awmod@dividend,f
  6172  0477  082C               	movf	___awmod@divisor+1,w
  6173  0478  1C03               	skipc
  6174  0479  03AE               	decf	___awmod@dividend+1,f
  6175  047A  02AE               	subwf	___awmod@dividend+1,f
  6176  047B                     l1908:	
  6177  047B  3001               	movlw	1
  6178  047C                     u1355:	
  6179  047C  1003               	clrc
  6180  047D  0CAC               	rrf	___awmod@divisor+1,f
  6181  047E  0CAB               	rrf	___awmod@divisor,f
  6182  047F  3EFF               	addlw	-1
  6183  0480  1D03               	skipz
  6184  0481  2C7C               	goto	u1355
  6185  0482                     l1910:	
  6186  0482  3001               	movlw	1
  6187  0483  02AF               	subwf	___awmod@counter,f
  6188  0484  1D03               	btfss	3,2
  6189  0485  2C87               	goto	u1361
  6190  0486  2C88               	goto	u1360
  6191  0487                     u1361:	
  6192  0487  2C6B               	goto	l1904
  6193  0488                     u1360:	
  6194  0488                     l1912:	
  6195  0488  0830               	movf	___awmod@sign,w
  6196  0489  1903               	btfsc	3,2
  6197  048A  2C8C               	goto	u1371
  6198  048B  2C8D               	goto	u1370
  6199  048C                     u1371:	
  6200  048C  2C92               	goto	l1916
  6201  048D                     u1370:	
  6202  048D                     l1914:	
  6203  048D  09AD               	comf	___awmod@dividend,f
  6204  048E  09AE               	comf	___awmod@dividend+1,f
  6205  048F  0AAD               	incf	___awmod@dividend,f
  6206  0490  1903               	skipnz
  6207  0491  0AAE               	incf	___awmod@dividend+1,f
  6208  0492                     l1916:	
  6209  0492  082E               	movf	___awmod@dividend+1,w
  6210  0493  00AC               	movwf	?___awmod+1
  6211  0494  082D               	movf	___awmod@dividend,w
  6212  0495  00AB               	movwf	?___awmod
  6213  0496                     l640:	
  6214  0496  0008               	return
  6215  0497                     __end_of___awmod:	
  6216                           
  6217                           	psect	text41
  6218  0F4A                     __ptext41:	
  6219 ;; *************** function _Timer0_ISR *****************
  6220 ;; Defined at:
  6221 ;;		line 163 in file "mainsource.c"
  6222 ;; Parameters:    Size  Location     Type
  6223 ;;		None
  6224 ;; Auto vars:     Size  Location     Type
  6225 ;;		None
  6226 ;; Return value:  Size  Location     Type
  6227 ;;                  1    wreg      void 
  6228 ;; Registers used:
  6229 ;;		wreg, status,2
  6230 ;; Tracked objects:
  6231 ;;		On entry : 0/0
  6232 ;;		On exit  : 0/0
  6233 ;;		Unchanged: 0/0
  6234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6235 ;;      Params:         0       0       0       0       0
  6236 ;;      Locals:         0       0       0       0       0
  6237 ;;      Temps:          2       0       0       0       0
  6238 ;;      Totals:         2       0       0       0       0
  6239 ;;Total ram usage:        2 bytes
  6240 ;; Hardware stack levels used:    1
  6241 ;; This function calls:
  6242 ;;		Nothing
  6243 ;; This function is called by:
  6244 ;;		Interrupt level 1
  6245 ;; This function uses a non-reentrant model
  6246 ;;
  6247                           
  6248                           
  6249                           ;psect for function _Timer0_ISR
  6250  0F4A                     _Timer0_ISR:	
  6251  0F4A                     i1l2338:	
  6252                           
  6253                           ;mainsource.c: 164:     if(INTCONbits.TMR0IF){
  6254  0F4A  1D0B               	btfss	11,2	;volatile
  6255  0F4B  2F4D               	goto	u170_21
  6256  0F4C  2F4E               	goto	u170_20
  6257  0F4D                     u170_21:	
  6258  0F4D  2F61               	goto	i1l2346
  6259  0F4E                     u170_20:	
  6260  0F4E                     i1l2340:	
  6261                           
  6262                           ;mainsource.c: 165:         INTCONbits.TMR0IF=0;
  6263  0F4E  110B               	bcf	11,2	;volatile
  6264  0F4F                     i1l2342:	
  6265                           
  6266                           ;mainsource.c: 166:         timerCount ++;
  6267  0F4F  3001               	movlw	1
  6268  0F50  1283               	bcf	3,5	;RP0=0, select bank0
  6269  0F51  1303               	bcf	3,6	;RP1=0, select bank0
  6270  0F52  07D3               	addwf	_timerCount,f
  6271  0F53  3000               	movlw	0
  6272  0F54  1803               	skipnc
  6273  0F55  3001               	movlw	1
  6274  0F56  07D4               	addwf	_timerCount+1,f
  6275  0F57  3000               	movlw	0
  6276  0F58  1803               	skipnc
  6277  0F59  3001               	movlw	1
  6278  0F5A  07D5               	addwf	_timerCount+2,f
  6279  0F5B  3000               	movlw	0
  6280  0F5C  1803               	skipnc
  6281  0F5D  3001               	movlw	1
  6282  0F5E  07D6               	addwf	_timerCount+3,f
  6283  0F5F                     i1l2344:	
  6284                           
  6285                           ;mainsource.c: 167:         con.check_count = 1;
  6286  0F5F  01CC               	clrf	_con+7
  6287  0F60  0ACC               	incf	_con+7,f
  6288  0F61                     i1l2346:	
  6289                           
  6290                           ;mainsource.c: 170:     if(PORTBbits.RB5 == 0){
  6291  0F61  1283               	bcf	3,5	;RP0=0, select bank0
  6292  0F62  1303               	bcf	3,6	;RP1=0, select bank0
  6293  0F63  1A86               	btfsc	6,5	;volatile
  6294  0F64  2F66               	goto	u171_21
  6295  0F65  2F67               	goto	u171_20
  6296  0F66                     u171_21:	
  6297  0F66  2F6A               	goto	i1l2352
  6298  0F67                     u171_20:	
  6299  0F67                     i1l2348:	
  6300                           
  6301                           ;mainsource.c: 171:         con.derecha = 1;
  6302  0F67  01CA               	clrf	_con+5
  6303  0F68  0ACA               	incf	_con+5,f
  6304  0F69                     i1l2350:	
  6305                           
  6306                           ;mainsource.c: 172:         con.izquierda = 0;
  6307  0F69  01CB               	clrf	_con+6
  6308  0F6A                     i1l2352:	
  6309                           
  6310                           ;mainsource.c: 174:     if(PORTBbits.RB4 == 0){
  6311  0F6A  1A06               	btfsc	6,4	;volatile
  6312  0F6B  2F6D               	goto	u172_21
  6313  0F6C  2F6E               	goto	u172_20
  6314  0F6D                     u172_21:	
  6315  0F6D  2F71               	goto	i1l2358
  6316  0F6E                     u172_20:	
  6317  0F6E                     i1l2354:	
  6318                           
  6319                           ;mainsource.c: 175:         con.derecha = 0;
  6320  0F6E  01CA               	clrf	_con+5
  6321  0F6F                     i1l2356:	
  6322                           
  6323                           ;mainsource.c: 176:         con.izquierda = 1;
  6324  0F6F  01CB               	clrf	_con+6
  6325  0F70  0ACB               	incf	_con+6,f
  6326  0F71                     i1l2358:	
  6327                           
  6328                           ;mainsource.c: 178:     if(PORTBbits.RB3== 0){
  6329  0F71  1986               	btfsc	6,3	;volatile
  6330  0F72  2F74               	goto	u173_21
  6331  0F73  2F75               	goto	u173_20
  6332  0F74                     u173_21:	
  6333  0F74  2F77               	goto	i1l155
  6334  0F75                     u173_20:	
  6335  0F75                     i1l2360:	
  6336                           
  6337                           ;mainsource.c: 179:         con.girar = 1;
  6338  0F75  01C5               	clrf	_con
  6339  0F76  0AC5               	incf	_con,f
  6340  0F77                     i1l155:	
  6341  0F77  0871               	movf	??_Timer0_ISR+1,w
  6342  0F78  008A               	movwf	10
  6343  0F79  0E70               	swapf	??_Timer0_ISR^(0+4294967168),w
  6344  0F7A  0083               	movwf	3
  6345  0F7B  0EFE               	swapf	btemp,f
  6346  0F7C  0E7E               	swapf	btemp,w
  6347  0F7D  0009               	retfie
  6348  0F7E                     __end_of_Timer0_ISR:	
  6349  007E                     btemp	set	126	;btemp
  6350  007E                     wtemp0	set	126
  6351                           
  6352                           	psect	intentry
  6353  0004                     __pintentry:	
  6354                           ;incstack = 0
  6355                           ; Regs used in _Timer0_ISR: [wreg+status,2]
  6356                           
  6357  0004                     interrupt_function:	
  6358  007E                     saved_w	set	btemp
  6359  0004  00FE               	movwf	btemp
  6360  0005  0E03               	swapf	3,w
  6361  0006  00F0               	movwf	??_Timer0_ISR
  6362  0007  080A               	movf	10,w
  6363  0008  00F1               	movwf	??_Timer0_ISR+1
  6364  0009  120A  158A  2F4A   	ljmp	_Timer0_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         66
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     41      79
    BANK1            80      0      60
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(1) Largest target is 16
		 -> fondo(BANK1[16]), ficha(BANK0[16]), 

    memset@p	PTR unsigned char  size(1) Largest target is 16
		 -> fondo(BANK1[16]), ficha(BANK0[16]), 

    sp__memset	PTR void  size(1) Largest target is 16
		 -> fondo(BANK1[16]), ficha(BANK0[16]), 

    updateScreen@screen	PTR unsigned int  size(1) Largest target is 16
		 -> pantalla(BANK1[16]), 


Critical Paths under _main in COMMON

    _main->___awmod
    _updateScreen->_setFilas
    _init_LCD->_entryModeSet
    _returnHome->_setData
    _functionSet->_setData
    _entryModeSet->_setData
    _displayONOFF->_setData
    _clearDisplay->_setData
    _perdio->___awmod
    _leerEntradas->_checkColission_L
    _leerEntradas->_checkColission_R
    _drawFigure->_memset
    _checkColission_D->___awmod
    _checkBottom->___awmod
    _rand->___lmul

Critical Paths under _Timer0_ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_checkCount
    _updateScreen->_addToScreen
    _init_LCD->_functionSet
    _checkCount->_checkColission_D
    _perdio->___awmod
    _leerEntradas->_gire
    _checkColission_D->___awmod
    _checkBottom->___awmod
    _rand->___lmul
    ___awmod->_rand

Critical Paths under _Timer0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer0_ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     5      4   11260
                                             32 BANK0      9     5      4
                            ___awmod
                         _checkCount
                           _init_LCD
                         _init_pines
                         _init_timer
                               _rand
                              _srand
                       _updateScreen
 ---------------------------------------------------------------------------------
 (1) _updateScreen                                         7     7      0     590
                                              2 BANK0      7     7      0
                        _addToScreen
                           _setFilas
                    _shiftBitColumna
 ---------------------------------------------------------------------------------
 (2) _shiftBitColumna                                      2     2      0      22
                                              2 COMMON     2     2      0
                     _latchClock_Col
                     _latchClock_Fil
                     _shiftClock_Col
 ---------------------------------------------------------------------------------
 (3) _shiftClock_Col                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _latchClock_Fil                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _latchClock_Col                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setFilas                                            10     8      2     265
                                              2 COMMON    10     8      2
                     _shiftClock_Fil
 ---------------------------------------------------------------------------------
 (3) _shiftClock_Fil                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _addToScreen                                         11    11      0     113
                                              2 COMMON     9     9      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_pines                                           0     0      0       0
                     _init_pines_LCD
                     _init_pines_col
                     _init_pines_fil
                      _init_pines_in
 ---------------------------------------------------------------------------------
 (2) _init_pines_in                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_pines_fil                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_pines_col                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_pines_LCD                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_LCD                                            11    11      0    2510
                                              8 BANK0     11    11      0
                       _clearDisplay
                       _displayONOFF
                       _entryModeSet
                        _functionSet
                         _returnHome
 ---------------------------------------------------------------------------------
 (2) _returnHome                                           2     2      0     176
                                              5 COMMON     2     2      0
                            _clearRS
                            _clearRW
                            _setData
 ---------------------------------------------------------------------------------
 (2) _functionSet                                         11     9      2     968
                                              5 COMMON     3     1      2
                                              0 BANK0      8     8      0
                            _clearRS
                            _clearRW
                            _setData
 ---------------------------------------------------------------------------------
 (2) _entryModeSet                                         7     6      1     366
                                              5 COMMON     7     6      1
                            _clearRS
                            _clearRW
                            _setData
 ---------------------------------------------------------------------------------
 (2) _displayONOFF                                        10     8      2     640
                                              5 COMMON     4     2      2
                                              0 BANK0      6     6      0
                            _clearRS
                            _clearRW
                            _setData
 ---------------------------------------------------------------------------------
 (2) _clearDisplay                                         2     2      0     176
                                              5 COMMON     2     2      0
                            _clearRS
                            _clearRW
                            _setData
 ---------------------------------------------------------------------------------
 (3) _setData                                              3     3      0     176
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _clearRW                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clearRS                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkCount                                           5     5      0    6912
                                             27 BANK0      5     5      0
                        _checkBottom
                   _checkColission_D
                         _drawFigure
                       _leerEntradas
                             _perdio
                         _sumaPuntos
 ---------------------------------------------------------------------------------
 (2) _sumaPuntos                                           9     9      0     184
                                              2 COMMON     9     9      0
 ---------------------------------------------------------------------------------
 (2) _perdio                                               5     5      0    1868
                                             17 BANK0      5     5      0
                            ___awmod
                             _memset
                               _rand
 ---------------------------------------------------------------------------------
 (2) _leerEntradas                                         1     1      0    1616
                                             11 BANK0      1     1      0
                   _checkColission_L
                   _checkColission_R
                         _checkRight
                         _drawFigure
                               _gire
 ---------------------------------------------------------------------------------
 (3) _gire                                                16    16      0     827
                                              2 COMMON     5     5      0
                                              0 BANK0     11    11      0
 ---------------------------------------------------------------------------------
 (3) _drawFigure                                           5     5      0     651
                                              0 BANK0      5     5      0
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               7     3      4     651
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) _checkRight                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _checkColission_R                                    10    10      0      69
                                              2 COMMON    10    10      0
 ---------------------------------------------------------------------------------
 (3) _checkColission_L                                    10    10      0      69
                                              2 COMMON    10    10      0
 ---------------------------------------------------------------------------------
 (2) _checkColission_D                                    10    10      0    1330
                                             17 BANK0     10    10      0
                            ___awmod
                        _drawBground
                               _rand
 ---------------------------------------------------------------------------------
 (2) _checkBottom                                          1     1      0    1261
                                             17 BANK0      1     1      0
                            ___awmod
                        _drawBground
                               _rand
 ---------------------------------------------------------------------------------
 (1) _rand                                                 7     5      2     244
                                              4 BANK0      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     244
                                              2 COMMON     9     1      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _drawBground                                         11    11      0     113
                                              2 COMMON     9     9      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     904
                                             11 COMMON     1     1      0
                                             11 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Timer0_ISR                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awmod
     _rand (ARG)
       ___lmul
   _checkCount
     _checkBottom
       ___awmod
         _rand (ARG)
           ___lmul
       _drawBground
       _rand
         ___lmul
     _checkColission_D
       ___awmod
         _rand (ARG)
           ___lmul
       _drawBground
       _rand
         ___lmul
     _drawFigure
       _memset
     _leerEntradas
       _checkColission_L
       _checkColission_R
       _checkRight
       _drawFigure
         _memset
       _gire
     _perdio
       ___awmod
         _rand (ARG)
           ___lmul
       _memset
       _rand
         ___lmul
     _sumaPuntos
   _init_LCD
     _clearDisplay
       _clearRS
       _clearRW
       _setData
     _displayONOFF
       _clearRS
       _clearRW
       _setData
     _entryModeSet
       _clearRS
       _clearRW
       _setData
     _functionSet
       _clearRS
       _clearRW
       _setData
     _returnHome
       _clearRS
       _clearRW
       _setData
   _init_pines
     _init_pines_LCD
     _init_pines_col
     _init_pines_fil
     _init_pines_in
   _init_timer
   _rand
     ___lmul
   _srand
   _updateScreen
     _addToScreen
     _setFilas
       _shiftClock_Fil
     _shiftBitColumna
       _latchClock_Col
       _latchClock_Fil
       _shiftClock_Col

 _Timer0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      3C       7       75.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     29      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      97      12        0.0%
ABS                  0      0      97       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri May 15 16:25:01 2020

                        pc 0002              functionSet@DL 0020                __CFG_CP$OFF 0000  
         _entryModeSet$753 0079              ?_displayONOFF 0075                         l42 0DF0  
                       l51 0E47                         l45 0EF8                         l39 0E6F  
                       l48 0E26                         l57 0E34               drawBground@i 0020  
                       fsr 0004           ??_init_pines_LCD 0072           ??_init_pines_col 0072  
         ??_init_pines_fil 0072                        l132 015D                        l301 06F4  
                      l213 043B                        l223 0FBE                        l136 0584  
                      l160 0DFC                        l250 0E19                        l226 01FA  
                      l146 0535                        l218 0FFF                        l331 0E89  
                      l163 0DF6                        l260 076F                        l253 035D  
                      l341 07F9                        l246 0F49                        l270 05D0  
                      l334 0EA3                        l263 077F                        l175 0DEA  
                      l352 0666                        l328 027B                        l168 07C2  
                      l257 0372                        l178 07FF                        l186 0EBF  
                      l267 05B8                        l293 03D8                        l373 0DDD  
                      l367 06AD                        l640 0496                        l379 0DE1  
                      l388 02FC                        l488 061C                        l930 073B  
                      l922 0F18                        l927 0E0D               __CFG_CPD$OFF 0000  
                      u900 05DF                        u901 05DE                        u911 05EA  
                      u912 05F1                        u913 05F8                        u940 0612  
                      u941 0611                        u925 05FA                        u950 0733  
                      u935 0602                        u890 0F18                        u955 072E  
                      u891 0F17                        u965 0057                        u990 009C  
                      u974 006B                        u991 009B                        u975 0069  
                      u984 007E                        u985 007C                        u995 0098  
                      _con 0045                        fsr0 0004                        indf 0000  
             ___awmod@sign 0030               __CFG_FOSC$XT 0000            functionSet@data 0027  
             __CFG_LVP$OFF 0000                       l2000 056E                       l2002 0573  
                     l2020 0F2B                       l2004 0574                       l2100 0EB0  
                     l2022 0F2F                       l2014 0F19                       l2030 032D  
                     l2102 0EB5                       l2016 0F20                       l2032 0332  
                     l2024 02FD                       l2008 057F                       l2040 0373  
                     l2120 066E                       l2200 0E65                       l2112 0FC5  
                     l2104 0EBA                       l2018 0F25                       l2034 0338  
                     l2026 02FD                       l2050 03A4                       l2130 0688  
                     l2122 0673                       l2202 0E6A                       l2210 0E2C  
                     l2114 0FEC                       l2106 0FBF                       l2036 033C  
                     l2028 0307                       l2052 03AA                       l2060 06B0  
                     l2140 069C                       l2132 068D                       l2124 0678  
                     l2220 0E33                       l2212 0E2D                       l2204 0E27  
                     l2116 0FF2                       l2300 03ED                       l2038 0357  
                     l2054 03C5                       l2046 0379                       l2150 0629  
                     l2142 06A0                       l2134 0690                       l2126 067D  
                     l2118 066A                       l2230 0200                       l2222 01FB  
                     l2214 0E30                       l2206 0E2A                       l2310 042E  
                     l2302 0403                       l2056 03CB                       l2048 038A  
                     l2080 06E1                       l2072 06B6                       l2160 0643  
                     l2152 062E                       l2144 06A7                       l2136 0694  
                     l2128 0682                       l2240 0221                       l2232 0200  
                     l2224 01FF                       l2216 0E31                       l2208 0E2B  
                     l2304 040A                       l2320 04A6                       l2312 0497  
                     l2082 06E7                       l2074 06CE                       l2066 06B4  
                     l2058 06AE                       l2170 0E70                       l2162 0646  
                     l2154 0633                       l2146 0620                       l2138 0699  
                     l2250 024E                       l2242 0229                       l2234 0200  
                     l2226 01FF                       l2218 0E32                       l2090 0792  
                     l2306 0420                       l2330 04B3                       l2322 04A6  
                     l2314 049C                       l1700 0F06                       l2076 06D4  
                     l2172 0E7A                       l2164 064A                       l2156 0638  
                     l2148 0624                       l2180 07D2                       l2260 0276  
                     l2252 0258                       l2244 0233                       l2236 020F  
                     l2228 0200                       l2092 07B6                       l2084 0780  
                     l2308 0426                       l2332 04BC                       l2324 04A9  
                     l2316 04A1                       l1710 05F8                       l1702 0F0A  
                     l2270 04F6                       l2166 0657                       l2158 063E  
                     l2190 07F0                       l2182 07D7                       l2174 07C4  
                     l2254 0260                       l2246 023B                       l2238 0217  
                     l2262 0E05                       l2094 07BB                       l2086 0784  
                     l2334 04D8                       l2326 04AD                       l2318 04A6  
                     l1712 0601                       l1704 05D1                       l1720 0716  
                     l1800 014A                       l2280 0521                       l2272 0509  
                     l2264 04E7                       l2168 065D                       l2184 07DA  
                     l2176 07C8                       l2192 0E8A                       l2256 0265  
                     l2248 0245                       l2336 04DD                       l2328 04B1  
                     l1714 0612                       l1706 05DB                       l1722 0724  
                     l1810 01B4                       l1802 0150                       l1730 004C  
                     l2282 0526                       l2274 0511                       l2266 04EE  
                     l2186 07DE                       l2178 07CD                       l2194 0E94  
                     l2258 026C                       l2098 0EA5                       l2290 03DC  
                     l1900 0463                       l1708 05DF                       l1820 0767  
                     l1812 01D7                       l1804 015E                       l1732 004C  
                     l2284 052B                       l2276 0516                       l2268 04F1  
                     l2188 07EA                       l2196 0E5B                       l2292 03E1  
                     l1910 0482                       l1902 0467                       l1718 06F5  
                     l1814 073C                       l1830 0E0E                       l1806 016B  
                     l1750 009C                       l1726 003E                       l2286 0530  
                     l2278 051C                       l2198 0E60                       l1904 046B  
                     l1912 0488                       l1840 0585                       l1824 0769  
                     l1816 073C                       l1832 0E16                       l1808 0191  
                     l1760 00B6                       l1752 00A4                       l1744 0052  
                     l1728 0044                       l1920 0EDC                       l2288 03DC  
                     l1914 048D                       l1906 0475                       l1850 05B2  
                     l1842 0585                       l1826 077E                       l1818 0746  
                     l1754 00B2                       l1746 0089                       l1738 004E  
                     l1930 0EE4                       l1922 0EE0                       l2298 03E5  
                     l1916 0492                       l1908 047B                       l1852 05CF  
                     l1844 058F                       l1836 0E18                       l1780 00F5  
                     l1772 00CA                       l1764 00C1                       l1748 008F  
                     l1940 0EE9                       l1932 0EE5                       l1924 0EE1  
                     l1860 0DE6                       l1870 0F84                       l1846 05B0  
                     l1790 012D                       l1774 00DA                       l1766 00C8  
                     l1782 0102                       l1950 0EF0                       l1942 0EEA  
                     l1934 0EE6                       l1926 0EE2                       l1862 07FA  
                     l1872 0FAB                       l1864 0F7E                       l1696 0EFA  
                     l1792 012E                       l1776 00E0                       l1784 010A  
                     l1880 027D                       l1960 0EF5                       l1952 0EF1  
                     l1944 0EEB                       l1936 0EE7                       l1928 0EE3  
                     l1856 0DF7                       l1890 044A                       l1882 043C  
                     l1874 0FB1                       l1698 0EFF                       l1786 0119  
                     l1778 00ED                       l1962 0EF6                       l1954 0EF2  
                     l1946 0EEE                       l1938 0EE8                       l1970 0DEB  
                     l1858 0DF1                       l1892 044E                       l1884 043F  
                     l1788 0121                       l1972 0536                       l1876 0DDA  
                     l1964 0EF7                       l1956 0EF3                       l1948 0EEF  
                     l1894 0453                       l1886 0443                       l1798 0130  
                     l1990 0564                       l1974 053D                       l1982 0549  
                     l1878 0DDE                       l1958 0EF4                       l1966 0E1A  
                     l1896 0459                       l1888 0448                       l1984 054E  
                     l1976 053E                       l1968 0E35                       l1898 045C  
                     l1986 054F                       l1978 0543                       l1998 0569  
                     u1000 00B1                       u1001 00B0                       u1010 00C0  
                     u1011 00BF                       u1020 00C8                       u1021 00C7  
                     u1005 00AD                       u1030 00ED                       u1031 00EC  
                     u1200 05B0                       u1104 0185                       u1040 0102  
                     u1201 05AF                       u1105 0182                       u1041 0101  
                     u1210 05CF                       u1050 0119                       u1211 05CE  
                     u1115 0198                       u1051 0118                       u1035 00E9  
                     u1300 044E                       u1220 0FBE                       u1124 01A8  
                     u1060 0121                       u1301 044D                       u1221 0FBD  
                     u1125 01A5                       u1061 0120                       u1045 00FE  
                     u1310 0459                       u1311 0458                       u1215 05CB  
                     u1135 01BB                       u1055 0115                       u1144 01CB  
                     u1080 015D                       u1400 0563                       u1225 0FBA  
                     u1145 01C8                       u1081 015C                       u1401 0562  
                     u1330 046B                       u1170 0767                       u1410 056E  
                     u1331 046A                       u1171 0766                       u1155 01DE  
                     u1075 013B                       u1411 056D                       u1235 0296  
                     u1340 0475                       u1180 077E                       u1164 01EE  
                     u1420 0573                       u1500 06E1                       u1341 0474  
                     u1325 045D                       u1181 077D                       u1165 01EB  
                     u1085 0159                       u1421 0572                       u1501 06E0  
                     u1245 02A8                       u1190 0E16                       u1430 057E  
                     u1510 06F4                       u1191 0E15                       u1095 0174  
                     u1431 057D                       u1511 06F3                       u1255 02BB  
                     u1360 0488                       u1440 0F20                       u1600 0643  
                     u1520 0791                       u1361 0487                       u1345 0471  
                     u1441 0F1F                       u1185 077A                       u1505 06DD  
                     u1265 02CC                       u1601 0642                       u1521 0790  
                     u1370 048D                       u1290 0443                       u1450 032D  
                     u1610 0650                       u1371 048C                       u1355 047C  
                     u1291 0442                       u1451 032C                       u1515 06F0  
                     u1275 02DE                       u1611 064E                       u1460 0372  
                     u1380 053D                       u1620 0651                       u1461 0371  
                     u1381 053C                       u1285 02EE                       u1525 078D  
                     u1390 054E                       u1470 038A                       u1630 07D7  
                     u1550 0FFF                       u1534 079C                       u1391 054D  
                     u1471 0389                       u1631 07D6                       u1551 0FFE  
                     u1535 0799                       u1480 03D8                       u1640 07E4  
                     u1560 067D                       u1544 07A9                       u1465 036E  
                     u1481 03D7                       u1641 07E2                       u1561 067C  
                     u1545 07A6                       u1650 07E5                       u1570 068D  
                     u1571 068C                       u1555 0FFB                       u1660 04EE  
                     u1580 0699                       u1485 03D4                       u1661 04ED  
                     u1581 0698                       u1494 06C6                       u1670 0509  
                     u1590 0633                       u1495 06C3                       u1671 0508  
                     u1591 0632                       u1807 0241                       u1680 03ED  
                     u1673 0505                       u1817 0254                       u1681 03EC  
                     u1690 043B                       u1827 0E9E                       u1691 043A  
                     u1837 07F4                       u1847 0661                       u1695 0437  
                     u1857 0E84                       u1777 0208                       u1787 021D  
                     u1797 022F                       _TMR0 0001              ?_leerEntradas 0070  
             __CFG_WRT$OFF 0000                       _gire 003E                       _main 0497  
                     _rand 06F5                       btemp 007E              __CFG_BOREN$ON 0000  
                     start 000C       __end_of_clearDisplay 0E8A             ??_displayONOFF 0077  
       shiftBitColumna@bit 0073                      ?_gire 0070                      ?_main 0040  
                    ?_rand 0024              __CFG_WDTE$OFF 0000            __end_of___awmod 0497  
                    i1l155 0F77       __size_of_checkBottom 0031            __end_of_clearRS 0DDE  
          __end_of_clearRW 0DE2        ___lmul@multiplicand 0076                      _ficha 0057  
                    _fondo 00A0                      _randx 0067               ?_functionSet 0075  
                    _srand 0E05            __end_of_setData 02FD                      gire@i 0029  
                    gire@j 0027                      gire@k 0020             ??_leerEntradas 002B  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __initialization 000F               __end_of_gire 015E               __end_of_main 04E7  
             __end_of_rand 073C             _latchClock_Fil 0DF7             _latchClock_Col 0DE6  
  __size_of_shiftClock_Fil 0006    __size_of_shiftClock_Col 0006          checkColission_D@i 0039  
                   ??_gire 0072          checkColission_L@i 007A                     ??_main 0044  
        checkColission_R@i 007A                     ??_rand 0026              ?_entryModeSet 0075  
                   _ADCON1 009F                     ?_srand 0072                     i1l2340 0F4E  
                   i1l2350 0F69                     i1l2342 0F4F                     i1l2360 0F75  
                   i1l2352 0F6A                     i1l2344 0F5F                     i1l2354 0F6E  
                   i1l2346 0F61                     i1l2338 0F4A                     i1l2356 0F6F  
                   i1l2348 0F67                     i1l2358 0F71                     u170_20 0F4E  
                   u170_21 0F4D                     u171_20 0F67                     u171_21 0F66  
                   u172_20 0F6E                     u172_21 0F6D                     u173_20 0F75  
                   u173_21 0F74              displayONOFF@B 0076              displayONOFF@C 0075  
            displayONOFF@D 0020             __CFG_PWRTE$OFF 0000       __size_of_drawBground 0041  
               _Timer0_ISR 0F4A     __end_of_latchClock_Col 0DEB     __end_of_latchClock_Fil 0DFD  
         entryModeSet@data 007B                     ___lmul 05D1                  ??___awmod 007B  
         __end_of_init_LCD 027C          ?_checkColission_D 0070          ?_checkColission_L 0070  
        ?_checkColission_R 0070                     _memset 0EF9                     _perdio 0373  
                ??_clearRS 0072                  ??_clearRW 0072            ___awmod@divisor 002B  
          ___awmod@counter 002F         ??_checkColission_D 0031         ??_checkColission_L 0072  
         __end_of_setFilas 07C3         ??_checkColission_R 0072               addToScreen@i 0020  
           ??_entryModeSet 0076     __size_of_init_pines_in 0006                  ??_setData 0072  
                   saved_w 007E                     srand@x 0072       __end_of_displayONOFF 0667  
  __end_of__initialization 003A      __size_of_clearDisplay 001A              updateScreen@i 0027  
 __size_of_shiftBitColumna 001C         updateScreen@screen 0026            ?_latchClock_Col 0070  
          ?_latchClock_Fil 0070             __pcstackCOMMON 0070               __pidataBANK0 0DE2  
             __pidataBANK1 0EC0              __end_of_srand 0E0E       __end_of_leerEntradas 0585  
           _OPTION_REGbits 0081                setData@data 0074               _clearDisplay 0E70  
               _checkCount 04E7                    ??_srand 0074                 _checkRight 0E0E  
               __pbssBANK0 0045                 __pbssBANK1 00A0       __size_of_functionSet 0047  
            ??_addToScreen 0072              _init_pines_in 0DEB                ?_Timer0_ISR 0070  
               __pmaintext 0497                    ?___lmul 0072                 __pintentry 0004  
           _shiftClock_Fil 0DF1             _shiftClock_Col 07FA                    ?_memset 0072  
           ___lmul@product 0020                    ?_perdio 0070                 _drawFigure 015E  
                ?_init_LCD 0070             ?_init_pines_in 0070       __end_of_entryModeSet 07FA  
                ?_setFilas 0072     __end_of_shiftClock_Fil 0DF7     __end_of_shiftClock_Col 0800  
      __end_of_addToScreen 1000            __size_of___lmul 004C                    ___awmod 043C  
        ??_shiftBitColumna 0072              ??_checkBottom 0031                 _init_pines 0E5B  
                  _clearRS 0DDA                    _clearRW 0DDE                 _init_timer 0E27  
          __size_of_memset 0020            __size_of_perdio 0066                    __ptext1 03D9  
                  __ptext2 0EA4                    __ptext3 07FA                    __ptext4 0DF7  
                  __ptext5 0DE6                    __ptext6 0780                    __ptext7 0DF1  
                  __ptext8 0FBF                    __ptext9 0E05                    _figuras 00C0  
         ___awmod@dividend 002D                    _setData 027C      __size_of_displayONOFF 004A  
      __size_of_Timer0_ISR 0034                    gire@aux 0023                    clrloop0 0DFE  
  __size_of_init_pines_LCD 001D                ?_checkCount 0070                ?_checkRight 0070  
     end_of_initialization 003A    __size_of_init_pines_col 0013    __size_of_init_pines_fil 000D  
               ??_init_LCD 0028                    memset@c 0072                    memset@n 0074  
                  memset@p 0077                    perdio@i 0034                 ??_setFilas 0074  
    __size_of_leerEntradas 004F              sumaPuntos@aux 0076            ?_shiftClock_Col 0070  
          ?_shiftClock_Fil 0070            _functionSet$766 0021            _functionSet$767 0023  
          _functionSet$768 0025                 _timerCount 0053               _displayONOFF 061D  
               _returnHome 0E8A                  _PORTAbits 0005                  _PORTBbits 0006  
                _PORTCbits 0007                  _PORTDbits 0008                  _PORTEbits 0009  
         displayONOFF@data 0025                ?_drawFigure 0070                  _TRISAbits 0085  
                _TRISBbits 0086        __end_of_checkBottom 0F4A                  _TRISCbits 0087  
                _TRISDbits 0088                  _TRISEbits 0089               functionSet@F 0076  
             functionSet@N 0075  __size_of_checkColission_D 0076  __size_of_checkColission_L 004C  
__size_of_checkColission_R 0044            ??_init_pines_in 0072                 _sumaPuntos 06AE  
             _leerEntradas 0536              ??_drawBground 0072           ??_latchClock_Col 0072  
         ??_latchClock_Fil 0072                _addToScreen 0FBF              ?_updateScreen 0070  
           __end_of___lmul 061D        __size_of_checkCount 004F                ?_init_pines 0070  
      __size_of_checkRight 000C             entryModeSet@ID 0078                ?_init_timer 0070  
           entryModeSet@SH 0075             __end_of_memset 0F19             __end_of_perdio 03D9  
      start_initialization 000F      __size_of_entryModeSet 0037             ??_updateScreen 0022  
             ??_Timer0_ISR 0070        __size_of_drawFigure 009D        __end_of_drawBground 0FBF  
                 ??___lmul 007A          setFilas@reg_value 0072                 init_fetch0 0E48  
              __pdataBANK0 0067                __pdataBANK1 00C0                   ??_memset 0076  
                 ??_perdio 0031                ?_returnHome 0070                sumaPuntos@i 0077  
              sumaPuntos@j 0079                _checkBottom 0F19               _entryModeSet 07C3  
                ___latbits 0002              __pcstackBANK0 0020         __end_of_Timer0_ISR 0F7E  
           _init_pines_LCD 0EDC              ??_functionSet 0077             _init_pines_fil 0E1A  
           _init_pines_col 0E35                ?_sumaPuntos 0070        __size_of_init_pines 0015  
          _shiftBitColumna 0EA4        __size_of_init_timer 000E           _displayONOFF$760 0023  
         _displayONOFF$759 0021          __size_of_init_LCD 0081          __size_of_setFilas 0043  
                 ?___awmod 002B                   ?_clearRS 0070                   ?_clearRW 0070  
                 ?_setData 0070     __end_of_init_pines_LCD 0EF9     __end_of_init_pines_col 0E48  
   __end_of_init_pines_fil 0E27               ??_checkCount 003B           _checkColission_D 02FD  
         _checkColission_L 0585           _checkColission_R 073C               ??_checkRight 0072  
           __size_of_srand 0009          interrupt_function 0004                _drawBground 0F7E  
      __size_of_returnHome 001A           ??_shiftClock_Col 0072           ??_shiftClock_Fil 0072  
                clear_ram0 0DFD        __end_of_functionSet 06AE                  gire@F1224 004F  
       __end_of_checkCount 0536        __size_of_sumaPuntos 0047         __end_of_checkRight 0E1A  
             ??_drawFigure 0020       __end_of_updateScreen 043C            ?_init_pines_LCD 0070  
          ?_init_pines_col 0070            ?_init_pines_fil 0070    __end_of_shiftBitColumna 0EC0  
        ___lmul@multiplier 0072               ?_addToScreen 0070                  init_LCD@N 002C  
                init_LCD@S 002F                checkCount@j 003E         __end_of_drawFigure 01FB  
         __size_of___awmod 005B               ??_init_pines 0072               ??_init_timer 0072  
         __size_of_clearRS 0004           __size_of_clearRW 0004                  setFilas@i 007A  
         __size_of_setData 0081              ?_clearDisplay 0070                   __ptext10 0E27  
                 __ptext11 0E5B                   __ptext20 061D                   __ptext12 0DEB  
                 __ptext21 0E70                   __ptext13 0E1A                   __ptext30 015E  
                 __ptext22 027C                   __ptext14 0E35                   __ptext31 0EF9  
                 __ptext23 0DDE                   __ptext15 0EDC                   __ptext40 043C  
                 __ptext32 0E0E                   __ptext24 0DDA                   __ptext16 01FB  
                 __ptext41 0F4A                   __ptext33 073C                   __ptext25 04E7  
                 __ptext17 0E8A                   __ptext34 0585                   __ptext26 06AE  
                 __ptext18 0667                   __ptext35 02FD                   __ptext27 0373  
                 __ptext19 07C3                   __ptext36 0F19                   __ptext28 0536  
                 __ptext37 06F5                   __ptext29 003E                   __ptext38 05D1  
                 __ptext39 0F7E                _functionSet 0667                   _init_LCD 01FB  
    __end_of_init_pines_in 0DF1              __size_of_gire 0120              __size_of_main 0050  
            __size_of_rand 0047         __end_of_init_pines 0E70         __end_of_init_timer 0E35  
                 _pantalla 00B0                   _setFilas 0780                   gire@mask 0022  
                 main@argc 0040                   main@argv 0042               ??_returnHome 0075  
             ?_checkBottom 0070                 _INTCONbits 000B             ??_clearDisplay 0075  
                 init_ram0 0E4C                   memset@p1 0078           ?_shiftBitColumna 0070  
             ??_sumaPuntos 0072                   intlevel1 0000         __end_of_returnHome 0EA4  
 __end_of_checkColission_D 0373   __end_of_checkColission_L 05D1   __end_of_checkColission_R 0780  
  __size_of_latchClock_Col 0005    __size_of_latchClock_Fil 0006      __size_of_updateScreen 0063  
       __end_of_sumaPuntos 06F5               ?_drawBground 0070       __size_of_addToScreen 0041  
             _updateScreen 03D9  
