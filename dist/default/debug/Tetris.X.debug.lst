

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun May 03 15:27:11 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK3,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.10
    41                           ; Generated 31/07/2019 GMT
    42                           ; 
    43                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F877A Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  000E                     	;# 
    90  000F                     	;# 
    91  0010                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0015                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  001D                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  0081                     	;# 
   110  0085                     	;# 
   111  0086                     	;# 
   112  0087                     	;# 
   113  0088                     	;# 
   114  0089                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0094                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009C                     	;# 
   185  009D                     	;# 
   186  009E                     	;# 
   187  009F                     	;# 
   188  010C                     	;# 
   189  010D                     	;# 
   190  010E                     	;# 
   191  010F                     	;# 
   192  018C                     	;# 
   193  018D                     	;# 
   194  0000                     	;# 
   195  0001                     	;# 
   196  0002                     	;# 
   197  0003                     	;# 
   198  0004                     	;# 
   199  0005                     	;# 
   200  0006                     	;# 
   201  0007                     	;# 
   202  0008                     	;# 
   203  0009                     	;# 
   204  000A                     	;# 
   205  000B                     	;# 
   206  000C                     	;# 
   207  000D                     	;# 
   208  000E                     	;# 
   209  000E                     	;# 
   210  000F                     	;# 
   211  0010                     	;# 
   212  0011                     	;# 
   213  0012                     	;# 
   214  0013                     	;# 
   215  0014                     	;# 
   216  0015                     	;# 
   217  0015                     	;# 
   218  0016                     	;# 
   219  0017                     	;# 
   220  0018                     	;# 
   221  0019                     	;# 
   222  001A                     	;# 
   223  001B                     	;# 
   224  001B                     	;# 
   225  001C                     	;# 
   226  001D                     	;# 
   227  001E                     	;# 
   228  001F                     	;# 
   229  0081                     	;# 
   230  0085                     	;# 
   231  0086                     	;# 
   232  0087                     	;# 
   233  0088                     	;# 
   234  0089                     	;# 
   235  008C                     	;# 
   236  008D                     	;# 
   237  008E                     	;# 
   238  0091                     	;# 
   239  0092                     	;# 
   240  0093                     	;# 
   241  0094                     	;# 
   242  0098                     	;# 
   243  0099                     	;# 
   244  009C                     	;# 
   245  009D                     	;# 
   246  009E                     	;# 
   247  009F                     	;# 
   248  010C                     	;# 
   249  010D                     	;# 
   250  010E                     	;# 
   251  010F                     	;# 
   252  018C                     	;# 
   253  018D                     	;# 
   254  0000                     	;# 
   255  0001                     	;# 
   256  0002                     	;# 
   257  0003                     	;# 
   258  0004                     	;# 
   259  0005                     	;# 
   260  0006                     	;# 
   261  0007                     	;# 
   262  0008                     	;# 
   263  0009                     	;# 
   264  000A                     	;# 
   265  000B                     	;# 
   266  000C                     	;# 
   267  000D                     	;# 
   268  000E                     	;# 
   269  000E                     	;# 
   270  000F                     	;# 
   271  0010                     	;# 
   272  0011                     	;# 
   273  0012                     	;# 
   274  0013                     	;# 
   275  0014                     	;# 
   276  0015                     	;# 
   277  0015                     	;# 
   278  0016                     	;# 
   279  0017                     	;# 
   280  0018                     	;# 
   281  0019                     	;# 
   282  001A                     	;# 
   283  001B                     	;# 
   284  001B                     	;# 
   285  001C                     	;# 
   286  001D                     	;# 
   287  001E                     	;# 
   288  001F                     	;# 
   289  0081                     	;# 
   290  0085                     	;# 
   291  0086                     	;# 
   292  0087                     	;# 
   293  0088                     	;# 
   294  0089                     	;# 
   295  008C                     	;# 
   296  008D                     	;# 
   297  008E                     	;# 
   298  0091                     	;# 
   299  0092                     	;# 
   300  0093                     	;# 
   301  0094                     	;# 
   302  0098                     	;# 
   303  0099                     	;# 
   304  009C                     	;# 
   305  009D                     	;# 
   306  009E                     	;# 
   307  009F                     	;# 
   308  010C                     	;# 
   309  010D                     	;# 
   310  010E                     	;# 
   311  010F                     	;# 
   312  018C                     	;# 
   313  018D                     	;# 
   314  0000                     	;# 
   315  0001                     	;# 
   316  0002                     	;# 
   317  0003                     	;# 
   318  0004                     	;# 
   319  0005                     	;# 
   320  0006                     	;# 
   321  0007                     	;# 
   322  0008                     	;# 
   323  0009                     	;# 
   324  000A                     	;# 
   325  000B                     	;# 
   326  000C                     	;# 
   327  000D                     	;# 
   328  000E                     	;# 
   329  000E                     	;# 
   330  000F                     	;# 
   331  0010                     	;# 
   332  0011                     	;# 
   333  0012                     	;# 
   334  0013                     	;# 
   335  0014                     	;# 
   336  0015                     	;# 
   337  0015                     	;# 
   338  0016                     	;# 
   339  0017                     	;# 
   340  0018                     	;# 
   341  0019                     	;# 
   342  001A                     	;# 
   343  001B                     	;# 
   344  001B                     	;# 
   345  001C                     	;# 
   346  001D                     	;# 
   347  001E                     	;# 
   348  001F                     	;# 
   349  0081                     	;# 
   350  0085                     	;# 
   351  0086                     	;# 
   352  0087                     	;# 
   353  0088                     	;# 
   354  0089                     	;# 
   355  008C                     	;# 
   356  008D                     	;# 
   357  008E                     	;# 
   358  0091                     	;# 
   359  0092                     	;# 
   360  0093                     	;# 
   361  0094                     	;# 
   362  0098                     	;# 
   363  0099                     	;# 
   364  009C                     	;# 
   365  009D                     	;# 
   366  009E                     	;# 
   367  009F                     	;# 
   368  010C                     	;# 
   369  010D                     	;# 
   370  010E                     	;# 
   371  010F                     	;# 
   372  018C                     	;# 
   373  018D                     	;# 
   374  0000                     	;# 
   375  0001                     	;# 
   376  0002                     	;# 
   377  0003                     	;# 
   378  0004                     	;# 
   379  0005                     	;# 
   380  0006                     	;# 
   381  0007                     	;# 
   382  0008                     	;# 
   383  0009                     	;# 
   384  000A                     	;# 
   385  000B                     	;# 
   386  000C                     	;# 
   387  000D                     	;# 
   388  000E                     	;# 
   389  000E                     	;# 
   390  000F                     	;# 
   391  0010                     	;# 
   392  0011                     	;# 
   393  0012                     	;# 
   394  0013                     	;# 
   395  0014                     	;# 
   396  0015                     	;# 
   397  0015                     	;# 
   398  0016                     	;# 
   399  0017                     	;# 
   400  0018                     	;# 
   401  0019                     	;# 
   402  001A                     	;# 
   403  001B                     	;# 
   404  001B                     	;# 
   405  001C                     	;# 
   406  001D                     	;# 
   407  001E                     	;# 
   408  001F                     	;# 
   409  0081                     	;# 
   410  0085                     	;# 
   411  0086                     	;# 
   412  0087                     	;# 
   413  0088                     	;# 
   414  0089                     	;# 
   415  008C                     	;# 
   416  008D                     	;# 
   417  008E                     	;# 
   418  0091                     	;# 
   419  0092                     	;# 
   420  0093                     	;# 
   421  0094                     	;# 
   422  0098                     	;# 
   423  0099                     	;# 
   424  009C                     	;# 
   425  009D                     	;# 
   426  009E                     	;# 
   427  009F                     	;# 
   428  010C                     	;# 
   429  010D                     	;# 
   430  010E                     	;# 
   431  010F                     	;# 
   432  018C                     	;# 
   433  018D                     	;# 
   434  0000                     	;# 
   435  0001                     	;# 
   436  0002                     	;# 
   437  0003                     	;# 
   438  0004                     	;# 
   439  0005                     	;# 
   440  0006                     	;# 
   441  0007                     	;# 
   442  0008                     	;# 
   443  0009                     	;# 
   444  000A                     	;# 
   445  000B                     	;# 
   446  000C                     	;# 
   447  000D                     	;# 
   448  000E                     	;# 
   449  000E                     	;# 
   450  000F                     	;# 
   451  0010                     	;# 
   452  0011                     	;# 
   453  0012                     	;# 
   454  0013                     	;# 
   455  0014                     	;# 
   456  0015                     	;# 
   457  0015                     	;# 
   458  0016                     	;# 
   459  0017                     	;# 
   460  0018                     	;# 
   461  0019                     	;# 
   462  001A                     	;# 
   463  001B                     	;# 
   464  001B                     	;# 
   465  001C                     	;# 
   466  001D                     	;# 
   467  001E                     	;# 
   468  001F                     	;# 
   469  0081                     	;# 
   470  0085                     	;# 
   471  0086                     	;# 
   472  0087                     	;# 
   473  0088                     	;# 
   474  0089                     	;# 
   475  008C                     	;# 
   476  008D                     	;# 
   477  008E                     	;# 
   478  0091                     	;# 
   479  0092                     	;# 
   480  0093                     	;# 
   481  0094                     	;# 
   482  0098                     	;# 
   483  0099                     	;# 
   484  009C                     	;# 
   485  009D                     	;# 
   486  009E                     	;# 
   487  009F                     	;# 
   488  010C                     	;# 
   489  010D                     	;# 
   490  010E                     	;# 
   491  010F                     	;# 
   492  018C                     	;# 
   493  018D                     	;# 
   494                           
   495                           	psect	idataBANK0
   496  01B7                     __pidataBANK0:	
   497                           
   498                           ;initializer for _randx
   499  01B7  3401               	retlw	1
   500  01B8  3400               	retlw	0
   501  01B9  3400               	retlw	0
   502  01BA  3400               	retlw	0
   503                           
   504                           	psect	idataBANK3
   505  02B7                     __pidataBANK3:	
   506                           
   507                           ;initializer for _figuras
   508  02B7  3402               	retlw	2
   509  02B8  3400               	retlw	0
   510  02B9  3402               	retlw	2
   511  02BA  3400               	retlw	0
   512  02BB  3403               	retlw	3
   513  02BC  3400               	retlw	0
   514  02BD  3400               	retlw	0
   515  02BE  3400               	retlw	0
   516  02BF  3403               	retlw	3
   517  02C0  3400               	retlw	0
   518  02C1  3402               	retlw	2
   519  02C2  3400               	retlw	0
   520  02C3  3402               	retlw	2
   521  02C4  3400               	retlw	0
   522  02C5  3400               	retlw	0
   523  02C6  3400               	retlw	0
   524  02C7  3401               	retlw	1
   525  02C8  3400               	retlw	0
   526  02C9  3403               	retlw	3
   527  02CA  3400               	retlw	0
   528  02CB  3402               	retlw	2
   529  02CC  3400               	retlw	0
   530  02CD  3400               	retlw	0
   531  02CE  3400               	retlw	0
   532  02CF  3402               	retlw	2
   533  02D0  3400               	retlw	0
   534  02D1  3403               	retlw	3
   535  02D2  3400               	retlw	0
   536  02D3  3401               	retlw	1
   537  02D4  3400               	retlw	0
   538  02D5  3400               	retlw	0
   539  02D6  3400               	retlw	0
   540  02D7  3401               	retlw	1
   541  02D8  3400               	retlw	0
   542  02D9  3401               	retlw	1
   543  02DA  3400               	retlw	0
   544  02DB  3401               	retlw	1
   545  02DC  3400               	retlw	0
   546  02DD  3401               	retlw	1
   547  02DE  3400               	retlw	0
   548  02DF  3403               	retlw	3
   549  02E0  3400               	retlw	0
   550  02E1  3403               	retlw	3
   551  02E2  3400               	retlw	0
   552  02E3  3400               	retlw	0
   553  02E4  3400               	retlw	0
   554  02E5  3400               	retlw	0
   555  02E6  3400               	retlw	0
   556  02E7  3401               	retlw	1
   557  02E8  3400               	retlw	0
   558  02E9  3403               	retlw	3
   559  02EA  3400               	retlw	0
   560  02EB  3401               	retlw	1
   561  02EC  3400               	retlw	0
   562  02ED  3400               	retlw	0
   563  02EE  3400               	retlw	0
   564  0001                     _TMR0	set	1
   565  000B                     _INTCONbits	set	11
   566  0008                     _PORTDbits	set	8
   567  0007                     _PORTCbits	set	7
   568  0006                     _PORTBbits	set	6
   569  0081                     _OPTION_REGbits	set	129
   570  0088                     _TRISDbits	set	136
   571  0087                     _TRISCbits	set	135
   572  0086                     _TRISBbits	set	134
   573                           
   574                           ; #config settings
   575  0000                     
   576                           	psect	cinit
   577  07D0                     start_initialization:	
   578  07D0                     __initialization:	
   579                           
   580                           ; Initialize objects allocated to BANK3
   581  07D0  1783               	bsf	3,7	;select IRP bank2
   582  07D1  30C8               	movlw	low (__pdataBANK3+56)
   583  07D2  00FD               	movwf	btemp+-1
   584  07D3  3002               	movlw	high __pidataBANK3
   585  07D4  00FE               	movwf	btemp
   586  07D5  30B7               	movlw	low __pidataBANK3
   587  07D6  00FF               	movwf	btemp+1
   588  07D7  3090               	movlw	low __pdataBANK3
   589  07D8  0084               	movwf	4
   590  07D9  120A  118A  2238  120A  118A  	fcall	init_ram0
   591                           
   592                           ; Initialize objects allocated to BANK0
   593  07DE  1383               	bcf	3,7	;select IRP bank0
   594  07DF  3066               	movlw	low (__pdataBANK0+4)
   595  07E0  00FD               	movwf	btemp+-1
   596  07E1  3001               	movlw	high __pidataBANK0
   597  07E2  00FE               	movwf	btemp
   598  07E3  30B7               	movlw	low __pidataBANK0
   599  07E4  00FF               	movwf	btemp+1
   600  07E5  3062               	movlw	low __pdataBANK0
   601  07E6  0084               	movwf	4
   602  07E7  120A  118A  2238  120A  118A  	fcall	init_ram0
   603                           
   604                           ; Clear objects allocated to BANK1
   605  07EC  30A0               	movlw	low __pbssBANK1
   606  07ED  0084               	movwf	4
   607  07EE  30C0               	movlw	low (__pbssBANK1+32)
   608  07EF  120A  118A  21DA  120A  118A  	fcall	clear_ram0
   609                           
   610                           ; Clear objects allocated to BANK0
   611  07F4  3045               	movlw	low __pbssBANK0
   612  07F5  0084               	movwf	4
   613  07F6  3062               	movlw	low (__pbssBANK0+29)
   614  07F7  120A  118A  21DA  120A  118A  	fcall	clear_ram0
   615  07FC                     end_of_initialization:	
   616                           ;End of C runtime variable initialization code
   617                           
   618  07FC                     __end_of__initialization:	
   619  07FC  0183               	clrf	3
   620  07FD  120A  118A  2C6F   	ljmp	_main	;jump to C main() function
   621                           
   622                           	psect	bssBANK0
   623  0045                     __pbssBANK0:	
   624  0045                     _con:	
   625  0045                     	ds	9
   626  004E                     _timerCount:	
   627  004E                     	ds	4
   628  0052                     _fondo:	
   629  0052                     	ds	16
   630                           
   631                           	psect	dataBANK0
   632  0062                     __pdataBANK0:	
   633  0062                     _randx:	
   634  0062                     	ds	4
   635                           
   636                           	psect	bssBANK1
   637  00A0                     __pbssBANK1:	
   638  00A0                     _ficha:	
   639  00A0                     	ds	16
   640  00B0                     _pantalla:	
   641  00B0                     	ds	16
   642                           
   643                           	psect	dataBANK3
   644  0190                     __pdataBANK3:	
   645  0190                     _figuras:	
   646  0190                     	ds	56
   647                           
   648                           	psect	inittext
   649  0234                     init_fetch0:	
   650                           ;	Called with low address in FSR and high address in W
   651                           
   652  0234  087E               	movf	btemp,w
   653  0235  008A               	movwf	10
   654  0236  087F               	movf	btemp+1,w
   655  0237  0082               	movwf	2
   656  0238                     init_ram0:	
   657                           ;Called with:
   658                           ;	high address of idata address in btemp 
   659                           ;	low address of idata address in btemp+1 
   660                           ;	low address of data in FSR
   661                           ;	high address + 1 of data in btemp-1
   662                           
   663  0238  120A  118A  2234  120A  118A  	fcall	init_fetch0
   664  023D  0080               	movwf	0
   665  023E  0A84               	incf	4,f
   666  023F  0804               	movf	4,w
   667  0240  067D               	xorwf	btemp+-1,w
   668  0241  1903               	btfsc	3,2
   669  0242  3400               	retlw	0
   670  0243  0AFF               	incf	btemp+1,f
   671  0244  1903               	btfsc	3,2
   672  0245  0AFE               	incf	btemp,f
   673  0246  2A38               	goto	init_ram0
   674                           
   675                           	psect	clrtext
   676  01DA                     clear_ram0:	
   677                           ;	Called with FSR containing the base address, and
   678                           ;	W with the last address+1
   679                           
   680  01DA  0064               	clrwdt	;clear the watchdog before getting into this loop
   681  01DB                     clrloop0:	
   682  01DB  0180               	clrf	0	;clear RAM location pointed to by FSR
   683  01DC  0A84               	incf	4,f	;increment pointer
   684  01DD  0604               	xorwf	4,w	;XOR with final address
   685  01DE  1903               	btfsc	3,2	;have we reached the end yet?
   686  01DF  3400               	retlw	0	;all done for this memory range, return
   687  01E0  0604               	xorwf	4,w	;XOR again to restore value
   688  01E1  29DB               	goto	clrloop0	;do the next byte
   689                           
   690                           	psect	cstackCOMMON
   691  0071                     __pcstackCOMMON:	
   692  0071                     ?_checkCount:	
   693  0071                     ?_updateScreen:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0071                     ?_drawFigure:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0071                     ?_init_pines_in:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0071                     ?_init_pines_fil:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0071                     ?_init_pines_col:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0071                     ?_init_pines:	
   709                           ; 1 bytes @ 0x0
   710                           
   711  0071                     ?_init_interrupt:	
   712                           ; 1 bytes @ 0x0
   713                           
   714  0071                     ?_init_timer:	
   715                           ; 1 bytes @ 0x0
   716                           
   717  0071                     ?_Timer0_ISR:	
   718                           ; 1 bytes @ 0x0
   719                           
   720  0071                     ??_Timer0_ISR:	
   721                           ; 1 bytes @ 0x0
   722                           
   723  0071                     ?_latchClock_Fil:	
   724                           ; 1 bytes @ 0x0
   725                           
   726  0071                     ?_shiftClock_Fil:	
   727                           ; 1 bytes @ 0x0
   728                           
   729  0071                     ?_latchClock_Col:	
   730                           ; 1 bytes @ 0x0
   731                           
   732  0071                     ?_shiftClock_Col:	
   733                           ; 1 bytes @ 0x0
   734                           
   735  0071                     ?_shiftBitColumna:	
   736                           ; 1 bytes @ 0x0
   737                           
   738                           
   739                           ; 1 bytes @ 0x0
   740  0071                     	ds	2
   741  0073                     ?_srand:	
   742  0073                     ?_memset:	
   743                           ; 1 bytes @ 0x2
   744                           
   745  0073                     ??_init_pines_in:	
   746                           ; 1 bytes @ 0x2
   747                           
   748  0073                     ??_init_pines_fil:	
   749                           ; 1 bytes @ 0x2
   750                           
   751  0073                     ??_init_pines_col:	
   752                           ; 1 bytes @ 0x2
   753                           
   754  0073                     ??_init_pines:	
   755                           ; 1 bytes @ 0x2
   756                           
   757  0073                     ??_init_interrupt:	
   758                           ; 1 bytes @ 0x2
   759                           
   760  0073                     ??_init_timer:	
   761                           ; 1 bytes @ 0x2
   762                           
   763  0073                     ??_latchClock_Fil:	
   764                           ; 1 bytes @ 0x2
   765                           
   766  0073                     ??_shiftClock_Fil:	
   767                           ; 1 bytes @ 0x2
   768                           
   769  0073                     ?_setFilas:	
   770                           ; 1 bytes @ 0x2
   771                           
   772  0073                     ??_latchClock_Col:	
   773                           ; 1 bytes @ 0x2
   774                           
   775  0073                     ??_shiftClock_Col:	
   776                           ; 1 bytes @ 0x2
   777                           
   778  0073                     ??_shiftBitColumna:	
   779                           ; 1 bytes @ 0x2
   780                           
   781  0073                     ?___lmul:	
   782                           ; 1 bytes @ 0x2
   783                           
   784  0073                     setFilas@reg_value:	
   785                           ; 4 bytes @ 0x2
   786                           
   787  0073                     memset@c:	
   788                           ; 2 bytes @ 0x2
   789                           
   790  0073                     srand@x:	
   791                           ; 2 bytes @ 0x2
   792                           
   793  0073                     ___lmul@multiplier:	
   794                           ; 2 bytes @ 0x2
   795                           
   796                           
   797                           ; 4 bytes @ 0x2
   798  0073                     	ds	1
   799  0074                     shiftBitColumna@bit:	
   800                           
   801                           ; 1 bytes @ 0x3
   802  0074                     	ds	1
   803  0075                     ??_srand:	
   804  0075                     ??_setFilas:	
   805                           ; 1 bytes @ 0x4
   806                           
   807  0075                     memset@n:	
   808                           ; 1 bytes @ 0x4
   809                           
   810                           
   811                           ; 2 bytes @ 0x4
   812  0075                     	ds	2
   813  0077                     ??_memset:	
   814  0077                     ___lmul@multiplicand:	
   815                           ; 1 bytes @ 0x6
   816                           
   817                           
   818                           ; 4 bytes @ 0x6
   819  0077                     	ds	1
   820  0078                     memset@p:	
   821                           
   822                           ; 1 bytes @ 0x7
   823  0078                     	ds	1
   824  0079                     memset@p1:	
   825                           
   826                           ; 1 bytes @ 0x8
   827  0079                     	ds	2
   828  007B                     ??___lmul:	
   829  007B                     updateScreen@screen:	
   830                           ; 1 bytes @ 0xA
   831                           
   832                           
   833                           ; 1 bytes @ 0xA
   834  007B                     	ds	1
   835                           
   836                           	psect	cstackBANK0
   837  0020                     __pcstackBANK0:	
   838  0020                     ??_drawFigure:	
   839  0020                     setFilas@i:	
   840                           ; 1 bytes @ 0x0
   841                           
   842  0020                     ___lmul@product:	
   843                           ; 2 bytes @ 0x0
   844                           
   845                           
   846                           ; 4 bytes @ 0x0
   847  0020                     	ds	2
   848  0022                     ??_updateScreen:	
   849                           
   850                           ; 1 bytes @ 0x2
   851  0022                     	ds	2
   852  0024                     ?_rand:	
   853                           
   854                           ; 2 bytes @ 0x4
   855  0024                     	ds	2
   856  0026                     ??_rand:	
   857                           
   858                           ; 1 bytes @ 0x6
   859  0026                     	ds	5
   860  002B                     ?___awmod:	
   861  002B                     ___awmod@divisor:	
   862                           ; 2 bytes @ 0xB
   863                           
   864                           
   865                           ; 2 bytes @ 0xB
   866  002B                     	ds	2
   867  002D                     ___awmod@dividend:	
   868                           
   869                           ; 2 bytes @ 0xD
   870  002D                     	ds	2
   871  002F                     ??___awmod:	
   872                           
   873                           ; 1 bytes @ 0xF
   874  002F                     	ds	1
   875  0030                     ___awmod@counter:	
   876                           
   877                           ; 1 bytes @ 0x10
   878  0030                     	ds	1
   879  0031                     ___awmod@sign:	
   880                           
   881                           ; 1 bytes @ 0x11
   882  0031                     	ds	1
   883  0032                     ??_checkCount:	
   884                           
   885                           ; 1 bytes @ 0x12
   886  0032                     	ds	9
   887  003B                     checkCount@j:	
   888                           
   889                           ; 2 bytes @ 0x1B
   890  003B                     	ds	2
   891  003D                     checkCount@i:	
   892                           
   893                           ; 2 bytes @ 0x1D
   894  003D                     	ds	2
   895  003F                     ?_main:	
   896  003F                     main@argc:	
   897                           ; 2 bytes @ 0x1F
   898                           
   899                           
   900                           ; 2 bytes @ 0x1F
   901  003F                     	ds	2
   902  0041                     main@argv:	
   903                           
   904                           ; 2 bytes @ 0x21
   905  0041                     	ds	2
   906  0043                     ??_main:	
   907                           
   908                           ; 1 bytes @ 0x23
   909  0043                     	ds	2
   910                           
   911                           	psect	maintext
   912  046F                     __pmaintext:	
   913 ;;
   914 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   915 ;;
   916 ;; *************** function _main *****************
   917 ;; Defined at:
   918 ;;		line 41 in file "mainsource.c"
   919 ;; Parameters:    Size  Location     Type
   920 ;;  argc            2   31[BANK0 ] int 
   921 ;;  argv            2   33[BANK0 ] PTR PTR unsigned char 
   922 ;; Auto vars:     Size  Location     Type
   923 ;;  j               2    0        int 
   924 ;;  i               2    0        int 
   925 ;; Return value:  Size  Location     Type
   926 ;;                  2   31[BANK0 ] int 
   927 ;; Registers used:
   928 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   929 ;; Tracked objects:
   930 ;;		On entry : B00/0
   931 ;;		On exit  : 0/0
   932 ;;		Unchanged: 0/0
   933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   934 ;;      Params:         0       4       0       0       0
   935 ;;      Locals:         0       4       0       0       0
   936 ;;      Temps:          0       2       0       0       0
   937 ;;      Totals:         0      10       0       0       0
   938 ;;Total ram usage:       10 bytes
   939 ;; Hardware stack levels required when called:    4
   940 ;; This function calls:
   941 ;;		___awmod
   942 ;;		_checkCount
   943 ;;		_init_interrupt
   944 ;;		_init_pines
   945 ;;		_init_timer
   946 ;;		_rand
   947 ;;		_srand
   948 ;;		_updateScreen
   949 ;; This function is called by:
   950 ;;		Startup code after reset
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           
   954                           
   955                           ;psect for function _main
   956  046F                     _main:	
   957  046F                     l1411:	
   958                           ;incstack = 0
   959                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   960                           
   961                           
   962                           ;mainsource.c: 45:     init_timer();
   963  046F  120A  118A  2203  120A  118A  	fcall	_init_timer
   964                           
   965                           ;mainsource.c: 46:     init_pines();
   966  0474  120A  118A  2211  120A  118A  	fcall	_init_pines
   967                           
   968                           ;mainsource.c: 47:     init_interrupt();
   969  0479  120A  118A  21D2  120A  118A  	fcall	_init_interrupt
   970  047E                     l1413:	
   971  047E                     l1415:	
   972  047E                     l1417:	
   973                           
   974                           ;mainsource.c: 50:     con.columna = 1;
   975  047E  1283               	bcf	3,5	;RP0=0, select bank0
   976  047F  1303               	bcf	3,6	;RP1=0, select bank0
   977  0480  01C5               	clrf	_con
   978  0481  0AC5               	incf	_con,f
   979  0482                     l1419:	
   980                           
   981                           ;mainsource.c: 51:     con.ficha_Vpos = 16;
   982  0482  3010               	movlw	16
   983  0483  00C3               	movwf	??_main
   984  0484  0843               	movf	??_main,w
   985  0485  00C8               	movwf	_con+3
   986  0486                     l1421:	
   987                           
   988                           ;mainsource.c: 52:     con.ficha_Hpos = 2;
   989  0486  3002               	movlw	2
   990  0487  00C3               	movwf	??_main
   991  0488  0843               	movf	??_main,w
   992  0489  00C9               	movwf	_con+4
   993  048A                     l1423:	
   994                           
   995                           ;mainsource.c: 53:     srand(TMR0);
   996  048A  0801               	movf	1,w	;volatile
   997  048B  00C3               	movwf	??_main
   998  048C  01C4               	clrf	??_main+1
   999  048D  0843               	movf	??_main,w
  1000  048E  00F3               	movwf	srand@x
  1001  048F  0844               	movf	??_main+1,w
  1002  0490  00F4               	movwf	srand@x+1
  1003  0491  120A  118A  21E2  120A  118A  	fcall	_srand
  1004  0496                     l1425:	
  1005                           
  1006                           ;mainsource.c: 54:     con.ficha_actual = rand() % 7;
  1007  0496  3007               	movlw	7
  1008  0497  1283               	bcf	3,5	;RP0=0, select bank0
  1009  0498  1303               	bcf	3,6	;RP1=0, select bank0
  1010  0499  00AB               	movwf	___awmod@divisor
  1011  049A  3000               	movlw	0
  1012  049B  00AC               	movwf	___awmod@divisor+1
  1013  049C  120A  118A  22EF  120A  118A  	fcall	_rand
  1014  04A1  1283               	bcf	3,5	;RP0=0, select bank0
  1015  04A2  1303               	bcf	3,6	;RP1=0, select bank0
  1016  04A3  0825               	movf	?_rand+1,w
  1017  04A4  00AE               	movwf	___awmod@dividend+1
  1018  04A5  0824               	movf	?_rand,w
  1019  04A6  00AD               	movwf	___awmod@dividend
  1020  04A7  120A  118A  2414  120A  118A  	fcall	___awmod
  1021  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  1022  04AD  1303               	bcf	3,6	;RP1=0, select bank0
  1023  04AE  082B               	movf	?___awmod,w
  1024  04AF  00C3               	movwf	??_main
  1025  04B0  0843               	movf	??_main,w
  1026  04B1  00CA               	movwf	_con+5
  1027  04B2                     l1427:	
  1028                           
  1029                           ;mainsource.c: 58:         srand(TMR0);
  1030  04B2  1283               	bcf	3,5	;RP0=0, select bank0
  1031  04B3  1303               	bcf	3,6	;RP1=0, select bank0
  1032  04B4  0801               	movf	1,w	;volatile
  1033  04B5  00C3               	movwf	??_main
  1034  04B6  01C4               	clrf	??_main+1
  1035  04B7  0843               	movf	??_main,w
  1036  04B8  00F3               	movwf	srand@x
  1037  04B9  0844               	movf	??_main+1,w
  1038  04BA  00F4               	movwf	srand@x+1
  1039  04BB  120A  118A  21E2  120A  118A  	fcall	_srand
  1040  04C0                     l1429:	
  1041                           
  1042                           ;mainsource.c: 59:         checkCount();
  1043  04C0  120A  118A  2599  120A  118A  	fcall	_checkCount
  1044  04C5                     l1431:	
  1045                           
  1046                           ;mainsource.c: 61:         updateScreen(pantalla);
  1047  04C5  30B0               	movlw	(low (_pantalla| 0))& (0+255)
  1048  04C6  120A  118A  237D  120A  118A  	fcall	_updateScreen
  1049  04CB  2CB2               	goto	l1427
  1050  04CC  120A  118A  280C   	ljmp	start
  1051  04CF                     __end_of_main:	
  1052                           
  1053                           	psect	text1
  1054  037D                     __ptext1:	
  1055 ;; *************** function _updateScreen *****************
  1056 ;; Defined at:
  1057 ;;		line 12 in file "screen.c"
  1058 ;; Parameters:    Size  Location     Type
  1059 ;;  screen          1    wreg     PTR unsigned int 
  1060 ;;		 -> pantalla(16), 
  1061 ;; Auto vars:     Size  Location     Type
  1062 ;;  screen          1   10[COMMON] PTR unsigned int 
  1063 ;;		 -> pantalla(16), 
  1064 ;; Return value:  Size  Location     Type
  1065 ;;                  1    wreg      void 
  1066 ;; Registers used:
  1067 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1068 ;; Tracked objects:
  1069 ;;		On entry : 0/0
  1070 ;;		On exit  : 0/0
  1071 ;;		Unchanged: 0/0
  1072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1073 ;;      Params:         0       0       0       0       0
  1074 ;;      Locals:         1       0       0       0       0
  1075 ;;      Temps:          0       4       0       0       0
  1076 ;;      Totals:         1       4       0       0       0
  1077 ;;Total ram usage:        5 bytes
  1078 ;; Hardware stack levels used:    1
  1079 ;; Hardware stack levels required when called:    3
  1080 ;; This function calls:
  1081 ;;		_setFilas
  1082 ;;		_shiftBitColumna
  1083 ;; This function is called by:
  1084 ;;		_main
  1085 ;; This function uses a non-reentrant model
  1086 ;;
  1087                           
  1088                           
  1089                           ;psect for function _updateScreen
  1090  037D                     _updateScreen:	
  1091                           
  1092                           ;incstack = 0
  1093                           ; Regs used in _updateScreen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1094                           ;updateScreen@screen stored from wreg
  1095  037D  00FB               	movwf	updateScreen@screen
  1096  037E                     l1397:	
  1097                           
  1098                           ;screen.c: 13:     if(con.columna == 9){
  1099  037E  3009               	movlw	9
  1100  037F  1283               	bcf	3,5	;RP0=0, select bank0
  1101  0380  1303               	bcf	3,6	;RP1=0, select bank0
  1102  0381  0645               	xorwf	_con,w
  1103  0382  1D03               	btfss	3,2
  1104  0383  2B85               	goto	u991
  1105  0384  2B86               	goto	u990
  1106  0385                     u991:	
  1107  0385  2BA6               	goto	l1405
  1108  0386                     u990:	
  1109  0386                     l1399:	
  1110                           
  1111                           ;screen.c: 14:         con.columna = 1;
  1112  0386  01C5               	clrf	_con
  1113  0387  0AC5               	incf	_con,f
  1114  0388                     l1401:	
  1115                           
  1116                           ;screen.c: 15:         setFilas(~screen[con.columna-1]);
  1117  0388  0845               	movf	_con,w
  1118  0389  00A2               	movwf	??_updateScreen
  1119  038A  0722               	addwf	??_updateScreen,w
  1120  038B  077B               	addwf	updateScreen@screen,w
  1121  038C  00A3               	movwf	??_updateScreen+1
  1122  038D  0823               	movf	??_updateScreen+1,w
  1123  038E  3EFE               	addlw	-2
  1124  038F  0084               	movwf	4
  1125  0390  1383               	bcf	3,7	;select IRP bank0
  1126  0391  0800               	movf	0,w
  1127  0392  00A4               	movwf	??_updateScreen+2
  1128  0393  0A84               	incf	4,f
  1129  0394  0800               	movf	0,w
  1130  0395  00A5               	movwf	??_updateScreen+3
  1131  0396  0924               	comf	??_updateScreen+2,w
  1132  0397  00F3               	movwf	setFilas@reg_value
  1133  0398  0925               	comf	??_updateScreen+3,w
  1134  0399  00F4               	movwf	setFilas@reg_value+1
  1135  039A  120A  118A  2336  120A  118A  	fcall	_setFilas
  1136  039F                     l1403:	
  1137                           
  1138                           ;screen.c: 16:         shiftBitColumna(1);
  1139  039F  3001               	movlw	1
  1140  03A0  120A  118A  2247  120A  118A  	fcall	_shiftBitColumna
  1141                           
  1142                           ;screen.c: 17:     }
  1143  03A5  2BC7               	goto	l168
  1144  03A6                     l1405:	
  1145                           
  1146                           ;screen.c: 19:         con.columna++;
  1147  03A6  3001               	movlw	1
  1148  03A7  00A2               	movwf	??_updateScreen
  1149  03A8  0822               	movf	??_updateScreen,w
  1150  03A9  07C5               	addwf	_con,f
  1151  03AA                     l1407:	
  1152                           
  1153                           ;screen.c: 20:         setFilas(~screen[con.columna-1]);
  1154  03AA  0845               	movf	_con,w
  1155  03AB  00A2               	movwf	??_updateScreen
  1156  03AC  0722               	addwf	??_updateScreen,w
  1157  03AD  077B               	addwf	updateScreen@screen,w
  1158  03AE  00A3               	movwf	??_updateScreen+1
  1159  03AF  0823               	movf	??_updateScreen+1,w
  1160  03B0  3EFE               	addlw	-2
  1161  03B1  0084               	movwf	4
  1162  03B2  1383               	bcf	3,7	;select IRP bank0
  1163  03B3  0800               	movf	0,w
  1164  03B4  00A4               	movwf	??_updateScreen+2
  1165  03B5  0A84               	incf	4,f
  1166  03B6  0800               	movf	0,w
  1167  03B7  00A5               	movwf	??_updateScreen+3
  1168  03B8  0924               	comf	??_updateScreen+2,w
  1169  03B9  00F3               	movwf	setFilas@reg_value
  1170  03BA  0925               	comf	??_updateScreen+3,w
  1171  03BB  00F4               	movwf	setFilas@reg_value+1
  1172  03BC  120A  118A  2336  120A  118A  	fcall	_setFilas
  1173  03C1                     l1409:	
  1174                           
  1175                           ;screen.c: 21:         shiftBitColumna(0);
  1176  03C1  3000               	movlw	0
  1177  03C2  120A  118A  2247  120A  118A  	fcall	_shiftBitColumna
  1178  03C7                     l168:	
  1179  03C7  0008               	return
  1180  03C8                     __end_of_updateScreen:	
  1181                           
  1182                           	psect	text2
  1183  0247                     __ptext2:	
  1184 ;; *************** function _shiftBitColumna *****************
  1185 ;; Defined at:
  1186 ;;		line 32 in file "columnas.c"
  1187 ;; Parameters:    Size  Location     Type
  1188 ;;  bit             1    wreg     unsigned char 
  1189 ;; Auto vars:     Size  Location     Type
  1190 ;;  bit             1    3[COMMON] unsigned char 
  1191 ;; Return value:  Size  Location     Type
  1192 ;;                  1    wreg      void 
  1193 ;; Registers used:
  1194 ;;		wreg, status,2, status,0, pclath, cstack
  1195 ;; Tracked objects:
  1196 ;;		On entry : 0/0
  1197 ;;		On exit  : 0/0
  1198 ;;		Unchanged: 0/0
  1199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1200 ;;      Params:         0       0       0       0       0
  1201 ;;      Locals:         1       0       0       0       0
  1202 ;;      Temps:          1       0       0       0       0
  1203 ;;      Totals:         2       0       0       0       0
  1204 ;;Total ram usage:        2 bytes
  1205 ;; Hardware stack levels used:    1
  1206 ;; Hardware stack levels required when called:    2
  1207 ;; This function calls:
  1208 ;;		_latchClock_Col
  1209 ;;		_latchClock_Fil
  1210 ;;		_shiftClock_Col
  1211 ;; This function is called by:
  1212 ;;		_updateScreen
  1213 ;; This function uses a non-reentrant model
  1214 ;;
  1215                           
  1216                           
  1217                           ;psect for function _shiftBitColumna
  1218  0247                     _shiftBitColumna:	
  1219                           
  1220                           ;incstack = 0
  1221                           ; Regs used in _shiftBitColumna: [wreg+status,2+status,0+pclath+cstack]
  1222                           ;shiftBitColumna@bit stored from wreg
  1223  0247  00F4               	movwf	shiftBitColumna@bit
  1224  0248                     l1217:	
  1225                           
  1226                           ;columnas.c: 33:     PORTDbits.RD4= bit & 0x01;
  1227  0248  0874               	movf	shiftBitColumna@bit,w
  1228  0249  3901               	andlw	1
  1229  024A  00F3               	movwf	??_shiftBitColumna
  1230  024B  0EF3               	swapf	??_shiftBitColumna,f
  1231  024C  1283               	bcf	3,5	;RP0=0, select bank0
  1232  024D  1303               	bcf	3,6	;RP1=0, select bank0
  1233  024E  0808               	movf	8,w	;volatile
  1234  024F  0673               	xorwf	??_shiftBitColumna,w
  1235  0250  39EF               	andlw	-17
  1236  0251  0673               	xorwf	??_shiftBitColumna,w
  1237  0252  0088               	movwf	8	;volatile
  1238  0253                     l1219:	
  1239                           
  1240                           ;columnas.c: 34:     shiftClock_Col();
  1241  0253  120A  118A  21CC  120A  118A  	fcall	_shiftClock_Col
  1242  0258                     l1221:	
  1243                           
  1244                           ;columnas.c: 35:     latchClock_Col();
  1245  0258  120A  118A  21BB  120A  118A  	fcall	_latchClock_Col
  1246  025D                     l1223:	
  1247                           
  1248                           ;columnas.c: 36:     latchClock_Fil();
  1249  025D  120A  118A  21C6  120A  118A  	fcall	_latchClock_Fil
  1250  0262                     l145:	
  1251  0262  0008               	return
  1252  0263                     __end_of_shiftBitColumna:	
  1253                           
  1254                           	psect	text3
  1255  01CC                     __ptext3:	
  1256 ;; *************** function _shiftClock_Col *****************
  1257 ;; Defined at:
  1258 ;;		line 12 in file "columnas.c"
  1259 ;; Parameters:    Size  Location     Type
  1260 ;;		None
  1261 ;; Auto vars:     Size  Location     Type
  1262 ;;		None
  1263 ;; Return value:  Size  Location     Type
  1264 ;;                  1    wreg      void 
  1265 ;; Registers used:
  1266 ;;		None
  1267 ;; Tracked objects:
  1268 ;;		On entry : 0/0
  1269 ;;		On exit  : 0/0
  1270 ;;		Unchanged: 0/0
  1271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1272 ;;      Params:         0       0       0       0       0
  1273 ;;      Locals:         0       0       0       0       0
  1274 ;;      Temps:          0       0       0       0       0
  1275 ;;      Totals:         0       0       0       0       0
  1276 ;;Total ram usage:        0 bytes
  1277 ;; Hardware stack levels used:    1
  1278 ;; Hardware stack levels required when called:    1
  1279 ;; This function calls:
  1280 ;;		Nothing
  1281 ;; This function is called by:
  1282 ;;		_shiftBitColumna
  1283 ;;		_setColumnas
  1284 ;; This function uses a non-reentrant model
  1285 ;;
  1286                           
  1287                           
  1288                           ;psect for function _shiftClock_Col
  1289  01CC                     _shiftClock_Col:	
  1290  01CC                     l1147:	
  1291                           ;incstack = 0
  1292                           ; Regs used in _shiftClock_Col: []
  1293                           
  1294                           
  1295                           ;columnas.c: 13:     PORTDbits.RD7 = 0;
  1296  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  1297  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  1298  01CE  1388               	bcf	8,7	;volatile
  1299                           
  1300                           ;columnas.c: 14:     PORTDbits.RD7 = 1;
  1301  01CF  1788               	bsf	8,7	;volatile
  1302                           
  1303                           ;columnas.c: 15:     PORTDbits.RD7 = 0;
  1304  01D0  1388               	bcf	8,7	;volatile
  1305  01D1                     l137:	
  1306  01D1  0008               	return
  1307  01D2                     __end_of_shiftClock_Col:	
  1308                           
  1309                           	psect	text4
  1310  01C6                     __ptext4:	
  1311 ;; *************** function _latchClock_Fil *****************
  1312 ;; Defined at:
  1313 ;;		line 7 in file "filas.c"
  1314 ;; Parameters:    Size  Location     Type
  1315 ;;		None
  1316 ;; Auto vars:     Size  Location     Type
  1317 ;;		None
  1318 ;; Return value:  Size  Location     Type
  1319 ;;                  1    wreg      void 
  1320 ;; Registers used:
  1321 ;;		None
  1322 ;; Tracked objects:
  1323 ;;		On entry : 0/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1327 ;;      Params:         0       0       0       0       0
  1328 ;;      Locals:         0       0       0       0       0
  1329 ;;      Temps:          0       0       0       0       0
  1330 ;;      Totals:         0       0       0       0       0
  1331 ;;Total ram usage:        0 bytes
  1332 ;; Hardware stack levels used:    1
  1333 ;; Hardware stack levels required when called:    1
  1334 ;; This function calls:
  1335 ;;		Nothing
  1336 ;; This function is called by:
  1337 ;;		_shiftBitColumna
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341                           
  1342                           ;psect for function _latchClock_Fil
  1343  01C6                     _latchClock_Fil:	
  1344  01C6                     l1141:	
  1345                           ;incstack = 0
  1346                           ; Regs used in _latchClock_Fil: []
  1347                           
  1348                           
  1349                           ;filas.c: 8:     PORTCbits.RC6 = 0;
  1350  01C6  1283               	bcf	3,5	;RP0=0, select bank0
  1351  01C7  1303               	bcf	3,6	;RP1=0, select bank0
  1352  01C8  1307               	bcf	7,6	;volatile
  1353                           
  1354                           ;filas.c: 9:     PORTCbits.RC6 = 1;
  1355  01C9  1707               	bsf	7,6	;volatile
  1356                           
  1357                           ;filas.c: 10:     PORTCbits.RC6 = 0;
  1358  01CA  1307               	bcf	7,6	;volatile
  1359  01CB                     l119:	
  1360  01CB  0008               	return
  1361  01CC                     __end_of_latchClock_Fil:	
  1362                           
  1363                           	psect	text5
  1364  01BB                     __ptext5:	
  1365 ;; *************** function _latchClock_Col *****************
  1366 ;; Defined at:
  1367 ;;		line 7 in file "columnas.c"
  1368 ;; Parameters:    Size  Location     Type
  1369 ;;		None
  1370 ;; Auto vars:     Size  Location     Type
  1371 ;;		None
  1372 ;; Return value:  Size  Location     Type
  1373 ;;                  1    wreg      void 
  1374 ;; Registers used:
  1375 ;;		None
  1376 ;; Tracked objects:
  1377 ;;		On entry : 0/0
  1378 ;;		On exit  : 0/0
  1379 ;;		Unchanged: 0/0
  1380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1381 ;;      Params:         0       0       0       0       0
  1382 ;;      Locals:         0       0       0       0       0
  1383 ;;      Temps:          0       0       0       0       0
  1384 ;;      Totals:         0       0       0       0       0
  1385 ;;Total ram usage:        0 bytes
  1386 ;; Hardware stack levels used:    1
  1387 ;; Hardware stack levels required when called:    1
  1388 ;; This function calls:
  1389 ;;		Nothing
  1390 ;; This function is called by:
  1391 ;;		_shiftBitColumna
  1392 ;;		_setColumnas
  1393 ;; This function uses a non-reentrant model
  1394 ;;
  1395                           
  1396                           
  1397                           ;psect for function _latchClock_Col
  1398  01BB                     _latchClock_Col:	
  1399  01BB                     l1145:	
  1400                           ;incstack = 0
  1401                           ; Regs used in _latchClock_Col: []
  1402                           
  1403                           
  1404                           ;columnas.c: 8:     PORTDbits.RD6 = 1;
  1405  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  1406  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  1407  01BD  1708               	bsf	8,6	;volatile
  1408                           
  1409                           ;columnas.c: 9:     PORTDbits.RD6 = 0;
  1410  01BE  1308               	bcf	8,6	;volatile
  1411  01BF                     l134:	
  1412  01BF  0008               	return
  1413  01C0                     __end_of_latchClock_Col:	
  1414                           
  1415                           	psect	text6
  1416  0336                     __ptext6:	
  1417 ;; *************** function _setFilas *****************
  1418 ;; Defined at:
  1419 ;;		line 19 in file "filas.c"
  1420 ;; Parameters:    Size  Location     Type
  1421 ;;  reg_value       2    2[COMMON] unsigned int 
  1422 ;; Auto vars:     Size  Location     Type
  1423 ;;  i               2    0[BANK0 ] int 
  1424 ;; Return value:  Size  Location     Type
  1425 ;;                  1    wreg      void 
  1426 ;; Registers used:
  1427 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1428 ;; Tracked objects:
  1429 ;;		On entry : 0/0
  1430 ;;		On exit  : 0/0
  1431 ;;		Unchanged: 0/0
  1432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1433 ;;      Params:         2       0       0       0       0
  1434 ;;      Locals:         0       2       0       0       0
  1435 ;;      Temps:          6       0       0       0       0
  1436 ;;      Totals:         8       2       0       0       0
  1437 ;;Total ram usage:       10 bytes
  1438 ;; Hardware stack levels used:    1
  1439 ;; Hardware stack levels required when called:    2
  1440 ;; This function calls:
  1441 ;;		_shiftClock_Fil
  1442 ;; This function is called by:
  1443 ;;		_updateScreen
  1444 ;; This function uses a non-reentrant model
  1445 ;;
  1446                           
  1447                           
  1448                           ;psect for function _setFilas
  1449  0336                     _setFilas:	
  1450  0336                     l1203:	
  1451                           ;incstack = 0
  1452                           ; Regs used in _setFilas: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1453                           
  1454                           
  1455                           ;filas.c: 20:     int i = 0;
  1456  0336  1283               	bcf	3,5	;RP0=0, select bank0
  1457  0337  1303               	bcf	3,6	;RP1=0, select bank0
  1458  0338  01A0               	clrf	setFilas@i
  1459  0339  01A1               	clrf	setFilas@i+1
  1460                           
  1461                           ;filas.c: 21:     for(i=0;i<16;i++){
  1462  033A  01A0               	clrf	setFilas@i
  1463  033B  01A1               	clrf	setFilas@i+1
  1464  033C                     l1205:	
  1465  033C  0821               	movf	setFilas@i+1,w
  1466  033D  3A80               	xorlw	128
  1467  033E  00FF               	movwf	btemp+1
  1468  033F  3080               	movlw	128
  1469  0340  027F               	subwf	btemp+1,w
  1470  0341  1D03               	skipz
  1471  0342  2B45               	goto	u735
  1472  0343  3010               	movlw	16
  1473  0344  0220               	subwf	setFilas@i,w
  1474  0345                     u735:	
  1475  0345  1C03               	skipc
  1476  0346  2B48               	goto	u731
  1477  0347  2B49               	goto	u730
  1478  0348                     u731:	
  1479  0348  2B4A               	goto	l1209
  1480  0349                     u730:	
  1481  0349  2B7C               	goto	l127
  1482  034A                     l1209:	
  1483                           
  1484                           ;filas.c: 22:         PORTCbits.RC4 = (reg_value & (1<<i) )>>i;
  1485  034A  1283               	bcf	3,5	;RP0=0, select bank0
  1486  034B  1303               	bcf	3,6	;RP1=0, select bank0
  1487  034C  0A20               	incf	setFilas@i,w
  1488  034D  00F5               	movwf	??_setFilas
  1489  034E  3001               	movlw	1
  1490  034F  00F6               	movwf	??_setFilas+1
  1491  0350  3000               	movlw	0
  1492  0351  00F7               	movwf	??_setFilas+2
  1493  0352  2B56               	goto	u744
  1494  0353                     u745:	
  1495  0353  1003               	clrc
  1496  0354  0DF6               	rlf	??_setFilas+1,f
  1497  0355  0DF7               	rlf	??_setFilas+2,f
  1498  0356                     u744:	
  1499  0356  0BF5               	decfsz	??_setFilas,f
  1500  0357  2B53               	goto	u745
  1501  0358  0873               	movf	setFilas@reg_value,w
  1502  0359  0576               	andwf	??_setFilas+1,w
  1503  035A  00F8               	movwf	??_setFilas+3
  1504  035B  0874               	movf	setFilas@reg_value+1,w
  1505  035C  0577               	andwf	??_setFilas+2,w
  1506  035D  00F9               	movwf	??_setFilas+4
  1507  035E  0A20               	incf	setFilas@i,w
  1508  035F  2B63               	goto	u754
  1509  0360                     u755:	
  1510  0360  1003               	clrc
  1511  0361  0CF9               	rrf	??_setFilas+4,f
  1512  0362  0CF8               	rrf	??_setFilas+3,f
  1513  0363                     u754:	
  1514  0363  3EFF               	addlw	-1
  1515  0364  1D03               	skipz
  1516  0365  2B60               	goto	u755
  1517  0366  0878               	movf	??_setFilas+3,w
  1518  0367  00FA               	movwf	??_setFilas+5
  1519  0368  0EFA               	swapf	??_setFilas+5,f
  1520  0369  0807               	movf	7,w	;volatile
  1521  036A  067A               	xorwf	??_setFilas+5,w
  1522  036B  39EF               	andlw	-17
  1523  036C  067A               	xorwf	??_setFilas+5,w
  1524  036D  0087               	movwf	7	;volatile
  1525  036E                     l1211:	
  1526                           
  1527                           ;filas.c: 23:         shiftClock_Fil();
  1528  036E  120A  118A  21C0  120A  118A  	fcall	_shiftClock_Fil
  1529  0373                     l1213:	
  1530                           
  1531                           ;filas.c: 24:     }
  1532  0373  3001               	movlw	1
  1533  0374  1283               	bcf	3,5	;RP0=0, select bank0
  1534  0375  1303               	bcf	3,6	;RP1=0, select bank0
  1535  0376  07A0               	addwf	setFilas@i,f
  1536  0377  1803               	skipnc
  1537  0378  0AA1               	incf	setFilas@i+1,f
  1538  0379  3000               	movlw	0
  1539  037A  07A1               	addwf	setFilas@i+1,f
  1540  037B  2B3C               	goto	l1205
  1541  037C                     l127:	
  1542  037C  0008               	return
  1543  037D                     __end_of_setFilas:	
  1544                           
  1545                           	psect	text7
  1546  01C0                     __ptext7:	
  1547 ;; *************** function _shiftClock_Fil *****************
  1548 ;; Defined at:
  1549 ;;		line 13 in file "filas.c"
  1550 ;; Parameters:    Size  Location     Type
  1551 ;;		None
  1552 ;; Auto vars:     Size  Location     Type
  1553 ;;		None
  1554 ;; Return value:  Size  Location     Type
  1555 ;;                  1    wreg      void 
  1556 ;; Registers used:
  1557 ;;		None
  1558 ;; Tracked objects:
  1559 ;;		On entry : 0/0
  1560 ;;		On exit  : 0/0
  1561 ;;		Unchanged: 0/0
  1562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1563 ;;      Params:         0       0       0       0       0
  1564 ;;      Locals:         0       0       0       0       0
  1565 ;;      Temps:          0       0       0       0       0
  1566 ;;      Totals:         0       0       0       0       0
  1567 ;;Total ram usage:        0 bytes
  1568 ;; Hardware stack levels used:    1
  1569 ;; Hardware stack levels required when called:    1
  1570 ;; This function calls:
  1571 ;;		Nothing
  1572 ;; This function is called by:
  1573 ;;		_setFilas
  1574 ;; This function uses a non-reentrant model
  1575 ;;
  1576                           
  1577                           
  1578                           ;psect for function _shiftClock_Fil
  1579  01C0                     _shiftClock_Fil:	
  1580  01C0                     l1143:	
  1581                           ;incstack = 0
  1582                           ; Regs used in _shiftClock_Fil: []
  1583                           
  1584                           
  1585                           ;filas.c: 14:     PORTCbits.RC7 = 0;
  1586  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  1587  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  1588  01C2  1387               	bcf	7,7	;volatile
  1589                           
  1590                           ;filas.c: 15:     PORTCbits.RC7 = 1;
  1591  01C3  1787               	bsf	7,7	;volatile
  1592                           
  1593                           ;filas.c: 16:     PORTCbits.RC7 = 0;
  1594  01C4  1387               	bcf	7,7	;volatile
  1595  01C5                     l122:	
  1596  01C5  0008               	return
  1597  01C6                     __end_of_shiftClock_Fil:	
  1598                           
  1599                           	psect	text8
  1600  01E2                     __ptext8:	
  1601 ;; *************** function _srand *****************
  1602 ;; Defined at:
  1603 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  1604 ;; Parameters:    Size  Location     Type
  1605 ;;  x               2    2[COMMON] unsigned int 
  1606 ;; Auto vars:     Size  Location     Type
  1607 ;;		None
  1608 ;; Return value:  Size  Location     Type
  1609 ;;                  1    wreg      void 
  1610 ;; Registers used:
  1611 ;;		wreg
  1612 ;; Tracked objects:
  1613 ;;		On entry : 0/0
  1614 ;;		On exit  : 0/0
  1615 ;;		Unchanged: 0/0
  1616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1617 ;;      Params:         2       0       0       0       0
  1618 ;;      Locals:         0       0       0       0       0
  1619 ;;      Temps:          0       0       0       0       0
  1620 ;;      Totals:         2       0       0       0       0
  1621 ;;Total ram usage:        2 bytes
  1622 ;; Hardware stack levels used:    1
  1623 ;; Hardware stack levels required when called:    1
  1624 ;; This function calls:
  1625 ;;		Nothing
  1626 ;; This function is called by:
  1627 ;;		_main
  1628 ;; This function uses a non-reentrant model
  1629 ;;
  1630                           
  1631                           
  1632                           ;psect for function _srand
  1633  01E2                     _srand:	
  1634  01E2                     l1285:	
  1635                           ;incstack = 0
  1636                           ; Regs used in _srand: [wreg]
  1637                           
  1638  01E2  0873               	movf	srand@x,w
  1639  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  1640  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  1641  01E5  00E2               	movwf	_randx
  1642  01E6  0874               	movf	srand@x+1,w
  1643  01E7  00E3               	movwf	_randx+1
  1644  01E8  01E4               	clrf	_randx+2
  1645  01E9  01E5               	clrf	_randx+3
  1646  01EA                     l716:	
  1647  01EA  0008               	return
  1648  01EB                     __end_of_srand:	
  1649                           
  1650                           	psect	text9
  1651  0203                     __ptext9:	
  1652 ;; *************** function _init_timer *****************
  1653 ;; Defined at:
  1654 ;;		line 59 in file "init.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;		None
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;		None
  1659 ;; Return value:  Size  Location     Type
  1660 ;;                  1    wreg      void 
  1661 ;; Registers used:
  1662 ;;		status,2
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1668 ;;      Params:         0       0       0       0       0
  1669 ;;      Locals:         0       0       0       0       0
  1670 ;;      Temps:          0       0       0       0       0
  1671 ;;      Totals:         0       0       0       0       0
  1672 ;;Total ram usage:        0 bytes
  1673 ;; Hardware stack levels used:    1
  1674 ;; Hardware stack levels required when called:    1
  1675 ;; This function calls:
  1676 ;;		Nothing
  1677 ;; This function is called by:
  1678 ;;		_main
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682                           
  1683                           ;psect for function _init_timer
  1684  0203                     _init_timer:	
  1685  0203                     l1267:	
  1686                           ;incstack = 0
  1687                           ; Regs used in _init_timer: [status,2]
  1688                           
  1689                           
  1690                           ;init.c: 61:     TMR0=0;
  1691  0203  1283               	bcf	3,5	;RP0=0, select bank0
  1692  0204  1303               	bcf	3,6	;RP1=0, select bank0
  1693  0205  0181               	clrf	1	;volatile
  1694  0206                     l1269:	
  1695                           
  1696                           ;init.c: 69:     INTCONbits.GIE = 1;
  1697  0206  178B               	bsf	11,7	;volatile
  1698  0207                     l1271:	
  1699                           
  1700                           ;init.c: 70:     INTCONbits.TMR0IE = 1;
  1701  0207  168B               	bsf	11,5	;volatile
  1702  0208                     l1273:	
  1703                           
  1704                           ;init.c: 71:     INTCONbits.TMR0IF = 0;
  1705  0208  110B               	bcf	11,2	;volatile
  1706  0209                     l1275:	
  1707                           
  1708                           ;init.c: 80:     OPTION_REGbits.PSA = 0;
  1709  0209  1683               	bsf	3,5	;RP0=1, select bank1
  1710  020A  1303               	bcf	3,6	;RP1=0, select bank1
  1711  020B  1181               	bcf	1,3	;volatile
  1712  020C                     l1277:	
  1713                           
  1714                           ;init.c: 81:     OPTION_REGbits.PS0 = 0;
  1715  020C  1001               	bcf	1,0	;volatile
  1716  020D                     l1279:	
  1717                           
  1718                           ;init.c: 82:     OPTION_REGbits.PS1 = 0;
  1719  020D  1081               	bcf	1,1	;volatile
  1720  020E                     l1281:	
  1721                           
  1722                           ;init.c: 83:     OPTION_REGbits.PS2 = 0;
  1723  020E  1101               	bcf	1,2	;volatile
  1724  020F                     l1283:	
  1725                           
  1726                           ;init.c: 84:     OPTION_REGbits.T0CS = 0;
  1727  020F  1281               	bcf	1,5	;volatile
  1728  0210                     l36:	
  1729  0210  0008               	return
  1730  0211                     __end_of_init_timer:	
  1731                           
  1732                           	psect	text10
  1733  0211                     __ptext10:	
  1734 ;; *************** function _init_pines *****************
  1735 ;; Defined at:
  1736 ;;		line 43 in file "init.c"
  1737 ;; Parameters:    Size  Location     Type
  1738 ;;		None
  1739 ;; Auto vars:     Size  Location     Type
  1740 ;;		None
  1741 ;; Return value:  Size  Location     Type
  1742 ;;                  1    wreg      void 
  1743 ;; Registers used:
  1744 ;;		status,2, status,0, pclath, cstack
  1745 ;; Tracked objects:
  1746 ;;		On entry : 0/0
  1747 ;;		On exit  : 0/0
  1748 ;;		Unchanged: 0/0
  1749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1750 ;;      Params:         0       0       0       0       0
  1751 ;;      Locals:         0       0       0       0       0
  1752 ;;      Temps:          0       0       0       0       0
  1753 ;;      Totals:         0       0       0       0       0
  1754 ;;Total ram usage:        0 bytes
  1755 ;; Hardware stack levels used:    1
  1756 ;; Hardware stack levels required when called:    2
  1757 ;; This function calls:
  1758 ;;		_init_pines_col
  1759 ;;		_init_pines_fil
  1760 ;;		_init_pines_in
  1761 ;; This function is called by:
  1762 ;;		_main
  1763 ;; This function uses a non-reentrant model
  1764 ;;
  1765                           
  1766                           
  1767                           ;psect for function _init_pines
  1768  0211                     _init_pines:	
  1769  0211                     l1263:	
  1770                           ;incstack = 0
  1771                           ; Regs used in _init_pines: [status,2+status,0+pclath+cstack]
  1772                           
  1773                           
  1774                           ;init.c: 45:     init_pines_fil();
  1775  0211  120A  118A  21F6  120A  118A  	fcall	_init_pines_fil
  1776                           
  1777                           ;init.c: 46:     init_pines_col();
  1778  0216  120A  118A  2221  120A  118A  	fcall	_init_pines_col
  1779                           
  1780                           ;init.c: 47:     init_pines_in();
  1781  021B  120A  118A  21EB  120A  118A  	fcall	_init_pines_in
  1782  0220                     l30:	
  1783  0220  0008               	return
  1784  0221                     __end_of_init_pines:	
  1785                           
  1786                           	psect	text11
  1787  01EB                     __ptext11:	
  1788 ;; *************** function _init_pines_in *****************
  1789 ;; Defined at:
  1790 ;;		line 4 in file "init.c"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;		None
  1793 ;; Auto vars:     Size  Location     Type
  1794 ;;		None
  1795 ;; Return value:  Size  Location     Type
  1796 ;;                  1    wreg      void 
  1797 ;; Registers used:
  1798 ;;		None
  1799 ;; Tracked objects:
  1800 ;;		On entry : 0/0
  1801 ;;		On exit  : 0/0
  1802 ;;		Unchanged: 0/0
  1803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1804 ;;      Params:         0       0       0       0       0
  1805 ;;      Locals:         0       0       0       0       0
  1806 ;;      Temps:          0       0       0       0       0
  1807 ;;      Totals:         0       0       0       0       0
  1808 ;;Total ram usage:        0 bytes
  1809 ;; Hardware stack levels used:    1
  1810 ;; Hardware stack levels required when called:    1
  1811 ;; This function calls:
  1812 ;;		Nothing
  1813 ;; This function is called by:
  1814 ;;		_init_pines
  1815 ;; This function uses a non-reentrant model
  1816 ;;
  1817                           
  1818                           
  1819                           ;psect for function _init_pines_in
  1820  01EB                     _init_pines_in:	
  1821  01EB                     l1163:	
  1822                           ;incstack = 0
  1823                           ; Regs used in _init_pines_in: []
  1824                           
  1825                           
  1826                           ;init.c: 6:     TRISBbits.TRISB5 = 1;
  1827  01EB  1683               	bsf	3,5	;RP0=1, select bank1
  1828  01EC  1303               	bcf	3,6	;RP1=0, select bank1
  1829  01ED  1686               	bsf	6,5	;volatile
  1830                           
  1831                           ;init.c: 7:     TRISBbits.TRISB4 = 1;
  1832  01EE  1606               	bsf	6,4	;volatile
  1833                           
  1834                           ;init.c: 9:     TRISBbits.TRISB6 = 0;
  1835  01EF  1306               	bcf	6,6	;volatile
  1836                           
  1837                           ;init.c: 10:     TRISBbits.TRISB7 = 0;
  1838  01F0  1386               	bcf	6,7	;volatile
  1839                           
  1840                           ;init.c: 12:     PORTBbits.RB6 = 0;
  1841  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  1842  01F2  1303               	bcf	3,6	;RP1=0, select bank0
  1843  01F3  1306               	bcf	6,6	;volatile
  1844                           
  1845                           ;init.c: 13:     PORTBbits.RB7 = 0;
  1846  01F4  1386               	bcf	6,7	;volatile
  1847  01F5                     l21:	
  1848  01F5  0008               	return
  1849  01F6                     __end_of_init_pines_in:	
  1850                           
  1851                           	psect	text12
  1852  01F6                     __ptext12:	
  1853 ;; *************** function _init_pines_fil *****************
  1854 ;; Defined at:
  1855 ;;		line 16 in file "init.c"
  1856 ;; Parameters:    Size  Location     Type
  1857 ;;		None
  1858 ;; Auto vars:     Size  Location     Type
  1859 ;;		None
  1860 ;; Return value:  Size  Location     Type
  1861 ;;                  1    wreg      void 
  1862 ;; Registers used:
  1863 ;;		None
  1864 ;; Tracked objects:
  1865 ;;		On entry : 0/0
  1866 ;;		On exit  : 0/0
  1867 ;;		Unchanged: 0/0
  1868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1869 ;;      Params:         0       0       0       0       0
  1870 ;;      Locals:         0       0       0       0       0
  1871 ;;      Temps:          0       0       0       0       0
  1872 ;;      Totals:         0       0       0       0       0
  1873 ;;Total ram usage:        0 bytes
  1874 ;; Hardware stack levels used:    1
  1875 ;; Hardware stack levels required when called:    1
  1876 ;; This function calls:
  1877 ;;		Nothing
  1878 ;; This function is called by:
  1879 ;;		_init_pines
  1880 ;; This function uses a non-reentrant model
  1881 ;;
  1882                           
  1883                           
  1884                           ;psect for function _init_pines_fil
  1885  01F6                     _init_pines_fil:	
  1886  01F6                     l1165:	
  1887                           ;incstack = 0
  1888                           ; Regs used in _init_pines_fil: []
  1889                           
  1890                           
  1891                           ;init.c: 18:     TRISCbits.TRISC4 = 0;
  1892  01F6  1683               	bsf	3,5	;RP0=1, select bank1
  1893  01F7  1303               	bcf	3,6	;RP1=0, select bank1
  1894  01F8  1207               	bcf	7,4	;volatile
  1895                           
  1896                           ;init.c: 19:     TRISCbits.TRISC5 = 0;
  1897  01F9  1287               	bcf	7,5	;volatile
  1898                           
  1899                           ;init.c: 20:     TRISCbits.TRISC6 = 0;
  1900  01FA  1307               	bcf	7,6	;volatile
  1901                           
  1902                           ;init.c: 21:     TRISCbits.TRISC7 = 0;
  1903  01FB  1387               	bcf	7,7	;volatile
  1904                           
  1905                           ;init.c: 23:     PORTCbits.RC4 = 0;
  1906  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  1907  01FD  1303               	bcf	3,6	;RP1=0, select bank0
  1908  01FE  1207               	bcf	7,4	;volatile
  1909                           
  1910                           ;init.c: 24:     PORTCbits.RC5 = 0;
  1911  01FF  1287               	bcf	7,5	;volatile
  1912                           
  1913                           ;init.c: 25:     PORTCbits.RC6 = 0;
  1914  0200  1307               	bcf	7,6	;volatile
  1915                           
  1916                           ;init.c: 26:     PORTCbits.RC7 = 0;
  1917  0201  1387               	bcf	7,7	;volatile
  1918  0202                     l24:	
  1919  0202  0008               	return
  1920  0203                     __end_of_init_pines_fil:	
  1921                           
  1922                           	psect	text13
  1923  0221                     __ptext13:	
  1924 ;; *************** function _init_pines_col *****************
  1925 ;; Defined at:
  1926 ;;		line 29 in file "init.c"
  1927 ;; Parameters:    Size  Location     Type
  1928 ;;		None
  1929 ;; Auto vars:     Size  Location     Type
  1930 ;;		None
  1931 ;; Return value:  Size  Location     Type
  1932 ;;                  1    wreg      void 
  1933 ;; Registers used:
  1934 ;;		None
  1935 ;; Tracked objects:
  1936 ;;		On entry : 0/0
  1937 ;;		On exit  : 0/0
  1938 ;;		Unchanged: 0/0
  1939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1940 ;;      Params:         0       0       0       0       0
  1941 ;;      Locals:         0       0       0       0       0
  1942 ;;      Temps:          0       0       0       0       0
  1943 ;;      Totals:         0       0       0       0       0
  1944 ;;Total ram usage:        0 bytes
  1945 ;; Hardware stack levels used:    1
  1946 ;; Hardware stack levels required when called:    1
  1947 ;; This function calls:
  1948 ;;		Nothing
  1949 ;; This function is called by:
  1950 ;;		_init_pines
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           
  1954                           
  1955                           ;psect for function _init_pines_col
  1956  0221                     _init_pines_col:	
  1957  0221                     l1167:	
  1958                           ;incstack = 0
  1959                           ; Regs used in _init_pines_col: []
  1960                           
  1961                           
  1962                           ;init.c: 30:     TRISBbits.TRISB0 = 0;
  1963  0221  1683               	bsf	3,5	;RP0=1, select bank1
  1964  0222  1303               	bcf	3,6	;RP1=0, select bank1
  1965  0223  1006               	bcf	6,0	;volatile
  1966                           
  1967                           ;init.c: 31:     PORTBbits.RB0 = 0;
  1968  0224  1283               	bcf	3,5	;RP0=0, select bank0
  1969  0225  1303               	bcf	3,6	;RP1=0, select bank0
  1970  0226  1006               	bcf	6,0	;volatile
  1971                           
  1972                           ;init.c: 33:     TRISDbits.TRISD4 = 0;
  1973  0227  1683               	bsf	3,5	;RP0=1, select bank1
  1974  0228  1303               	bcf	3,6	;RP1=0, select bank1
  1975  0229  1208               	bcf	8,4	;volatile
  1976                           
  1977                           ;init.c: 34:     TRISDbits.TRISD5 = 0;
  1978  022A  1288               	bcf	8,5	;volatile
  1979                           
  1980                           ;init.c: 35:     TRISDbits.TRISD6 = 0;
  1981  022B  1308               	bcf	8,6	;volatile
  1982                           
  1983                           ;init.c: 36:     TRISDbits.TRISD7 = 0;
  1984  022C  1388               	bcf	8,7	;volatile
  1985                           
  1986                           ;init.c: 38:     PORTDbits.RD4 = 0;
  1987  022D  1283               	bcf	3,5	;RP0=0, select bank0
  1988  022E  1303               	bcf	3,6	;RP1=0, select bank0
  1989  022F  1208               	bcf	8,4	;volatile
  1990                           
  1991                           ;init.c: 39:     PORTDbits.RD5 = 0;
  1992  0230  1288               	bcf	8,5	;volatile
  1993                           
  1994                           ;init.c: 40:     PORTDbits.RD6 = 0;
  1995  0231  1308               	bcf	8,6	;volatile
  1996                           
  1997                           ;init.c: 41:     PORTDbits.RD7 = 0;
  1998  0232  1388               	bcf	8,7	;volatile
  1999  0233                     l27:	
  2000  0233  0008               	return
  2001  0234                     __end_of_init_pines_col:	
  2002                           
  2003                           	psect	text14
  2004  01D2                     __ptext14:	
  2005 ;; *************** function _init_interrupt *****************
  2006 ;; Defined at:
  2007 ;;		line 50 in file "init.c"
  2008 ;; Parameters:    Size  Location     Type
  2009 ;;		None
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;		None
  2012 ;; Return value:  Size  Location     Type
  2013 ;;                  1    wreg      void 
  2014 ;; Registers used:
  2015 ;;		None
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2021 ;;      Params:         0       0       0       0       0
  2022 ;;      Locals:         0       0       0       0       0
  2023 ;;      Temps:          0       0       0       0       0
  2024 ;;      Totals:         0       0       0       0       0
  2025 ;;Total ram usage:        0 bytes
  2026 ;; Hardware stack levels used:    1
  2027 ;; Hardware stack levels required when called:    1
  2028 ;; This function calls:
  2029 ;;		Nothing
  2030 ;; This function is called by:
  2031 ;;		_main
  2032 ;; This function uses a non-reentrant model
  2033 ;;
  2034                           
  2035                           
  2036                           ;psect for function _init_interrupt
  2037  01D2                     _init_interrupt:	
  2038  01D2                     l1265:	
  2039                           ;incstack = 0
  2040                           ; Regs used in _init_interrupt: []
  2041                           
  2042                           
  2043                           ;init.c: 51:     INTCONbits.GIE = 1;
  2044  01D2  178B               	bsf	11,7	;volatile
  2045                           
  2046                           ;init.c: 52:     INTCONbits.PEIE = 1;
  2047  01D3  170B               	bsf	11,6	;volatile
  2048                           
  2049                           ;init.c: 53:     INTCONbits.RBIE = 1;
  2050  01D4  158B               	bsf	11,3	;volatile
  2051                           
  2052                           ;init.c: 54:     INTCONbits.RBIF = 0;
  2053  01D5  100B               	bcf	11,0	;volatile
  2054                           
  2055                           ;init.c: 56:     OPTION_REGbits.nRBPU = 0;
  2056  01D6  1683               	bsf	3,5	;RP0=1, select bank1
  2057  01D7  1303               	bcf	3,6	;RP1=0, select bank1
  2058  01D8  1381               	bcf	1,7	;volatile
  2059  01D9                     l33:	
  2060  01D9  0008               	return
  2061  01DA                     __end_of_init_interrupt:	
  2062                           
  2063                           	psect	text15
  2064  0599                     __ptext15:	
  2065 ;; *************** function _checkCount *****************
  2066 ;; Defined at:
  2067 ;;		line 67 in file "mainsource.c"
  2068 ;; Parameters:    Size  Location     Type
  2069 ;;		None
  2070 ;; Auto vars:     Size  Location     Type
  2071 ;;  i               2   29[BANK0 ] int 
  2072 ;;  j               2   27[BANK0 ] int 
  2073 ;; Return value:  Size  Location     Type
  2074 ;;                  1    wreg      void 
  2075 ;; Registers used:
  2076 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2077 ;; Tracked objects:
  2078 ;;		On entry : 0/0
  2079 ;;		On exit  : 0/0
  2080 ;;		Unchanged: 0/0
  2081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2082 ;;      Params:         0       0       0       0       0
  2083 ;;      Locals:         0       4       0       0       0
  2084 ;;      Temps:          0       9       0       0       0
  2085 ;;      Totals:         0      13       0       0       0
  2086 ;;Total ram usage:       13 bytes
  2087 ;; Hardware stack levels used:    1
  2088 ;; Hardware stack levels required when called:    3
  2089 ;; This function calls:
  2090 ;;		___awmod
  2091 ;;		_drawFigure
  2092 ;;		_memset
  2093 ;;		_rand
  2094 ;; This function is called by:
  2095 ;;		_main
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           
  2099                           
  2100                           ;psect for function _checkCount
  2101  0599                     _checkCount:	
  2102  0599                     l1287:	
  2103                           ;incstack = 0
  2104                           ; Regs used in _checkCount: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2105                           
  2106                           
  2107                           ;mainsource.c: 68:     if(con.check_count == 1){
  2108  0599  1283               	bcf	3,5	;RP0=0, select bank0
  2109  059A  1303               	bcf	3,6	;RP1=0, select bank0
  2110  059B  034D               	decf	_con+8,w
  2111  059C  1D03               	btfss	3,2
  2112  059D  2D9F               	goto	u851
  2113  059E  2DA0               	goto	u850
  2114  059F                     u851:	
  2115  059F  2FCF               	goto	l104
  2116  05A0                     u850:	
  2117  05A0                     l1289:	
  2118  05A0  01BB               	clrf	checkCount@j
  2119  05A1  01BC               	clrf	checkCount@j+1
  2120  05A2                     l1291:	
  2121                           
  2122                           ;mainsource.c: 71:         if(timerCount >= 3906){
  2123  05A2  0851               	movf	_timerCount+3,w
  2124  05A3  1D03               	btfss	3,2
  2125  05A4  2DB4               	goto	u860
  2126  05A5  0850               	movf	_timerCount+2,w
  2127  05A6  1D03               	btfss	3,2
  2128  05A7  2DB4               	goto	u860
  2129  05A8  300F               	movlw	15
  2130  05A9  024F               	subwf	_timerCount+1,w
  2131  05AA  1D03               	skipz
  2132  05AB  2DB0               	goto	u863
  2133  05AC  3042               	movlw	66
  2134  05AD  024E               	subwf	_timerCount,w
  2135  05AE  1D03               	skipz
  2136  05AF  2DB0               	goto	u863
  2137  05B0                     u863:	
  2138  05B0  1C03               	btfss	3,0
  2139  05B1  2DB3               	goto	u861
  2140  05B2  2DB4               	goto	u860
  2141  05B3                     u861:	
  2142  05B3  2FCC               	goto	l1395
  2143  05B4                     u860:	
  2144  05B4                     l1293:	
  2145                           
  2146                           ;mainsource.c: 73:             PORTBbits.RB0 = con.led;
  2147  05B4  0C47               	rrf	_con+2,w
  2148  05B5  1C03               	skipc
  2149  05B6  1006               	bcf	6,0	;volatile
  2150  05B7  1803               	skipnc
  2151  05B8  1406               	bsf	6,0	;volatile
  2152  05B9                     l1295:	
  2153                           
  2154                           ;mainsource.c: 74:             con.led= ~con.led;
  2155  05B9  0947               	comf	_con+2,w
  2156  05BA  00B2               	movwf	??_checkCount
  2157  05BB  0832               	movf	??_checkCount,w
  2158  05BC  00C7               	movwf	_con+2
  2159  05BD                     l1297:	
  2160                           
  2161                           ;mainsource.c: 75:             con.ficha_Vpos--;
  2162  05BD  3001               	movlw	1
  2163  05BE  02C8               	subwf	_con+3,f
  2164                           
  2165                           ;mainsource.c: 76:             timerCount = 0;
  2166  05BF  3000               	movlw	0
  2167  05C0  00D1               	movwf	_timerCount+3
  2168  05C1  3000               	movlw	0
  2169  05C2  00D0               	movwf	_timerCount+2
  2170  05C3  3000               	movlw	0
  2171  05C4  00CF               	movwf	_timerCount+1
  2172  05C5  3000               	movlw	0
  2173  05C6  00CE               	movwf	_timerCount
  2174  05C7                     l1299:	
  2175                           
  2176                           ;mainsource.c: 77:             if(con.ficha_Vpos==0){
  2177  05C7  0848               	movf	_con+3,w
  2178  05C8  1D03               	btfss	3,2
  2179  05C9  2DCB               	goto	u871
  2180  05CA  2DCC               	goto	u870
  2181  05CB                     u871:	
  2182  05CB  2E28               	goto	l1317
  2183  05CC                     u870:	
  2184  05CC                     l1301:	
  2185                           
  2186                           ;mainsource.c: 78:                 for(j=0; j<8; j++){
  2187  05CC  01BB               	clrf	checkCount@j
  2188  05CD  01BC               	clrf	checkCount@j+1
  2189  05CE                     l1307:	
  2190                           
  2191                           ;mainsource.c: 79:                     fondo[j] = fondo[j] | ficha[j];
  2192  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  2193  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  2194  05D0  083B               	movf	checkCount@j,w
  2195  05D1  00B2               	movwf	??_checkCount
  2196  05D2  0732               	addwf	??_checkCount,w
  2197  05D3  3EA0               	addlw	(low (_ficha| 0))& (0+255)
  2198  05D4  0084               	movwf	4
  2199  05D5  1383               	bcf	3,7	;select IRP bank1
  2200  05D6  0800               	movf	0,w
  2201  05D7  00B3               	movwf	??_checkCount+1
  2202  05D8  0A84               	incf	4,f
  2203  05D9  0800               	movf	0,w
  2204  05DA  00B4               	movwf	??_checkCount+2
  2205  05DB  083B               	movf	checkCount@j,w
  2206  05DC  00B5               	movwf	??_checkCount+3
  2207  05DD  0735               	addwf	??_checkCount+3,w
  2208  05DE  3E52               	addlw	(low (_fondo| 0))& (0+255)
  2209  05DF  0084               	movwf	4
  2210  05E0  0800               	movf	0,w
  2211  05E1  00B6               	movwf	??_checkCount+4
  2212  05E2  0A84               	incf	4,f
  2213  05E3  0800               	movf	0,w
  2214  05E4  00B7               	movwf	??_checkCount+5
  2215  05E5  0833               	movf	??_checkCount+1,w
  2216  05E6  0436               	iorwf	??_checkCount+4,w
  2217  05E7  00B8               	movwf	??_checkCount+6
  2218  05E8  0834               	movf	??_checkCount+2,w
  2219  05E9  0437               	iorwf	??_checkCount+5,w
  2220  05EA  00B9               	movwf	??_checkCount+7
  2221  05EB  083B               	movf	checkCount@j,w
  2222  05EC  00BA               	movwf	??_checkCount+8
  2223  05ED  073A               	addwf	??_checkCount+8,w
  2224  05EE  3E52               	addlw	(low (_fondo| 0))& (0+255)
  2225  05EF  0084               	movwf	4
  2226  05F0  0838               	movf	??_checkCount+6,w
  2227  05F1  0080               	movwf	0
  2228  05F2  0A84               	incf	4,f
  2229  05F3  0839               	movf	??_checkCount+7,w
  2230  05F4  0080               	movwf	0
  2231  05F5                     l1309:	
  2232                           
  2233                           ;mainsource.c: 80:                 }
  2234  05F5  3001               	movlw	1
  2235  05F6  07BB               	addwf	checkCount@j,f
  2236  05F7  1803               	skipnc
  2237  05F8  0ABC               	incf	checkCount@j+1,f
  2238  05F9  3000               	movlw	0
  2239  05FA  07BC               	addwf	checkCount@j+1,f
  2240  05FB                     l1311:	
  2241  05FB  083C               	movf	checkCount@j+1,w
  2242  05FC  3A80               	xorlw	128
  2243  05FD  00FF               	movwf	btemp+1
  2244  05FE  3080               	movlw	128
  2245  05FF  027F               	subwf	btemp+1,w
  2246  0600  1D03               	skipz
  2247  0601  2E04               	goto	u885
  2248  0602  3008               	movlw	8
  2249  0603  023B               	subwf	checkCount@j,w
  2250  0604                     u885:	
  2251  0604  1C03               	skipc
  2252  0605  2E07               	goto	u881
  2253  0606  2E08               	goto	u880
  2254  0607                     u881:	
  2255  0607  2DCE               	goto	l1307
  2256  0608                     u880:	
  2257  0608                     l1313:	
  2258                           
  2259                           ;mainsource.c: 81:                 con.ficha_Vpos = 16;
  2260  0608  3010               	movlw	16
  2261  0609  1283               	bcf	3,5	;RP0=0, select bank0
  2262  060A  1303               	bcf	3,6	;RP1=0, select bank0
  2263  060B  00B2               	movwf	??_checkCount
  2264  060C  0832               	movf	??_checkCount,w
  2265  060D  00C8               	movwf	_con+3
  2266  060E                     l1315:	
  2267                           
  2268                           ;mainsource.c: 82:                 con.ficha_actual = rand() % 7;
  2269  060E  3007               	movlw	7
  2270  060F  00AB               	movwf	___awmod@divisor
  2271  0610  3000               	movlw	0
  2272  0611  00AC               	movwf	___awmod@divisor+1
  2273  0612  120A  118A  22EF  120A  118A  	fcall	_rand
  2274  0617  1283               	bcf	3,5	;RP0=0, select bank0
  2275  0618  1303               	bcf	3,6	;RP1=0, select bank0
  2276  0619  0825               	movf	?_rand+1,w
  2277  061A  00AE               	movwf	___awmod@dividend+1
  2278  061B  0824               	movf	?_rand,w
  2279  061C  00AD               	movwf	___awmod@dividend
  2280  061D  120A  118A  2414  120A  118A  	fcall	___awmod
  2281  0622  1283               	bcf	3,5	;RP0=0, select bank0
  2282  0623  1303               	bcf	3,6	;RP1=0, select bank0
  2283  0624  082B               	movf	?___awmod,w
  2284  0625  00B2               	movwf	??_checkCount
  2285  0626  0832               	movf	??_checkCount,w
  2286  0627  00CA               	movwf	_con+5
  2287  0628                     l1317:	
  2288                           
  2289                           ;mainsource.c: 85:             drawFigure();
  2290  0628  120A  118A  24CF  120A  118A  	fcall	_drawFigure
  2291  062D                     l1319:	
  2292                           
  2293                           ;mainsource.c: 92:             for(i=0; i<8; i++){
  2294  062D  1283               	bcf	3,5	;RP0=0, select bank0
  2295  062E  1303               	bcf	3,6	;RP1=0, select bank0
  2296  062F  01BD               	clrf	checkCount@i
  2297  0630  01BE               	clrf	checkCount@i+1
  2298  0631                     l1325:	
  2299                           
  2300                           ;mainsource.c: 93:                 pantalla[i] = ficha[i] | fondo[i];
  2301  0631  1283               	bcf	3,5	;RP0=0, select bank0
  2302  0632  1303               	bcf	3,6	;RP1=0, select bank0
  2303  0633  083D               	movf	checkCount@i,w
  2304  0634  00B2               	movwf	??_checkCount
  2305  0635  0732               	addwf	??_checkCount,w
  2306  0636  3E52               	addlw	(low (_fondo| 0))& (0+255)
  2307  0637  0084               	movwf	4
  2308  0638  1383               	bcf	3,7	;select IRP bank0
  2309  0639  0800               	movf	0,w
  2310  063A  00B3               	movwf	??_checkCount+1
  2311  063B  0A84               	incf	4,f
  2312  063C  0800               	movf	0,w
  2313  063D  00B4               	movwf	??_checkCount+2
  2314  063E  083D               	movf	checkCount@i,w
  2315  063F  00B5               	movwf	??_checkCount+3
  2316  0640  0735               	addwf	??_checkCount+3,w
  2317  0641  3EA0               	addlw	(low (_ficha| 0))& (0+255)
  2318  0642  0084               	movwf	4
  2319  0643  0800               	movf	0,w
  2320  0644  00B6               	movwf	??_checkCount+4
  2321  0645  0A84               	incf	4,f
  2322  0646  0800               	movf	0,w
  2323  0647  00B7               	movwf	??_checkCount+5
  2324  0648  0833               	movf	??_checkCount+1,w
  2325  0649  0436               	iorwf	??_checkCount+4,w
  2326  064A  00B8               	movwf	??_checkCount+6
  2327  064B  0834               	movf	??_checkCount+2,w
  2328  064C  0437               	iorwf	??_checkCount+5,w
  2329  064D  00B9               	movwf	??_checkCount+7
  2330  064E  083D               	movf	checkCount@i,w
  2331  064F  00BA               	movwf	??_checkCount+8
  2332  0650  073A               	addwf	??_checkCount+8,w
  2333  0651  3EB0               	addlw	(low (_pantalla| 0))& (0+255)
  2334  0652  0084               	movwf	4
  2335  0653  0838               	movf	??_checkCount+6,w
  2336  0654  0080               	movwf	0
  2337  0655  0A84               	incf	4,f
  2338  0656  0839               	movf	??_checkCount+7,w
  2339  0657  0080               	movwf	0
  2340  0658                     l1327:	
  2341                           
  2342                           ;mainsource.c: 94:             }
  2343  0658  3001               	movlw	1
  2344  0659  07BD               	addwf	checkCount@i,f
  2345  065A  1803               	skipnc
  2346  065B  0ABE               	incf	checkCount@i+1,f
  2347  065C  3000               	movlw	0
  2348  065D  07BE               	addwf	checkCount@i+1,f
  2349  065E                     l1329:	
  2350  065E  083E               	movf	checkCount@i+1,w
  2351  065F  3A80               	xorlw	128
  2352  0660  00FF               	movwf	btemp+1
  2353  0661  3080               	movlw	128
  2354  0662  027F               	subwf	btemp+1,w
  2355  0663  1D03               	skipz
  2356  0664  2E67               	goto	u895
  2357  0665  3008               	movlw	8
  2358  0666  023D               	subwf	checkCount@i,w
  2359  0667                     u895:	
  2360  0667  1C03               	skipc
  2361  0668  2E6A               	goto	u891
  2362  0669  2E6B               	goto	u890
  2363  066A                     u891:	
  2364  066A  2E31               	goto	l1325
  2365  066B                     u890:	
  2366  066B                     l1331:	
  2367                           
  2368                           ;mainsource.c: 101:             for(i=con.ficha_Hpos; i<(con.ficha_Hpos+4); i++){
  2369  066B  1283               	bcf	3,5	;RP0=0, select bank0
  2370  066C  1303               	bcf	3,6	;RP1=0, select bank0
  2371  066D  0849               	movf	_con+4,w
  2372  066E  00B2               	movwf	??_checkCount
  2373  066F  01B3               	clrf	??_checkCount+1
  2374  0670  0832               	movf	??_checkCount,w
  2375  0671  00BD               	movwf	checkCount@i
  2376  0672  0833               	movf	??_checkCount+1,w
  2377  0673  00BE               	movwf	checkCount@i+1
  2378  0674  2EFE               	goto	l90
  2379  0675                     l1333:	
  2380                           
  2381                           ;mainsource.c: 102:                 if((ficha[i]>>1 & fondo[i]) != 0){
  2382  0675  1283               	bcf	3,5	;RP0=0, select bank0
  2383  0676  1303               	bcf	3,6	;RP1=0, select bank0
  2384  0677  083D               	movf	checkCount@i,w
  2385  0678  00B2               	movwf	??_checkCount
  2386  0679  0732               	addwf	??_checkCount,w
  2387  067A  3E52               	addlw	(low (_fondo| 0))& (0+255)
  2388  067B  0084               	movwf	4
  2389  067C  1383               	bcf	3,7	;select IRP bank0
  2390  067D  0800               	movf	0,w
  2391  067E  00B3               	movwf	??_checkCount+1
  2392  067F  0A84               	incf	4,f
  2393  0680  0800               	movf	0,w
  2394  0681  00B4               	movwf	??_checkCount+2
  2395  0682  083D               	movf	checkCount@i,w
  2396  0683  00B5               	movwf	??_checkCount+3
  2397  0684  0735               	addwf	??_checkCount+3,w
  2398  0685  3EA0               	addlw	(low (_ficha| 0))& (0+255)
  2399  0686  0084               	movwf	4
  2400  0687  0800               	movf	0,w
  2401  0688  00B6               	movwf	??_checkCount+4
  2402  0689  0A84               	incf	4,f
  2403  068A  0800               	movf	0,w
  2404  068B  00B7               	movwf	??_checkCount+5
  2405  068C  1003               	clrc
  2406  068D  0CB7               	rrf	??_checkCount+5,f
  2407  068E  0CB6               	rrf	??_checkCount+4,f
  2408  068F  0833               	movf	??_checkCount+1,w
  2409  0690  0536               	andwf	??_checkCount+4,w
  2410  0691  00B8               	movwf	??_checkCount+6
  2411  0692  0834               	movf	??_checkCount+2,w
  2412  0693  0537               	andwf	??_checkCount+5,w
  2413  0694  00B9               	movwf	??_checkCount+7
  2414  0695  0838               	movf	??_checkCount+6,w
  2415  0696  0439               	iorwf	??_checkCount+7,w
  2416  0697  1903               	btfsc	3,2
  2417  0698  2E9A               	goto	u901
  2418  0699  2E9B               	goto	u900
  2419  069A                     u901:	
  2420  069A  2EF8               	goto	l1351
  2421  069B                     u900:	
  2422  069B                     l1335:	
  2423                           
  2424                           ;mainsource.c: 103:                     for(j=0; j<8; j++){
  2425  069B  01BB               	clrf	checkCount@j
  2426  069C  01BC               	clrf	checkCount@j+1
  2427  069D                     l1341:	
  2428                           
  2429                           ;mainsource.c: 104:                         fondo[j] = fondo[j] | ficha[j];
  2430  069D  1283               	bcf	3,5	;RP0=0, select bank0
  2431  069E  1303               	bcf	3,6	;RP1=0, select bank0
  2432  069F  083B               	movf	checkCount@j,w
  2433  06A0  00B2               	movwf	??_checkCount
  2434  06A1  0732               	addwf	??_checkCount,w
  2435  06A2  3EA0               	addlw	(low (_ficha| 0))& (0+255)
  2436  06A3  0084               	movwf	4
  2437  06A4  1383               	bcf	3,7	;select IRP bank1
  2438  06A5  0800               	movf	0,w
  2439  06A6  00B3               	movwf	??_checkCount+1
  2440  06A7  0A84               	incf	4,f
  2441  06A8  0800               	movf	0,w
  2442  06A9  00B4               	movwf	??_checkCount+2
  2443  06AA  083B               	movf	checkCount@j,w
  2444  06AB  00B5               	movwf	??_checkCount+3
  2445  06AC  0735               	addwf	??_checkCount+3,w
  2446  06AD  3E52               	addlw	(low (_fondo| 0))& (0+255)
  2447  06AE  0084               	movwf	4
  2448  06AF  0800               	movf	0,w
  2449  06B0  00B6               	movwf	??_checkCount+4
  2450  06B1  0A84               	incf	4,f
  2451  06B2  0800               	movf	0,w
  2452  06B3  00B7               	movwf	??_checkCount+5
  2453  06B4  0833               	movf	??_checkCount+1,w
  2454  06B5  0436               	iorwf	??_checkCount+4,w
  2455  06B6  00B8               	movwf	??_checkCount+6
  2456  06B7  0834               	movf	??_checkCount+2,w
  2457  06B8  0437               	iorwf	??_checkCount+5,w
  2458  06B9  00B9               	movwf	??_checkCount+7
  2459  06BA  083B               	movf	checkCount@j,w
  2460  06BB  00BA               	movwf	??_checkCount+8
  2461  06BC  073A               	addwf	??_checkCount+8,w
  2462  06BD  3E52               	addlw	(low (_fondo| 0))& (0+255)
  2463  06BE  0084               	movwf	4
  2464  06BF  0838               	movf	??_checkCount+6,w
  2465  06C0  0080               	movwf	0
  2466  06C1  0A84               	incf	4,f
  2467  06C2  0839               	movf	??_checkCount+7,w
  2468  06C3  0080               	movwf	0
  2469  06C4                     l1343:	
  2470                           
  2471                           ;mainsource.c: 105:                     }
  2472  06C4  3001               	movlw	1
  2473  06C5  07BB               	addwf	checkCount@j,f
  2474  06C6  1803               	skipnc
  2475  06C7  0ABC               	incf	checkCount@j+1,f
  2476  06C8  3000               	movlw	0
  2477  06C9  07BC               	addwf	checkCount@j+1,f
  2478  06CA                     l1345:	
  2479  06CA  083C               	movf	checkCount@j+1,w
  2480  06CB  3A80               	xorlw	128
  2481  06CC  00FF               	movwf	btemp+1
  2482  06CD  3080               	movlw	128
  2483  06CE  027F               	subwf	btemp+1,w
  2484  06CF  1D03               	skipz
  2485  06D0  2ED3               	goto	u915
  2486  06D1  3008               	movlw	8
  2487  06D2  023B               	subwf	checkCount@j,w
  2488  06D3                     u915:	
  2489  06D3  1C03               	skipc
  2490  06D4  2ED6               	goto	u911
  2491  06D5  2ED7               	goto	u910
  2492  06D6                     u911:	
  2493  06D6  2E9D               	goto	l1341
  2494  06D7                     u910:	
  2495  06D7                     l1347:	
  2496                           
  2497                           ;mainsource.c: 106:                     con.ficha_Vpos = 16;
  2498  06D7  3010               	movlw	16
  2499  06D8  1283               	bcf	3,5	;RP0=0, select bank0
  2500  06D9  1303               	bcf	3,6	;RP1=0, select bank0
  2501  06DA  00B2               	movwf	??_checkCount
  2502  06DB  0832               	movf	??_checkCount,w
  2503  06DC  00C8               	movwf	_con+3
  2504  06DD                     l1349:	
  2505                           
  2506                           ;mainsource.c: 107:                     con.ficha_actual = rand() % 7;
  2507  06DD  3007               	movlw	7
  2508  06DE  00AB               	movwf	___awmod@divisor
  2509  06DF  3000               	movlw	0
  2510  06E0  00AC               	movwf	___awmod@divisor+1
  2511  06E1  120A  118A  22EF  120A  118A  	fcall	_rand
  2512  06E6  1283               	bcf	3,5	;RP0=0, select bank0
  2513  06E7  1303               	bcf	3,6	;RP1=0, select bank0
  2514  06E8  0825               	movf	?_rand+1,w
  2515  06E9  00AE               	movwf	___awmod@dividend+1
  2516  06EA  0824               	movf	?_rand,w
  2517  06EB  00AD               	movwf	___awmod@dividend
  2518  06EC  120A  118A  2414  120A  118A  	fcall	___awmod
  2519  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  2520  06F2  1303               	bcf	3,6	;RP1=0, select bank0
  2521  06F3  082B               	movf	?___awmod,w
  2522  06F4  00B2               	movwf	??_checkCount
  2523  06F5  0832               	movf	??_checkCount,w
  2524  06F6  00CA               	movwf	_con+5
  2525                           
  2526                           ;mainsource.c: 108:                     break;
  2527  06F7  2F13               	goto	l1353
  2528  06F8                     l1351:	
  2529                           
  2530                           ;mainsource.c: 110:             }
  2531  06F8  3001               	movlw	1
  2532  06F9  07BD               	addwf	checkCount@i,f
  2533  06FA  1803               	skipnc
  2534  06FB  0ABE               	incf	checkCount@i+1,f
  2535  06FC  3000               	movlw	0
  2536  06FD  07BE               	addwf	checkCount@i+1,f
  2537  06FE                     l90:	
  2538  06FE  0849               	movf	_con+4,w
  2539  06FF  3E04               	addlw	4
  2540  0700  00B2               	movwf	??_checkCount
  2541  0701  3000               	movlw	0
  2542  0702  1803               	skipnc
  2543  0703  3001               	movlw	1
  2544  0704  00B3               	movwf	??_checkCount+1
  2545  0705  083E               	movf	checkCount@i+1,w
  2546  0706  3A80               	xorlw	128
  2547  0707  00B4               	movwf	??_checkCount+2
  2548  0708  0833               	movf	??_checkCount+1,w
  2549  0709  3A80               	xorlw	128
  2550  070A  0234               	subwf	??_checkCount+2,w
  2551  070B  1D03               	skipz
  2552  070C  2F0F               	goto	u925
  2553  070D  0832               	movf	??_checkCount,w
  2554  070E  023D               	subwf	checkCount@i,w
  2555  070F                     u925:	
  2556  070F  1C03               	skipc
  2557  0710  2F12               	goto	u921
  2558  0711  2F13               	goto	u920
  2559  0712                     u921:	
  2560  0712  2E75               	goto	l1333
  2561  0713                     u920:	
  2562  0713                     l1353:	
  2563                           
  2564                           ;mainsource.c: 116:             for(i=0; i<8; i++){
  2565  0713  1283               	bcf	3,5	;RP0=0, select bank0
  2566  0714  1303               	bcf	3,6	;RP1=0, select bank0
  2567  0715  01BD               	clrf	checkCount@i
  2568  0716  01BE               	clrf	checkCount@i+1
  2569  0717                     l1359:	
  2570                           
  2571                           ;mainsource.c: 117:                 if((fondo[i] & 0x8000) != 0){
  2572  0717  1283               	bcf	3,5	;RP0=0, select bank0
  2573  0718  1303               	bcf	3,6	;RP1=0, select bank0
  2574  0719  083D               	movf	checkCount@i,w
  2575  071A  00B2               	movwf	??_checkCount
  2576  071B  0732               	addwf	??_checkCount,w
  2577  071C  3E52               	addlw	(low (_fondo| 0))& (0+255)
  2578  071D  0084               	movwf	4
  2579  071E  1383               	bcf	3,7	;select IRP bank0
  2580  071F  0800               	movf	0,w
  2581  0720  00B3               	movwf	??_checkCount+1
  2582  0721  0A84               	incf	4,f
  2583  0722  0800               	movf	0,w
  2584  0723  00B4               	movwf	??_checkCount+2
  2585  0724  1FB4               	btfss	??_checkCount+2,7
  2586  0725  2F27               	goto	u931
  2587  0726  2F28               	goto	u930
  2588  0727                     u931:	
  2589  0727  2F63               	goto	l1367
  2590  0728                     u930:	
  2591  0728                     l1361:	
  2592                           
  2593                           ;mainsource.c: 118:                     memset(ficha, 0, sizeof(ficha));
  2594  0728  3000               	movlw	0
  2595  0729  00F3               	movwf	memset@c
  2596  072A  00F4               	movwf	memset@c+1
  2597  072B  3010               	movlw	16
  2598  072C  00F5               	movwf	memset@n
  2599  072D  3000               	movlw	0
  2600  072E  00F6               	movwf	memset@n+1
  2601  072F  30A0               	movlw	(low (_ficha| 0))& (0+255)
  2602  0730  120A  118A  2263  120A  118A  	fcall	_memset
  2603                           
  2604                           ;mainsource.c: 119:                     memset(fondo, 0, sizeof(fondo));
  2605  0735  3000               	movlw	0
  2606  0736  00F3               	movwf	memset@c
  2607  0737  00F4               	movwf	memset@c+1
  2608  0738  3010               	movlw	16
  2609  0739  00F5               	movwf	memset@n
  2610  073A  3000               	movlw	0
  2611  073B  00F6               	movwf	memset@n+1
  2612  073C  3052               	movlw	(low (_fondo| 0))& (0+255)
  2613  073D  120A  118A  2263  120A  118A  	fcall	_memset
  2614  0742                     l1363:	
  2615                           
  2616                           ;mainsource.c: 120:                     con.ficha_Vpos = 16;
  2617  0742  3010               	movlw	16
  2618  0743  1283               	bcf	3,5	;RP0=0, select bank0
  2619  0744  1303               	bcf	3,6	;RP1=0, select bank0
  2620  0745  00B2               	movwf	??_checkCount
  2621  0746  0832               	movf	??_checkCount,w
  2622  0747  00C8               	movwf	_con+3
  2623  0748                     l1365:	
  2624                           
  2625                           ;mainsource.c: 121:                     con.ficha_actual = rand() % 7;
  2626  0748  3007               	movlw	7
  2627  0749  00AB               	movwf	___awmod@divisor
  2628  074A  3000               	movlw	0
  2629  074B  00AC               	movwf	___awmod@divisor+1
  2630  074C  120A  118A  22EF  120A  118A  	fcall	_rand
  2631  0751  1283               	bcf	3,5	;RP0=0, select bank0
  2632  0752  1303               	bcf	3,6	;RP1=0, select bank0
  2633  0753  0825               	movf	?_rand+1,w
  2634  0754  00AE               	movwf	___awmod@dividend+1
  2635  0755  0824               	movf	?_rand,w
  2636  0756  00AD               	movwf	___awmod@dividend
  2637  0757  120A  118A  2414  120A  118A  	fcall	___awmod
  2638  075C  1283               	bcf	3,5	;RP0=0, select bank0
  2639  075D  1303               	bcf	3,6	;RP1=0, select bank0
  2640  075E  082B               	movf	?___awmod,w
  2641  075F  00B2               	movwf	??_checkCount
  2642  0760  0832               	movf	??_checkCount,w
  2643  0761  00CA               	movwf	_con+5
  2644                           
  2645                           ;mainsource.c: 122:                     break;
  2646  0762  2F76               	goto	l1371
  2647  0763                     l1367:	
  2648                           
  2649                           ;mainsource.c: 125:             }
  2650  0763  3001               	movlw	1
  2651  0764  07BD               	addwf	checkCount@i,f
  2652  0765  1803               	skipnc
  2653  0766  0ABE               	incf	checkCount@i+1,f
  2654  0767  3000               	movlw	0
  2655  0768  07BE               	addwf	checkCount@i+1,f
  2656  0769                     l1369:	
  2657  0769  083E               	movf	checkCount@i+1,w
  2658  076A  3A80               	xorlw	128
  2659  076B  00FF               	movwf	btemp+1
  2660  076C  3080               	movlw	128
  2661  076D  027F               	subwf	btemp+1,w
  2662  076E  1D03               	skipz
  2663  076F  2F72               	goto	u945
  2664  0770  3008               	movlw	8
  2665  0771  023D               	subwf	checkCount@i,w
  2666  0772                     u945:	
  2667  0772  1C03               	skipc
  2668  0773  2F75               	goto	u941
  2669  0774  2F76               	goto	u940
  2670  0775                     u941:	
  2671  0775  2F17               	goto	l1359
  2672  0776                     u940:	
  2673  0776                     l1371:	
  2674                           
  2675                           ;mainsource.c: 131:             for (i=0; i<16; i++){
  2676  0776  1283               	bcf	3,5	;RP0=0, select bank0
  2677  0777  1303               	bcf	3,6	;RP1=0, select bank0
  2678  0778  01BD               	clrf	checkCount@i
  2679  0779  01BE               	clrf	checkCount@i+1
  2680  077A                     l1377:	
  2681                           
  2682                           ;mainsource.c: 132:                 for(j=0; j<8; j++){
  2683  077A  1283               	bcf	3,5	;RP0=0, select bank0
  2684  077B  1303               	bcf	3,6	;RP1=0, select bank0
  2685  077C  01BB               	clrf	checkCount@j
  2686  077D  01BC               	clrf	checkCount@j+1
  2687  077E                     l1383:	
  2688                           
  2689                           ;mainsource.c: 133:                    if( (fondo[i] & (1<<j)) == 0){
  2690  077E  1283               	bcf	3,5	;RP0=0, select bank0
  2691  077F  1303               	bcf	3,6	;RP1=0, select bank0
  2692  0780  083D               	movf	checkCount@i,w
  2693  0781  00B2               	movwf	??_checkCount
  2694  0782  0732               	addwf	??_checkCount,w
  2695  0783  3E52               	addlw	(low (_fondo| 0))& (0+255)
  2696  0784  0084               	movwf	4
  2697  0785  1383               	bcf	3,7	;select IRP bank0
  2698  0786  0800               	movf	0,w
  2699  0787  00B3               	movwf	??_checkCount+1
  2700  0788  0A84               	incf	4,f
  2701  0789  0800               	movf	0,w
  2702  078A  00B4               	movwf	??_checkCount+2
  2703  078B  0A3B               	incf	checkCount@j,w
  2704  078C  00B5               	movwf	??_checkCount+3
  2705  078D  3001               	movlw	1
  2706  078E  00B6               	movwf	??_checkCount+4
  2707  078F  3000               	movlw	0
  2708  0790  00B7               	movwf	??_checkCount+5
  2709  0791  2F95               	goto	u954
  2710  0792                     u955:	
  2711  0792  1003               	clrc
  2712  0793  0DB6               	rlf	??_checkCount+4,f
  2713  0794  0DB7               	rlf	??_checkCount+5,f
  2714  0795                     u954:	
  2715  0795  0BB5               	decfsz	??_checkCount+3,f
  2716  0796  2F92               	goto	u955
  2717  0797  0833               	movf	??_checkCount+1,w
  2718  0798  0536               	andwf	??_checkCount+4,w
  2719  0799  00B8               	movwf	??_checkCount+6
  2720  079A  0834               	movf	??_checkCount+2,w
  2721  079B  0537               	andwf	??_checkCount+5,w
  2722  079C  00B9               	movwf	??_checkCount+7
  2723  079D  0838               	movf	??_checkCount+6,w
  2724  079E  0439               	iorwf	??_checkCount+7,w
  2725  079F  1D03               	btfss	3,2
  2726  07A0  2FA2               	goto	u961
  2727  07A1  2FA3               	goto	u960
  2728  07A2                     u961:	
  2729  07A2  2FA4               	goto	l1387
  2730  07A3                     u960:	
  2731  07A3  2FB7               	goto	l1391
  2732  07A4                     l1387:	
  2733                           
  2734                           ;mainsource.c: 136:                 }
  2735  07A4  3001               	movlw	1
  2736  07A5  07BB               	addwf	checkCount@j,f
  2737  07A6  1803               	skipnc
  2738  07A7  0ABC               	incf	checkCount@j+1,f
  2739  07A8  3000               	movlw	0
  2740  07A9  07BC               	addwf	checkCount@j+1,f
  2741  07AA                     l1389:	
  2742  07AA  083C               	movf	checkCount@j+1,w
  2743  07AB  3A80               	xorlw	128
  2744  07AC  00FF               	movwf	btemp+1
  2745  07AD  3080               	movlw	128
  2746  07AE  027F               	subwf	btemp+1,w
  2747  07AF  1D03               	skipz
  2748  07B0  2FB3               	goto	u975
  2749  07B1  3008               	movlw	8
  2750  07B2  023B               	subwf	checkCount@j,w
  2751  07B3                     u975:	
  2752  07B3  1C03               	skipc
  2753  07B4  2FB6               	goto	u971
  2754  07B5  2FB7               	goto	u970
  2755  07B6                     u971:	
  2756  07B6  2F7E               	goto	l1383
  2757  07B7                     u970:	
  2758  07B7                     l1391:	
  2759                           
  2760                           ;mainsource.c: 138:             }
  2761  07B7  3001               	movlw	1
  2762  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  2763  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  2764  07BA  07BD               	addwf	checkCount@i,f
  2765  07BB  1803               	skipnc
  2766  07BC  0ABE               	incf	checkCount@i+1,f
  2767  07BD  3000               	movlw	0
  2768  07BE  07BE               	addwf	checkCount@i+1,f
  2769  07BF                     l1393:	
  2770  07BF  083E               	movf	checkCount@i+1,w
  2771  07C0  3A80               	xorlw	128
  2772  07C1  00FF               	movwf	btemp+1
  2773  07C2  3080               	movlw	128
  2774  07C3  027F               	subwf	btemp+1,w
  2775  07C4  1D03               	skipz
  2776  07C5  2FC8               	goto	u985
  2777  07C6  3010               	movlw	16
  2778  07C7  023D               	subwf	checkCount@i,w
  2779  07C8                     u985:	
  2780  07C8  1C03               	skipc
  2781  07C9  2FCB               	goto	u981
  2782  07CA  2FCC               	goto	u980
  2783  07CB                     u981:	
  2784  07CB  2F7A               	goto	l1377
  2785  07CC                     u980:	
  2786  07CC                     l1395:	
  2787                           
  2788                           ;mainsource.c: 141:         con.check_count = 0;
  2789  07CC  1283               	bcf	3,5	;RP0=0, select bank0
  2790  07CD  1303               	bcf	3,6	;RP1=0, select bank0
  2791  07CE  01CD               	clrf	_con+8
  2792  07CF                     l104:	
  2793  07CF  0008               	return
  2794  07D0                     __end_of_checkCount:	
  2795                           
  2796                           	psect	text16
  2797  02EF                     __ptext16:	
  2798 ;; *************** function _rand *****************
  2799 ;; Defined at:
  2800 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  2801 ;; Parameters:    Size  Location     Type
  2802 ;;		None
  2803 ;; Auto vars:     Size  Location     Type
  2804 ;;		None
  2805 ;; Return value:  Size  Location     Type
  2806 ;;                  2    4[BANK0 ] int 
  2807 ;; Registers used:
  2808 ;;		wreg, status,2, status,0, pclath, cstack
  2809 ;; Tracked objects:
  2810 ;;		On entry : 0/0
  2811 ;;		On exit  : 0/0
  2812 ;;		Unchanged: 0/0
  2813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2814 ;;      Params:         0       2       0       0       0
  2815 ;;      Locals:         0       0       0       0       0
  2816 ;;      Temps:          0       5       0       0       0
  2817 ;;      Totals:         0       7       0       0       0
  2818 ;;Total ram usage:        7 bytes
  2819 ;; Hardware stack levels used:    1
  2820 ;; Hardware stack levels required when called:    2
  2821 ;; This function calls:
  2822 ;;		___lmul
  2823 ;; This function is called by:
  2824 ;;		_main
  2825 ;;		_checkCount
  2826 ;; This function uses a non-reentrant model
  2827 ;;
  2828                           
  2829                           
  2830                           ;psect for function _rand
  2831  02EF                     _rand:	
  2832  02EF                     l1169:	
  2833                           ;incstack = 0
  2834                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  2835                           
  2836  02EF  1283               	bcf	3,5	;RP0=0, select bank0
  2837  02F0  1303               	bcf	3,6	;RP1=0, select bank0
  2838  02F1  0865               	movf	_randx+3,w
  2839  02F2  00F6               	movwf	___lmul@multiplier+3
  2840  02F3  0864               	movf	_randx+2,w
  2841  02F4  00F5               	movwf	___lmul@multiplier+2
  2842  02F5  0863               	movf	_randx+1,w
  2843  02F6  00F4               	movwf	___lmul@multiplier+1
  2844  02F7  0862               	movf	_randx,w
  2845  02F8  00F3               	movwf	___lmul@multiplier
  2846  02F9  3041               	movlw	65
  2847  02FA  00FA               	movwf	___lmul@multiplicand+3
  2848  02FB  30C6               	movlw	198
  2849  02FC  00F9               	movwf	___lmul@multiplicand+2
  2850  02FD  304E               	movlw	78
  2851  02FE  00F8               	movwf	___lmul@multiplicand+1
  2852  02FF  306D               	movlw	109
  2853  0300  00F7               	movwf	___lmul@multiplicand
  2854  0301  120A  118A  23C8  120A  118A  	fcall	___lmul
  2855  0306  0876               	movf	?___lmul+3,w
  2856  0307  1283               	bcf	3,5	;RP0=0, select bank0
  2857  0308  1303               	bcf	3,6	;RP1=0, select bank0
  2858  0309  00E5               	movwf	_randx+3
  2859  030A  0875               	movf	?___lmul+2,w
  2860  030B  00E4               	movwf	_randx+2
  2861  030C  0874               	movf	?___lmul+1,w
  2862  030D  00E3               	movwf	_randx+1
  2863  030E  0873               	movf	?___lmul,w
  2864  030F  00E2               	movwf	_randx
  2865  0310                     l1171:	
  2866  0310  3039               	movlw	57
  2867  0311  07E2               	addwf	_randx,f
  2868  0312  3030               	movlw	48
  2869  0313  1803               	skipnc
  2870  0314  3031               	movlw	49
  2871  0315  07E3               	addwf	_randx+1,f
  2872  0316  3000               	movlw	0
  2873  0317  1803               	skipnc
  2874  0318  3001               	movlw	1
  2875  0319  07E4               	addwf	_randx+2,f
  2876  031A  3000               	movlw	0
  2877  031B  1803               	skipnc
  2878  031C  3001               	movlw	1
  2879  031D  07E5               	addwf	_randx+3,f
  2880  031E                     l1173:	
  2881  031E  0862               	movf	_randx,w
  2882  031F  00A6               	movwf	??_rand
  2883  0320  0863               	movf	_randx+1,w
  2884  0321  00A7               	movwf	??_rand+1
  2885  0322  0864               	movf	_randx+2,w
  2886  0323  00A8               	movwf	??_rand+2
  2887  0324  0865               	movf	_randx+3,w
  2888  0325  00A9               	movwf	??_rand+3
  2889  0326  3010               	movlw	16
  2890  0327  00AA               	movwf	??_rand+4
  2891  0328                     u605:	
  2892  0328  0D29               	rlf	??_rand+3,w
  2893  0329  0CA9               	rrf	??_rand+3,f
  2894  032A  0CA8               	rrf	??_rand+2,f
  2895  032B  0CA7               	rrf	??_rand+1,f
  2896  032C  0CA6               	rrf	??_rand,f
  2897  032D                     u600:	
  2898  032D  0BAA               	decfsz	??_rand+4,f
  2899  032E  2B28               	goto	u605
  2900  032F  30FF               	movlw	255
  2901  0330  0526               	andwf	??_rand,w
  2902  0331  00A4               	movwf	?_rand
  2903  0332  307F               	movlw	127
  2904  0333  0527               	andwf	??_rand+1,w
  2905  0334  00A5               	movwf	?_rand+1
  2906  0335                     l719:	
  2907  0335  0008               	return
  2908  0336                     __end_of_rand:	
  2909                           
  2910                           	psect	text17
  2911  03C8                     __ptext17:	
  2912 ;; *************** function ___lmul *****************
  2913 ;; Defined at:
  2914 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  2915 ;; Parameters:    Size  Location     Type
  2916 ;;  multiplier      4    2[COMMON] unsigned long 
  2917 ;;  multiplicand    4    6[COMMON] unsigned long 
  2918 ;; Auto vars:     Size  Location     Type
  2919 ;;  product         4    0[BANK0 ] unsigned long 
  2920 ;; Return value:  Size  Location     Type
  2921 ;;                  4    2[COMMON] unsigned long 
  2922 ;; Registers used:
  2923 ;;		wreg, status,2, status,0
  2924 ;; Tracked objects:
  2925 ;;		On entry : 0/0
  2926 ;;		On exit  : 0/0
  2927 ;;		Unchanged: 0/0
  2928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2929 ;;      Params:         8       0       0       0       0
  2930 ;;      Locals:         0       4       0       0       0
  2931 ;;      Temps:          1       0       0       0       0
  2932 ;;      Totals:         9       4       0       0       0
  2933 ;;Total ram usage:       13 bytes
  2934 ;; Hardware stack levels used:    1
  2935 ;; Hardware stack levels required when called:    1
  2936 ;; This function calls:
  2937 ;;		Nothing
  2938 ;; This function is called by:
  2939 ;;		_rand
  2940 ;; This function uses a non-reentrant model
  2941 ;;
  2942                           
  2943                           
  2944                           ;psect for function ___lmul
  2945  03C8                     ___lmul:	
  2946  03C8                     l1149:	
  2947                           ;incstack = 0
  2948                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2949                           
  2950  03C8  3000               	movlw	0
  2951  03C9  1283               	bcf	3,5	;RP0=0, select bank0
  2952  03CA  1303               	bcf	3,6	;RP1=0, select bank0
  2953  03CB  00A3               	movwf	___lmul@product+3
  2954  03CC  3000               	movlw	0
  2955  03CD  00A2               	movwf	___lmul@product+2
  2956  03CE  3000               	movlw	0
  2957  03CF  00A1               	movwf	___lmul@product+1
  2958  03D0  3000               	movlw	0
  2959  03D1  00A0               	movwf	___lmul@product
  2960  03D2                     l1151:	
  2961  03D2  1C73               	btfss	___lmul@multiplier,0
  2962  03D3  2BD5               	goto	u551
  2963  03D4  2BD6               	goto	u550
  2964  03D5                     u551:	
  2965  03D5  2BEF               	goto	l1155
  2966  03D6                     u550:	
  2967  03D6                     l1153:	
  2968  03D6  0877               	movf	___lmul@multiplicand,w
  2969  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  2970  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  2971  03D9  07A0               	addwf	___lmul@product,f
  2972  03DA  0878               	movf	___lmul@multiplicand+1,w
  2973  03DB  1103               	clrz
  2974  03DC  1803               	skipnc
  2975  03DD  3E01               	addlw	1
  2976  03DE  1903               	skipnz
  2977  03DF  2BE1               	goto	u561
  2978  03E0  07A1               	addwf	___lmul@product+1,f
  2979  03E1                     u561:	
  2980  03E1  0879               	movf	___lmul@multiplicand+2,w
  2981  03E2  1103               	clrz
  2982  03E3  1803               	skipnc
  2983  03E4  3E01               	addlw	1
  2984  03E5  1903               	skipnz
  2985  03E6  2BE8               	goto	u562
  2986  03E7  07A2               	addwf	___lmul@product+2,f
  2987  03E8                     u562:	
  2988  03E8  087A               	movf	___lmul@multiplicand+3,w
  2989  03E9  1103               	clrz
  2990  03EA  1803               	skipnc
  2991  03EB  3E01               	addlw	1
  2992  03EC  1903               	skipnz
  2993  03ED  2BEF               	goto	u563
  2994  03EE  07A3               	addwf	___lmul@product+3,f
  2995  03EF                     u563:	
  2996  03EF                     l1155:	
  2997  03EF  3001               	movlw	1
  2998  03F0  00FB               	movwf	??___lmul
  2999  03F1                     u575:	
  3000  03F1  1003               	clrc
  3001  03F2  0DF7               	rlf	___lmul@multiplicand,f
  3002  03F3  0DF8               	rlf	___lmul@multiplicand+1,f
  3003  03F4  0DF9               	rlf	___lmul@multiplicand+2,f
  3004  03F5  0DFA               	rlf	___lmul@multiplicand+3,f
  3005  03F6  0BFB               	decfsz	??___lmul,f
  3006  03F7  2BF1               	goto	u575
  3007  03F8                     l1157:	
  3008  03F8  3001               	movlw	1
  3009  03F9                     u585:	
  3010  03F9  1003               	clrc
  3011  03FA  0CF6               	rrf	___lmul@multiplier+3,f
  3012  03FB  0CF5               	rrf	___lmul@multiplier+2,f
  3013  03FC  0CF4               	rrf	___lmul@multiplier+1,f
  3014  03FD  0CF3               	rrf	___lmul@multiplier,f
  3015  03FE  3EFF               	addlw	-1
  3016  03FF  1D03               	skipz
  3017  0400  2BF9               	goto	u585
  3018  0401  0876               	movf	___lmul@multiplier+3,w
  3019  0402  0475               	iorwf	___lmul@multiplier+2,w
  3020  0403  0474               	iorwf	___lmul@multiplier+1,w
  3021  0404  0473               	iorwf	___lmul@multiplier,w
  3022  0405  1D03               	skipz
  3023  0406  2C08               	goto	u591
  3024  0407  2C09               	goto	u590
  3025  0408                     u591:	
  3026  0408  2BD2               	goto	l1151
  3027  0409                     u590:	
  3028  0409                     l1159:	
  3029  0409  1283               	bcf	3,5	;RP0=0, select bank0
  3030  040A  1303               	bcf	3,6	;RP1=0, select bank0
  3031  040B  0823               	movf	___lmul@product+3,w
  3032  040C  00F6               	movwf	?___lmul+3
  3033  040D  0822               	movf	___lmul@product+2,w
  3034  040E  00F5               	movwf	?___lmul+2
  3035  040F  0821               	movf	___lmul@product+1,w
  3036  0410  00F4               	movwf	?___lmul+1
  3037  0411  0820               	movf	___lmul@product,w
  3038  0412  00F3               	movwf	?___lmul
  3039  0413                     l277:	
  3040  0413  0008               	return
  3041  0414                     __end_of___lmul:	
  3042                           
  3043                           	psect	text18
  3044  04CF                     __ptext18:	
  3045 ;; *************** function _drawFigure *****************
  3046 ;; Defined at:
  3047 ;;		line 36 in file "screen.c"
  3048 ;; Parameters:    Size  Location     Type
  3049 ;;		None
  3050 ;; Auto vars:     Size  Location     Type
  3051 ;;		None
  3052 ;; Return value:  Size  Location     Type
  3053 ;;                  1    wreg      void 
  3054 ;; Registers used:
  3055 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3056 ;; Tracked objects:
  3057 ;;		On entry : 0/0
  3058 ;;		On exit  : 0/0
  3059 ;;		Unchanged: 0/0
  3060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3061 ;;      Params:         0       0       0       0       0
  3062 ;;      Locals:         0       0       0       0       0
  3063 ;;      Temps:          0       5       0       0       0
  3064 ;;      Totals:         0       5       0       0       0
  3065 ;;Total ram usage:        5 bytes
  3066 ;; Hardware stack levels used:    1
  3067 ;; Hardware stack levels required when called:    2
  3068 ;; This function calls:
  3069 ;;		_memset
  3070 ;; This function is called by:
  3071 ;;		_checkCount
  3072 ;; This function uses a non-reentrant model
  3073 ;;
  3074                           
  3075                           
  3076                           ;psect for function _drawFigure
  3077  04CF                     _drawFigure:	
  3078  04CF                     l1177:	
  3079                           ;incstack = 0
  3080                           ; Regs used in _drawFigure: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3081                           
  3082                           
  3083                           ;screen.c: 37:     memset(ficha, 0, sizeof(ficha));
  3084  04CF  3000               	movlw	0
  3085  04D0  00F3               	movwf	memset@c
  3086  04D1  00F4               	movwf	memset@c+1
  3087  04D2  3010               	movlw	16
  3088  04D3  00F5               	movwf	memset@n
  3089  04D4  3000               	movlw	0
  3090  04D5  00F6               	movwf	memset@n+1
  3091  04D6  30A0               	movlw	(low (_ficha| 0))& (0+255)
  3092  04D7  120A  118A  2263  120A  118A  	fcall	_memset
  3093  04DC                     l1179:	
  3094                           
  3095                           ;screen.c: 38:     if(con.derecha == 1 && con.ficha_Hpos<4){
  3096  04DC  1283               	bcf	3,5	;RP0=0, select bank0
  3097  04DD  1303               	bcf	3,6	;RP1=0, select bank0
  3098  04DE  034B               	decf	_con+6,w
  3099  04DF  1D03               	btfss	3,2
  3100  04E0  2CE2               	goto	u611
  3101  04E1  2CE3               	goto	u610
  3102  04E2                     u611:	
  3103  04E2  2CEF               	goto	l1187
  3104  04E3                     u610:	
  3105  04E3                     l1181:	
  3106  04E3  3004               	movlw	4
  3107  04E4  0249               	subwf	_con+4,w
  3108  04E5  1803               	skipnc
  3109  04E6  2CE8               	goto	u621
  3110  04E7  2CE9               	goto	u620
  3111  04E8                     u621:	
  3112  04E8  2CEF               	goto	l1187
  3113  04E9                     u620:	
  3114  04E9                     l1183:	
  3115                           
  3116                           ;screen.c: 39:         con.ficha_Hpos++;
  3117  04E9  3001               	movlw	1
  3118  04EA  00A0               	movwf	??_drawFigure
  3119  04EB  0820               	movf	??_drawFigure,w
  3120  04EC  07C9               	addwf	_con+4,f
  3121  04ED                     l1185:	
  3122                           
  3123                           ;screen.c: 40:         con.derecha = 0;
  3124  04ED  01CB               	clrf	_con+6
  3125                           
  3126                           ;screen.c: 41:     }else if (con.izquierda == 1 && con.ficha_Hpos>0){
  3127  04EE  2CFC               	goto	l1195
  3128  04EF                     l1187:	
  3129  04EF  034C               	decf	_con+7,w
  3130  04F0  1D03               	btfss	3,2
  3131  04F1  2CF3               	goto	u631
  3132  04F2  2CF4               	goto	u630
  3133  04F3                     u631:	
  3134  04F3  2CFC               	goto	l1195
  3135  04F4                     u630:	
  3136  04F4                     l1189:	
  3137  04F4  0849               	movf	_con+4,w
  3138  04F5  1903               	btfsc	3,2
  3139  04F6  2CF8               	goto	u641
  3140  04F7  2CF9               	goto	u640
  3141  04F8                     u641:	
  3142  04F8  2CFC               	goto	l1195
  3143  04F9                     u640:	
  3144  04F9                     l1191:	
  3145                           
  3146                           ;screen.c: 42:         con.ficha_Hpos--;
  3147  04F9  3001               	movlw	1
  3148  04FA  02C9               	subwf	_con+4,f
  3149  04FB                     l1193:	
  3150                           
  3151                           ;screen.c: 43:         con.izquierda = 0;
  3152  04FB  01CC               	clrf	_con+7
  3153  04FC                     l1195:	
  3154                           
  3155                           ;screen.c: 46:     ficha[con.ficha_Hpos ] = figuras[con.ficha_actual][0] << (con.ficha_V
      +                          pos -1);
  3156  04FC  0848               	movf	_con+3,w
  3157  04FD  3EFF               	addlw	-1
  3158  04FE  00A0               	movwf	??_drawFigure
  3159  04FF  0AA0               	incf	??_drawFigure,f
  3160  0500  084A               	movf	_con+5,w
  3161  0501  00A1               	movwf	??_drawFigure+1
  3162  0502  3002               	movlw	2
  3163  0503                     u655:	
  3164  0503  1003               	clrc
  3165  0504  0DA1               	rlf	??_drawFigure+1,f
  3166  0505  3EFF               	addlw	-1
  3167  0506  1D03               	skipz
  3168  0507  2D03               	goto	u655
  3169  0508  1003               	clrc
  3170  0509  0D21               	rlf	??_drawFigure+1,w
  3171  050A  3E90               	addlw	(low (_figuras| (0+256)))& (0+255)
  3172  050B  0084               	movwf	4
  3173  050C  1783               	bsf	3,7	;select IRP bank3
  3174  050D  0800               	movf	0,w
  3175  050E  00A2               	movwf	??_drawFigure+2
  3176  050F  0A84               	incf	4,f
  3177  0510  0800               	movf	0,w
  3178  0511  00A3               	movwf	??_drawFigure+3
  3179  0512  2D16               	goto	u664
  3180  0513                     u665:	
  3181  0513  1003               	clrc
  3182  0514  0DA2               	rlf	??_drawFigure+2,f
  3183  0515  0DA3               	rlf	??_drawFigure+3,f
  3184  0516                     u664:	
  3185  0516  0BA0               	decfsz	??_drawFigure,f
  3186  0517  2D13               	goto	u665
  3187  0518  0849               	movf	_con+4,w
  3188  0519  00A4               	movwf	??_drawFigure+4
  3189  051A  0724               	addwf	??_drawFigure+4,w
  3190  051B  3EA0               	addlw	(low (_ficha| 0))& (0+255)
  3191  051C  0084               	movwf	4
  3192  051D  0822               	movf	??_drawFigure+2,w
  3193  051E  1383               	bcf	3,7	;select IRP bank1
  3194  051F  0080               	movwf	0
  3195  0520  0A84               	incf	4,f
  3196  0521  0823               	movf	??_drawFigure+3,w
  3197  0522  0080               	movwf	0
  3198  0523                     l1197:	
  3199                           
  3200                           ;screen.c: 47:     ficha[con.ficha_Hpos +1] = figuras[con.ficha_actual][1] << (con.ficha
      +                          _Vpos -1);
  3201  0523  0848               	movf	_con+3,w
  3202  0524  3EFF               	addlw	-1
  3203  0525  00A0               	movwf	??_drawFigure
  3204  0526  0AA0               	incf	??_drawFigure,f
  3205  0527  084A               	movf	_con+5,w
  3206  0528  00A1               	movwf	??_drawFigure+1
  3207  0529  3002               	movlw	2
  3208  052A                     u675:	
  3209  052A  1003               	clrc
  3210  052B  0DA1               	rlf	??_drawFigure+1,f
  3211  052C  3EFF               	addlw	-1
  3212  052D  1D03               	skipz
  3213  052E  2D2A               	goto	u675
  3214  052F  1003               	clrc
  3215  0530  0D21               	rlf	??_drawFigure+1,w
  3216  0531  3E92               	addlw	(low ((_figuras| (0+256)+2)))& (0+255)
  3217  0532  0084               	movwf	4
  3218  0533  1783               	bsf	3,7	;select IRP bank3
  3219  0534  0800               	movf	0,w
  3220  0535  00A2               	movwf	??_drawFigure+2
  3221  0536  0A84               	incf	4,f
  3222  0537  0800               	movf	0,w
  3223  0538  00A3               	movwf	??_drawFigure+3
  3224  0539  2D3D               	goto	u684
  3225  053A                     u685:	
  3226  053A  1003               	clrc
  3227  053B  0DA2               	rlf	??_drawFigure+2,f
  3228  053C  0DA3               	rlf	??_drawFigure+3,f
  3229  053D                     u684:	
  3230  053D  0BA0               	decfsz	??_drawFigure,f
  3231  053E  2D3A               	goto	u685
  3232  053F  0849               	movf	_con+4,w
  3233  0540  00A4               	movwf	??_drawFigure+4
  3234  0541  0724               	addwf	??_drawFigure+4,w
  3235  0542  3EA2               	addlw	(low ((_ficha| 0+2)))& (0+255)
  3236  0543  0084               	movwf	4
  3237  0544  0822               	movf	??_drawFigure+2,w
  3238  0545  1383               	bcf	3,7	;select IRP bank1
  3239  0546  0080               	movwf	0
  3240  0547  0A84               	incf	4,f
  3241  0548  0823               	movf	??_drawFigure+3,w
  3242  0549  0080               	movwf	0
  3243  054A                     l1199:	
  3244                           
  3245                           ;screen.c: 48:     ficha[con.ficha_Hpos +2] = figuras[con.ficha_actual][2] << (con.ficha
      +                          _Vpos -1);
  3246  054A  0848               	movf	_con+3,w
  3247  054B  3EFF               	addlw	-1
  3248  054C  00A0               	movwf	??_drawFigure
  3249  054D  0AA0               	incf	??_drawFigure,f
  3250  054E  084A               	movf	_con+5,w
  3251  054F  00A1               	movwf	??_drawFigure+1
  3252  0550  3002               	movlw	2
  3253  0551                     u695:	
  3254  0551  1003               	clrc
  3255  0552  0DA1               	rlf	??_drawFigure+1,f
  3256  0553  3EFF               	addlw	-1
  3257  0554  1D03               	skipz
  3258  0555  2D51               	goto	u695
  3259  0556  1003               	clrc
  3260  0557  0D21               	rlf	??_drawFigure+1,w
  3261  0558  3E94               	addlw	(low ((_figuras| (0+256)+4)))& (0+255)
  3262  0559  0084               	movwf	4
  3263  055A  1783               	bsf	3,7	;select IRP bank3
  3264  055B  0800               	movf	0,w
  3265  055C  00A2               	movwf	??_drawFigure+2
  3266  055D  0A84               	incf	4,f
  3267  055E  0800               	movf	0,w
  3268  055F  00A3               	movwf	??_drawFigure+3
  3269  0560  2D64               	goto	u704
  3270  0561                     u705:	
  3271  0561  1003               	clrc
  3272  0562  0DA2               	rlf	??_drawFigure+2,f
  3273  0563  0DA3               	rlf	??_drawFigure+3,f
  3274  0564                     u704:	
  3275  0564  0BA0               	decfsz	??_drawFigure,f
  3276  0565  2D61               	goto	u705
  3277  0566  0849               	movf	_con+4,w
  3278  0567  00A4               	movwf	??_drawFigure+4
  3279  0568  0724               	addwf	??_drawFigure+4,w
  3280  0569  3EA4               	addlw	(low ((_ficha| 0+4)))& (0+255)
  3281  056A  0084               	movwf	4
  3282  056B  0822               	movf	??_drawFigure+2,w
  3283  056C  1383               	bcf	3,7	;select IRP bank1
  3284  056D  0080               	movwf	0
  3285  056E  0A84               	incf	4,f
  3286  056F  0823               	movf	??_drawFigure+3,w
  3287  0570  0080               	movwf	0
  3288  0571                     l1201:	
  3289                           
  3290                           ;screen.c: 49:     ficha[con.ficha_Hpos +3] = figuras[con.ficha_actual][3] << (con.ficha
      +                          _Vpos -1);
  3291  0571  0848               	movf	_con+3,w
  3292  0572  3EFF               	addlw	-1
  3293  0573  00A0               	movwf	??_drawFigure
  3294  0574  0AA0               	incf	??_drawFigure,f
  3295  0575  084A               	movf	_con+5,w
  3296  0576  00A1               	movwf	??_drawFigure+1
  3297  0577  3002               	movlw	2
  3298  0578                     u715:	
  3299  0578  1003               	clrc
  3300  0579  0DA1               	rlf	??_drawFigure+1,f
  3301  057A  3EFF               	addlw	-1
  3302  057B  1D03               	skipz
  3303  057C  2D78               	goto	u715
  3304  057D  1003               	clrc
  3305  057E  0D21               	rlf	??_drawFigure+1,w
  3306  057F  3E96               	addlw	(low ((_figuras| (0+256)+6)))& (0+255)
  3307  0580  0084               	movwf	4
  3308  0581  1783               	bsf	3,7	;select IRP bank3
  3309  0582  0800               	movf	0,w
  3310  0583  00A2               	movwf	??_drawFigure+2
  3311  0584  0A84               	incf	4,f
  3312  0585  0800               	movf	0,w
  3313  0586  00A3               	movwf	??_drawFigure+3
  3314  0587  2D8B               	goto	u724
  3315  0588                     u725:	
  3316  0588  1003               	clrc
  3317  0589  0DA2               	rlf	??_drawFigure+2,f
  3318  058A  0DA3               	rlf	??_drawFigure+3,f
  3319  058B                     u724:	
  3320  058B  0BA0               	decfsz	??_drawFigure,f
  3321  058C  2D88               	goto	u725
  3322  058D  0849               	movf	_con+4,w
  3323  058E  00A4               	movwf	??_drawFigure+4
  3324  058F  0724               	addwf	??_drawFigure+4,w
  3325  0590  3EA6               	addlw	(low ((_ficha| 0+6)))& (0+255)
  3326  0591  0084               	movwf	4
  3327  0592  0822               	movf	??_drawFigure+2,w
  3328  0593  1383               	bcf	3,7	;select IRP bank1
  3329  0594  0080               	movwf	0
  3330  0595  0A84               	incf	4,f
  3331  0596  0823               	movf	??_drawFigure+3,w
  3332  0597  0080               	movwf	0
  3333  0598                     l177:	
  3334  0598  0008               	return
  3335  0599                     __end_of_drawFigure:	
  3336                           
  3337                           	psect	text19
  3338  0263                     __ptext19:	
  3339 ;; *************** function _memset *****************
  3340 ;; Defined at:
  3341 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\memset.c"
  3342 ;; Parameters:    Size  Location     Type
  3343 ;;  p1              1    wreg     PTR void 
  3344 ;;		 -> ficha(16), fondo(16), 
  3345 ;;  c               2    2[COMMON] int 
  3346 ;;  n               2    4[COMMON] unsigned int 
  3347 ;; Auto vars:     Size  Location     Type
  3348 ;;  p1              1    8[COMMON] PTR void 
  3349 ;;		 -> ficha(16), fondo(16), 
  3350 ;;  p               1    7[COMMON] PTR unsigned char 
  3351 ;;		 -> ficha(16), fondo(16), 
  3352 ;; Return value:  Size  Location     Type
  3353 ;;                  1    wreg      PTR void 
  3354 ;; Registers used:
  3355 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3356 ;; Tracked objects:
  3357 ;;		On entry : 0/0
  3358 ;;		On exit  : 0/0
  3359 ;;		Unchanged: 0/0
  3360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3361 ;;      Params:         4       0       0       0       0
  3362 ;;      Locals:         2       0       0       0       0
  3363 ;;      Temps:          1       0       0       0       0
  3364 ;;      Totals:         7       0       0       0       0
  3365 ;;Total ram usage:        7 bytes
  3366 ;; Hardware stack levels used:    1
  3367 ;; Hardware stack levels required when called:    1
  3368 ;; This function calls:
  3369 ;;		Nothing
  3370 ;; This function is called by:
  3371 ;;		_checkCount
  3372 ;;		_drawFigure
  3373 ;; This function uses a non-reentrant model
  3374 ;;
  3375                           
  3376                           
  3377                           ;psect for function _memset
  3378  0263                     _memset:	
  3379                           
  3380                           ;incstack = 0
  3381                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0]
  3382                           ;memset@p1 stored from wreg
  3383  0263  00F9               	movwf	memset@p1
  3384  0264                     l1133:	
  3385  0264  0879               	movf	memset@p1,w
  3386  0265  00F7               	movwf	??_memset
  3387  0266  0877               	movf	??_memset,w
  3388  0267  00F8               	movwf	memset@p
  3389  0268  2A74               	goto	l1139
  3390  0269                     l1135:	
  3391  0269  0873               	movf	memset@c,w
  3392  026A  00F7               	movwf	??_memset
  3393  026B  0878               	movf	memset@p,w
  3394  026C  0084               	movwf	4
  3395  026D  0877               	movf	??_memset,w
  3396  026E  1383               	bcf	3,7	;select IRP bank0
  3397  026F  0080               	movwf	0
  3398  0270                     l1137:	
  3399  0270  3001               	movlw	1
  3400  0271  00F7               	movwf	??_memset
  3401  0272  0877               	movf	??_memset,w
  3402  0273  07F8               	addwf	memset@p,f
  3403  0274                     l1139:	
  3404  0274  3001               	movlw	1
  3405  0275  02F5               	subwf	memset@n,f
  3406  0276  3000               	movlw	0
  3407  0277  1C03               	skipc
  3408  0278  03F6               	decf	memset@n+1,f
  3409  0279  02F6               	subwf	memset@n+1,f
  3410  027A  0A75               	incf	memset@n,w
  3411  027B  1D03               	skipz
  3412  027C  2A81               	goto	u541
  3413  027D  0A76               	incf	memset@n+1,w
  3414  027E  1D03               	btfss	3,2
  3415  027F  2A81               	goto	u541
  3416  0280  2A82               	goto	u540
  3417  0281                     u541:	
  3418  0281  2A69               	goto	l1135
  3419  0282                     u540:	
  3420  0282                     l711:	
  3421  0282  0008               	return
  3422  0283                     __end_of_memset:	
  3423                           
  3424                           	psect	text20
  3425  0414                     __ptext20:	
  3426 ;; *************** function ___awmod *****************
  3427 ;; Defined at:
  3428 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  3429 ;; Parameters:    Size  Location     Type
  3430 ;;  divisor         2   11[BANK0 ] int 
  3431 ;;  dividend        2   13[BANK0 ] int 
  3432 ;; Auto vars:     Size  Location     Type
  3433 ;;  sign            1   17[BANK0 ] unsigned char 
  3434 ;;  counter         1   16[BANK0 ] unsigned char 
  3435 ;; Return value:  Size  Location     Type
  3436 ;;                  2   11[BANK0 ] int 
  3437 ;; Registers used:
  3438 ;;		wreg, status,2, status,0
  3439 ;; Tracked objects:
  3440 ;;		On entry : 0/0
  3441 ;;		On exit  : 0/0
  3442 ;;		Unchanged: 0/0
  3443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3444 ;;      Params:         0       4       0       0       0
  3445 ;;      Locals:         0       2       0       0       0
  3446 ;;      Temps:          0       1       0       0       0
  3447 ;;      Totals:         0       7       0       0       0
  3448 ;;Total ram usage:        7 bytes
  3449 ;; Hardware stack levels used:    1
  3450 ;; Hardware stack levels required when called:    1
  3451 ;; This function calls:
  3452 ;;		Nothing
  3453 ;; This function is called by:
  3454 ;;		_main
  3455 ;;		_checkCount
  3456 ;; This function uses a non-reentrant model
  3457 ;;
  3458                           
  3459                           
  3460                           ;psect for function ___awmod
  3461  0414                     ___awmod:	
  3462  0414                     l1225:	
  3463                           ;incstack = 0
  3464                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3465                           
  3466  0414  1283               	bcf	3,5	;RP0=0, select bank0
  3467  0415  1303               	bcf	3,6	;RP1=0, select bank0
  3468  0416  01B1               	clrf	___awmod@sign
  3469  0417                     l1227:	
  3470  0417  1FAE               	btfss	___awmod@dividend+1,7
  3471  0418  2C1A               	goto	u761
  3472  0419  2C1B               	goto	u760
  3473  041A                     u761:	
  3474  041A  2C22               	goto	l1233
  3475  041B                     u760:	
  3476  041B                     l1229:	
  3477  041B  09AD               	comf	___awmod@dividend,f
  3478  041C  09AE               	comf	___awmod@dividend+1,f
  3479  041D  0AAD               	incf	___awmod@dividend,f
  3480  041E  1903               	skipnz
  3481  041F  0AAE               	incf	___awmod@dividend+1,f
  3482  0420                     l1231:	
  3483  0420  01B1               	clrf	___awmod@sign
  3484  0421  0AB1               	incf	___awmod@sign,f
  3485  0422                     l1233:	
  3486  0422  1FAC               	btfss	___awmod@divisor+1,7
  3487  0423  2C25               	goto	u771
  3488  0424  2C26               	goto	u770
  3489  0425                     u771:	
  3490  0425  2C2B               	goto	l1237
  3491  0426                     u770:	
  3492  0426                     l1235:	
  3493  0426  09AB               	comf	___awmod@divisor,f
  3494  0427  09AC               	comf	___awmod@divisor+1,f
  3495  0428  0AAB               	incf	___awmod@divisor,f
  3496  0429  1903               	skipnz
  3497  042A  0AAC               	incf	___awmod@divisor+1,f
  3498  042B                     l1237:	
  3499  042B  082B               	movf	___awmod@divisor,w
  3500  042C  042C               	iorwf	___awmod@divisor+1,w
  3501  042D  1903               	btfsc	3,2
  3502  042E  2C30               	goto	u781
  3503  042F  2C31               	goto	u780
  3504  0430                     u781:	
  3505  0430  2C60               	goto	l1255
  3506  0431                     u780:	
  3507  0431                     l1239:	
  3508  0431  01B0               	clrf	___awmod@counter
  3509  0432  0AB0               	incf	___awmod@counter,f
  3510  0433  2C3F               	goto	l1245
  3511  0434                     l1241:	
  3512  0434  3001               	movlw	1
  3513  0435                     u795:	
  3514  0435  1003               	clrc
  3515  0436  0DAB               	rlf	___awmod@divisor,f
  3516  0437  0DAC               	rlf	___awmod@divisor+1,f
  3517  0438  3EFF               	addlw	-1
  3518  0439  1D03               	skipz
  3519  043A  2C35               	goto	u795
  3520  043B                     l1243:	
  3521  043B  3001               	movlw	1
  3522  043C  00AF               	movwf	??___awmod
  3523  043D  082F               	movf	??___awmod,w
  3524  043E  07B0               	addwf	___awmod@counter,f
  3525  043F                     l1245:	
  3526  043F  1FAC               	btfss	___awmod@divisor+1,7
  3527  0440  2C42               	goto	u801
  3528  0441  2C43               	goto	u800
  3529  0442                     u801:	
  3530  0442  2C34               	goto	l1241
  3531  0443                     u800:	
  3532  0443                     l1247:	
  3533  0443  082C               	movf	___awmod@divisor+1,w
  3534  0444  022E               	subwf	___awmod@dividend+1,w
  3535  0445  1D03               	skipz
  3536  0446  2C49               	goto	u815
  3537  0447  082B               	movf	___awmod@divisor,w
  3538  0448  022D               	subwf	___awmod@dividend,w
  3539  0449                     u815:	
  3540  0449  1C03               	skipc
  3541  044A  2C4C               	goto	u811
  3542  044B  2C4D               	goto	u810
  3543  044C                     u811:	
  3544  044C  2C53               	goto	l1251
  3545  044D                     u810:	
  3546  044D                     l1249:	
  3547  044D  082B               	movf	___awmod@divisor,w
  3548  044E  02AD               	subwf	___awmod@dividend,f
  3549  044F  082C               	movf	___awmod@divisor+1,w
  3550  0450  1C03               	skipc
  3551  0451  03AE               	decf	___awmod@dividend+1,f
  3552  0452  02AE               	subwf	___awmod@dividend+1,f
  3553  0453                     l1251:	
  3554  0453  3001               	movlw	1
  3555  0454                     u825:	
  3556  0454  1003               	clrc
  3557  0455  0CAC               	rrf	___awmod@divisor+1,f
  3558  0456  0CAB               	rrf	___awmod@divisor,f
  3559  0457  3EFF               	addlw	-1
  3560  0458  1D03               	skipz
  3561  0459  2C54               	goto	u825
  3562  045A                     l1253:	
  3563  045A  3001               	movlw	1
  3564  045B  02B0               	subwf	___awmod@counter,f
  3565  045C  1D03               	btfss	3,2
  3566  045D  2C5F               	goto	u831
  3567  045E  2C60               	goto	u830
  3568  045F                     u831:	
  3569  045F  2C43               	goto	l1247
  3570  0460                     u830:	
  3571  0460                     l1255:	
  3572  0460  0831               	movf	___awmod@sign,w
  3573  0461  1903               	btfsc	3,2
  3574  0462  2C64               	goto	u841
  3575  0463  2C65               	goto	u840
  3576  0464                     u841:	
  3577  0464  2C6A               	goto	l1259
  3578  0465                     u840:	
  3579  0465                     l1257:	
  3580  0465  09AD               	comf	___awmod@dividend,f
  3581  0466  09AE               	comf	___awmod@dividend+1,f
  3582  0467  0AAD               	incf	___awmod@dividend,f
  3583  0468  1903               	skipnz
  3584  0469  0AAE               	incf	___awmod@dividend+1,f
  3585  046A                     l1259:	
  3586  046A  082E               	movf	___awmod@dividend+1,w
  3587  046B  00AC               	movwf	?___awmod+1
  3588  046C  082D               	movf	___awmod@dividend,w
  3589  046D  00AB               	movwf	?___awmod
  3590  046E                     l429:	
  3591  046E  0008               	return
  3592  046F                     __end_of___awmod:	
  3593                           
  3594                           	psect	text21
  3595  0283                     __ptext21:	
  3596 ;; *************** function _Timer0_ISR *****************
  3597 ;; Defined at:
  3598 ;;		line 144 in file "mainsource.c"
  3599 ;; Parameters:    Size  Location     Type
  3600 ;;		None
  3601 ;; Auto vars:     Size  Location     Type
  3602 ;;		None
  3603 ;; Return value:  Size  Location     Type
  3604 ;;                  1    wreg      void 
  3605 ;; Registers used:
  3606 ;;		wreg, status,2
  3607 ;; Tracked objects:
  3608 ;;		On entry : 0/0
  3609 ;;		On exit  : 0/0
  3610 ;;		Unchanged: 0/0
  3611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3612 ;;      Params:         0       0       0       0       0
  3613 ;;      Locals:         0       0       0       0       0
  3614 ;;      Temps:          2       0       0       0       0
  3615 ;;      Totals:         2       0       0       0       0
  3616 ;;Total ram usage:        2 bytes
  3617 ;; Hardware stack levels used:    1
  3618 ;; This function calls:
  3619 ;;		Nothing
  3620 ;; This function is called by:
  3621 ;;		Interrupt level 1
  3622 ;; This function uses a non-reentrant model
  3623 ;;
  3624                           
  3625                           
  3626                           ;psect for function _Timer0_ISR
  3627  0283                     _Timer0_ISR:	
  3628  0283                     i1l1433:	
  3629                           
  3630                           ;mainsource.c: 145:     if(INTCONbits.TMR0IF){
  3631  0283  1D0B               	btfss	11,2	;volatile
  3632  0284  2A86               	goto	u100_21
  3633  0285  2A87               	goto	u100_20
  3634  0286                     u100_21:	
  3635  0286  2A9B               	goto	i1l109
  3636  0287                     u100_20:	
  3637  0287                     i1l1435:	
  3638                           
  3639                           ;mainsource.c: 146:         INTCONbits.TMR0IF=0;
  3640  0287  110B               	bcf	11,2	;volatile
  3641  0288                     i1l1437:	
  3642                           
  3643                           ;mainsource.c: 147:         timerCount ++;
  3644  0288  3001               	movlw	1
  3645  0289  1283               	bcf	3,5	;RP0=0, select bank0
  3646  028A  1303               	bcf	3,6	;RP1=0, select bank0
  3647  028B  07CE               	addwf	_timerCount,f
  3648  028C  3000               	movlw	0
  3649  028D  1803               	skipnc
  3650  028E  3001               	movlw	1
  3651  028F  07CF               	addwf	_timerCount+1,f
  3652  0290  3000               	movlw	0
  3653  0291  1803               	skipnc
  3654  0292  3001               	movlw	1
  3655  0293  07D0               	addwf	_timerCount+2,f
  3656  0294  3000               	movlw	0
  3657  0295  1803               	skipnc
  3658  0296  3001               	movlw	1
  3659  0297  07D1               	addwf	_timerCount+3,f
  3660  0298                     i1l1439:	
  3661                           
  3662                           ;mainsource.c: 148:         con.check_count = 1;
  3663  0298  01CD               	clrf	_con+8
  3664  0299  0ACD               	incf	_con+8,f
  3665                           
  3666                           ;mainsource.c: 149:     }
  3667  029A  2AB0               	goto	i1l114
  3668  029B                     i1l109:	
  3669                           ;mainsource.c: 150:     else if(INTCONbits.RBIF){
  3670                           
  3671  029B  1C0B               	btfss	11,0	;volatile
  3672  029C  2A9E               	goto	u101_21
  3673  029D  2A9F               	goto	u101_20
  3674  029E                     u101_21:	
  3675  029E  2AB0               	goto	i1l114
  3676  029F                     u101_20:	
  3677  029F                     i1l1441:	
  3678                           
  3679                           ;mainsource.c: 151:         if(PORTBbits.RB5 == 0){
  3680  029F  1283               	bcf	3,5	;RP0=0, select bank0
  3681  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  3682  02A1  1A86               	btfsc	6,5	;volatile
  3683  02A2  2AA4               	goto	u102_21
  3684  02A3  2AA5               	goto	u102_20
  3685  02A4                     u102_21:	
  3686  02A4  2AA8               	goto	i1l1447
  3687  02A5                     u102_20:	
  3688  02A5                     i1l1443:	
  3689                           
  3690                           ;mainsource.c: 152:             con.derecha = 1;
  3691  02A5  01CB               	clrf	_con+6
  3692  02A6  0ACB               	incf	_con+6,f
  3693  02A7                     i1l1445:	
  3694                           
  3695                           ;mainsource.c: 153:             con.izquierda = 0;
  3696  02A7  01CC               	clrf	_con+7
  3697  02A8                     i1l1447:	
  3698                           
  3699                           ;mainsource.c: 155:         if(PORTBbits.RB4 == 0){
  3700  02A8  1A06               	btfsc	6,4	;volatile
  3701  02A9  2AAB               	goto	u103_21
  3702  02AA  2AAC               	goto	u103_20
  3703  02AB                     u103_21:	
  3704  02AB  2AAF               	goto	i1l1453
  3705  02AC                     u103_20:	
  3706  02AC                     i1l1449:	
  3707                           
  3708                           ;mainsource.c: 156:             con.derecha = 0;
  3709  02AC  01CB               	clrf	_con+6
  3710  02AD                     i1l1451:	
  3711                           
  3712                           ;mainsource.c: 157:             con.izquierda = 1;
  3713  02AD  01CC               	clrf	_con+7
  3714  02AE  0ACC               	incf	_con+7,f
  3715  02AF                     i1l1453:	
  3716                           
  3717                           ;mainsource.c: 159:         INTCONbits.RBIF=0;
  3718  02AF  100B               	bcf	11,0	;volatile
  3719  02B0                     i1l114:	
  3720  02B0  0872               	movf	??_Timer0_ISR+1,w
  3721  02B1  008A               	movwf	10
  3722  02B2  0E71               	swapf	??_Timer0_ISR^(0+4294967168),w
  3723  02B3  0083               	movwf	3
  3724  02B4  0EFE               	swapf	btemp,f
  3725  02B5  0E7E               	swapf	btemp,w
  3726  02B6  0009               	retfie
  3727  02B7                     __end_of_Timer0_ISR:	
  3728  007E                     btemp	set	126	;btemp
  3729  007E                     wtemp0	set	126
  3730                           
  3731                           	psect	intentry
  3732  0004                     __pintentry:	
  3733                           ;incstack = 0
  3734                           ; Regs used in _Timer0_ISR: [wreg+status,2]
  3735                           
  3736  0004                     interrupt_function:	
  3737  007E                     saved_w	set	btemp
  3738  0004  00FE               	movwf	btemp
  3739  0005  0E03               	swapf	3,w
  3740  0006  00F1               	movwf	??_Timer0_ISR
  3741  0007  080A               	movf	10,w
  3742  0008  00F2               	movwf	??_Timer0_ISR+1
  3743  0009  120A  118A  2A83   	ljmp	_Timer0_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        60
    BSS         61
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13     11      11
    BANK0            80     41      74
    BANK1            80      0      32
    BANK3            85      0      56
    BANK2            96      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(1) Largest target is 16
		 -> ficha(BANK1[16]), fondo(BANK0[16]), 

    memset@p	PTR unsigned char  size(1) Largest target is 16
		 -> ficha(BANK1[16]), fondo(BANK0[16]), 

    updateScreen@screen	PTR unsigned int  size(1) Largest target is 16
		 -> pantalla(BANK1[16]), 

    sp__memset	PTR void  size(1) Largest target is 16
		 -> ficha(BANK1[16]), fondo(BANK0[16]), 


Critical Paths under _main in COMMON

    _main->_updateScreen
    _updateScreen->_setFilas
    _rand->___lmul
    _drawFigure->_memset

Critical Paths under _Timer0_ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_checkCount
    _updateScreen->_setFilas
    _checkCount->___awmod
    _rand->___lmul
    ___awmod->_rand

Critical Paths under _Timer0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer0_ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10     6      4    4748
                                             31 BANK0     10     6      4
                            ___awmod
                         _checkCount
                     _init_interrupt
                         _init_pines
                         _init_timer
                               _rand
                              _srand
                       _updateScreen
 ---------------------------------------------------------------------------------
 (1) _updateScreen                                         5     5      0     364
                                             10 COMMON     1     1      0
                                              2 BANK0      4     4      0
                           _setFilas
                    _shiftBitColumna
 ---------------------------------------------------------------------------------
 (2) _shiftBitColumna                                      2     2      0      22
                                              2 COMMON     2     2      0
                     _latchClock_Col
                     _latchClock_Fil
                     _shiftClock_Col
 ---------------------------------------------------------------------------------
 (3) _shiftClock_Col                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _latchClock_Fil                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _latchClock_Col                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setFilas                                            10     8      2     265
                                              2 COMMON     8     6      2
                                              0 BANK0      2     2      0
                     _shiftClock_Fil
 ---------------------------------------------------------------------------------
 (3) _shiftClock_Fil                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_pines                                           0     0      0       0
                     _init_pines_col
                     _init_pines_fil
                      _init_pines_in
 ---------------------------------------------------------------------------------
 (2) _init_pines_in                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_pines_fil                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_pines_col                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_interrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkCount                                          13    13      0    3060
                                             18 BANK0     13    13      0
                            ___awmod
                         _drawFigure
                             _memset
                               _rand
 ---------------------------------------------------------------------------------
 (1) _rand                                                 7     5      2     244
                                              4 BANK0      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     244
                                              2 COMMON     9     1      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _drawFigure                                           5     5      0     651
                                              0 BANK0      5     5      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               7     3      4     651
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     904
                                             11 BANK0      7     3      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Timer0_ISR                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awmod
     _rand (ARG)
       ___lmul
   _checkCount
     ___awmod
       _rand (ARG)
         ___lmul
     _drawFigure
       _memset
     _memset
     _rand
       ___lmul
   _init_interrupt
   _init_pines
     _init_pines_col
     _init_pines_fil
     _init_pines_in
   _init_timer
   _rand
     ___lmul
   _srand
   _updateScreen
     _setFilas
       _shiftClock_Fil
     _shiftBitColumna
       _latchClock_Col
       _latchClock_Fil
       _shiftClock_Col

 _Timer0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               55      0      38       9       65.9%
BITBANK3            55      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      20       7       40.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     29      4A       5       92.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               D      B       B       1       84.6%
BITCOMMON            D      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      AD      12        0.0%
ABS                  0      0      AD       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun May 03 15:27:11 2020

                       pc 0002               __CFG_CP$OFF 0000          ??_init_interrupt 0073  
                      l21 01F5                        l30 0220                        l24 0202  
                      l33 01D9                        l27 0233                        l36 0210  
                      l90 06FE                        fsr 0004          ??_init_pines_col 0073  
        ??_init_pines_fil 0073                       l104 07CF                       l122 01C5  
                     l134 01BF                       l127 037C                       l119 01CB  
                     l137 01D1                       l145 0262                       l168 03C7  
                     l177 0598                       l429 046E                       l277 0413  
                     l711 0282                       l716 01EA                       l719 0335  
                     u600 032D                       u610 04E3              __CFG_CPD$OFF 0000  
                     u611 04E2                       u540 0282                       u620 04E9  
                     u541 0281                       u621 04E8                       u605 0328  
                     u630 04F4                       u550 03D6                       u631 04F3  
                     u551 03D5                       u800 0443                       u704 0564  
                     u640 04F9                       u801 0442                       u705 0561  
                     u641 04F8                       u561 03E1                       u810 044D  
                     u562 03E8                       u730 0349                       u811 044C  
                     u715 0578                       u563 03EF                       u731 0348  
                     u724 058B                       u900 069B                       u725 0588  
                     u901 069A                       u830 0460                       u590 0409  
                     u910 06D7                       u831 045F                       u815 0449  
                     u655 0503                       u591 0408                       u575 03F1  
                     u911 06D6                       u735 0345                       u840 0465  
                     u760 041B                       u664 0516                       u920 0713  
                     u744 0356                       u841 0464                       u825 0454  
                     u761 041A                       u665 0513                       u585 03F9  
                     u921 0712                       u745 0353                       u770 0426  
                     u930 0728                       u850 05A0                       u754 0363  
                     u771 0425                       u675 052A                       u931 0727  
                     u915 06D3                       u851 059F                       u755 0360  
                     u780 0431                       u684 053D                       u940 0776  
                     u860 05B4                       u781 0430                       u685 053A  
                     u941 0775                       u925 070F                       u861 05B3  
                     u870 05CC                       u695 0551                       u871 05CB  
                     u863 05B0                       u960 07A3                       u880 0608  
                     u961 07A2                       u945 0772                       u881 0607  
                     u970 07B7                       u954 0795                       u890 066B  
                     u795 0435                       u971 07B6                       u955 0792  
                     u891 066A                       u980 07CC                       u981 07CB  
                     u885 0604                       u990 0386                       u975 07B3  
                     u895 0667                       u991 0385                       u985 07C8  
                     _con 0045                       fsr0 0004                       indf 0000  
            ___awmod@sign 0031              __CFG_FOSC$XT 0000              __CFG_LVP$OFF 0000  
                    l1201 0571                      l1211 036E                      l1203 0336  
                    l1133 0264                      l1301 05CC                      l1213 0373  
                    l1205 033C                      l1141 01C6                      l1221 0258  
                    l1231 0420                      l1135 0269                      l1151 03D2  
                    l1311 05FB                      l1143 01C0                      l1223 025D  
                    l1241 0434                      l1233 0422                      l1225 0414  
                    l1137 0270                      l1153 03D6                      l1313 0608  
                    l1209 034A                      l1145 01BB                      l1217 0248  
                    l1401 0388                      l1251 0453                      l1243 043B  
                    l1235 0426                      l1227 0417                      l1139 0274  
                    l1155 03EF                      l1171 0310                      l1331 066B  
                    l1315 060E                      l1307 05CE                      l1163 01EB  
                    l1147 01CC                      l1219 0253                      l1403 039F  
                    l1411 046F                      l1253 045A                      l1245 043F  
                    l1237 042B                      l1229 041B                      l1181 04E3  
                    l1157 03F8                      l1149 03C8                      l1173 031E  
                    l1341 069D                      l1333 0675                      l1325 0631  
                    l1309 05F5                      l1317 0628                      l1165 01F6  
                    l1405 03A6                      l1421 0486                      l1413 047E  
                    l1247 0443                      l1239 0431                      l1255 0460  
                    l1191 04F9                      l1183 04E9                      l1159 0409  
                    l1343 06C4                      l1335 069B                      l1351 06F8  
                    l1327 0658                      l1319 062D                      l1167 0221  
                    l1263 0211                      l1271 0207                      l1407 03AA  
                    l1431 04C5                      l1423 048A                      l1415 047E  
                    l1257 0465                      l1249 044D                      l1193 04FB  
                    l1185 04ED                      l1177 04CF                      l1169 02EF  
                    l1361 0728                      l1353 0713                      l1345 06CA  
                    l1329 065E                      l1265 01D2                      l1281 020E  
                    l1273 0208                      l1409 03C1                      l1425 0496  
                    l1417 047E                      l1259 046A                      l1195 04FC  
                    l1187 04EF                      l1179 04DC                      l1371 0776  
                    l1363 0742                      l1347 06D7                      l1291 05A2  
                    l1283 020F                      l1275 0209                      l1267 0203  
                    l1427 04B2                      l1419 0482                      l1197 0523  
                    l1189 04F4                      l1365 0748                      l1349 06DD  
                    l1293 05B4                      l1277 020C                      l1269 0206  
                    l1285 01E2                      l1429 04C0                      l1199 054A  
                    l1391 07B7                      l1383 077E                      l1367 0763  
                    l1359 0717                      l1295 05B9                      l1287 0599  
                    l1279 020D                      l1393 07BF                      l1377 077A  
                    l1369 0769                      l1297 05BD                      l1289 05A0  
                    l1387 07A4                      l1299 05C7                      l1395 07CC  
                    l1389 07AA                      l1397 037E                      l1399 0386  
                    _TMR0 0001              __CFG_WRT$OFF 0000                      _main 046F  
                    _rand 02EF                      btemp 007E             __CFG_BOREN$ON 0000  
                    start 000C        shiftBitColumna@bit 0074                     ?_main 003F  
                   ?_rand 0024             __CFG_WDTE$OFF 0000           __end_of___awmod 046F  
                   i1l114 02B0                     i1l109 029B       ___lmul@multiplicand 0077  
                   _ficha 00A0                     _fondo 0052                     _randx 0062  
                   _srand 01E2                     pclath 000A                     status 0003  
                   wtemp0 007E           __initialization 07D0              __end_of_main 04CF  
            __end_of_rand 0336            _latchClock_Fil 01C6            _latchClock_Col 01BB  
 __size_of_shiftClock_Fil 0006   __size_of_shiftClock_Col 0006                    ??_main 0043  
                  ??_rand 0026                    ?_srand 0073                    u100_20 0287  
                  u100_21 0286                    u101_20 029F                    u101_21 029E  
                  u102_20 02A5                    u102_21 02A4                    u103_20 02AC  
                  u103_21 02AB                    i1l1441 029F                    i1l1433 0283  
                  i1l1451 02AD                    i1l1443 02A5                    i1l1435 0287  
                  i1l1453 02AF                    i1l1445 02A7                    i1l1437 0288  
                  i1l1447 02A8                    i1l1439 0298                    i1l1449 02AC  
          __CFG_PWRTE$OFF 0000                _Timer0_ISR 0283    __end_of_latchClock_Col 01C0  
  __end_of_latchClock_Fil 01CC                    ___lmul 03C8                 ??___awmod 002F  
                  _memset 0263           ___awmod@divisor 002B           ___awmod@counter 0030  
        __end_of_setFilas 037D    __size_of_init_pines_in 000B                    saved_w 007E  
                  srand@x 0073   __end_of__initialization 07FC  __size_of_shiftBitColumna 001C  
      updateScreen@screen 007B           ?_latchClock_Col 0071           ?_latchClock_Fil 0071  
          __pcstackCOMMON 0071              __pidataBANK0 01B7              __pidataBANK3 02B7  
           __end_of_srand 01EB            _OPTION_REGbits 0081                _checkCount 0599  
                 ??_srand 0075                __pbssBANK0 0045                __pbssBANK1 00A0  
           _init_pines_in 01EB               ?_Timer0_ISR 0071                __pmaintext 046F  
                 ?___lmul 0073                __pintentry 0004            _shiftClock_Fil 01C0  
          _shiftClock_Col 01CC                   ?_memset 0073            ___lmul@product 0020  
              _drawFigure 04CF            ?_init_pines_in 0071                 ?_setFilas 0073  
  __end_of_shiftClock_Fil 01C6    __end_of_shiftClock_Col 01D2           __size_of___lmul 004C  
                 ___awmod 0414         ??_shiftBitColumna 0073                _init_pines 0211  
              _init_timer 0203           __size_of_memset 0020                   __ptext1 037D  
                 __ptext2 0247                   __ptext3 01CC                   __ptext4 01C6  
                 __ptext5 01BB                   __ptext6 0336                   __ptext7 01C0  
                 __ptext8 01E2                   __ptext9 0203                   _figuras 0190  
        ___awmod@dividend 002D       __size_of_Timer0_ISR 0034   __size_of_init_interrupt 0008  
                 clrloop0 01DB               ?_checkCount 0071      end_of_initialization 07FC  
 __size_of_init_pines_col 0013   __size_of_init_pines_fil 000D                   memset@c 0073  
                 memset@n 0075                   memset@p 0078                ??_setFilas 0075  
         ?_shiftClock_Col 0071           ?_shiftClock_Fil 0071                _timerCount 004E  
               _PORTBbits 0006                 _PORTCbits 0007                 _PORTDbits 0008  
             ?_drawFigure 0071                 _TRISBbits 0086                 _TRISCbits 0087  
               _TRISDbits 0088           ??_init_pines_in 0073          ??_latchClock_Col 0073  
        ??_latchClock_Fil 0073             ?_updateScreen 0071            __end_of___lmul 0414  
     __size_of_checkCount 0237               ?_init_pines 0071               ?_init_timer 0071  
          __end_of_memset 0283       start_initialization 07D0            ??_updateScreen 0022  
            ??_Timer0_ISR 0071       __size_of_drawFigure 00CA                  ??___lmul 007B  
       setFilas@reg_value 0073                init_fetch0 0234               __pdataBANK0 0062  
             __pdataBANK3 0190                  ??_memset 0077                 ___latbits 0002  
           __pcstackBANK0 0020            _init_interrupt 01D2        __end_of_Timer0_ISR 02B7  
          _init_pines_fil 01F6            _init_pines_col 0221       __size_of_init_pines 0010  
         _shiftBitColumna 0247       __size_of_init_timer 000E         __size_of_setFilas 0047  
                ?___awmod 002B    __end_of_init_interrupt 01DA    __end_of_init_pines_col 0234  
  __end_of_init_pines_fil 0203              ??_checkCount 0032            __size_of_srand 0009  
       interrupt_function 0004          ??_shiftClock_Col 0073          ??_shiftClock_Fil 0073  
               clear_ram0 01DA        __end_of_checkCount 07D0           ?_init_interrupt 0071  
            ??_drawFigure 0020      __end_of_updateScreen 03C8           ?_init_pines_col 0071  
         ?_init_pines_fil 0071   __end_of_shiftBitColumna 0263         ___lmul@multiplier 0073  
             checkCount@i 003D               checkCount@j 003B        __end_of_drawFigure 0599  
        __size_of___awmod 005B              ??_init_pines 0073              ??_init_timer 0073  
               setFilas@i 0020                  __ptext10 0211                  __ptext11 01EB  
                __ptext20 0414                  __ptext12 01F6                  __ptext21 0283  
                __ptext13 0221                  __ptext14 01D2                  __ptext15 0599  
                __ptext16 02EF                  __ptext17 03C8                  __ptext18 04CF  
                __ptext19 0263     __end_of_init_pines_in 01F6             __size_of_main 0060  
           __size_of_rand 0047        __end_of_init_pines 0221        __end_of_init_timer 0211  
                _pantalla 00B0                  _setFilas 0336                  main@argc 003F  
                main@argv 0041                _INTCONbits 000B                  init_ram0 0238  
                memset@p1 0079          ?_shiftBitColumna 0071                  intlevel1 0000  
 __size_of_latchClock_Col 0005   __size_of_latchClock_Fil 0006     __size_of_updateScreen 004B  
            _updateScreen 037D  
