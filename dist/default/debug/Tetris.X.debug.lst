

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu May 14 21:38:10 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	intentry,global,class=CODE,delta=2
    47                           	dabs	1,0x7E,2
    48  0000                     
    49                           ; Version 2.10
    50                           ; Generated 31/07/2019 GMT
    51                           ; 
    52                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16F877A Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  0006                     	;# 
    90  0007                     	;# 
    91  0008                     	;# 
    92  0009                     	;# 
    93  000A                     	;# 
    94  000B                     	;# 
    95  000C                     	;# 
    96  000D                     	;# 
    97  000E                     	;# 
    98  000E                     	;# 
    99  000F                     	;# 
   100  0010                     	;# 
   101  0011                     	;# 
   102  0012                     	;# 
   103  0013                     	;# 
   104  0014                     	;# 
   105  0015                     	;# 
   106  0015                     	;# 
   107  0016                     	;# 
   108  0017                     	;# 
   109  0018                     	;# 
   110  0019                     	;# 
   111  001A                     	;# 
   112  001B                     	;# 
   113  001B                     	;# 
   114  001C                     	;# 
   115  001D                     	;# 
   116  001E                     	;# 
   117  001F                     	;# 
   118  0081                     	;# 
   119  0085                     	;# 
   120  0086                     	;# 
   121  0087                     	;# 
   122  0088                     	;# 
   123  0089                     	;# 
   124  008C                     	;# 
   125  008D                     	;# 
   126  008E                     	;# 
   127  0091                     	;# 
   128  0092                     	;# 
   129  0093                     	;# 
   130  0094                     	;# 
   131  0098                     	;# 
   132  0099                     	;# 
   133  009C                     	;# 
   134  009D                     	;# 
   135  009E                     	;# 
   136  009F                     	;# 
   137  010C                     	;# 
   138  010D                     	;# 
   139  010E                     	;# 
   140  010F                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  0007                     	;# 
   151  0008                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000D                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0013                     	;# 
   164  0014                     	;# 
   165  0015                     	;# 
   166  0015                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001B                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001E                     	;# 
   177  001F                     	;# 
   178  0081                     	;# 
   179  0085                     	;# 
   180  0086                     	;# 
   181  0087                     	;# 
   182  0088                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  0091                     	;# 
   188  0092                     	;# 
   189  0093                     	;# 
   190  0094                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  018C                     	;# 
   202  018D                     	;# 
   203  0000                     	;# 
   204  0001                     	;# 
   205  0002                     	;# 
   206  0003                     	;# 
   207  0004                     	;# 
   208  0005                     	;# 
   209  0006                     	;# 
   210  0007                     	;# 
   211  0008                     	;# 
   212  0009                     	;# 
   213  000A                     	;# 
   214  000B                     	;# 
   215  000C                     	;# 
   216  000D                     	;# 
   217  000E                     	;# 
   218  000E                     	;# 
   219  000F                     	;# 
   220  0010                     	;# 
   221  0011                     	;# 
   222  0012                     	;# 
   223  0013                     	;# 
   224  0014                     	;# 
   225  0015                     	;# 
   226  0015                     	;# 
   227  0016                     	;# 
   228  0017                     	;# 
   229  0018                     	;# 
   230  0019                     	;# 
   231  001A                     	;# 
   232  001B                     	;# 
   233  001B                     	;# 
   234  001C                     	;# 
   235  001D                     	;# 
   236  001E                     	;# 
   237  001F                     	;# 
   238  0081                     	;# 
   239  0085                     	;# 
   240  0086                     	;# 
   241  0087                     	;# 
   242  0088                     	;# 
   243  0089                     	;# 
   244  008C                     	;# 
   245  008D                     	;# 
   246  008E                     	;# 
   247  0091                     	;# 
   248  0092                     	;# 
   249  0093                     	;# 
   250  0094                     	;# 
   251  0098                     	;# 
   252  0099                     	;# 
   253  009C                     	;# 
   254  009D                     	;# 
   255  009E                     	;# 
   256  009F                     	;# 
   257  010C                     	;# 
   258  010D                     	;# 
   259  010E                     	;# 
   260  010F                     	;# 
   261  018C                     	;# 
   262  018D                     	;# 
   263  0000                     	;# 
   264  0001                     	;# 
   265  0002                     	;# 
   266  0003                     	;# 
   267  0004                     	;# 
   268  0005                     	;# 
   269  0006                     	;# 
   270  0007                     	;# 
   271  0008                     	;# 
   272  0009                     	;# 
   273  000A                     	;# 
   274  000B                     	;# 
   275  000C                     	;# 
   276  000D                     	;# 
   277  000E                     	;# 
   278  000E                     	;# 
   279  000F                     	;# 
   280  0010                     	;# 
   281  0011                     	;# 
   282  0012                     	;# 
   283  0013                     	;# 
   284  0014                     	;# 
   285  0015                     	;# 
   286  0015                     	;# 
   287  0016                     	;# 
   288  0017                     	;# 
   289  0018                     	;# 
   290  0019                     	;# 
   291  001A                     	;# 
   292  001B                     	;# 
   293  001B                     	;# 
   294  001C                     	;# 
   295  001D                     	;# 
   296  001E                     	;# 
   297  001F                     	;# 
   298  0081                     	;# 
   299  0085                     	;# 
   300  0086                     	;# 
   301  0087                     	;# 
   302  0088                     	;# 
   303  0089                     	;# 
   304  008C                     	;# 
   305  008D                     	;# 
   306  008E                     	;# 
   307  0091                     	;# 
   308  0092                     	;# 
   309  0093                     	;# 
   310  0094                     	;# 
   311  0098                     	;# 
   312  0099                     	;# 
   313  009C                     	;# 
   314  009D                     	;# 
   315  009E                     	;# 
   316  009F                     	;# 
   317  010C                     	;# 
   318  010D                     	;# 
   319  010E                     	;# 
   320  010F                     	;# 
   321  018C                     	;# 
   322  018D                     	;# 
   323  0000                     	;# 
   324  0001                     	;# 
   325  0002                     	;# 
   326  0003                     	;# 
   327  0004                     	;# 
   328  0005                     	;# 
   329  0006                     	;# 
   330  0007                     	;# 
   331  0008                     	;# 
   332  0009                     	;# 
   333  000A                     	;# 
   334  000B                     	;# 
   335  000C                     	;# 
   336  000D                     	;# 
   337  000E                     	;# 
   338  000E                     	;# 
   339  000F                     	;# 
   340  0010                     	;# 
   341  0011                     	;# 
   342  0012                     	;# 
   343  0013                     	;# 
   344  0014                     	;# 
   345  0015                     	;# 
   346  0015                     	;# 
   347  0016                     	;# 
   348  0017                     	;# 
   349  0018                     	;# 
   350  0019                     	;# 
   351  001A                     	;# 
   352  001B                     	;# 
   353  001B                     	;# 
   354  001C                     	;# 
   355  001D                     	;# 
   356  001E                     	;# 
   357  001F                     	;# 
   358  0081                     	;# 
   359  0085                     	;# 
   360  0086                     	;# 
   361  0087                     	;# 
   362  0088                     	;# 
   363  0089                     	;# 
   364  008C                     	;# 
   365  008D                     	;# 
   366  008E                     	;# 
   367  0091                     	;# 
   368  0092                     	;# 
   369  0093                     	;# 
   370  0094                     	;# 
   371  0098                     	;# 
   372  0099                     	;# 
   373  009C                     	;# 
   374  009D                     	;# 
   375  009E                     	;# 
   376  009F                     	;# 
   377  010C                     	;# 
   378  010D                     	;# 
   379  010E                     	;# 
   380  010F                     	;# 
   381  018C                     	;# 
   382  018D                     	;# 
   383  0000                     	;# 
   384  0001                     	;# 
   385  0002                     	;# 
   386  0003                     	;# 
   387  0004                     	;# 
   388  0005                     	;# 
   389  0006                     	;# 
   390  0007                     	;# 
   391  0008                     	;# 
   392  0009                     	;# 
   393  000A                     	;# 
   394  000B                     	;# 
   395  000C                     	;# 
   396  000D                     	;# 
   397  000E                     	;# 
   398  000E                     	;# 
   399  000F                     	;# 
   400  0010                     	;# 
   401  0011                     	;# 
   402  0012                     	;# 
   403  0013                     	;# 
   404  0014                     	;# 
   405  0015                     	;# 
   406  0015                     	;# 
   407  0016                     	;# 
   408  0017                     	;# 
   409  0018                     	;# 
   410  0019                     	;# 
   411  001A                     	;# 
   412  001B                     	;# 
   413  001B                     	;# 
   414  001C                     	;# 
   415  001D                     	;# 
   416  001E                     	;# 
   417  001F                     	;# 
   418  0081                     	;# 
   419  0085                     	;# 
   420  0086                     	;# 
   421  0087                     	;# 
   422  0088                     	;# 
   423  0089                     	;# 
   424  008C                     	;# 
   425  008D                     	;# 
   426  008E                     	;# 
   427  0091                     	;# 
   428  0092                     	;# 
   429  0093                     	;# 
   430  0094                     	;# 
   431  0098                     	;# 
   432  0099                     	;# 
   433  009C                     	;# 
   434  009D                     	;# 
   435  009E                     	;# 
   436  009F                     	;# 
   437  010C                     	;# 
   438  010D                     	;# 
   439  010E                     	;# 
   440  010F                     	;# 
   441  018C                     	;# 
   442  018D                     	;# 
   443  0000                     	;# 
   444  0001                     	;# 
   445  0002                     	;# 
   446  0003                     	;# 
   447  0004                     	;# 
   448  0005                     	;# 
   449  0006                     	;# 
   450  0007                     	;# 
   451  0008                     	;# 
   452  0009                     	;# 
   453  000A                     	;# 
   454  000B                     	;# 
   455  000C                     	;# 
   456  000D                     	;# 
   457  000E                     	;# 
   458  000E                     	;# 
   459  000F                     	;# 
   460  0010                     	;# 
   461  0011                     	;# 
   462  0012                     	;# 
   463  0013                     	;# 
   464  0014                     	;# 
   465  0015                     	;# 
   466  0015                     	;# 
   467  0016                     	;# 
   468  0017                     	;# 
   469  0018                     	;# 
   470  0019                     	;# 
   471  001A                     	;# 
   472  001B                     	;# 
   473  001B                     	;# 
   474  001C                     	;# 
   475  001D                     	;# 
   476  001E                     	;# 
   477  001F                     	;# 
   478  0081                     	;# 
   479  0085                     	;# 
   480  0086                     	;# 
   481  0087                     	;# 
   482  0088                     	;# 
   483  0089                     	;# 
   484  008C                     	;# 
   485  008D                     	;# 
   486  008E                     	;# 
   487  0091                     	;# 
   488  0092                     	;# 
   489  0093                     	;# 
   490  0094                     	;# 
   491  0098                     	;# 
   492  0099                     	;# 
   493  009C                     	;# 
   494  009D                     	;# 
   495  009E                     	;# 
   496  009F                     	;# 
   497  010C                     	;# 
   498  010D                     	;# 
   499  010E                     	;# 
   500  010F                     	;# 
   501  018C                     	;# 
   502  018D                     	;# 
   503  0000                     	;# 
   504  0001                     	;# 
   505  0002                     	;# 
   506  0003                     	;# 
   507  0004                     	;# 
   508  0005                     	;# 
   509  0006                     	;# 
   510  0007                     	;# 
   511  0008                     	;# 
   512  0009                     	;# 
   513  000A                     	;# 
   514  000B                     	;# 
   515  000C                     	;# 
   516  000D                     	;# 
   517  000E                     	;# 
   518  000E                     	;# 
   519  000F                     	;# 
   520  0010                     	;# 
   521  0011                     	;# 
   522  0012                     	;# 
   523  0013                     	;# 
   524  0014                     	;# 
   525  0015                     	;# 
   526  0015                     	;# 
   527  0016                     	;# 
   528  0017                     	;# 
   529  0018                     	;# 
   530  0019                     	;# 
   531  001A                     	;# 
   532  001B                     	;# 
   533  001B                     	;# 
   534  001C                     	;# 
   535  001D                     	;# 
   536  001E                     	;# 
   537  001F                     	;# 
   538  0081                     	;# 
   539  0085                     	;# 
   540  0086                     	;# 
   541  0087                     	;# 
   542  0088                     	;# 
   543  0089                     	;# 
   544  008C                     	;# 
   545  008D                     	;# 
   546  008E                     	;# 
   547  0091                     	;# 
   548  0092                     	;# 
   549  0093                     	;# 
   550  0094                     	;# 
   551  0098                     	;# 
   552  0099                     	;# 
   553  009C                     	;# 
   554  009D                     	;# 
   555  009E                     	;# 
   556  009F                     	;# 
   557  010C                     	;# 
   558  010D                     	;# 
   559  010E                     	;# 
   560  010F                     	;# 
   561  018C                     	;# 
   562  018D                     	;# 
   563  0000                     	;# 
   564  0001                     	;# 
   565  0002                     	;# 
   566  0003                     	;# 
   567  0004                     	;# 
   568  0005                     	;# 
   569  0006                     	;# 
   570  0007                     	;# 
   571  0008                     	;# 
   572  0009                     	;# 
   573  000A                     	;# 
   574  000B                     	;# 
   575  000C                     	;# 
   576  000D                     	;# 
   577  000E                     	;# 
   578  000E                     	;# 
   579  000F                     	;# 
   580  0010                     	;# 
   581  0011                     	;# 
   582  0012                     	;# 
   583  0013                     	;# 
   584  0014                     	;# 
   585  0015                     	;# 
   586  0015                     	;# 
   587  0016                     	;# 
   588  0017                     	;# 
   589  0018                     	;# 
   590  0019                     	;# 
   591  001A                     	;# 
   592  001B                     	;# 
   593  001B                     	;# 
   594  001C                     	;# 
   595  001D                     	;# 
   596  001E                     	;# 
   597  001F                     	;# 
   598  0081                     	;# 
   599  0085                     	;# 
   600  0086                     	;# 
   601  0087                     	;# 
   602  0088                     	;# 
   603  0089                     	;# 
   604  008C                     	;# 
   605  008D                     	;# 
   606  008E                     	;# 
   607  0091                     	;# 
   608  0092                     	;# 
   609  0093                     	;# 
   610  0094                     	;# 
   611  0098                     	;# 
   612  0099                     	;# 
   613  009C                     	;# 
   614  009D                     	;# 
   615  009E                     	;# 
   616  009F                     	;# 
   617  010C                     	;# 
   618  010D                     	;# 
   619  010E                     	;# 
   620  010F                     	;# 
   621  018C                     	;# 
   622  018D                     	;# 
   623                           
   624                           	psect	idataBANK0
   625  001A                     __pidataBANK0:	
   626                           
   627                           ;initializer for _randx
   628  001A  3401               	retlw	1
   629  001B  3400               	retlw	0
   630  001C  3400               	retlw	0
   631  001D  3400               	retlw	0
   632                           
   633                           	psect	idataBANK1
   634  00C5                     __pidataBANK1:	
   635                           
   636                           ;initializer for _figuras
   637  00C5  3402               	retlw	2
   638  00C6  3402               	retlw	2
   639  00C7  3403               	retlw	3
   640  00C8  3400               	retlw	0
   641  00C9  3403               	retlw	3
   642  00CA  3402               	retlw	2
   643  00CB  3402               	retlw	2
   644  00CC  3400               	retlw	0
   645  00CD  3401               	retlw	1
   646  00CE  3403               	retlw	3
   647  00CF  3402               	retlw	2
   648  00D0  3400               	retlw	0
   649  00D1  3402               	retlw	2
   650  00D2  3403               	retlw	3
   651  00D3  3401               	retlw	1
   652  00D4  3400               	retlw	0
   653  00D5  3401               	retlw	1
   654  00D6  3401               	retlw	1
   655  00D7  3401               	retlw	1
   656  00D8  3401               	retlw	1
   657  00D9  3403               	retlw	3
   658  00DA  3403               	retlw	3
   659  00DB  3400               	retlw	0
   660  00DC  3400               	retlw	0
   661  00DD  3401               	retlw	1
   662  00DE  3403               	retlw	3
   663  00DF  3401               	retlw	1
   664  00E0  3400               	retlw	0
   665  0001                     _TMR0	set	1
   666  000B                     _INTCONbits	set	11
   667  0008                     _PORTDbits	set	8
   668  0006                     _PORTBbits	set	6
   669  0007                     _PORTCbits	set	7
   670  0081                     _OPTION_REGbits	set	129
   671  0088                     _TRISDbits	set	136
   672  0087                     _TRISCbits	set	135
   673  0086                     _TRISBbits	set	134
   674                           
   675                           ; #config settings
   676  0000                     
   677                           	psect	cinit
   678  07D1                     start_initialization:	
   679  07D1                     __initialization:	
   680                           
   681                           ; Initialize objects allocated to BANK1
   682  07D1  1383               	bcf	3,7	;select IRP bank0
   683  07D2  30DC               	movlw	low (__pdataBANK1+28)
   684  07D3  00FD               	movwf	btemp+-1
   685  07D4  3000               	movlw	high __pidataBANK1
   686  07D5  00FE               	movwf	btemp
   687  07D6  30C5               	movlw	low __pidataBANK1
   688  07D7  00FF               	movwf	btemp+1
   689  07D8  30C0               	movlw	low __pdataBANK1
   690  07D9  0084               	movwf	4
   691  07DA  120A  118A  209A  120A  118A  	fcall	init_ram0
   692                           
   693                           ; Initialize objects allocated to BANK0
   694  07DF  306C               	movlw	low (__pdataBANK0+4)
   695  07E0  00FD               	movwf	btemp+-1
   696  07E1  3000               	movlw	high __pidataBANK0
   697  07E2  00FE               	movwf	btemp
   698  07E3  301A               	movlw	low __pidataBANK0
   699  07E4  00FF               	movwf	btemp+1
   700  07E5  3068               	movlw	low __pdataBANK0
   701  07E6  0084               	movwf	4
   702  07E7  120A  118A  209A  120A  118A  	fcall	init_ram0
   703                           
   704                           ; Clear objects allocated to BANK1
   705  07EC  30A0               	movlw	low __pbssBANK1
   706  07ED  0084               	movwf	4
   707  07EE  30C0               	movlw	low (__pbssBANK1+32)
   708  07EF  120A  118A  203B  120A  118A  	fcall	clear_ram0
   709                           
   710                           ; Clear objects allocated to BANK0
   711  07F4  3046               	movlw	low __pbssBANK0
   712  07F5  0084               	movwf	4
   713  07F6  3068               	movlw	low (__pbssBANK0+34)
   714  07F7  120A  118A  203B  120A  118A  	fcall	clear_ram0
   715  07FC                     end_of_initialization:	
   716                           ;End of C runtime variable initialization code
   717                           
   718  07FC                     __end_of__initialization:	
   719  07FC  0183               	clrf	3
   720  07FD  120A  118A  2B01   	ljmp	_main	;jump to C main() function
   721                           
   722                           	psect	bssBANK0
   723  0046                     __pbssBANK0:	
   724  0046                     _con:	
   725  0046                     	ds	10
   726  0050                     leerEntradas@F1199:	
   727  0050                     	ds	4
   728  0054                     _timerCount:	
   729  0054                     	ds	4
   730  0058                     _ficha:	
   731  0058                     	ds	16
   732                           
   733                           	psect	dataBANK0
   734  0068                     __pdataBANK0:	
   735  0068                     _randx:	
   736  0068                     	ds	4
   737                           
   738                           	psect	bssBANK1
   739  00A0                     __pbssBANK1:	
   740  00A0                     _fondo:	
   741  00A0                     	ds	16
   742  00B0                     _pantalla:	
   743  00B0                     	ds	16
   744                           
   745                           	psect	dataBANK1
   746  00C0                     __pdataBANK1:	
   747  00C0                     _figuras:	
   748  00C0                     	ds	28
   749                           
   750                           	psect	inittext
   751  0096                     init_fetch0:	
   752                           ;	Called with low address in FSR and high address in W
   753                           
   754  0096  087E               	movf	btemp,w
   755  0097  008A               	movwf	10
   756  0098  087F               	movf	btemp+1,w
   757  0099  0082               	movwf	2
   758  009A                     init_ram0:	
   759                           ;Called with:
   760                           ;	high address of idata address in btemp 
   761                           ;	low address of idata address in btemp+1 
   762                           ;	low address of data in FSR
   763                           ;	high address + 1 of data in btemp-1
   764                           
   765  009A  120A  118A  2096  120A  118A  	fcall	init_fetch0
   766  009F  0080               	movwf	0
   767  00A0  0A84               	incf	4,f
   768  00A1  0804               	movf	4,w
   769  00A2  067D               	xorwf	btemp+-1,w
   770  00A3  1903               	btfsc	3,2
   771  00A4  3400               	retlw	0
   772  00A5  0AFF               	incf	btemp+1,f
   773  00A6  1903               	btfsc	3,2
   774  00A7  0AFE               	incf	btemp,f
   775  00A8  289A               	goto	init_ram0
   776                           
   777                           	psect	clrtext
   778  003B                     clear_ram0:	
   779                           ;	Called with FSR containing the base address, and
   780                           ;	W with the last address+1
   781                           
   782  003B  0064               	clrwdt	;clear the watchdog before getting into this loop
   783  003C                     clrloop0:	
   784  003C  0180               	clrf	0	;clear RAM location pointed to by FSR
   785  003D  0A84               	incf	4,f	;increment pointer
   786  003E  0604               	xorwf	4,w	;XOR with final address
   787  003F  1903               	btfsc	3,2	;have we reached the end yet?
   788  0040  3400               	retlw	0	;all done for this memory range, return
   789  0041  0604               	xorwf	4,w	;XOR again to restore value
   790  0042  283C               	goto	clrloop0	;do the next byte
   791                           
   792                           	psect	cstackCOMMON
   793  0071                     __pcstackCOMMON:	
   794  0071                     ?_checkCount:	
   795  0071                     ?_updateScreen:	
   796                           ; 1 bytes @ 0x0
   797                           
   798  0071                     ?_drawFigure:	
   799                           ; 1 bytes @ 0x0
   800                           
   801  0071                     ?_checkColission_R:	
   802                           ; 1 bytes @ 0x0
   803                           
   804  0071                     ?_checkRight:	
   805                           ; 1 bytes @ 0x0
   806                           
   807  0071                     ?_checkColission_L:	
   808                           ; 1 bytes @ 0x0
   809                           
   810  0071                     ?_checkBottom:	
   811                           ; 1 bytes @ 0x0
   812                           
   813  0071                     ?_checkColission_D:	
   814                           ; 1 bytes @ 0x0
   815                           
   816  0071                     ?_perdio:	
   817                           ; 1 bytes @ 0x0
   818                           
   819  0071                     ?_sumaPuntos:	
   820                           ; 1 bytes @ 0x0
   821                           
   822  0071                     ?_addToScreen:	
   823                           ; 1 bytes @ 0x0
   824                           
   825  0071                     ?_init_pines_in:	
   826                           ; 1 bytes @ 0x0
   827                           
   828  0071                     ?_init_pines_fil:	
   829                           ; 1 bytes @ 0x0
   830                           
   831  0071                     ?_init_pines_col:	
   832                           ; 1 bytes @ 0x0
   833                           
   834  0071                     ?_init_pines:	
   835                           ; 1 bytes @ 0x0
   836                           
   837  0071                     ?_init_timer:	
   838                           ; 1 bytes @ 0x0
   839                           
   840  0071                     ?_leerEntradas:	
   841                           ; 1 bytes @ 0x0
   842                           
   843  0071                     ?_Timer0_ISR:	
   844                           ; 1 bytes @ 0x0
   845                           
   846  0071                     ??_Timer0_ISR:	
   847                           ; 1 bytes @ 0x0
   848                           
   849  0071                     ?_latchClock_Fil:	
   850                           ; 1 bytes @ 0x0
   851                           
   852  0071                     ?_shiftClock_Fil:	
   853                           ; 1 bytes @ 0x0
   854                           
   855  0071                     ?_latchClock_Col:	
   856                           ; 1 bytes @ 0x0
   857                           
   858  0071                     ?_shiftClock_Col:	
   859                           ; 1 bytes @ 0x0
   860                           
   861  0071                     ?_shiftBitColumna:	
   862                           ; 1 bytes @ 0x0
   863                           
   864  0071                     ?_drawBground:	
   865                           ; 1 bytes @ 0x0
   866                           
   867                           
   868                           ; 1 bytes @ 0x0
   869  0071                     	ds	2
   870  0073                     ?_srand:	
   871  0073                     ??_checkColission_R:	
   872                           ; 1 bytes @ 0x2
   873                           
   874  0073                     ??_checkRight:	
   875                           ; 1 bytes @ 0x2
   876                           
   877  0073                     ??_checkColission_L:	
   878                           ; 1 bytes @ 0x2
   879                           
   880  0073                     ??_sumaPuntos:	
   881                           ; 1 bytes @ 0x2
   882                           
   883  0073                     ??_addToScreen:	
   884                           ; 1 bytes @ 0x2
   885                           
   886  0073                     ?_memset:	
   887                           ; 1 bytes @ 0x2
   888                           
   889  0073                     ??_init_pines_in:	
   890                           ; 1 bytes @ 0x2
   891                           
   892  0073                     ??_init_pines_fil:	
   893                           ; 1 bytes @ 0x2
   894                           
   895  0073                     ??_init_pines_col:	
   896                           ; 1 bytes @ 0x2
   897                           
   898  0073                     ??_init_pines:	
   899                           ; 1 bytes @ 0x2
   900                           
   901  0073                     ??_init_timer:	
   902                           ; 1 bytes @ 0x2
   903                           
   904  0073                     ??_latchClock_Fil:	
   905                           ; 1 bytes @ 0x2
   906                           
   907  0073                     ??_shiftClock_Fil:	
   908                           ; 1 bytes @ 0x2
   909                           
   910  0073                     ?_setFilas:	
   911                           ; 1 bytes @ 0x2
   912                           
   913  0073                     ??_latchClock_Col:	
   914                           ; 1 bytes @ 0x2
   915                           
   916  0073                     ??_shiftClock_Col:	
   917                           ; 1 bytes @ 0x2
   918                           
   919  0073                     ??_shiftBitColumna:	
   920                           ; 1 bytes @ 0x2
   921                           
   922  0073                     ??_drawBground:	
   923                           ; 1 bytes @ 0x2
   924                           
   925  0073                     ?___lmul:	
   926                           ; 1 bytes @ 0x2
   927                           
   928  0073                     setFilas@reg_value:	
   929                           ; 4 bytes @ 0x2
   930                           
   931  0073                     memset@c:	
   932                           ; 2 bytes @ 0x2
   933                           
   934  0073                     srand@x:	
   935                           ; 2 bytes @ 0x2
   936                           
   937  0073                     ___lmul@multiplier:	
   938                           ; 2 bytes @ 0x2
   939                           
   940                           
   941                           ; 4 bytes @ 0x2
   942  0073                     	ds	1
   943  0074                     shiftBitColumna@bit:	
   944                           
   945                           ; 1 bytes @ 0x3
   946  0074                     	ds	1
   947  0075                     ??_srand:	
   948  0075                     ??_setFilas:	
   949                           ; 1 bytes @ 0x4
   950                           
   951  0075                     memset@n:	
   952                           ; 1 bytes @ 0x4
   953                           
   954                           
   955                           ; 2 bytes @ 0x4
   956  0075                     	ds	2
   957  0077                     ??_memset:	
   958  0077                     sumaPuntos@aux:	
   959                           ; 1 bytes @ 0x6
   960                           
   961  0077                     ___lmul@multiplicand:	
   962                           ; 1 bytes @ 0x6
   963                           
   964                           
   965                           ; 4 bytes @ 0x6
   966  0077                     	ds	1
   967  0078                     memset@p:	
   968  0078                     sumaPuntos@i:	
   969                           ; 1 bytes @ 0x7
   970                           
   971                           
   972                           ; 2 bytes @ 0x7
   973  0078                     	ds	1
   974  0079                     memset@p1:	
   975                           
   976                           ; 1 bytes @ 0x8
   977  0079                     	ds	1
   978  007A                     sumaPuntos@j:	
   979                           
   980                           ; 2 bytes @ 0x9
   981  007A                     	ds	1
   982  007B                     ??___lmul:	
   983                           
   984                           ; 1 bytes @ 0xA
   985  007B                     	ds	1
   986                           
   987                           	psect	cstackBANK0
   988  0020                     __pcstackBANK0:	
   989  0020                     ??_drawFigure:	
   990  0020                     setFilas@i:	
   991                           ; 1 bytes @ 0x0
   992                           
   993  0020                     addToScreen@i:	
   994                           ; 2 bytes @ 0x0
   995                           
   996  0020                     drawBground@i:	
   997                           ; 2 bytes @ 0x0
   998                           
   999  0020                     checkColission_R@i:	
  1000                           ; 2 bytes @ 0x0
  1001                           
  1002  0020                     checkColission_L@i:	
  1003                           ; 2 bytes @ 0x0
  1004                           
  1005  0020                     ___lmul@product:	
  1006                           ; 2 bytes @ 0x0
  1007                           
  1008                           
  1009                           ; 4 bytes @ 0x0
  1010  0020                     	ds	2
  1011  0022                     ??_updateScreen:	
  1012                           
  1013                           ; 1 bytes @ 0x2
  1014  0022                     	ds	2
  1015  0024                     ?_rand:	
  1016                           
  1017                           ; 2 bytes @ 0x4
  1018  0024                     	ds	1
  1019  0025                     ??_leerEntradas:	
  1020                           
  1021                           ; 1 bytes @ 0x5
  1022  0025                     	ds	1
  1023  0026                     ??_rand:	
  1024  0026                     updateScreen@screen:	
  1025                           ; 1 bytes @ 0x6
  1026                           
  1027                           
  1028                           ; 1 bytes @ 0x6
  1029  0026                     	ds	1
  1030  0027                     updateScreen@i:	
  1031                           
  1032                           ; 2 bytes @ 0x7
  1033  0027                     	ds	3
  1034  002A                     leerEntradas@k:	
  1035                           
  1036                           ; 2 bytes @ 0xA
  1037  002A                     	ds	1
  1038  002B                     ?___awmod:	
  1039  002B                     ___awmod@divisor:	
  1040                           ; 2 bytes @ 0xB
  1041                           
  1042                           
  1043                           ; 2 bytes @ 0xB
  1044  002B                     	ds	1
  1045  002C                     leerEntradas@mask:	
  1046                           
  1047                           ; 1 bytes @ 0xC
  1048  002C                     	ds	1
  1049  002D                     ___awmod@dividend:	
  1050  002D                     leerEntradas@aux:	
  1051                           ; 2 bytes @ 0xD
  1052                           
  1053                           
  1054                           ; 4 bytes @ 0xD
  1055  002D                     	ds	2
  1056  002F                     ??___awmod:	
  1057                           
  1058                           ; 1 bytes @ 0xF
  1059  002F                     	ds	1
  1060  0030                     ___awmod@counter:	
  1061                           
  1062                           ; 1 bytes @ 0x10
  1063  0030                     	ds	1
  1064  0031                     ___awmod@sign:	
  1065  0031                     leerEntradas@j:	
  1066                           ; 1 bytes @ 0x11
  1067                           
  1068                           
  1069                           ; 2 bytes @ 0x11
  1070  0031                     	ds	1
  1071  0032                     ??_checkBottom:	
  1072  0032                     ??_checkColission_D:	
  1073                           ; 1 bytes @ 0x12
  1074                           
  1075  0032                     ??_perdio:	
  1076                           ; 1 bytes @ 0x12
  1077                           
  1078                           
  1079                           ; 1 bytes @ 0x12
  1080  0032                     	ds	1
  1081  0033                     leerEntradas@i:	
  1082                           
  1083                           ; 2 bytes @ 0x13
  1084  0033                     	ds	2
  1085  0035                     perdio@i:	
  1086                           
  1087                           ; 2 bytes @ 0x15
  1088  0035                     	ds	5
  1089  003A                     checkColission_D@i:	
  1090                           
  1091                           ; 2 bytes @ 0x1A
  1092  003A                     	ds	2
  1093  003C                     ??_checkCount:	
  1094                           
  1095                           ; 1 bytes @ 0x1C
  1096  003C                     	ds	3
  1097  003F                     checkCount@j:	
  1098                           
  1099                           ; 2 bytes @ 0x1F
  1100  003F                     	ds	2
  1101  0041                     ?_main:	
  1102  0041                     main@argc:	
  1103                           ; 2 bytes @ 0x21
  1104                           
  1105                           
  1106                           ; 2 bytes @ 0x21
  1107  0041                     	ds	2
  1108  0043                     main@argv:	
  1109                           
  1110                           ; 2 bytes @ 0x23
  1111  0043                     	ds	2
  1112  0045                     ??_main:	
  1113                           
  1114                           ; 1 bytes @ 0x25
  1115  0045                     	ds	1
  1116                           
  1117                           	psect	maintext
  1118  0301                     __pmaintext:	
  1119 ;;
  1120 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1121 ;;
  1122 ;; *************** function _main *****************
  1123 ;; Defined at:
  1124 ;;		line 44 in file "mainsource.c"
  1125 ;; Parameters:    Size  Location     Type
  1126 ;;  argc            2   33[BANK0 ] int 
  1127 ;;  argv            2   35[BANK0 ] PTR PTR unsigned char 
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;  j               2    0        int 
  1130 ;;  i               2    0        int 
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  2   33[BANK0 ] int 
  1133 ;; Registers used:
  1134 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1135 ;; Tracked objects:
  1136 ;;		On entry : B00/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1140 ;;      Params:         0       4       0       0       0
  1141 ;;      Locals:         0       4       0       0       0
  1142 ;;      Temps:          0       1       0       0       0
  1143 ;;      Totals:         0       9       0       0       0
  1144 ;;Total ram usage:        9 bytes
  1145 ;; Hardware stack levels required when called:    5
  1146 ;; This function calls:
  1147 ;;		___awmod
  1148 ;;		_checkCount
  1149 ;;		_init_pines
  1150 ;;		_init_timer
  1151 ;;		_rand
  1152 ;;		_srand
  1153 ;;		_updateScreen
  1154 ;; This function is called by:
  1155 ;;		Startup code after reset
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159                           
  1160                           ;psect for function _main
  1161  0301                     _main:	
  1162  0301                     l1827:	
  1163                           ;incstack = 0
  1164                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1165                           
  1166                           
  1167                           ;mainsource.c: 48:     init_timer();
  1168  0301  120A  118A  2065  120A  118A  	fcall	_init_timer
  1169                           
  1170                           ;mainsource.c: 49:     init_pines();
  1171  0306  120A  118A  2073  120A  118A  	fcall	_init_pines
  1172  030B                     l1829:	
  1173  030B                     l1831:	
  1174  030B                     l1833:	
  1175                           
  1176                           ;mainsource.c: 53:     con.girar =0;
  1177  030B  1283               	bcf	3,5	;RP0=0, select bank0
  1178  030C  1303               	bcf	3,6	;RP1=0, select bank0
  1179  030D  01C6               	clrf	_con
  1180  030E                     l1835:	
  1181                           
  1182                           ;mainsource.c: 54:     con.ficha_Vpos = 16;
  1183  030E  3010               	movlw	16
  1184  030F  00C5               	movwf	??_main
  1185  0310  0845               	movf	??_main,w
  1186  0311  00C8               	movwf	_con+2
  1187  0312                     l1837:	
  1188                           
  1189                           ;mainsource.c: 55:     con.ficha_Hpos = 2;
  1190  0312  3002               	movlw	2
  1191  0313  00C5               	movwf	??_main
  1192  0314  0845               	movf	??_main,w
  1193  0315  00C9               	movwf	_con+3
  1194  0316                     l1839:	
  1195                           
  1196                           ;mainsource.c: 56:     con.puntaje = 0;
  1197  0316  01CE               	clrf	_con+8
  1198  0317  01CF               	clrf	_con+9
  1199  0318                     l1841:	
  1200                           
  1201                           ;mainsource.c: 57:     srand(1);
  1202  0318  3001               	movlw	1
  1203  0319  00F3               	movwf	srand@x
  1204  031A  3000               	movlw	0
  1205  031B  00F4               	movwf	srand@x+1
  1206  031C  120A  118A  2043  120A  118A  	fcall	_srand
  1207  0321                     l1843:	
  1208                           
  1209                           ;mainsource.c: 58:     con.ficha_actual = rand() % 7;
  1210  0321  3007               	movlw	7
  1211  0322  1283               	bcf	3,5	;RP0=0, select bank0
  1212  0323  1303               	bcf	3,6	;RP1=0, select bank0
  1213  0324  00AB               	movwf	___awmod@divisor
  1214  0325  3000               	movlw	0
  1215  0326  00AC               	movwf	___awmod@divisor+1
  1216  0327  120A  118A  222C  120A  118A  	fcall	_rand
  1217  032C  1283               	bcf	3,5	;RP0=0, select bank0
  1218  032D  1303               	bcf	3,6	;RP1=0, select bank0
  1219  032E  0825               	movf	?_rand+1,w
  1220  032F  00AE               	movwf	___awmod@dividend+1
  1221  0330  0824               	movf	?_rand,w
  1222  0331  00AD               	movwf	___awmod@dividend
  1223  0332  120A  118A  2433  120A  118A  	fcall	___awmod
  1224  0337  1283               	bcf	3,5	;RP0=0, select bank0
  1225  0338  1303               	bcf	3,6	;RP1=0, select bank0
  1226  0339  082B               	movf	?___awmod,w
  1227  033A  00C5               	movwf	??_main
  1228  033B  0845               	movf	??_main,w
  1229  033C  00CA               	movwf	_con+4
  1230  033D                     l1845:	
  1231                           
  1232                           ;mainsource.c: 62:         checkCount();
  1233  033D  120A  118A  23E4  120A  118A  	fcall	_checkCount
  1234  0342                     l1847:	
  1235                           
  1236                           ;mainsource.c: 63:         updateScreen(pantalla);
  1237  0342  30B0               	movlw	(low (_pantalla| 0))& (0+255)
  1238  0343  120A  118A  248E  120A  118A  	fcall	_updateScreen
  1239  0348  2B3D               	goto	l1845
  1240  0349  120A  118A  280C   	ljmp	start
  1241  034C                     __end_of_main:	
  1242                           
  1243                           	psect	text1
  1244  048E                     __ptext1:	
  1245 ;; *************** function _updateScreen *****************
  1246 ;; Defined at:
  1247 ;;		line 17 in file "screen.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;  screen          1    wreg     PTR unsigned int 
  1250 ;;		 -> pantalla(16), 
  1251 ;; Auto vars:     Size  Location     Type
  1252 ;;  screen          1    6[BANK0 ] PTR unsigned int 
  1253 ;;		 -> pantalla(16), 
  1254 ;;  i               2    7[BANK0 ] int 
  1255 ;; Return value:  Size  Location     Type
  1256 ;;                  1    wreg      void 
  1257 ;; Registers used:
  1258 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1259 ;; Tracked objects:
  1260 ;;		On entry : 0/0
  1261 ;;		On exit  : 0/0
  1262 ;;		Unchanged: 0/0
  1263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1264 ;;      Params:         0       0       0       0       0
  1265 ;;      Locals:         0       3       0       0       0
  1266 ;;      Temps:          0       4       0       0       0
  1267 ;;      Totals:         0       7       0       0       0
  1268 ;;Total ram usage:        7 bytes
  1269 ;; Hardware stack levels used:    1
  1270 ;; Hardware stack levels required when called:    3
  1271 ;; This function calls:
  1272 ;;		_addToScreen
  1273 ;;		_setFilas
  1274 ;;		_shiftBitColumna
  1275 ;; This function is called by:
  1276 ;;		_main
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           
  1280                           
  1281                           ;psect for function _updateScreen
  1282  048E                     _updateScreen:	
  1283                           
  1284                           ;incstack = 0
  1285                           ; Regs used in _updateScreen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1286                           ;updateScreen@screen stored from wreg
  1287  048E  1283               	bcf	3,5	;RP0=0, select bank0
  1288  048F  1303               	bcf	3,6	;RP1=0, select bank0
  1289  0490  00A6               	movwf	updateScreen@screen
  1290  0491                     l1803:	
  1291  0491                     l1805:	
  1292                           
  1293                           ;screen.c: 20:     addToScreen();
  1294  0491  120A  118A  21A7  120A  118A  	fcall	_addToScreen
  1295  0496                     l1807:	
  1296                           
  1297                           ;screen.c: 22:     for(i=0; i<=7;i++){
  1298  0496  1283               	bcf	3,5	;RP0=0, select bank0
  1299  0497  1303               	bcf	3,6	;RP1=0, select bank0
  1300  0498  01A7               	clrf	updateScreen@i
  1301  0499  01A8               	clrf	updateScreen@i+1
  1302  049A                     l1813:	
  1303                           
  1304                           ;screen.c: 23:        if(i == 0){
  1305  049A  1283               	bcf	3,5	;RP0=0, select bank0
  1306  049B  1303               	bcf	3,6	;RP1=0, select bank0
  1307  049C  0827               	movf	updateScreen@i,w
  1308  049D  0428               	iorwf	updateScreen@i+1,w
  1309  049E  1D03               	btfss	3,2
  1310  049F  2CA1               	goto	u1361
  1311  04A0  2CA2               	goto	u1360
  1312  04A1                     u1361:	
  1313  04A1  2CBF               	goto	l1819
  1314  04A2                     u1360:	
  1315  04A2                     l1815:	
  1316                           
  1317                           ;screen.c: 24:             setFilas(~screen[i]);
  1318  04A2  0827               	movf	updateScreen@i,w
  1319  04A3  00A2               	movwf	??_updateScreen
  1320  04A4  0722               	addwf	??_updateScreen,w
  1321  04A5  0726               	addwf	updateScreen@screen,w
  1322  04A6  00A3               	movwf	??_updateScreen+1
  1323  04A7  0823               	movf	??_updateScreen+1,w
  1324  04A8  0084               	movwf	4
  1325  04A9  1383               	bcf	3,7	;select IRP bank0
  1326  04AA  0800               	movf	0,w
  1327  04AB  00A4               	movwf	??_updateScreen+2
  1328  04AC  0A84               	incf	4,f
  1329  04AD  0800               	movf	0,w
  1330  04AE  00A5               	movwf	??_updateScreen+3
  1331  04AF  0924               	comf	??_updateScreen+2,w
  1332  04B0  00F3               	movwf	setFilas@reg_value
  1333  04B1  0925               	comf	??_updateScreen+3,w
  1334  04B2  00F4               	movwf	setFilas@reg_value+1
  1335  04B3  120A  118A  22BA  120A  118A  	fcall	_setFilas
  1336  04B8                     l1817:	
  1337                           
  1338                           ;screen.c: 25:             shiftBitColumna(1);
  1339  04B8  3001               	movlw	1
  1340  04B9  120A  118A  20A9  120A  118A  	fcall	_shiftBitColumna
  1341                           
  1342                           ;screen.c: 26:         }
  1343  04BE  2CDB               	goto	l1823
  1344  04BF                     l1819:	
  1345                           
  1346                           ;screen.c: 28:             setFilas(~screen[i]);
  1347  04BF  0827               	movf	updateScreen@i,w
  1348  04C0  00A2               	movwf	??_updateScreen
  1349  04C1  0722               	addwf	??_updateScreen,w
  1350  04C2  0726               	addwf	updateScreen@screen,w
  1351  04C3  00A3               	movwf	??_updateScreen+1
  1352  04C4  0823               	movf	??_updateScreen+1,w
  1353  04C5  0084               	movwf	4
  1354  04C6  1383               	bcf	3,7	;select IRP bank0
  1355  04C7  0800               	movf	0,w
  1356  04C8  00A4               	movwf	??_updateScreen+2
  1357  04C9  0A84               	incf	4,f
  1358  04CA  0800               	movf	0,w
  1359  04CB  00A5               	movwf	??_updateScreen+3
  1360  04CC  0924               	comf	??_updateScreen+2,w
  1361  04CD  00F3               	movwf	setFilas@reg_value
  1362  04CE  0925               	comf	??_updateScreen+3,w
  1363  04CF  00F4               	movwf	setFilas@reg_value+1
  1364  04D0  120A  118A  22BA  120A  118A  	fcall	_setFilas
  1365  04D5                     l1821:	
  1366                           
  1367                           ;screen.c: 29:             shiftBitColumna(0);
  1368  04D5  3000               	movlw	0
  1369  04D6  120A  118A  20A9  120A  118A  	fcall	_shiftBitColumna
  1370  04DB                     l1823:	
  1371                           
  1372                           ;screen.c: 31:     }
  1373  04DB  3001               	movlw	1
  1374  04DC  1283               	bcf	3,5	;RP0=0, select bank0
  1375  04DD  1303               	bcf	3,6	;RP1=0, select bank0
  1376  04DE  07A7               	addwf	updateScreen@i,f
  1377  04DF  1803               	skipnc
  1378  04E0  0AA8               	incf	updateScreen@i+1,f
  1379  04E1  3000               	movlw	0
  1380  04E2  07A8               	addwf	updateScreen@i+1,f
  1381  04E3                     l1825:	
  1382  04E3  0828               	movf	updateScreen@i+1,w
  1383  04E4  3A80               	xorlw	128
  1384  04E5  00FF               	movwf	btemp+1
  1385  04E6  3080               	movlw	128
  1386  04E7  027F               	subwf	btemp+1,w
  1387  04E8  1D03               	skipz
  1388  04E9  2CEC               	goto	u1375
  1389  04EA  3008               	movlw	8
  1390  04EB  0227               	subwf	updateScreen@i,w
  1391  04EC                     u1375:	
  1392  04EC  1C03               	skipc
  1393  04ED  2CEF               	goto	u1371
  1394  04EE  2CF0               	goto	u1370
  1395  04EF                     u1371:	
  1396  04EF  2C9A               	goto	l1813
  1397  04F0                     u1370:	
  1398  04F0                     l187:	
  1399  04F0  0008               	return
  1400  04F1                     __end_of_updateScreen:	
  1401                           
  1402                           	psect	text2
  1403  00A9                     __ptext2:	
  1404 ;; *************** function _shiftBitColumna *****************
  1405 ;; Defined at:
  1406 ;;		line 33 in file "columnas.c"
  1407 ;; Parameters:    Size  Location     Type
  1408 ;;  bit             1    wreg     unsigned char 
  1409 ;; Auto vars:     Size  Location     Type
  1410 ;;  bit             1    3[COMMON] unsigned char 
  1411 ;; Return value:  Size  Location     Type
  1412 ;;                  1    wreg      void 
  1413 ;; Registers used:
  1414 ;;		wreg, status,2, status,0, pclath, cstack
  1415 ;; Tracked objects:
  1416 ;;		On entry : 0/0
  1417 ;;		On exit  : 0/0
  1418 ;;		Unchanged: 0/0
  1419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1420 ;;      Params:         0       0       0       0       0
  1421 ;;      Locals:         1       0       0       0       0
  1422 ;;      Temps:          1       0       0       0       0
  1423 ;;      Totals:         2       0       0       0       0
  1424 ;;Total ram usage:        2 bytes
  1425 ;; Hardware stack levels used:    1
  1426 ;; Hardware stack levels required when called:    2
  1427 ;; This function calls:
  1428 ;;		_latchClock_Col
  1429 ;;		_latchClock_Fil
  1430 ;;		_shiftClock_Col
  1431 ;; This function is called by:
  1432 ;;		_updateScreen
  1433 ;; This function uses a non-reentrant model
  1434 ;;
  1435                           
  1436                           
  1437                           ;psect for function _shiftBitColumna
  1438  00A9                     _shiftBitColumna:	
  1439                           
  1440                           ;incstack = 0
  1441                           ; Regs used in _shiftBitColumna: [wreg+status,2+status,0+pclath+cstack]
  1442                           ;shiftBitColumna@bit stored from wreg
  1443  00A9  00F4               	movwf	shiftBitColumna@bit
  1444  00AA                     l1737:	
  1445                           
  1446                           ;columnas.c: 34:     PORTDbits.RD4= bit & 0x01;
  1447  00AA  0874               	movf	shiftBitColumna@bit,w
  1448  00AB  3901               	andlw	1
  1449  00AC  00F3               	movwf	??_shiftBitColumna
  1450  00AD  0EF3               	swapf	??_shiftBitColumna,f
  1451  00AE  1283               	bcf	3,5	;RP0=0, select bank0
  1452  00AF  1303               	bcf	3,6	;RP1=0, select bank0
  1453  00B0  0808               	movf	8,w	;volatile
  1454  00B1  0673               	xorwf	??_shiftBitColumna,w
  1455  00B2  39EF               	andlw	-17
  1456  00B3  0673               	xorwf	??_shiftBitColumna,w
  1457  00B4  0088               	movwf	8	;volatile
  1458  00B5                     l1739:	
  1459                           
  1460                           ;columnas.c: 35:     shiftClock_Col();
  1461  00B5  120A  118A  2035  120A  118A  	fcall	_shiftClock_Col
  1462  00BA                     l1741:	
  1463                           
  1464                           ;columnas.c: 36:     latchClock_Col();
  1465  00BA  120A  118A  201E  120A  118A  	fcall	_latchClock_Col
  1466  00BF                     l1743:	
  1467                           
  1468                           ;columnas.c: 37:     latchClock_Fil();
  1469  00BF  120A  118A  202F  120A  118A  	fcall	_latchClock_Fil
  1470  00C4                     l160:	
  1471  00C4  0008               	return
  1472  00C5                     __end_of_shiftBitColumna:	
  1473                           
  1474                           	psect	text3
  1475  0035                     __ptext3:	
  1476 ;; *************** function _shiftClock_Col *****************
  1477 ;; Defined at:
  1478 ;;		line 13 in file "columnas.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;		None
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;		None
  1483 ;; Return value:  Size  Location     Type
  1484 ;;                  1    wreg      void 
  1485 ;; Registers used:
  1486 ;;		None
  1487 ;; Tracked objects:
  1488 ;;		On entry : 0/0
  1489 ;;		On exit  : 0/0
  1490 ;;		Unchanged: 0/0
  1491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1492 ;;      Params:         0       0       0       0       0
  1493 ;;      Locals:         0       0       0       0       0
  1494 ;;      Temps:          0       0       0       0       0
  1495 ;;      Totals:         0       0       0       0       0
  1496 ;;Total ram usage:        0 bytes
  1497 ;; Hardware stack levels used:    1
  1498 ;; Hardware stack levels required when called:    1
  1499 ;; This function calls:
  1500 ;;		Nothing
  1501 ;; This function is called by:
  1502 ;;		_shiftBitColumna
  1503 ;;		_setColumnas
  1504 ;; This function uses a non-reentrant model
  1505 ;;
  1506                           
  1507                           
  1508                           ;psect for function _shiftClock_Col
  1509  0035                     _shiftClock_Col:	
  1510  0035                     l1479:	
  1511                           ;incstack = 0
  1512                           ; Regs used in _shiftClock_Col: []
  1513                           
  1514                           
  1515                           ;columnas.c: 14:     PORTDbits.RD7 = 0;
  1516  0035  1283               	bcf	3,5	;RP0=0, select bank0
  1517  0036  1303               	bcf	3,6	;RP1=0, select bank0
  1518  0037  1388               	bcf	8,7	;volatile
  1519                           
  1520                           ;columnas.c: 15:     PORTDbits.RD7 = 1;
  1521  0038  1788               	bsf	8,7	;volatile
  1522                           
  1523                           ;columnas.c: 16:     PORTDbits.RD7 = 0;
  1524  0039  1388               	bcf	8,7	;volatile
  1525  003A                     l152:	
  1526  003A  0008               	return
  1527  003B                     __end_of_shiftClock_Col:	
  1528                           
  1529                           	psect	text4
  1530  002F                     __ptext4:	
  1531 ;; *************** function _latchClock_Fil *****************
  1532 ;; Defined at:
  1533 ;;		line 7 in file "filas.c"
  1534 ;; Parameters:    Size  Location     Type
  1535 ;;		None
  1536 ;; Auto vars:     Size  Location     Type
  1537 ;;		None
  1538 ;; Return value:  Size  Location     Type
  1539 ;;                  1    wreg      void 
  1540 ;; Registers used:
  1541 ;;		None
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1547 ;;      Params:         0       0       0       0       0
  1548 ;;      Locals:         0       0       0       0       0
  1549 ;;      Temps:          0       0       0       0       0
  1550 ;;      Totals:         0       0       0       0       0
  1551 ;;Total ram usage:        0 bytes
  1552 ;; Hardware stack levels used:    1
  1553 ;; Hardware stack levels required when called:    1
  1554 ;; This function calls:
  1555 ;;		Nothing
  1556 ;; This function is called by:
  1557 ;;		_shiftBitColumna
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561                           
  1562                           ;psect for function _latchClock_Fil
  1563  002F                     _latchClock_Fil:	
  1564  002F                     l1473:	
  1565                           ;incstack = 0
  1566                           ; Regs used in _latchClock_Fil: []
  1567                           
  1568                           
  1569                           ;filas.c: 8:     PORTCbits.RC6 = 0;
  1570  002F  1283               	bcf	3,5	;RP0=0, select bank0
  1571  0030  1303               	bcf	3,6	;RP1=0, select bank0
  1572  0031  1307               	bcf	7,6	;volatile
  1573                           
  1574                           ;filas.c: 9:     PORTCbits.RC6 = 1;
  1575  0032  1707               	bsf	7,6	;volatile
  1576                           
  1577                           ;filas.c: 10:     PORTCbits.RC6 = 0;
  1578  0033  1307               	bcf	7,6	;volatile
  1579  0034                     l134:	
  1580  0034  0008               	return
  1581  0035                     __end_of_latchClock_Fil:	
  1582                           
  1583                           	psect	text5
  1584  001E                     __ptext5:	
  1585 ;; *************** function _latchClock_Col *****************
  1586 ;; Defined at:
  1587 ;;		line 8 in file "columnas.c"
  1588 ;; Parameters:    Size  Location     Type
  1589 ;;		None
  1590 ;; Auto vars:     Size  Location     Type
  1591 ;;		None
  1592 ;; Return value:  Size  Location     Type
  1593 ;;                  1    wreg      void 
  1594 ;; Registers used:
  1595 ;;		None
  1596 ;; Tracked objects:
  1597 ;;		On entry : 0/0
  1598 ;;		On exit  : 0/0
  1599 ;;		Unchanged: 0/0
  1600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1601 ;;      Params:         0       0       0       0       0
  1602 ;;      Locals:         0       0       0       0       0
  1603 ;;      Temps:          0       0       0       0       0
  1604 ;;      Totals:         0       0       0       0       0
  1605 ;;Total ram usage:        0 bytes
  1606 ;; Hardware stack levels used:    1
  1607 ;; Hardware stack levels required when called:    1
  1608 ;; This function calls:
  1609 ;;		Nothing
  1610 ;; This function is called by:
  1611 ;;		_shiftBitColumna
  1612 ;;		_setColumnas
  1613 ;; This function uses a non-reentrant model
  1614 ;;
  1615                           
  1616                           
  1617                           ;psect for function _latchClock_Col
  1618  001E                     _latchClock_Col:	
  1619  001E                     l1477:	
  1620                           ;incstack = 0
  1621                           ; Regs used in _latchClock_Col: []
  1622                           
  1623                           
  1624                           ;columnas.c: 9:     PORTDbits.RD6 = 1;
  1625  001E  1283               	bcf	3,5	;RP0=0, select bank0
  1626  001F  1303               	bcf	3,6	;RP1=0, select bank0
  1627  0020  1708               	bsf	8,6	;volatile
  1628                           
  1629                           ;columnas.c: 10:     PORTDbits.RD6 = 0;
  1630  0021  1308               	bcf	8,6	;volatile
  1631  0022                     l149:	
  1632  0022  0008               	return
  1633  0023                     __end_of_latchClock_Col:	
  1634                           
  1635                           	psect	text6
  1636  02BA                     __ptext6:	
  1637 ;; *************** function _setFilas *****************
  1638 ;; Defined at:
  1639 ;;		line 19 in file "filas.c"
  1640 ;; Parameters:    Size  Location     Type
  1641 ;;  reg_value       2    2[COMMON] unsigned int 
  1642 ;; Auto vars:     Size  Location     Type
  1643 ;;  i               2    0[BANK0 ] int 
  1644 ;; Return value:  Size  Location     Type
  1645 ;;                  1    wreg      void 
  1646 ;; Registers used:
  1647 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1648 ;; Tracked objects:
  1649 ;;		On entry : 0/0
  1650 ;;		On exit  : 0/0
  1651 ;;		Unchanged: 0/0
  1652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1653 ;;      Params:         2       0       0       0       0
  1654 ;;      Locals:         0       2       0       0       0
  1655 ;;      Temps:          6       0       0       0       0
  1656 ;;      Totals:         8       2       0       0       0
  1657 ;;Total ram usage:       10 bytes
  1658 ;; Hardware stack levels used:    1
  1659 ;; Hardware stack levels required when called:    2
  1660 ;; This function calls:
  1661 ;;		_shiftClock_Fil
  1662 ;; This function is called by:
  1663 ;;		_updateScreen
  1664 ;; This function uses a non-reentrant model
  1665 ;;
  1666                           
  1667                           
  1668                           ;psect for function _setFilas
  1669  02BA                     _setFilas:	
  1670  02BA                     l1723:	
  1671                           ;incstack = 0
  1672                           ; Regs used in _setFilas: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1673                           
  1674                           
  1675                           ;filas.c: 20:     int i = 0;
  1676  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  1677  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  1678  02BC  01A0               	clrf	setFilas@i
  1679  02BD  01A1               	clrf	setFilas@i+1
  1680                           
  1681                           ;filas.c: 21:     for(i=0;i<16;i++){
  1682  02BE  01A0               	clrf	setFilas@i
  1683  02BF  01A1               	clrf	setFilas@i+1
  1684  02C0                     l1725:	
  1685  02C0  0821               	movf	setFilas@i+1,w
  1686  02C1  3A80               	xorlw	128
  1687  02C2  00FF               	movwf	btemp+1
  1688  02C3  3080               	movlw	128
  1689  02C4  027F               	subwf	btemp+1,w
  1690  02C5  1D03               	skipz
  1691  02C6  2AC9               	goto	u1305
  1692  02C7  3010               	movlw	16
  1693  02C8  0220               	subwf	setFilas@i,w
  1694  02C9                     u1305:	
  1695  02C9  1C03               	skipc
  1696  02CA  2ACC               	goto	u1301
  1697  02CB  2ACD               	goto	u1300
  1698  02CC                     u1301:	
  1699  02CC  2ACE               	goto	l1729
  1700  02CD                     u1300:	
  1701  02CD  2B00               	goto	l142
  1702  02CE                     l1729:	
  1703                           
  1704                           ;filas.c: 22:         PORTCbits.RC4 = (reg_value & (1<<i) )>>i;
  1705  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  1706  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  1707  02D0  0A20               	incf	setFilas@i,w
  1708  02D1  00F5               	movwf	??_setFilas
  1709  02D2  3001               	movlw	1
  1710  02D3  00F6               	movwf	??_setFilas+1
  1711  02D4  3000               	movlw	0
  1712  02D5  00F7               	movwf	??_setFilas+2
  1713  02D6  2ADA               	goto	u1314
  1714  02D7                     u1315:	
  1715  02D7  1003               	clrc
  1716  02D8  0DF6               	rlf	??_setFilas+1,f
  1717  02D9  0DF7               	rlf	??_setFilas+2,f
  1718  02DA                     u1314:	
  1719  02DA  0BF5               	decfsz	??_setFilas,f
  1720  02DB  2AD7               	goto	u1315
  1721  02DC  0873               	movf	setFilas@reg_value,w
  1722  02DD  0576               	andwf	??_setFilas+1,w
  1723  02DE  00F8               	movwf	??_setFilas+3
  1724  02DF  0874               	movf	setFilas@reg_value+1,w
  1725  02E0  0577               	andwf	??_setFilas+2,w
  1726  02E1  00F9               	movwf	??_setFilas+4
  1727  02E2  0A20               	incf	setFilas@i,w
  1728  02E3  2AE7               	goto	u1324
  1729  02E4                     u1325:	
  1730  02E4  1003               	clrc
  1731  02E5  0CF9               	rrf	??_setFilas+4,f
  1732  02E6  0CF8               	rrf	??_setFilas+3,f
  1733  02E7                     u1324:	
  1734  02E7  3EFF               	addlw	-1
  1735  02E8  1D03               	skipz
  1736  02E9  2AE4               	goto	u1325
  1737  02EA  0878               	movf	??_setFilas+3,w
  1738  02EB  00FA               	movwf	??_setFilas+5
  1739  02EC  0EFA               	swapf	??_setFilas+5,f
  1740  02ED  0807               	movf	7,w	;volatile
  1741  02EE  067A               	xorwf	??_setFilas+5,w
  1742  02EF  39EF               	andlw	-17
  1743  02F0  067A               	xorwf	??_setFilas+5,w
  1744  02F1  0087               	movwf	7	;volatile
  1745  02F2                     l1731:	
  1746                           
  1747                           ;filas.c: 23:         shiftClock_Fil();
  1748  02F2  120A  118A  2029  120A  118A  	fcall	_shiftClock_Fil
  1749  02F7                     l1733:	
  1750                           
  1751                           ;filas.c: 24:     }
  1752  02F7  3001               	movlw	1
  1753  02F8  1283               	bcf	3,5	;RP0=0, select bank0
  1754  02F9  1303               	bcf	3,6	;RP1=0, select bank0
  1755  02FA  07A0               	addwf	setFilas@i,f
  1756  02FB  1803               	skipnc
  1757  02FC  0AA1               	incf	setFilas@i+1,f
  1758  02FD  3000               	movlw	0
  1759  02FE  07A1               	addwf	setFilas@i+1,f
  1760  02FF  2AC0               	goto	l1725
  1761  0300                     l142:	
  1762  0300  0008               	return
  1763  0301                     __end_of_setFilas:	
  1764                           
  1765                           	psect	text7
  1766  0029                     __ptext7:	
  1767 ;; *************** function _shiftClock_Fil *****************
  1768 ;; Defined at:
  1769 ;;		line 13 in file "filas.c"
  1770 ;; Parameters:    Size  Location     Type
  1771 ;;		None
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;		None
  1774 ;; Return value:  Size  Location     Type
  1775 ;;                  1    wreg      void 
  1776 ;; Registers used:
  1777 ;;		None
  1778 ;; Tracked objects:
  1779 ;;		On entry : 0/0
  1780 ;;		On exit  : 0/0
  1781 ;;		Unchanged: 0/0
  1782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1783 ;;      Params:         0       0       0       0       0
  1784 ;;      Locals:         0       0       0       0       0
  1785 ;;      Temps:          0       0       0       0       0
  1786 ;;      Totals:         0       0       0       0       0
  1787 ;;Total ram usage:        0 bytes
  1788 ;; Hardware stack levels used:    1
  1789 ;; Hardware stack levels required when called:    1
  1790 ;; This function calls:
  1791 ;;		Nothing
  1792 ;; This function is called by:
  1793 ;;		_setFilas
  1794 ;; This function uses a non-reentrant model
  1795 ;;
  1796                           
  1797                           
  1798                           ;psect for function _shiftClock_Fil
  1799  0029                     _shiftClock_Fil:	
  1800  0029                     l1475:	
  1801                           ;incstack = 0
  1802                           ; Regs used in _shiftClock_Fil: []
  1803                           
  1804                           
  1805                           ;filas.c: 14:     PORTCbits.RC7 = 0;
  1806  0029  1283               	bcf	3,5	;RP0=0, select bank0
  1807  002A  1303               	bcf	3,6	;RP1=0, select bank0
  1808  002B  1387               	bcf	7,7	;volatile
  1809                           
  1810                           ;filas.c: 15:     PORTCbits.RC7 = 1;
  1811  002C  1787               	bsf	7,7	;volatile
  1812                           
  1813                           ;filas.c: 16:     PORTCbits.RC7 = 0;
  1814  002D  1387               	bcf	7,7	;volatile
  1815  002E                     l137:	
  1816  002E  0008               	return
  1817  002F                     __end_of_shiftClock_Fil:	
  1818                           
  1819                           	psect	text8
  1820  01A7                     __ptext8:	
  1821 ;; *************** function _addToScreen *****************
  1822 ;; Defined at:
  1823 ;;		line 39 in file "screen.c"
  1824 ;; Parameters:    Size  Location     Type
  1825 ;;		None
  1826 ;; Auto vars:     Size  Location     Type
  1827 ;;  i               2    0[BANK0 ] int 
  1828 ;; Return value:  Size  Location     Type
  1829 ;;                  1    wreg      void 
  1830 ;; Registers used:
  1831 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1832 ;; Tracked objects:
  1833 ;;		On entry : 0/0
  1834 ;;		On exit  : 0/0
  1835 ;;		Unchanged: 0/0
  1836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1837 ;;      Params:         0       0       0       0       0
  1838 ;;      Locals:         0       2       0       0       0
  1839 ;;      Temps:          9       0       0       0       0
  1840 ;;      Totals:         9       2       0       0       0
  1841 ;;Total ram usage:       11 bytes
  1842 ;; Hardware stack levels used:    1
  1843 ;; Hardware stack levels required when called:    1
  1844 ;; This function calls:
  1845 ;;		Nothing
  1846 ;; This function is called by:
  1847 ;;		_updateScreen
  1848 ;; This function uses a non-reentrant model
  1849 ;;
  1850                           
  1851                           
  1852                           ;psect for function _addToScreen
  1853  01A7                     _addToScreen:	
  1854  01A7                     l1745:	
  1855                           ;incstack = 0
  1856                           ; Regs used in _addToScreen: [wreg-fsr0h+status,2+status,0+btemp+1]
  1857                           
  1858                           
  1859                           ;screen.c: 40:     int i=0;
  1860  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  1861  01A8  1303               	bcf	3,6	;RP1=0, select bank0
  1862  01A9  01A0               	clrf	addToScreen@i
  1863  01AA  01A1               	clrf	addToScreen@i+1
  1864                           
  1865                           ;screen.c: 41:     for(i=0; i<8; i++){
  1866  01AB  01A0               	clrf	addToScreen@i
  1867  01AC  01A1               	clrf	addToScreen@i+1
  1868  01AD                     l1751:	
  1869                           
  1870                           ;screen.c: 42:         pantalla[i] = ficha[i] | fondo[i];
  1871  01AD  1283               	bcf	3,5	;RP0=0, select bank0
  1872  01AE  1303               	bcf	3,6	;RP1=0, select bank0
  1873  01AF  0820               	movf	addToScreen@i,w
  1874  01B0  00F3               	movwf	??_addToScreen
  1875  01B1  0773               	addwf	??_addToScreen,w
  1876  01B2  3EA0               	addlw	(low (_fondo| 0))& (0+255)
  1877  01B3  0084               	movwf	4
  1878  01B4  1383               	bcf	3,7	;select IRP bank1
  1879  01B5  0800               	movf	0,w
  1880  01B6  00F4               	movwf	??_addToScreen+1
  1881  01B7  0A84               	incf	4,f
  1882  01B8  0800               	movf	0,w
  1883  01B9  00F5               	movwf	??_addToScreen+2
  1884  01BA  0820               	movf	addToScreen@i,w
  1885  01BB  00F6               	movwf	??_addToScreen+3
  1886  01BC  0776               	addwf	??_addToScreen+3,w
  1887  01BD  3E58               	addlw	(low (_ficha| 0))& (0+255)
  1888  01BE  0084               	movwf	4
  1889  01BF  0800               	movf	0,w
  1890  01C0  00F7               	movwf	??_addToScreen+4
  1891  01C1  0A84               	incf	4,f
  1892  01C2  0800               	movf	0,w
  1893  01C3  00F8               	movwf	??_addToScreen+5
  1894  01C4  0874               	movf	??_addToScreen+1,w
  1895  01C5  0477               	iorwf	??_addToScreen+4,w
  1896  01C6  00F9               	movwf	??_addToScreen+6
  1897  01C7  0875               	movf	??_addToScreen+2,w
  1898  01C8  0478               	iorwf	??_addToScreen+5,w
  1899  01C9  00FA               	movwf	??_addToScreen+7
  1900  01CA  0820               	movf	addToScreen@i,w
  1901  01CB  00FB               	movwf	??_addToScreen+8
  1902  01CC  077B               	addwf	??_addToScreen+8,w
  1903  01CD  3EB0               	addlw	(low (_pantalla| 0))& (0+255)
  1904  01CE  0084               	movwf	4
  1905  01CF  0879               	movf	??_addToScreen+6,w
  1906  01D0  0080               	movwf	0
  1907  01D1  0A84               	incf	4,f
  1908  01D2  087A               	movf	??_addToScreen+7,w
  1909  01D3  0080               	movwf	0
  1910  01D4                     l1753:	
  1911                           
  1912                           ;screen.c: 43:     }
  1913  01D4  3001               	movlw	1
  1914  01D5  07A0               	addwf	addToScreen@i,f
  1915  01D6  1803               	skipnc
  1916  01D7  0AA1               	incf	addToScreen@i+1,f
  1917  01D8  3000               	movlw	0
  1918  01D9  07A1               	addwf	addToScreen@i+1,f
  1919  01DA                     l1755:	
  1920  01DA  0821               	movf	addToScreen@i+1,w
  1921  01DB  3A80               	xorlw	128
  1922  01DC  00FF               	movwf	btemp+1
  1923  01DD  3080               	movlw	128
  1924  01DE  027F               	subwf	btemp+1,w
  1925  01DF  1D03               	skipz
  1926  01E0  29E3               	goto	u1335
  1927  01E1  3008               	movlw	8
  1928  01E2  0220               	subwf	addToScreen@i,w
  1929  01E3                     u1335:	
  1930  01E3  1C03               	skipc
  1931  01E4  29E6               	goto	u1331
  1932  01E5  29E7               	goto	u1330
  1933  01E6                     u1331:	
  1934  01E6  29AD               	goto	l1751
  1935  01E7                     u1330:	
  1936  01E7                     l192:	
  1937  01E7  0008               	return
  1938  01E8                     __end_of_addToScreen:	
  1939                           
  1940                           	psect	text9
  1941  0043                     __ptext9:	
  1942 ;; *************** function _srand *****************
  1943 ;; Defined at:
  1944 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;  x               2    2[COMMON] unsigned int 
  1947 ;; Auto vars:     Size  Location     Type
  1948 ;;		None
  1949 ;; Return value:  Size  Location     Type
  1950 ;;                  1    wreg      void 
  1951 ;; Registers used:
  1952 ;;		wreg
  1953 ;; Tracked objects:
  1954 ;;		On entry : 0/0
  1955 ;;		On exit  : 0/0
  1956 ;;		Unchanged: 0/0
  1957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1958 ;;      Params:         2       0       0       0       0
  1959 ;;      Locals:         0       0       0       0       0
  1960 ;;      Temps:          0       0       0       0       0
  1961 ;;      Totals:         2       0       0       0       0
  1962 ;;Total ram usage:        2 bytes
  1963 ;; Hardware stack levels used:    1
  1964 ;; Hardware stack levels required when called:    1
  1965 ;; This function calls:
  1966 ;;		Nothing
  1967 ;; This function is called by:
  1968 ;;		_main
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971                           
  1972                           
  1973                           ;psect for function _srand
  1974  0043                     _srand:	
  1975  0043                     l1777:	
  1976                           ;incstack = 0
  1977                           ; Regs used in _srand: [wreg]
  1978                           
  1979  0043  0873               	movf	srand@x,w
  1980  0044  1283               	bcf	3,5	;RP0=0, select bank0
  1981  0045  1303               	bcf	3,6	;RP1=0, select bank0
  1982  0046  00E8               	movwf	_randx
  1983  0047  0874               	movf	srand@x+1,w
  1984  0048  00E9               	movwf	_randx+1
  1985  0049  01EA               	clrf	_randx+2
  1986  004A  01EB               	clrf	_randx+3
  1987  004B                     l814:	
  1988  004B  0008               	return
  1989  004C                     __end_of_srand:	
  1990                           
  1991                           	psect	text10
  1992  0065                     __ptext10:	
  1993 ;; *************** function _init_timer *****************
  1994 ;; Defined at:
  1995 ;;		line 55 in file "init.c"
  1996 ;; Parameters:    Size  Location     Type
  1997 ;;		None
  1998 ;; Auto vars:     Size  Location     Type
  1999 ;;		None
  2000 ;; Return value:  Size  Location     Type
  2001 ;;                  1    wreg      void 
  2002 ;; Registers used:
  2003 ;;		status,2
  2004 ;; Tracked objects:
  2005 ;;		On entry : 0/0
  2006 ;;		On exit  : 0/0
  2007 ;;		Unchanged: 0/0
  2008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2009 ;;      Params:         0       0       0       0       0
  2010 ;;      Locals:         0       0       0       0       0
  2011 ;;      Temps:          0       0       0       0       0
  2012 ;;      Totals:         0       0       0       0       0
  2013 ;;Total ram usage:        0 bytes
  2014 ;; Hardware stack levels used:    1
  2015 ;; Hardware stack levels required when called:    1
  2016 ;; This function calls:
  2017 ;;		Nothing
  2018 ;; This function is called by:
  2019 ;;		_main
  2020 ;; This function uses a non-reentrant model
  2021 ;;
  2022                           
  2023                           
  2024                           ;psect for function _init_timer
  2025  0065                     _init_timer:	
  2026  0065                     l1759:	
  2027                           ;incstack = 0
  2028                           ; Regs used in _init_timer: [status,2]
  2029                           
  2030                           
  2031                           ;init.c: 57:     TMR0=0;
  2032  0065  1283               	bcf	3,5	;RP0=0, select bank0
  2033  0066  1303               	bcf	3,6	;RP1=0, select bank0
  2034  0067  0181               	clrf	1	;volatile
  2035  0068                     l1761:	
  2036                           
  2037                           ;init.c: 65:     INTCONbits.GIE = 1;
  2038  0068  178B               	bsf	11,7	;volatile
  2039  0069                     l1763:	
  2040                           
  2041                           ;init.c: 66:     INTCONbits.TMR0IE = 1;
  2042  0069  168B               	bsf	11,5	;volatile
  2043  006A                     l1765:	
  2044                           
  2045                           ;init.c: 67:     INTCONbits.TMR0IF = 0;
  2046  006A  110B               	bcf	11,2	;volatile
  2047  006B                     l1767:	
  2048                           
  2049                           ;init.c: 76:     OPTION_REGbits.PSA = 0;
  2050  006B  1683               	bsf	3,5	;RP0=1, select bank1
  2051  006C  1303               	bcf	3,6	;RP1=0, select bank1
  2052  006D  1181               	bcf	1,3	;volatile
  2053  006E                     l1769:	
  2054                           
  2055                           ;init.c: 77:     OPTION_REGbits.PS0 = 1;
  2056  006E  1401               	bsf	1,0	;volatile
  2057  006F                     l1771:	
  2058                           
  2059                           ;init.c: 78:     OPTION_REGbits.PS1 = 1;
  2060  006F  1481               	bsf	1,1	;volatile
  2061  0070                     l1773:	
  2062                           
  2063                           ;init.c: 79:     OPTION_REGbits.PS2 = 1;
  2064  0070  1501               	bsf	1,2	;volatile
  2065  0071                     l1775:	
  2066                           
  2067                           ;init.c: 80:     OPTION_REGbits.T0CS = 0;
  2068  0071  1281               	bcf	1,5	;volatile
  2069  0072                     l36:	
  2070  0072  0008               	return
  2071  0073                     __end_of_init_timer:	
  2072                           
  2073                           	psect	text11
  2074  0073                     __ptext11:	
  2075 ;; *************** function _init_pines *****************
  2076 ;; Defined at:
  2077 ;;		line 39 in file "init.c"
  2078 ;; Parameters:    Size  Location     Type
  2079 ;;		None
  2080 ;; Auto vars:     Size  Location     Type
  2081 ;;		None
  2082 ;; Return value:  Size  Location     Type
  2083 ;;                  1    wreg      void 
  2084 ;; Registers used:
  2085 ;;		status,2, status,0, pclath, cstack
  2086 ;; Tracked objects:
  2087 ;;		On entry : 0/0
  2088 ;;		On exit  : 0/0
  2089 ;;		Unchanged: 0/0
  2090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2091 ;;      Params:         0       0       0       0       0
  2092 ;;      Locals:         0       0       0       0       0
  2093 ;;      Temps:          0       0       0       0       0
  2094 ;;      Totals:         0       0       0       0       0
  2095 ;;Total ram usage:        0 bytes
  2096 ;; Hardware stack levels used:    1
  2097 ;; Hardware stack levels required when called:    2
  2098 ;; This function calls:
  2099 ;;		_init_pines_col
  2100 ;;		_init_pines_fil
  2101 ;;		_init_pines_in
  2102 ;; This function is called by:
  2103 ;;		_main
  2104 ;; This function uses a non-reentrant model
  2105 ;;
  2106                           
  2107                           
  2108                           ;psect for function _init_pines
  2109  0073                     _init_pines:	
  2110  0073                     l1757:	
  2111                           ;incstack = 0
  2112                           ; Regs used in _init_pines: [status,2+status,0+pclath+cstack]
  2113                           
  2114                           
  2115                           ;init.c: 41:     init_pines_fil();
  2116  0073  120A  118A  2058  120A  118A  	fcall	_init_pines_fil
  2117                           
  2118                           ;init.c: 42:     init_pines_col();
  2119  0078  120A  118A  2083  120A  118A  	fcall	_init_pines_col
  2120                           
  2121                           ;init.c: 43:     init_pines_in();
  2122  007D  120A  118A  2023  120A  118A  	fcall	_init_pines_in
  2123  0082                     l30:	
  2124  0082  0008               	return
  2125  0083                     __end_of_init_pines:	
  2126                           
  2127                           	psect	text12
  2128  0023                     __ptext12:	
  2129 ;; *************** function _init_pines_in *****************
  2130 ;; Defined at:
  2131 ;;		line 4 in file "init.c"
  2132 ;; Parameters:    Size  Location     Type
  2133 ;;		None
  2134 ;; Auto vars:     Size  Location     Type
  2135 ;;		None
  2136 ;; Return value:  Size  Location     Type
  2137 ;;                  1    wreg      void 
  2138 ;; Registers used:
  2139 ;;		None
  2140 ;; Tracked objects:
  2141 ;;		On entry : 0/0
  2142 ;;		On exit  : 0/0
  2143 ;;		Unchanged: 0/0
  2144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2145 ;;      Params:         0       0       0       0       0
  2146 ;;      Locals:         0       0       0       0       0
  2147 ;;      Temps:          0       0       0       0       0
  2148 ;;      Totals:         0       0       0       0       0
  2149 ;;Total ram usage:        0 bytes
  2150 ;; Hardware stack levels used:    1
  2151 ;; Hardware stack levels required when called:    1
  2152 ;; This function calls:
  2153 ;;		Nothing
  2154 ;; This function is called by:
  2155 ;;		_init_pines
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           
  2159                           
  2160                           ;psect for function _init_pines_in
  2161  0023                     _init_pines_in:	
  2162  0023                     l1531:	
  2163                           ;incstack = 0
  2164                           ; Regs used in _init_pines_in: []
  2165                           
  2166                           
  2167                           ;init.c: 5:     TRISBbits.TRISB5 = 1;
  2168  0023  1683               	bsf	3,5	;RP0=1, select bank1
  2169  0024  1303               	bcf	3,6	;RP1=0, select bank1
  2170  0025  1686               	bsf	6,5	;volatile
  2171                           
  2172                           ;init.c: 6:     TRISBbits.TRISB4 = 1;
  2173  0026  1606               	bsf	6,4	;volatile
  2174                           
  2175                           ;init.c: 7:     TRISBbits.TRISB3 = 1;
  2176  0027  1586               	bsf	6,3	;volatile
  2177  0028                     l21:	
  2178  0028  0008               	return
  2179  0029                     __end_of_init_pines_in:	
  2180                           
  2181                           	psect	text13
  2182  0058                     __ptext13:	
  2183 ;; *************** function _init_pines_fil *****************
  2184 ;; Defined at:
  2185 ;;		line 12 in file "init.c"
  2186 ;; Parameters:    Size  Location     Type
  2187 ;;		None
  2188 ;; Auto vars:     Size  Location     Type
  2189 ;;		None
  2190 ;; Return value:  Size  Location     Type
  2191 ;;                  1    wreg      void 
  2192 ;; Registers used:
  2193 ;;		None
  2194 ;; Tracked objects:
  2195 ;;		On entry : 0/0
  2196 ;;		On exit  : 0/0
  2197 ;;		Unchanged: 0/0
  2198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2199 ;;      Params:         0       0       0       0       0
  2200 ;;      Locals:         0       0       0       0       0
  2201 ;;      Temps:          0       0       0       0       0
  2202 ;;      Totals:         0       0       0       0       0
  2203 ;;Total ram usage:        0 bytes
  2204 ;; Hardware stack levels used:    1
  2205 ;; Hardware stack levels required when called:    1
  2206 ;; This function calls:
  2207 ;;		Nothing
  2208 ;; This function is called by:
  2209 ;;		_init_pines
  2210 ;; This function uses a non-reentrant model
  2211 ;;
  2212                           
  2213                           
  2214                           ;psect for function _init_pines_fil
  2215  0058                     _init_pines_fil:	
  2216  0058                     l1533:	
  2217                           ;incstack = 0
  2218                           ; Regs used in _init_pines_fil: []
  2219                           
  2220                           
  2221                           ;init.c: 14:     TRISCbits.TRISC4 = 0;
  2222  0058  1683               	bsf	3,5	;RP0=1, select bank1
  2223  0059  1303               	bcf	3,6	;RP1=0, select bank1
  2224  005A  1207               	bcf	7,4	;volatile
  2225                           
  2226                           ;init.c: 15:     TRISCbits.TRISC5 = 0;
  2227  005B  1287               	bcf	7,5	;volatile
  2228                           
  2229                           ;init.c: 16:     TRISCbits.TRISC6 = 0;
  2230  005C  1307               	bcf	7,6	;volatile
  2231                           
  2232                           ;init.c: 17:     TRISCbits.TRISC7 = 0;
  2233  005D  1387               	bcf	7,7	;volatile
  2234                           
  2235                           ;init.c: 19:     PORTCbits.RC4 = 0;
  2236  005E  1283               	bcf	3,5	;RP0=0, select bank0
  2237  005F  1303               	bcf	3,6	;RP1=0, select bank0
  2238  0060  1207               	bcf	7,4	;volatile
  2239                           
  2240                           ;init.c: 20:     PORTCbits.RC5 = 0;
  2241  0061  1287               	bcf	7,5	;volatile
  2242                           
  2243                           ;init.c: 21:     PORTCbits.RC6 = 0;
  2244  0062  1307               	bcf	7,6	;volatile
  2245                           
  2246                           ;init.c: 22:     PORTCbits.RC7 = 0;
  2247  0063  1387               	bcf	7,7	;volatile
  2248  0064                     l24:	
  2249  0064  0008               	return
  2250  0065                     __end_of_init_pines_fil:	
  2251                           
  2252                           	psect	text14
  2253  0083                     __ptext14:	
  2254 ;; *************** function _init_pines_col *****************
  2255 ;; Defined at:
  2256 ;;		line 25 in file "init.c"
  2257 ;; Parameters:    Size  Location     Type
  2258 ;;		None
  2259 ;; Auto vars:     Size  Location     Type
  2260 ;;		None
  2261 ;; Return value:  Size  Location     Type
  2262 ;;                  1    wreg      void 
  2263 ;; Registers used:
  2264 ;;		None
  2265 ;; Tracked objects:
  2266 ;;		On entry : 0/0
  2267 ;;		On exit  : 0/0
  2268 ;;		Unchanged: 0/0
  2269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2270 ;;      Params:         0       0       0       0       0
  2271 ;;      Locals:         0       0       0       0       0
  2272 ;;      Temps:          0       0       0       0       0
  2273 ;;      Totals:         0       0       0       0       0
  2274 ;;Total ram usage:        0 bytes
  2275 ;; Hardware stack levels used:    1
  2276 ;; Hardware stack levels required when called:    1
  2277 ;; This function calls:
  2278 ;;		Nothing
  2279 ;; This function is called by:
  2280 ;;		_init_pines
  2281 ;; This function uses a non-reentrant model
  2282 ;;
  2283                           
  2284                           
  2285                           ;psect for function _init_pines_col
  2286  0083                     _init_pines_col:	
  2287  0083                     l1535:	
  2288                           ;incstack = 0
  2289                           ; Regs used in _init_pines_col: []
  2290                           
  2291                           
  2292                           ;init.c: 26:     TRISBbits.TRISB0 = 0;
  2293  0083  1683               	bsf	3,5	;RP0=1, select bank1
  2294  0084  1303               	bcf	3,6	;RP1=0, select bank1
  2295  0085  1006               	bcf	6,0	;volatile
  2296                           
  2297                           ;init.c: 27:     PORTBbits.RB0 = 0;
  2298  0086  1283               	bcf	3,5	;RP0=0, select bank0
  2299  0087  1303               	bcf	3,6	;RP1=0, select bank0
  2300  0088  1006               	bcf	6,0	;volatile
  2301                           
  2302                           ;init.c: 29:     TRISDbits.TRISD4 = 0;
  2303  0089  1683               	bsf	3,5	;RP0=1, select bank1
  2304  008A  1303               	bcf	3,6	;RP1=0, select bank1
  2305  008B  1208               	bcf	8,4	;volatile
  2306                           
  2307                           ;init.c: 30:     TRISDbits.TRISD5 = 0;
  2308  008C  1288               	bcf	8,5	;volatile
  2309                           
  2310                           ;init.c: 31:     TRISDbits.TRISD6 = 0;
  2311  008D  1308               	bcf	8,6	;volatile
  2312                           
  2313                           ;init.c: 32:     TRISDbits.TRISD7 = 0;
  2314  008E  1388               	bcf	8,7	;volatile
  2315                           
  2316                           ;init.c: 34:     PORTDbits.RD4 = 0;
  2317  008F  1283               	bcf	3,5	;RP0=0, select bank0
  2318  0090  1303               	bcf	3,6	;RP1=0, select bank0
  2319  0091  1208               	bcf	8,4	;volatile
  2320                           
  2321                           ;init.c: 35:     PORTDbits.RD5 = 0;
  2322  0092  1288               	bcf	8,5	;volatile
  2323                           
  2324                           ;init.c: 36:     PORTDbits.RD6 = 0;
  2325  0093  1308               	bcf	8,6	;volatile
  2326                           
  2327                           ;init.c: 37:     PORTDbits.RD7 = 0;
  2328  0094  1388               	bcf	8,7	;volatile
  2329  0095                     l27:	
  2330  0095  0008               	return
  2331  0096                     __end_of_init_pines_col:	
  2332                           
  2333                           	psect	text15
  2334  03E4                     __ptext15:	
  2335 ;; *************** function _checkCount *****************
  2336 ;; Defined at:
  2337 ;;		line 135 in file "mainsource.c"
  2338 ;; Parameters:    Size  Location     Type
  2339 ;;		None
  2340 ;; Auto vars:     Size  Location     Type
  2341 ;;  j               2   31[BANK0 ] int 
  2342 ;;  i               2    0        int 
  2343 ;; Return value:  Size  Location     Type
  2344 ;;                  1    wreg      void 
  2345 ;; Registers used:
  2346 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2347 ;; Tracked objects:
  2348 ;;		On entry : 0/0
  2349 ;;		On exit  : 0/0
  2350 ;;		Unchanged: 0/0
  2351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2352 ;;      Params:         0       0       0       0       0
  2353 ;;      Locals:         0       4       0       0       0
  2354 ;;      Temps:          0       1       0       0       0
  2355 ;;      Totals:         0       5       0       0       0
  2356 ;;Total ram usage:        5 bytes
  2357 ;; Hardware stack levels used:    1
  2358 ;; Hardware stack levels required when called:    4
  2359 ;; This function calls:
  2360 ;;		_checkBottom
  2361 ;;		_checkColission_D
  2362 ;;		_drawFigure
  2363 ;;		_leerEntradas
  2364 ;;		_perdio
  2365 ;;		_sumaPuntos
  2366 ;; This function is called by:
  2367 ;;		_main
  2368 ;; This function uses a non-reentrant model
  2369 ;;
  2370                           
  2371                           
  2372                           ;psect for function _checkCount
  2373  03E4                     _checkCount:	
  2374  03E4                     l1779:	
  2375                           ;incstack = 0
  2376                           ; Regs used in _checkCount: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2377                           
  2378                           
  2379                           ;mainsource.c: 136:     if(con.check_count == 1){
  2380  03E4  1283               	bcf	3,5	;RP0=0, select bank0
  2381  03E5  1303               	bcf	3,6	;RP1=0, select bank0
  2382  03E6  034D               	decf	_con+7,w
  2383  03E7  1D03               	btfss	3,2
  2384  03E8  2BEA               	goto	u1341
  2385  03E9  2BEB               	goto	u1340
  2386  03EA                     u1341:	
  2387  03EA  2C32               	goto	l120
  2388  03EB                     u1340:	
  2389  03EB                     l1781:	
  2390  03EB  01BF               	clrf	checkCount@j
  2391  03EC  01C0               	clrf	checkCount@j+1
  2392                           
  2393                           ;mainsource.c: 138:         con.check_count = 0;
  2394  03ED  01CD               	clrf	_con+7
  2395  03EE                     l1783:	
  2396                           
  2397                           ;mainsource.c: 140:         leerEntradas();
  2398  03EE  120A  118A  266A  120A  118A  	fcall	_leerEntradas
  2399  03F3                     l1785:	
  2400                           
  2401                           ;mainsource.c: 143:         if(timerCount >= 15 ){
  2402  03F3  1283               	bcf	3,5	;RP0=0, select bank0
  2403  03F4  1303               	bcf	3,6	;RP1=0, select bank0
  2404  03F5  0857               	movf	_timerCount+3,w
  2405  03F6  1D03               	btfss	3,2
  2406  03F7  2C06               	goto	u1350
  2407  03F8  0856               	movf	_timerCount+2,w
  2408  03F9  1D03               	btfss	3,2
  2409  03FA  2C06               	goto	u1350
  2410  03FB  0855               	movf	_timerCount+1,w
  2411  03FC  1D03               	btfss	3,2
  2412  03FD  2C06               	goto	u1350
  2413  03FE  300F               	movlw	15
  2414  03FF  0254               	subwf	_timerCount,w
  2415  0400  1D03               	skipz
  2416  0401  2C02               	goto	u1353
  2417  0402                     u1353:	
  2418  0402  1C03               	btfss	3,0
  2419  0403  2C05               	goto	u1351
  2420  0404  2C06               	goto	u1350
  2421  0405                     u1351:	
  2422  0405  2C32               	goto	l120
  2423  0406                     u1350:	
  2424  0406                     l1787:	
  2425                           
  2426                           ;mainsource.c: 144:             timerCount = 0;
  2427  0406  3000               	movlw	0
  2428  0407  00D7               	movwf	_timerCount+3
  2429  0408  3000               	movlw	0
  2430  0409  00D6               	movwf	_timerCount+2
  2431  040A  3000               	movlw	0
  2432  040B  00D5               	movwf	_timerCount+1
  2433  040C  3000               	movlw	0
  2434  040D  00D4               	movwf	_timerCount
  2435  040E                     l1789:	
  2436                           
  2437                           ;mainsource.c: 146:             PORTBbits.RB0 = con.led;
  2438  040E  0C47               	rrf	_con+1,w
  2439  040F  1C03               	skipc
  2440  0410  1006               	bcf	6,0	;volatile
  2441  0411  1803               	skipnc
  2442  0412  1406               	bsf	6,0	;volatile
  2443  0413                     l1791:	
  2444                           
  2445                           ;mainsource.c: 147:             con.led= ~con.led;
  2446  0413  0947               	comf	_con+1,w
  2447  0414  00BC               	movwf	??_checkCount
  2448  0415  083C               	movf	??_checkCount,w
  2449  0416  00C7               	movwf	_con+1
  2450                           
  2451                           ;mainsource.c: 148:             con.ficha_Vpos--;
  2452  0417  3001               	movlw	1
  2453  0418  02C8               	subwf	_con+2,f
  2454  0419                     l1793:	
  2455                           
  2456                           ;mainsource.c: 150:             checkBottom();
  2457  0419  120A  118A  2101  120A  118A  	fcall	_checkBottom
  2458  041E                     l1795:	
  2459                           
  2460                           ;mainsource.c: 151:             checkColission_D();
  2461  041E  120A  118A  2557  120A  118A  	fcall	_checkColission_D
  2462  0423                     l1797:	
  2463                           
  2464                           ;mainsource.c: 152:             drawFigure();
  2465  0423  120A  118A  25CD  120A  118A  	fcall	_drawFigure
  2466  0428                     l1799:	
  2467                           
  2468                           ;mainsource.c: 154:             perdio();
  2469  0428  120A  118A  24F1  120A  118A  	fcall	_perdio
  2470  042D                     l1801:	
  2471                           
  2472                           ;mainsource.c: 155:             sumaPuntos();
  2473  042D  120A  118A  2273  120A  118A  	fcall	_sumaPuntos
  2474  0432                     l120:	
  2475  0432  0008               	return
  2476  0433                     __end_of_checkCount:	
  2477                           
  2478                           	psect	text16
  2479  0273                     __ptext16:	
  2480 ;; *************** function _sumaPuntos *****************
  2481 ;; Defined at:
  2482 ;;		line 30 in file "puntuacion.c"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;		None
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;  j               2    9[COMMON] int 
  2487 ;;  i               2    7[COMMON] int 
  2488 ;;  aux             1    6[COMMON] unsigned char 
  2489 ;; Return value:  Size  Location     Type
  2490 ;;                  1    wreg      void 
  2491 ;; Registers used:
  2492 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2493 ;; Tracked objects:
  2494 ;;		On entry : 0/0
  2495 ;;		On exit  : 0/0
  2496 ;;		Unchanged: 0/0
  2497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2498 ;;      Params:         0       0       0       0       0
  2499 ;;      Locals:         5       0       0       0       0
  2500 ;;      Temps:          4       0       0       0       0
  2501 ;;      Totals:         9       0       0       0       0
  2502 ;;Total ram usage:        9 bytes
  2503 ;; Hardware stack levels used:    1
  2504 ;; Hardware stack levels required when called:    1
  2505 ;; This function calls:
  2506 ;;		Nothing
  2507 ;; This function is called by:
  2508 ;;		_checkCount
  2509 ;; This function uses a non-reentrant model
  2510 ;;
  2511                           
  2512                           
  2513                           ;psect for function _sumaPuntos
  2514  0273                     _sumaPuntos:	
  2515  0273                     l1697:	
  2516                           ;incstack = 0
  2517                           ; Regs used in _sumaPuntos: [wreg-fsr0h+status,2+status,0+btemp+1]
  2518                           
  2519  0273  01FA               	clrf	sumaPuntos@j
  2520  0274  01FB               	clrf	sumaPuntos@j+1
  2521  0275                     l1699:	
  2522                           
  2523                           ;puntuacion.c: 32:     uint8_t aux = 1;
  2524  0275  01F7               	clrf	sumaPuntos@aux
  2525  0276  0AF7               	incf	sumaPuntos@aux,f
  2526                           
  2527                           ;puntuacion.c: 33:     for (i=0; i<16; i++){
  2528  0277  01F8               	clrf	sumaPuntos@i
  2529  0278  01F9               	clrf	sumaPuntos@i+1
  2530  0279                     l1705:	
  2531                           
  2532                           ;puntuacion.c: 34:         for(j=0; j<8; j++){
  2533  0279  01FA               	clrf	sumaPuntos@j
  2534  027A  01FB               	clrf	sumaPuntos@j+1
  2535  027B                     l1711:	
  2536                           
  2537                           ;puntuacion.c: 35:             aux = aux & fondo[j]>>i;
  2538  027B  087A               	movf	sumaPuntos@j,w
  2539  027C  00F3               	movwf	??_sumaPuntos
  2540  027D  0773               	addwf	??_sumaPuntos,w
  2541  027E  3EA0               	addlw	(low (_fondo| 0))& (0+255)
  2542  027F  0084               	movwf	4
  2543  0280  1383               	bcf	3,7	;select IRP bank1
  2544  0281  0800               	movf	0,w
  2545  0282  00F4               	movwf	??_sumaPuntos+1
  2546  0283  0A84               	incf	4,f
  2547  0284  0800               	movf	0,w
  2548  0285  00F5               	movwf	??_sumaPuntos+2
  2549  0286  0A78               	incf	sumaPuntos@i,w
  2550  0287  2A8B               	goto	u1274
  2551  0288                     u1275:	
  2552  0288  1003               	clrc
  2553  0289  0CF5               	rrf	??_sumaPuntos+2,f
  2554  028A  0CF4               	rrf	??_sumaPuntos+1,f
  2555  028B                     u1274:	
  2556  028B  3EFF               	addlw	-1
  2557  028C  1D03               	skipz
  2558  028D  2A88               	goto	u1275
  2559  028E  0874               	movf	??_sumaPuntos+1,w
  2560  028F  0577               	andwf	sumaPuntos@aux,w
  2561  0290  00F6               	movwf	??_sumaPuntos+3
  2562  0291  0876               	movf	??_sumaPuntos+3,w
  2563  0292  00F7               	movwf	sumaPuntos@aux
  2564  0293                     l1713:	
  2565                           
  2566                           ;puntuacion.c: 36:         }
  2567  0293  3001               	movlw	1
  2568  0294  07FA               	addwf	sumaPuntos@j,f
  2569  0295  1803               	skipnc
  2570  0296  0AFB               	incf	sumaPuntos@j+1,f
  2571  0297  3000               	movlw	0
  2572  0298  07FB               	addwf	sumaPuntos@j+1,f
  2573  0299                     l1715:	
  2574  0299  087B               	movf	sumaPuntos@j+1,w
  2575  029A  3A80               	xorlw	128
  2576  029B  00FF               	movwf	btemp+1
  2577  029C  3080               	movlw	128
  2578  029D  027F               	subwf	btemp+1,w
  2579  029E  1D03               	skipz
  2580  029F  2AA2               	goto	u1285
  2581  02A0  3008               	movlw	8
  2582  02A1  027A               	subwf	sumaPuntos@j,w
  2583  02A2                     u1285:	
  2584  02A2  1C03               	skipc
  2585  02A3  2AA5               	goto	u1281
  2586  02A4  2AA6               	goto	u1280
  2587  02A5                     u1281:	
  2588  02A5  2A7B               	goto	l1711
  2589  02A6                     u1280:	
  2590  02A6                     l1719:	
  2591                           
  2592                           ;puntuacion.c: 40:     }
  2593  02A6  3001               	movlw	1
  2594  02A7  07F8               	addwf	sumaPuntos@i,f
  2595  02A8  1803               	skipnc
  2596  02A9  0AF9               	incf	sumaPuntos@i+1,f
  2597  02AA  3000               	movlw	0
  2598  02AB  07F9               	addwf	sumaPuntos@i+1,f
  2599  02AC                     l1721:	
  2600  02AC  0879               	movf	sumaPuntos@i+1,w
  2601  02AD  3A80               	xorlw	128
  2602  02AE  00FF               	movwf	btemp+1
  2603  02AF  3080               	movlw	128
  2604  02B0  027F               	subwf	btemp+1,w
  2605  02B1  1D03               	skipz
  2606  02B2  2AB5               	goto	u1295
  2607  02B3  3010               	movlw	16
  2608  02B4  0278               	subwf	sumaPuntos@i,w
  2609  02B5                     u1295:	
  2610  02B5  1C03               	skipc
  2611  02B6  2AB8               	goto	u1291
  2612  02B7  2AB9               	goto	u1290
  2613  02B8                     u1291:	
  2614  02B8  2A79               	goto	l1705
  2615  02B9                     u1290:	
  2616  02B9                     l275:	
  2617  02B9  0008               	return
  2618  02BA                     __end_of_sumaPuntos:	
  2619                           
  2620                           	psect	text17
  2621  04F1                     __ptext17:	
  2622 ;; *************** function _perdio *****************
  2623 ;; Defined at:
  2624 ;;		line 13 in file "puntuacion.c"
  2625 ;; Parameters:    Size  Location     Type
  2626 ;;		None
  2627 ;; Auto vars:     Size  Location     Type
  2628 ;;  i               2   21[BANK0 ] int 
  2629 ;; Return value:  Size  Location     Type
  2630 ;;                  1    wreg      void 
  2631 ;; Registers used:
  2632 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2633 ;; Tracked objects:
  2634 ;;		On entry : 0/0
  2635 ;;		On exit  : 0/0
  2636 ;;		Unchanged: 0/0
  2637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2638 ;;      Params:         0       0       0       0       0
  2639 ;;      Locals:         0       2       0       0       0
  2640 ;;      Temps:          0       3       0       0       0
  2641 ;;      Totals:         0       5       0       0       0
  2642 ;;Total ram usage:        5 bytes
  2643 ;; Hardware stack levels used:    1
  2644 ;; Hardware stack levels required when called:    3
  2645 ;; This function calls:
  2646 ;;		___awmod
  2647 ;;		_memset
  2648 ;;		_rand
  2649 ;; This function is called by:
  2650 ;;		_checkCount
  2651 ;; This function uses a non-reentrant model
  2652 ;;
  2653                           
  2654                           
  2655                           ;psect for function _perdio
  2656  04F1                     _perdio:	
  2657  04F1                     l1679:	
  2658                           ;incstack = 0
  2659                           ; Regs used in _perdio: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2660                           
  2661                           
  2662                           ;puntuacion.c: 14:     int i = 0;
  2663  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  2664  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  2665  04F3  01B5               	clrf	perdio@i
  2666  04F4  01B6               	clrf	perdio@i+1
  2667                           
  2668                           ;puntuacion.c: 15:     for(i=0; i<8; i++){
  2669  04F5  01B5               	clrf	perdio@i
  2670  04F6  01B6               	clrf	perdio@i+1
  2671  04F7                     l1685:	
  2672                           
  2673                           ;puntuacion.c: 16:         if((fondo[i] & 0x8000) != 0){
  2674  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  2675  04F8  1303               	bcf	3,6	;RP1=0, select bank0
  2676  04F9  0835               	movf	perdio@i,w
  2677  04FA  00B2               	movwf	??_perdio
  2678  04FB  0732               	addwf	??_perdio,w
  2679  04FC  3EA0               	addlw	(low (_fondo| 0))& (0+255)
  2680  04FD  0084               	movwf	4
  2681  04FE  1383               	bcf	3,7	;select IRP bank1
  2682  04FF  0800               	movf	0,w
  2683  0500  00B3               	movwf	??_perdio+1
  2684  0501  0A84               	incf	4,f
  2685  0502  0800               	movf	0,w
  2686  0503  00B4               	movwf	??_perdio+2
  2687  0504  1FB4               	btfss	??_perdio+2,7
  2688  0505  2D07               	goto	u1251
  2689  0506  2D08               	goto	u1250
  2690  0507                     u1251:	
  2691  0507  2D43               	goto	l1693
  2692  0508                     u1250:	
  2693  0508                     l1687:	
  2694                           
  2695                           ;puntuacion.c: 17:             memset(ficha, 0, sizeof(ficha));
  2696  0508  3000               	movlw	0
  2697  0509  00F3               	movwf	memset@c
  2698  050A  00F4               	movwf	memset@c+1
  2699  050B  3010               	movlw	16
  2700  050C  00F5               	movwf	memset@n
  2701  050D  3000               	movlw	0
  2702  050E  00F6               	movwf	memset@n+1
  2703  050F  3058               	movlw	(low (_ficha| 0))& (0+255)
  2704  0510  120A  118A  20E1  120A  118A  	fcall	_memset
  2705                           
  2706                           ;puntuacion.c: 18:             memset(fondo, 0, sizeof(fondo));
  2707  0515  3000               	movlw	0
  2708  0516  00F3               	movwf	memset@c
  2709  0517  00F4               	movwf	memset@c+1
  2710  0518  3010               	movlw	16
  2711  0519  00F5               	movwf	memset@n
  2712  051A  3000               	movlw	0
  2713  051B  00F6               	movwf	memset@n+1
  2714  051C  30A0               	movlw	(low (_fondo| 0))& (0+255)
  2715  051D  120A  118A  20E1  120A  118A  	fcall	_memset
  2716  0522                     l1689:	
  2717                           
  2718                           ;puntuacion.c: 19:             con.ficha_Vpos = 16;
  2719  0522  3010               	movlw	16
  2720  0523  1283               	bcf	3,5	;RP0=0, select bank0
  2721  0524  1303               	bcf	3,6	;RP1=0, select bank0
  2722  0525  00B2               	movwf	??_perdio
  2723  0526  0832               	movf	??_perdio,w
  2724  0527  00C8               	movwf	_con+2
  2725  0528                     l1691:	
  2726                           
  2727                           ;puntuacion.c: 20:             con.ficha_actual = rand() % 7;
  2728  0528  3007               	movlw	7
  2729  0529  00AB               	movwf	___awmod@divisor
  2730  052A  3000               	movlw	0
  2731  052B  00AC               	movwf	___awmod@divisor+1
  2732  052C  120A  118A  222C  120A  118A  	fcall	_rand
  2733  0531  1283               	bcf	3,5	;RP0=0, select bank0
  2734  0532  1303               	bcf	3,6	;RP1=0, select bank0
  2735  0533  0825               	movf	?_rand+1,w
  2736  0534  00AE               	movwf	___awmod@dividend+1
  2737  0535  0824               	movf	?_rand,w
  2738  0536  00AD               	movwf	___awmod@dividend
  2739  0537  120A  118A  2433  120A  118A  	fcall	___awmod
  2740  053C  1283               	bcf	3,5	;RP0=0, select bank0
  2741  053D  1303               	bcf	3,6	;RP1=0, select bank0
  2742  053E  082B               	movf	?___awmod,w
  2743  053F  00B2               	movwf	??_perdio
  2744  0540  0832               	movf	??_perdio,w
  2745  0541  00CA               	movwf	_con+4
  2746                           
  2747                           ;puntuacion.c: 21:             break;
  2748  0542  2D56               	goto	l267
  2749  0543                     l1693:	
  2750                           
  2751                           ;puntuacion.c: 23:     }
  2752  0543  3001               	movlw	1
  2753  0544  07B5               	addwf	perdio@i,f
  2754  0545  1803               	skipnc
  2755  0546  0AB6               	incf	perdio@i+1,f
  2756  0547  3000               	movlw	0
  2757  0548  07B6               	addwf	perdio@i+1,f
  2758  0549                     l1695:	
  2759  0549  0836               	movf	perdio@i+1,w
  2760  054A  3A80               	xorlw	128
  2761  054B  00FF               	movwf	btemp+1
  2762  054C  3080               	movlw	128
  2763  054D  027F               	subwf	btemp+1,w
  2764  054E  1D03               	skipz
  2765  054F  2D52               	goto	u1265
  2766  0550  3008               	movlw	8
  2767  0551  0235               	subwf	perdio@i,w
  2768  0552                     u1265:	
  2769  0552  1C03               	skipc
  2770  0553  2D55               	goto	u1261
  2771  0554  2D56               	goto	u1260
  2772  0555                     u1261:	
  2773  0555  2CF7               	goto	l1685
  2774  0556                     u1260:	
  2775  0556                     l267:	
  2776  0556  0008               	return
  2777  0557                     __end_of_perdio:	
  2778                           
  2779                           	psect	text18
  2780  066A                     __ptext18:	
  2781 ;; *************** function _leerEntradas *****************
  2782 ;; Defined at:
  2783 ;;		line 69 in file "mainsource.c"
  2784 ;; Parameters:    Size  Location     Type
  2785 ;;		None
  2786 ;; Auto vars:     Size  Location     Type
  2787 ;;  aux             4   13[BANK0 ] unsigned char [4]
  2788 ;;  i               2   19[BANK0 ] int 
  2789 ;;  j               2   17[BANK0 ] int 
  2790 ;;  k               2   10[BANK0 ] int 
  2791 ;;  mask            1   12[BANK0 ] unsigned char 
  2792 ;; Return value:  Size  Location     Type
  2793 ;;                  1    wreg      void 
  2794 ;; Registers used:
  2795 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2796 ;; Tracked objects:
  2797 ;;		On entry : 0/0
  2798 ;;		On exit  : 0/0
  2799 ;;		Unchanged: 0/0
  2800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2801 ;;      Params:         0       0       0       0       0
  2802 ;;      Locals:         0      11       0       0       0
  2803 ;;      Temps:          0       5       0       0       0
  2804 ;;      Totals:         0      16       0       0       0
  2805 ;;Total ram usage:       16 bytes
  2806 ;; Hardware stack levels used:    1
  2807 ;; Hardware stack levels required when called:    3
  2808 ;; This function calls:
  2809 ;;		_checkColission_L
  2810 ;;		_checkColission_R
  2811 ;;		_checkRight
  2812 ;;		_drawFigure
  2813 ;; This function is called by:
  2814 ;;		_checkCount
  2815 ;; This function uses a non-reentrant model
  2816 ;;
  2817                           
  2818                           
  2819                           ;psect for function _leerEntradas
  2820  066A                     _leerEntradas:	
  2821  066A                     l1537:	
  2822                           ;incstack = 0
  2823                           ; Regs used in _leerEntradas: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2824                           
  2825  066A  1283               	bcf	3,5	;RP0=0, select bank0
  2826  066B  1303               	bcf	3,6	;RP1=0, select bank0
  2827  066C  01B1               	clrf	leerEntradas@j
  2828  066D  01B2               	clrf	leerEntradas@j+1
  2829  066E  01AA               	clrf	leerEntradas@k
  2830  066F  01AB               	clrf	leerEntradas@k+1
  2831  0670                     l1539:	
  2832                           
  2833                           ;mainsource.c: 72:     uint8_t aux[4]={0x0000};
  2834  0670  3000               	movlw	0
  2835  0671  00B0               	movwf	leerEntradas@aux+3
  2836  0672  3000               	movlw	0
  2837  0673  00AF               	movwf	leerEntradas@aux+2
  2838  0674  3000               	movlw	0
  2839  0675  00AE               	movwf	leerEntradas@aux+1
  2840  0676  3000               	movlw	0
  2841  0677  00AD               	movwf	leerEntradas@aux
  2842  0678                     l1541:	
  2843  0678                     l1543:	
  2844                           
  2845                           ;mainsource.c: 74:     if(con.girar){
  2846  0678  0846               	movf	_con,w
  2847  0679  1903               	btfsc	3,2
  2848  067A  2E7C               	goto	u1031
  2849  067B  2E7D               	goto	u1030
  2850  067C                     u1031:	
  2851  067C  2F95               	goto	l1621
  2852  067D                     u1030:	
  2853  067D                     l1545:	
  2854                           
  2855                           ;mainsource.c: 75:         con.girar=0;
  2856  067D  01C6               	clrf	_con
  2857                           
  2858                           ;mainsource.c: 77:         for(i=0; i<4; i++){
  2859  067E  01B3               	clrf	leerEntradas@i
  2860  067F  01B4               	clrf	leerEntradas@i+1
  2861  0680                     l1551:	
  2862                           
  2863                           ;mainsource.c: 78:             for(j=0; j<4; j++){
  2864  0680  1283               	bcf	3,5	;RP0=0, select bank0
  2865  0681  1303               	bcf	3,6	;RP1=0, select bank0
  2866  0682  01B1               	clrf	leerEntradas@j
  2867  0683  01B2               	clrf	leerEntradas@j+1
  2868  0684                     l1557:	
  2869                           
  2870                           ;mainsource.c: 79:                 mask = (figuras[con.ficha_actual][j] >> i) & 0x01;
  2871  0684  1283               	bcf	3,5	;RP0=0, select bank0
  2872  0685  1303               	bcf	3,6	;RP1=0, select bank0
  2873  0686  084A               	movf	_con+4,w
  2874  0687  00A5               	movwf	??_leerEntradas
  2875  0688  3002               	movlw	2
  2876  0689                     u1045:	
  2877  0689  1003               	clrc
  2878  068A  0DA5               	rlf	??_leerEntradas,f
  2879  068B  3EFF               	addlw	-1
  2880  068C  1D03               	skipz
  2881  068D  2E89               	goto	u1045
  2882  068E  30C0               	movlw	(low (_figuras| 0))& (0+255)
  2883  068F  0725               	addwf	??_leerEntradas,w
  2884  0690  00A6               	movwf	??_leerEntradas+1
  2885  0691  0831               	movf	leerEntradas@j,w
  2886  0692  0726               	addwf	??_leerEntradas+1,w
  2887  0693  00A7               	movwf	??_leerEntradas+2
  2888  0694  0827               	movf	??_leerEntradas+2,w
  2889  0695  0084               	movwf	4
  2890  0696  1383               	bcf	3,7	;select IRP bank1
  2891  0697  0800               	movf	0,w
  2892  0698  00A8               	movwf	??_leerEntradas+3
  2893  0699  0A33               	incf	leerEntradas@i,w
  2894  069A  2E9D               	goto	u1054
  2895  069B                     u1055:	
  2896  069B  1003               	clrc
  2897  069C  0CA8               	rrf	??_leerEntradas+3,f
  2898  069D                     u1054:	
  2899  069D  3EFF               	addlw	-1
  2900  069E  1D03               	skipz
  2901  069F  2E9B               	goto	u1055
  2902  06A0  0828               	movf	??_leerEntradas+3,w
  2903  06A1  3901               	andlw	1
  2904  06A2  00A9               	movwf	??_leerEntradas+4
  2905  06A3  0829               	movf	??_leerEntradas+4,w
  2906  06A4  00AC               	movwf	leerEntradas@mask
  2907                           
  2908                           ;mainsource.c: 80:                 aux[i] = aux[i] | (mask<<(3-j));
  2909  06A5  0833               	movf	leerEntradas@i,w
  2910  06A6  3E2D               	addlw	(low (leerEntradas@aux| 0))& (0+255)
  2911  06A7  0084               	movwf	4
  2912  06A8  082C               	movf	leerEntradas@mask,w
  2913  06A9  00A5               	movwf	??_leerEntradas
  2914  06AA  0831               	movf	leerEntradas@j,w
  2915  06AB  3C03               	sublw	3
  2916  06AC  3E01               	addlw	1
  2917  06AD  2EB0               	goto	u1064
  2918  06AE                     u1065:	
  2919  06AE  1003               	clrc
  2920  06AF  0DA5               	rlf	??_leerEntradas,f
  2921  06B0                     u1064:	
  2922  06B0  3EFF               	addlw	-1
  2923  06B1  1D03               	skipz
  2924  06B2  2EAE               	goto	u1065
  2925  06B3  0825               	movf	??_leerEntradas,w
  2926  06B4  0400               	iorwf	0,w
  2927  06B5  00A6               	movwf	??_leerEntradas+1
  2928  06B6  0833               	movf	leerEntradas@i,w
  2929  06B7  3E2D               	addlw	(low (leerEntradas@aux| 0))& (0+255)
  2930  06B8  0084               	movwf	4
  2931  06B9  0826               	movf	??_leerEntradas+1,w
  2932  06BA  0080               	movwf	0
  2933  06BB                     l1559:	
  2934                           
  2935                           ;mainsource.c: 81:             }
  2936  06BB  3001               	movlw	1
  2937  06BC  07B1               	addwf	leerEntradas@j,f
  2938  06BD  1803               	skipnc
  2939  06BE  0AB2               	incf	leerEntradas@j+1,f
  2940  06BF  3000               	movlw	0
  2941  06C0  07B2               	addwf	leerEntradas@j+1,f
  2942  06C1                     l1561:	
  2943  06C1  0832               	movf	leerEntradas@j+1,w
  2944  06C2  3A80               	xorlw	128
  2945  06C3  00FF               	movwf	btemp+1
  2946  06C4  3080               	movlw	128
  2947  06C5  027F               	subwf	btemp+1,w
  2948  06C6  1D03               	skipz
  2949  06C7  2ECA               	goto	u1075
  2950  06C8  3004               	movlw	4
  2951  06C9  0231               	subwf	leerEntradas@j,w
  2952  06CA                     u1075:	
  2953  06CA  1C03               	skipc
  2954  06CB  2ECD               	goto	u1071
  2955  06CC  2ECE               	goto	u1070
  2956  06CD                     u1071:	
  2957  06CD  2E84               	goto	l1557
  2958  06CE                     u1070:	
  2959  06CE                     l1563:	
  2960                           
  2961                           ;mainsource.c: 82:         }
  2962  06CE  3001               	movlw	1
  2963  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  2964  06D0  1303               	bcf	3,6	;RP1=0, select bank0
  2965  06D1  07B3               	addwf	leerEntradas@i,f
  2966  06D2  1803               	skipnc
  2967  06D3  0AB4               	incf	leerEntradas@i+1,f
  2968  06D4  3000               	movlw	0
  2969  06D5  07B4               	addwf	leerEntradas@i+1,f
  2970  06D6                     l1565:	
  2971  06D6  0834               	movf	leerEntradas@i+1,w
  2972  06D7  3A80               	xorlw	128
  2973  06D8  00FF               	movwf	btemp+1
  2974  06D9  3080               	movlw	128
  2975  06DA  027F               	subwf	btemp+1,w
  2976  06DB  1D03               	skipz
  2977  06DC  2EDF               	goto	u1085
  2978  06DD  3004               	movlw	4
  2979  06DE  0233               	subwf	leerEntradas@i,w
  2980  06DF                     u1085:	
  2981  06DF  1C03               	skipc
  2982  06E0  2EE2               	goto	u1081
  2983  06E1  2EE3               	goto	u1080
  2984  06E2                     u1081:	
  2985  06E2  2E80               	goto	l1551
  2986  06E3                     u1080:	
  2987  06E3  2F3C               	goto	l1597
  2988  06E4                     l1567:	
  2989                           
  2990                           ;mainsource.c: 88:             for(i=0; i<4; i++){
  2991  06E4  1283               	bcf	3,5	;RP0=0, select bank0
  2992  06E5  1303               	bcf	3,6	;RP1=0, select bank0
  2993  06E6  01B3               	clrf	leerEntradas@i
  2994  06E7  01B4               	clrf	leerEntradas@i+1
  2995  06E8                     l1573:	
  2996                           
  2997                           ;mainsource.c: 89:                 if( aux[i] & 0x01 ){
  2998  06E8  1283               	bcf	3,5	;RP0=0, select bank0
  2999  06E9  1303               	bcf	3,6	;RP1=0, select bank0
  3000  06EA  0833               	movf	leerEntradas@i,w
  3001  06EB  3E2D               	addlw	(low (leerEntradas@aux| 0))& (0+255)
  3002  06EC  0084               	movwf	4
  3003  06ED  1383               	bcf	3,7	;select IRP bank0
  3004  06EE  1C00               	btfss	0,0
  3005  06EF  2EF1               	goto	u1091
  3006  06F0  2EF2               	goto	u1090
  3007  06F1                     u1091:	
  3008  06F1  2EF3               	goto	l1577
  3009  06F2                     u1090:	
  3010  06F2  2F34               	goto	l1595
  3011  06F3                     l1577:	
  3012                           
  3013                           ;mainsource.c: 92:                 if(i==3){
  3014  06F3  3003               	movlw	3
  3015  06F4  0633               	xorwf	leerEntradas@i,w
  3016  06F5  0434               	iorwf	leerEntradas@i+1,w
  3017  06F6  1D03               	btfss	3,2
  3018  06F7  2EF9               	goto	u1101
  3019  06F8  2EFA               	goto	u1100
  3020  06F9                     u1101:	
  3021  06F9  2F1F               	goto	l1591
  3022  06FA                     u1100:	
  3023  06FA                     l1579:	
  3024                           
  3025                           ;mainsource.c: 93:                     for(j=0; j<4; j++){
  3026  06FA  01B1               	clrf	leerEntradas@j
  3027  06FB  01B2               	clrf	leerEntradas@j+1
  3028  06FC                     l1585:	
  3029                           
  3030                           ;mainsource.c: 94:                         aux[j] = aux[j]>>1;
  3031  06FC  1283               	bcf	3,5	;RP0=0, select bank0
  3032  06FD  1303               	bcf	3,6	;RP1=0, select bank0
  3033  06FE  0831               	movf	leerEntradas@j,w
  3034  06FF  3E2D               	addlw	(low (leerEntradas@aux| 0))& (0+255)
  3035  0700  0084               	movwf	4
  3036  0701  1383               	bcf	3,7	;select IRP bank0
  3037  0702  0800               	movf	0,w
  3038  0703  00A5               	movwf	??_leerEntradas
  3039  0704  1003               	clrc
  3040  0705  0C25               	rrf	??_leerEntradas,w
  3041  0706  00A6               	movwf	??_leerEntradas+1
  3042  0707  0831               	movf	leerEntradas@j,w
  3043  0708  3E2D               	addlw	(low (leerEntradas@aux| 0))& (0+255)
  3044  0709  0084               	movwf	4
  3045  070A  0826               	movf	??_leerEntradas+1,w
  3046  070B  0080               	movwf	0
  3047  070C                     l1587:	
  3048                           
  3049                           ;mainsource.c: 95:                     }
  3050  070C  3001               	movlw	1
  3051  070D  07B1               	addwf	leerEntradas@j,f
  3052  070E  1803               	skipnc
  3053  070F  0AB2               	incf	leerEntradas@j+1,f
  3054  0710  3000               	movlw	0
  3055  0711  07B2               	addwf	leerEntradas@j+1,f
  3056  0712                     l1589:	
  3057  0712  0832               	movf	leerEntradas@j+1,w
  3058  0713  3A80               	xorlw	128
  3059  0714  00FF               	movwf	btemp+1
  3060  0715  3080               	movlw	128
  3061  0716  027F               	subwf	btemp+1,w
  3062  0717  1D03               	skipz
  3063  0718  2F1B               	goto	u1115
  3064  0719  3004               	movlw	4
  3065  071A  0231               	subwf	leerEntradas@j,w
  3066  071B                     u1115:	
  3067  071B  1C03               	skipc
  3068  071C  2F1E               	goto	u1111
  3069  071D  2F1F               	goto	u1110
  3070  071E                     u1111:	
  3071  071E  2EFC               	goto	l1585
  3072  071F                     u1110:	
  3073  071F                     l1591:	
  3074                           
  3075                           ;mainsource.c: 97:             }
  3076  071F  3001               	movlw	1
  3077  0720  1283               	bcf	3,5	;RP0=0, select bank0
  3078  0721  1303               	bcf	3,6	;RP1=0, select bank0
  3079  0722  07B3               	addwf	leerEntradas@i,f
  3080  0723  1803               	skipnc
  3081  0724  0AB4               	incf	leerEntradas@i+1,f
  3082  0725  3000               	movlw	0
  3083  0726  07B4               	addwf	leerEntradas@i+1,f
  3084  0727                     l1593:	
  3085  0727  0834               	movf	leerEntradas@i+1,w
  3086  0728  3A80               	xorlw	128
  3087  0729  00FF               	movwf	btemp+1
  3088  072A  3080               	movlw	128
  3089  072B  027F               	subwf	btemp+1,w
  3090  072C  1D03               	skipz
  3091  072D  2F30               	goto	u1125
  3092  072E  3004               	movlw	4
  3093  072F  0233               	subwf	leerEntradas@i,w
  3094  0730                     u1125:	
  3095  0730  1C03               	skipc
  3096  0731  2F33               	goto	u1121
  3097  0732  2F34               	goto	u1120
  3098  0733                     u1121:	
  3099  0733  2EE8               	goto	l1573
  3100  0734                     u1120:	
  3101  0734                     l1595:	
  3102                           
  3103                           ;mainsource.c: 98:             k++;
  3104  0734  3001               	movlw	1
  3105  0735  1283               	bcf	3,5	;RP0=0, select bank0
  3106  0736  1303               	bcf	3,6	;RP1=0, select bank0
  3107  0737  07AA               	addwf	leerEntradas@k,f
  3108  0738  1803               	skipnc
  3109  0739  0AAB               	incf	leerEntradas@k+1,f
  3110  073A  3000               	movlw	0
  3111  073B  07AB               	addwf	leerEntradas@k+1,f
  3112  073C                     l1597:	
  3113                           
  3114                           ;mainsource.c: 87:         while(k<3){
  3115  073C  1283               	bcf	3,5	;RP0=0, select bank0
  3116  073D  1303               	bcf	3,6	;RP1=0, select bank0
  3117  073E  082B               	movf	leerEntradas@k+1,w
  3118  073F  3A80               	xorlw	128
  3119  0740  00FF               	movwf	btemp+1
  3120  0741  3080               	movlw	128
  3121  0742  027F               	subwf	btemp+1,w
  3122  0743  1D03               	skipz
  3123  0744  2F47               	goto	u1135
  3124  0745  3003               	movlw	3
  3125  0746  022A               	subwf	leerEntradas@k,w
  3126  0747                     u1135:	
  3127  0747  1C03               	skipc
  3128  0748  2F4A               	goto	u1131
  3129  0749  2F4B               	goto	u1130
  3130  074A                     u1131:	
  3131  074A  2EE4               	goto	l1567
  3132  074B                     u1130:	
  3133  074B                     l1599:	
  3134                           
  3135                           ;mainsource.c: 101:         if((aux[0] & 0xF) == 0){
  3136  074B  1283               	bcf	3,5	;RP0=0, select bank0
  3137  074C  1303               	bcf	3,6	;RP1=0, select bank0
  3138  074D  082D               	movf	leerEntradas@aux,w
  3139  074E  390F               	andlw	15
  3140  074F  1D03               	btfss	3,2
  3141  0750  2F52               	goto	u1141
  3142  0751  2F53               	goto	u1140
  3143  0752                     u1141:	
  3144  0752  2F60               	goto	l1605
  3145  0753                     u1140:	
  3146  0753                     l1601:	
  3147                           
  3148                           ;mainsource.c: 102:             aux[0] = aux[1];
  3149  0753  082E               	movf	leerEntradas@aux+1,w
  3150  0754  00A5               	movwf	??_leerEntradas
  3151  0755  0825               	movf	??_leerEntradas,w
  3152  0756  00AD               	movwf	leerEntradas@aux
  3153                           
  3154                           ;mainsource.c: 103:             aux[1] = aux[2];
  3155  0757  082F               	movf	leerEntradas@aux+2,w
  3156  0758  00A5               	movwf	??_leerEntradas
  3157  0759  0825               	movf	??_leerEntradas,w
  3158  075A  00AE               	movwf	leerEntradas@aux+1
  3159                           
  3160                           ;mainsource.c: 104:             aux[2] = aux[3];
  3161  075B  0830               	movf	leerEntradas@aux+3,w
  3162  075C  00A5               	movwf	??_leerEntradas
  3163  075D  0825               	movf	??_leerEntradas,w
  3164  075E  00AF               	movwf	leerEntradas@aux+2
  3165  075F                     l1603:	
  3166                           
  3167                           ;mainsource.c: 105:             aux[3] = 0x0;
  3168  075F  01B0               	clrf	leerEntradas@aux+3
  3169  0760                     l1605:	
  3170                           
  3171                           ;mainsource.c: 108:         for(i=0; i<4; i++){
  3172  0760  01B3               	clrf	leerEntradas@i
  3173  0761  01B4               	clrf	leerEntradas@i+1
  3174  0762                     l1611:	
  3175                           
  3176                           ;mainsource.c: 109:             figuras[con.ficha_actual][i] = aux[i];
  3177  0762  1283               	bcf	3,5	;RP0=0, select bank0
  3178  0763  1303               	bcf	3,6	;RP1=0, select bank0
  3179  0764  0833               	movf	leerEntradas@i,w
  3180  0765  3E2D               	addlw	(low (leerEntradas@aux| 0))& (0+255)
  3181  0766  0084               	movwf	4
  3182  0767  1383               	bcf	3,7	;select IRP bank0
  3183  0768  0800               	movf	0,w
  3184  0769  00A5               	movwf	??_leerEntradas
  3185  076A  084A               	movf	_con+4,w
  3186  076B  00A6               	movwf	??_leerEntradas+1
  3187  076C  3002               	movlw	2
  3188  076D                     u1155:	
  3189  076D  1003               	clrc
  3190  076E  0DA6               	rlf	??_leerEntradas+1,f
  3191  076F  3EFF               	addlw	-1
  3192  0770  1D03               	skipz
  3193  0771  2F6D               	goto	u1155
  3194  0772  30C0               	movlw	(low (_figuras| 0))& (0+255)
  3195  0773  0726               	addwf	??_leerEntradas+1,w
  3196  0774  00A7               	movwf	??_leerEntradas+2
  3197  0775  0833               	movf	leerEntradas@i,w
  3198  0776  0727               	addwf	??_leerEntradas+2,w
  3199  0777  00A8               	movwf	??_leerEntradas+3
  3200  0778  0828               	movf	??_leerEntradas+3,w
  3201  0779  0084               	movwf	4
  3202  077A  0825               	movf	??_leerEntradas,w
  3203  077B  0080               	movwf	0
  3204  077C                     l1613:	
  3205                           
  3206                           ;mainsource.c: 110:         }
  3207  077C  3001               	movlw	1
  3208  077D  07B3               	addwf	leerEntradas@i,f
  3209  077E  1803               	skipnc
  3210  077F  0AB4               	incf	leerEntradas@i+1,f
  3211  0780  3000               	movlw	0
  3212  0781  07B4               	addwf	leerEntradas@i+1,f
  3213  0782                     l1615:	
  3214  0782  0834               	movf	leerEntradas@i+1,w
  3215  0783  3A80               	xorlw	128
  3216  0784  00FF               	movwf	btemp+1
  3217  0785  3080               	movlw	128
  3218  0786  027F               	subwf	btemp+1,w
  3219  0787  1D03               	skipz
  3220  0788  2F8B               	goto	u1165
  3221  0789  3004               	movlw	4
  3222  078A  0233               	subwf	leerEntradas@i,w
  3223  078B                     u1165:	
  3224  078B  1C03               	skipc
  3225  078C  2F8E               	goto	u1161
  3226  078D  2F8F               	goto	u1160
  3227  078E                     u1161:	
  3228  078E  2F62               	goto	l1611
  3229  078F                     u1160:	
  3230  078F                     l1617:	
  3231                           
  3232                           ;mainsource.c: 111:         drawFigure();
  3233  078F  120A  118A  25CD  120A  118A  	fcall	_drawFigure
  3234  0794  2FD0               	goto	l110
  3235  0795                     l1621:	
  3236                           
  3237                           ;mainsource.c: 115:     if(con.derecha == 1 ){
  3238  0795  034B               	decf	_con+5,w
  3239  0796  1D03               	btfss	3,2
  3240  0797  2F99               	goto	u1171
  3241  0798  2F9A               	goto	u1170
  3242  0799                     u1171:	
  3243  0799  2FB5               	goto	l1637
  3244  079A                     u1170:	
  3245  079A                     l1623:	
  3246                           
  3247                           ;mainsource.c: 116:         con.derecha = 0;
  3248  079A  01CB               	clrf	_con+5
  3249  079B                     l1625:	
  3250                           
  3251                           ;mainsource.c: 117:         if(checkColission_R() | checkRight()){
  3252  079B  120A  118A  204C  120A  118A  	fcall	_checkRight
  3253  07A0  1283               	bcf	3,5	;RP0=0, select bank0
  3254  07A1  1303               	bcf	3,6	;RP1=0, select bank0
  3255  07A2  00A5               	movwf	??_leerEntradas
  3256  07A3  120A  118A  21E8  120A  118A  	fcall	_checkColission_R
  3257  07A8  1283               	bcf	3,5	;RP0=0, select bank0
  3258  07A9  1303               	bcf	3,6	;RP1=0, select bank0
  3259  07AA  0425               	iorwf	??_leerEntradas,w
  3260  07AB  1903               	btfsc	3,2
  3261  07AC  2FAE               	goto	u1181
  3262  07AD  2FAF               	goto	u1180
  3263  07AE                     u1181:	
  3264  07AE  2FB0               	goto	l1629
  3265  07AF                     u1180:	
  3266  07AF  2FD0               	goto	l110
  3267  07B0                     l1629:	
  3268                           
  3269                           ;mainsource.c: 120:         con.ficha_Hpos++;
  3270  07B0  3001               	movlw	1
  3271  07B1  00A5               	movwf	??_leerEntradas
  3272  07B2  0825               	movf	??_leerEntradas,w
  3273  07B3  07C9               	addwf	_con+3,f
  3274  07B4  2F8F               	goto	l1617
  3275  07B5                     l1637:	
  3276  07B5  034C               	decf	_con+6,w
  3277  07B6  1D03               	btfss	3,2
  3278  07B7  2FB9               	goto	u1191
  3279  07B8  2FBA               	goto	u1190
  3280  07B9                     u1191:	
  3281  07B9  2FD0               	goto	l110
  3282  07BA                     u1190:	
  3283  07BA                     l1639:	
  3284  07BA  0849               	movf	_con+3,w
  3285  07BB  1903               	btfsc	3,2
  3286  07BC  2FBE               	goto	u1201
  3287  07BD  2FBF               	goto	u1200
  3288  07BE                     u1201:	
  3289  07BE  2FD0               	goto	l110
  3290  07BF                     u1200:	
  3291  07BF                     l1641:	
  3292                           
  3293                           ;mainsource.c: 125:         con.izquierda = 0;
  3294  07BF  01CC               	clrf	_con+6
  3295  07C0                     l1643:	
  3296                           
  3297                           ;mainsource.c: 126:         if(checkColission_L()==1){
  3298  07C0  120A  118A  2398  120A  118A  	fcall	_checkColission_L
  3299  07C5  3A01               	xorlw	1
  3300  07C6  1D03               	skipz
  3301  07C7  2FC9               	goto	u1211
  3302  07C8  2FCA               	goto	u1210
  3303  07C9                     u1211:	
  3304  07C9  2FCB               	goto	l1647
  3305  07CA                     u1210:	
  3306  07CA  2FD0               	goto	l110
  3307  07CB                     l1647:	
  3308                           
  3309                           ;mainsource.c: 129:         con.ficha_Hpos--;
  3310  07CB  3001               	movlw	1
  3311  07CC  1283               	bcf	3,5	;RP0=0, select bank0
  3312  07CD  1303               	bcf	3,6	;RP1=0, select bank0
  3313  07CE  02C9               	subwf	_con+3,f
  3314  07CF  2F8F               	goto	l1617
  3315  07D0                     l110:	
  3316  07D0  0008               	return
  3317  07D1                     __end_of_leerEntradas:	
  3318                           
  3319                           	psect	text19
  3320  05CD                     __ptext19:	
  3321 ;; *************** function _drawFigure *****************
  3322 ;; Defined at:
  3323 ;;		line 57 in file "screen.c"
  3324 ;; Parameters:    Size  Location     Type
  3325 ;;		None
  3326 ;; Auto vars:     Size  Location     Type
  3327 ;;		None
  3328 ;; Return value:  Size  Location     Type
  3329 ;;                  1    wreg      void 
  3330 ;; Registers used:
  3331 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3332 ;; Tracked objects:
  3333 ;;		On entry : 0/0
  3334 ;;		On exit  : 0/0
  3335 ;;		Unchanged: 0/0
  3336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3337 ;;      Params:         0       0       0       0       0
  3338 ;;      Locals:         0       0       0       0       0
  3339 ;;      Temps:          0       5       0       0       0
  3340 ;;      Totals:         0       5       0       0       0
  3341 ;;Total ram usage:        5 bytes
  3342 ;; Hardware stack levels used:    1
  3343 ;; Hardware stack levels required when called:    2
  3344 ;; This function calls:
  3345 ;;		_memset
  3346 ;; This function is called by:
  3347 ;;		_leerEntradas
  3348 ;;		_checkCount
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352                           
  3353                           ;psect for function _drawFigure
  3354  05CD                     _drawFigure:	
  3355  05CD                     l1421:	
  3356                           ;incstack = 0
  3357                           ; Regs used in _drawFigure: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3358                           
  3359                           
  3360                           ;screen.c: 58:     memset(ficha, 0, sizeof(ficha));
  3361  05CD  3000               	movlw	0
  3362  05CE  00F3               	movwf	memset@c
  3363  05CF  00F4               	movwf	memset@c+1
  3364  05D0  3010               	movlw	16
  3365  05D1  00F5               	movwf	memset@n
  3366  05D2  3000               	movlw	0
  3367  05D3  00F6               	movwf	memset@n+1
  3368  05D4  3058               	movlw	(low (_ficha| 0))& (0+255)
  3369  05D5  120A  118A  20E1  120A  118A  	fcall	_memset
  3370  05DA                     l1423:	
  3371                           
  3372                           ;screen.c: 59:     ficha[con.ficha_Hpos ] = figuras[con.ficha_actual][0] << (con.ficha_V
      +                          pos-1);
  3373  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  3374  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  3375  05DC  0848               	movf	_con+2,w
  3376  05DD  3EFF               	addlw	-1
  3377  05DE  00A0               	movwf	??_drawFigure
  3378  05DF  0AA0               	incf	??_drawFigure,f
  3379  05E0  084A               	movf	_con+4,w
  3380  05E1  00A1               	movwf	??_drawFigure+1
  3381  05E2  3001               	movlw	1
  3382  05E3                     u805:	
  3383  05E3  1003               	clrc
  3384  05E4  0DA1               	rlf	??_drawFigure+1,f
  3385  05E5  3EFF               	addlw	-1
  3386  05E6  1D03               	skipz
  3387  05E7  2DE3               	goto	u805
  3388  05E8  1003               	clrc
  3389  05E9  0D21               	rlf	??_drawFigure+1,w
  3390  05EA  3EC0               	addlw	(low (_figuras| 0))& (0+255)
  3391  05EB  0084               	movwf	4
  3392  05EC  1383               	bcf	3,7	;select IRP bank1
  3393  05ED  0800               	movf	0,w
  3394  05EE  00A2               	movwf	??_drawFigure+2
  3395  05EF  01A3               	clrf	??_drawFigure+3
  3396  05F0  2DF4               	goto	u814
  3397  05F1                     u815:	
  3398  05F1  1003               	clrc
  3399  05F2  0DA2               	rlf	??_drawFigure+2,f
  3400  05F3  0DA3               	rlf	??_drawFigure+3,f
  3401  05F4                     u814:	
  3402  05F4  0BA0               	decfsz	??_drawFigure,f
  3403  05F5  2DF1               	goto	u815
  3404  05F6  0849               	movf	_con+3,w
  3405  05F7  00A4               	movwf	??_drawFigure+4
  3406  05F8  0724               	addwf	??_drawFigure+4,w
  3407  05F9  3E58               	addlw	(low (_ficha| 0))& (0+255)
  3408  05FA  0084               	movwf	4
  3409  05FB  0822               	movf	??_drawFigure+2,w
  3410  05FC  0080               	movwf	0
  3411  05FD  0A84               	incf	4,f
  3412  05FE  0823               	movf	??_drawFigure+3,w
  3413  05FF  0080               	movwf	0
  3414  0600                     l1425:	
  3415                           
  3416                           ;screen.c: 60:     ficha[con.ficha_Hpos +1] = figuras[con.ficha_actual][1] << (con.ficha
      +                          _Vpos-1);
  3417  0600  0848               	movf	_con+2,w
  3418  0601  3EFF               	addlw	-1
  3419  0602  00A0               	movwf	??_drawFigure
  3420  0603  0AA0               	incf	??_drawFigure,f
  3421  0604  084A               	movf	_con+4,w
  3422  0605  00A1               	movwf	??_drawFigure+1
  3423  0606  3001               	movlw	1
  3424  0607                     u825:	
  3425  0607  1003               	clrc
  3426  0608  0DA1               	rlf	??_drawFigure+1,f
  3427  0609  3EFF               	addlw	-1
  3428  060A  1D03               	skipz
  3429  060B  2E07               	goto	u825
  3430  060C  1003               	clrc
  3431  060D  0D21               	rlf	??_drawFigure+1,w
  3432  060E  3EC1               	addlw	(low ((_figuras| 0+1)))& (0+255)
  3433  060F  0084               	movwf	4
  3434  0610  0800               	movf	0,w
  3435  0611  00A2               	movwf	??_drawFigure+2
  3436  0612  01A3               	clrf	??_drawFigure+3
  3437  0613  2E17               	goto	u834
  3438  0614                     u835:	
  3439  0614  1003               	clrc
  3440  0615  0DA2               	rlf	??_drawFigure+2,f
  3441  0616  0DA3               	rlf	??_drawFigure+3,f
  3442  0617                     u834:	
  3443  0617  0BA0               	decfsz	??_drawFigure,f
  3444  0618  2E14               	goto	u835
  3445  0619  0849               	movf	_con+3,w
  3446  061A  00A4               	movwf	??_drawFigure+4
  3447  061B  0724               	addwf	??_drawFigure+4,w
  3448  061C  3E5A               	addlw	(low ((_ficha| 0+2)))& (0+255)
  3449  061D  0084               	movwf	4
  3450  061E  0822               	movf	??_drawFigure+2,w
  3451  061F  0080               	movwf	0
  3452  0620  0A84               	incf	4,f
  3453  0621  0823               	movf	??_drawFigure+3,w
  3454  0622  0080               	movwf	0
  3455  0623                     l1427:	
  3456                           
  3457                           ;screen.c: 61:     ficha[con.ficha_Hpos +2] = figuras[con.ficha_actual][2] << (con.ficha
      +                          _Vpos-1);
  3458  0623  0848               	movf	_con+2,w
  3459  0624  3EFF               	addlw	-1
  3460  0625  00A0               	movwf	??_drawFigure
  3461  0626  0AA0               	incf	??_drawFigure,f
  3462  0627  084A               	movf	_con+4,w
  3463  0628  00A1               	movwf	??_drawFigure+1
  3464  0629  3001               	movlw	1
  3465  062A                     u845:	
  3466  062A  1003               	clrc
  3467  062B  0DA1               	rlf	??_drawFigure+1,f
  3468  062C  3EFF               	addlw	-1
  3469  062D  1D03               	skipz
  3470  062E  2E2A               	goto	u845
  3471  062F  1003               	clrc
  3472  0630  0D21               	rlf	??_drawFigure+1,w
  3473  0631  3EC2               	addlw	(low ((_figuras| 0+2)))& (0+255)
  3474  0632  0084               	movwf	4
  3475  0633  0800               	movf	0,w
  3476  0634  00A2               	movwf	??_drawFigure+2
  3477  0635  01A3               	clrf	??_drawFigure+3
  3478  0636  2E3A               	goto	u854
  3479  0637                     u855:	
  3480  0637  1003               	clrc
  3481  0638  0DA2               	rlf	??_drawFigure+2,f
  3482  0639  0DA3               	rlf	??_drawFigure+3,f
  3483  063A                     u854:	
  3484  063A  0BA0               	decfsz	??_drawFigure,f
  3485  063B  2E37               	goto	u855
  3486  063C  0849               	movf	_con+3,w
  3487  063D  00A4               	movwf	??_drawFigure+4
  3488  063E  0724               	addwf	??_drawFigure+4,w
  3489  063F  3E5C               	addlw	(low ((_ficha| 0+4)))& (0+255)
  3490  0640  0084               	movwf	4
  3491  0641  0822               	movf	??_drawFigure+2,w
  3492  0642  0080               	movwf	0
  3493  0643  0A84               	incf	4,f
  3494  0644  0823               	movf	??_drawFigure+3,w
  3495  0645  0080               	movwf	0
  3496  0646                     l1429:	
  3497                           
  3498                           ;screen.c: 62:     ficha[con.ficha_Hpos +3] = figuras[con.ficha_actual][3] << (con.ficha
      +                          _Vpos-1);
  3499  0646  0848               	movf	_con+2,w
  3500  0647  3EFF               	addlw	-1
  3501  0648  00A0               	movwf	??_drawFigure
  3502  0649  0AA0               	incf	??_drawFigure,f
  3503  064A  084A               	movf	_con+4,w
  3504  064B  00A1               	movwf	??_drawFigure+1
  3505  064C  3001               	movlw	1
  3506  064D                     u865:	
  3507  064D  1003               	clrc
  3508  064E  0DA1               	rlf	??_drawFigure+1,f
  3509  064F  3EFF               	addlw	-1
  3510  0650  1D03               	skipz
  3511  0651  2E4D               	goto	u865
  3512  0652  1003               	clrc
  3513  0653  0D21               	rlf	??_drawFigure+1,w
  3514  0654  3EC3               	addlw	(low ((_figuras| 0+3)))& (0+255)
  3515  0655  0084               	movwf	4
  3516  0656  0800               	movf	0,w
  3517  0657  00A2               	movwf	??_drawFigure+2
  3518  0658  01A3               	clrf	??_drawFigure+3
  3519  0659  2E5D               	goto	u874
  3520  065A                     u875:	
  3521  065A  1003               	clrc
  3522  065B  0DA2               	rlf	??_drawFigure+2,f
  3523  065C  0DA3               	rlf	??_drawFigure+3,f
  3524  065D                     u874:	
  3525  065D  0BA0               	decfsz	??_drawFigure,f
  3526  065E  2E5A               	goto	u875
  3527  065F  0849               	movf	_con+3,w
  3528  0660  00A4               	movwf	??_drawFigure+4
  3529  0661  0724               	addwf	??_drawFigure+4,w
  3530  0662  3E5E               	addlw	(low ((_ficha| 0+6)))& (0+255)
  3531  0663  0084               	movwf	4
  3532  0664  0822               	movf	??_drawFigure+2,w
  3533  0665  0080               	movwf	0
  3534  0666  0A84               	incf	4,f
  3535  0667  0823               	movf	??_drawFigure+3,w
  3536  0668  0080               	movwf	0
  3537  0669                     l200:	
  3538  0669  0008               	return
  3539  066A                     __end_of_drawFigure:	
  3540                           
  3541                           	psect	text20
  3542  00E1                     __ptext20:	
  3543 ;; *************** function _memset *****************
  3544 ;; Defined at:
  3545 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\memset.c"
  3546 ;; Parameters:    Size  Location     Type
  3547 ;;  p1              1    wreg     PTR void 
  3548 ;;		 -> fondo(16), ficha(16), 
  3549 ;;  c               2    2[COMMON] int 
  3550 ;;  n               2    4[COMMON] unsigned int 
  3551 ;; Auto vars:     Size  Location     Type
  3552 ;;  p1              1    8[COMMON] PTR void 
  3553 ;;		 -> fondo(16), ficha(16), 
  3554 ;;  p               1    7[COMMON] PTR unsigned char 
  3555 ;;		 -> fondo(16), ficha(16), 
  3556 ;; Return value:  Size  Location     Type
  3557 ;;                  1    wreg      PTR void 
  3558 ;; Registers used:
  3559 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3560 ;; Tracked objects:
  3561 ;;		On entry : 0/0
  3562 ;;		On exit  : 0/0
  3563 ;;		Unchanged: 0/0
  3564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3565 ;;      Params:         4       0       0       0       0
  3566 ;;      Locals:         2       0       0       0       0
  3567 ;;      Temps:          1       0       0       0       0
  3568 ;;      Totals:         7       0       0       0       0
  3569 ;;Total ram usage:        7 bytes
  3570 ;; Hardware stack levels used:    1
  3571 ;; Hardware stack levels required when called:    1
  3572 ;; This function calls:
  3573 ;;		Nothing
  3574 ;; This function is called by:
  3575 ;;		_drawFigure
  3576 ;;		_perdio
  3577 ;; This function uses a non-reentrant model
  3578 ;;
  3579                           
  3580                           
  3581                           ;psect for function _memset
  3582  00E1                     _memset:	
  3583                           
  3584                           ;incstack = 0
  3585                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0]
  3586                           ;memset@p1 stored from wreg
  3587  00E1  00F9               	movwf	memset@p1
  3588  00E2                     l1391:	
  3589  00E2  0879               	movf	memset@p1,w
  3590  00E3  00F7               	movwf	??_memset
  3591  00E4  0877               	movf	??_memset,w
  3592  00E5  00F8               	movwf	memset@p
  3593  00E6  28F2               	goto	l1397
  3594  00E7                     l1393:	
  3595  00E7  0873               	movf	memset@c,w
  3596  00E8  00F7               	movwf	??_memset
  3597  00E9  0878               	movf	memset@p,w
  3598  00EA  0084               	movwf	4
  3599  00EB  0877               	movf	??_memset,w
  3600  00EC  1383               	bcf	3,7	;select IRP bank0
  3601  00ED  0080               	movwf	0
  3602  00EE                     l1395:	
  3603  00EE  3001               	movlw	1
  3604  00EF  00F7               	movwf	??_memset
  3605  00F0  0877               	movf	??_memset,w
  3606  00F1  07F8               	addwf	memset@p,f
  3607  00F2                     l1397:	
  3608  00F2  3001               	movlw	1
  3609  00F3  02F5               	subwf	memset@n,f
  3610  00F4  3000               	movlw	0
  3611  00F5  1C03               	skipc
  3612  00F6  03F6               	decf	memset@n+1,f
  3613  00F7  02F6               	subwf	memset@n+1,f
  3614  00F8  0A75               	incf	memset@n,w
  3615  00F9  1D03               	skipz
  3616  00FA  28FF               	goto	u731
  3617  00FB  0A76               	incf	memset@n+1,w
  3618  00FC  1D03               	btfss	3,2
  3619  00FD  28FF               	goto	u731
  3620  00FE  2900               	goto	u730
  3621  00FF                     u731:	
  3622  00FF  28E7               	goto	l1393
  3623  0100                     u730:	
  3624  0100                     l809:	
  3625  0100  0008               	return
  3626  0101                     __end_of_memset:	
  3627                           
  3628                           	psect	text21
  3629  004C                     __ptext21:	
  3630 ;; *************** function _checkRight *****************
  3631 ;; Defined at:
  3632 ;;		line 26 in file "colisiones.c"
  3633 ;; Parameters:    Size  Location     Type
  3634 ;;		None
  3635 ;; Auto vars:     Size  Location     Type
  3636 ;;		None
  3637 ;; Return value:  Size  Location     Type
  3638 ;;                  1    wreg      _Bool 
  3639 ;; Registers used:
  3640 ;;		wreg, status,2, status,0
  3641 ;; Tracked objects:
  3642 ;;		On entry : 0/0
  3643 ;;		On exit  : 0/0
  3644 ;;		Unchanged: 0/0
  3645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3646 ;;      Params:         0       0       0       0       0
  3647 ;;      Locals:         0       0       0       0       0
  3648 ;;      Temps:          0       0       0       0       0
  3649 ;;      Totals:         0       0       0       0       0
  3650 ;;Total ram usage:        0 bytes
  3651 ;; Hardware stack levels used:    1
  3652 ;; Hardware stack levels required when called:    1
  3653 ;; This function calls:
  3654 ;;		Nothing
  3655 ;; This function is called by:
  3656 ;;		_leerEntradas
  3657 ;; This function uses a non-reentrant model
  3658 ;;
  3659                           
  3660                           
  3661                           ;psect for function _checkRight
  3662  004C                     _checkRight:	
  3663  004C                     l1447:	
  3664                           ;incstack = 0
  3665                           ; Regs used in _checkRight: [wreg+status,2+status,0]
  3666                           
  3667                           
  3668                           ;colisiones.c: 27:     if(ficha[7]!=0){
  3669  004C  1283               	bcf	3,5	;RP0=0, select bank0
  3670  004D  1303               	bcf	3,6	;RP1=0, select bank0
  3671  004E  0866               	movf	_ficha+14,w
  3672  004F  0467               	iorwf	_ficha+15,w
  3673  0050  1903               	btfsc	3,2
  3674  0051  2853               	goto	u901
  3675  0052  2854               	goto	u900
  3676  0053                     u901:	
  3677  0053  2856               	goto	l1453
  3678  0054                     u900:	
  3679  0054                     l1449:	
  3680                           
  3681                           ;colisiones.c: 28:         return 1;
  3682  0054  3001               	movlw	1
  3683  0055  2857               	goto	l224
  3684  0056                     l1453:	
  3685                           
  3686                           ;colisiones.c: 30:     return 0;
  3687  0056  3000               	movlw	0
  3688  0057                     l224:	
  3689  0057  0008               	return
  3690  0058                     __end_of_checkRight:	
  3691                           
  3692                           	psect	text22
  3693  01E8                     __ptext22:	
  3694 ;; *************** function _checkColission_R *****************
  3695 ;; Defined at:
  3696 ;;		line 51 in file "colisiones.c"
  3697 ;; Parameters:    Size  Location     Type
  3698 ;;		None
  3699 ;; Auto vars:     Size  Location     Type
  3700 ;;  i               2    0[BANK0 ] int 
  3701 ;; Return value:  Size  Location     Type
  3702 ;;                  1    wreg      _Bool 
  3703 ;; Registers used:
  3704 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3705 ;; Tracked objects:
  3706 ;;		On entry : 0/0
  3707 ;;		On exit  : 0/0
  3708 ;;		Unchanged: 0/0
  3709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3710 ;;      Params:         0       0       0       0       0
  3711 ;;      Locals:         0       2       0       0       0
  3712 ;;      Temps:          8       0       0       0       0
  3713 ;;      Totals:         8       2       0       0       0
  3714 ;;Total ram usage:       10 bytes
  3715 ;; Hardware stack levels used:    1
  3716 ;; Hardware stack levels required when called:    1
  3717 ;; This function calls:
  3718 ;;		Nothing
  3719 ;; This function is called by:
  3720 ;;		_leerEntradas
  3721 ;; This function uses a non-reentrant model
  3722 ;;
  3723                           
  3724                           
  3725                           ;psect for function _checkColission_R
  3726  01E8                     _checkColission_R:	
  3727  01E8                     l1431:	
  3728                           ;incstack = 0
  3729                           ; Regs used in _checkColission_R: [wreg-fsr0h+status,2+status,0]
  3730                           
  3731  01E8                     l1433:	
  3732                           
  3733                           ;colisiones.c: 53:     for(i=(con.ficha_Hpos+3); i>=con.ficha_Hpos; i--){
  3734  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  3735  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  3736  01EA  0849               	movf	_con+3,w
  3737  01EB  3E03               	addlw	3
  3738  01EC  00A0               	movwf	checkColission_R@i
  3739  01ED  3000               	movlw	0
  3740  01EE  1803               	skipnc
  3741  01EF  3001               	movlw	1
  3742  01F0  00A1               	movwf	checkColission_R@i+1
  3743  01F1  2A1D               	goto	l234
  3744  01F2                     l1435:	
  3745                           
  3746                           ;colisiones.c: 54:         if((ficha[i] & fondo[i+1]) != 0){
  3747  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  3748  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  3749  01F4  0820               	movf	checkColission_R@i,w
  3750  01F5  00F3               	movwf	??_checkColission_R
  3751  01F6  0773               	addwf	??_checkColission_R,w
  3752  01F7  3EA2               	addlw	(low ((_fondo| 0+2)))& (0+255)
  3753  01F8  0084               	movwf	4
  3754  01F9  1383               	bcf	3,7	;select IRP bank1
  3755  01FA  0800               	movf	0,w
  3756  01FB  00F4               	movwf	??_checkColission_R+1
  3757  01FC  0A84               	incf	4,f
  3758  01FD  0800               	movf	0,w
  3759  01FE  00F5               	movwf	??_checkColission_R+2
  3760  01FF  0820               	movf	checkColission_R@i,w
  3761  0200  00F6               	movwf	??_checkColission_R+3
  3762  0201  0776               	addwf	??_checkColission_R+3,w
  3763  0202  3E58               	addlw	(low (_ficha| 0))& (0+255)
  3764  0203  0084               	movwf	4
  3765  0204  0800               	movf	0,w
  3766  0205  00F7               	movwf	??_checkColission_R+4
  3767  0206  0A84               	incf	4,f
  3768  0207  0800               	movf	0,w
  3769  0208  00F8               	movwf	??_checkColission_R+5
  3770  0209  0874               	movf	??_checkColission_R+1,w
  3771  020A  0577               	andwf	??_checkColission_R+4,w
  3772  020B  00F9               	movwf	??_checkColission_R+6
  3773  020C  0875               	movf	??_checkColission_R+2,w
  3774  020D  0578               	andwf	??_checkColission_R+5,w
  3775  020E  00FA               	movwf	??_checkColission_R+7
  3776  020F  0879               	movf	??_checkColission_R+6,w
  3777  0210  047A               	iorwf	??_checkColission_R+7,w
  3778  0211  1903               	btfsc	3,2
  3779  0212  2A14               	goto	u881
  3780  0213  2A15               	goto	u880
  3781  0214                     u881:	
  3782  0214  2A17               	goto	l1441
  3783  0215                     u880:	
  3784  0215                     l1437:	
  3785                           
  3786                           ;colisiones.c: 55:             return 1;
  3787  0215  3001               	movlw	1
  3788  0216  2A2B               	goto	l237
  3789  0217                     l1441:	
  3790                           
  3791                           ;colisiones.c: 57:     }
  3792  0217  30FF               	movlw	255
  3793  0218  07A0               	addwf	checkColission_R@i,f
  3794  0219  1803               	skipnc
  3795  021A  0AA1               	incf	checkColission_R@i+1,f
  3796  021B  30FF               	movlw	255
  3797  021C  07A1               	addwf	checkColission_R@i+1,f
  3798  021D                     l234:	
  3799  021D  0821               	movf	checkColission_R@i+1,w
  3800  021E  3A80               	xorlw	128
  3801  021F  00F3               	movwf	??_checkColission_R
  3802  0220  3080               	movlw	128
  3803  0221  0273               	subwf	??_checkColission_R,w
  3804  0222  1D03               	skipz
  3805  0223  2A26               	goto	u895
  3806  0224  0849               	movf	_con+3,w
  3807  0225  0220               	subwf	checkColission_R@i,w
  3808  0226                     u895:	
  3809  0226  1803               	skipnc
  3810  0227  2A29               	goto	u891
  3811  0228  2A2A               	goto	u890
  3812  0229                     u891:	
  3813  0229  29F2               	goto	l1435
  3814  022A                     u890:	
  3815  022A                     l1443:	
  3816                           
  3817                           ;colisiones.c: 58:     return 0;
  3818  022A  3000               	movlw	0
  3819  022B                     l237:	
  3820  022B  0008               	return
  3821  022C                     __end_of_checkColission_R:	
  3822                           
  3823                           	psect	text23
  3824  0398                     __ptext23:	
  3825 ;; *************** function _checkColission_L *****************
  3826 ;; Defined at:
  3827 ;;		line 61 in file "colisiones.c"
  3828 ;; Parameters:    Size  Location     Type
  3829 ;;		None
  3830 ;; Auto vars:     Size  Location     Type
  3831 ;;  i               2    0[BANK0 ] int 
  3832 ;; Return value:  Size  Location     Type
  3833 ;;                  1    wreg      _Bool 
  3834 ;; Registers used:
  3835 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3836 ;; Tracked objects:
  3837 ;;		On entry : 0/0
  3838 ;;		On exit  : 0/0
  3839 ;;		Unchanged: 0/0
  3840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3841 ;;      Params:         0       0       0       0       0
  3842 ;;      Locals:         0       2       0       0       0
  3843 ;;      Temps:          8       0       0       0       0
  3844 ;;      Totals:         8       2       0       0       0
  3845 ;;Total ram usage:       10 bytes
  3846 ;; Hardware stack levels used:    1
  3847 ;; Hardware stack levels required when called:    1
  3848 ;; This function calls:
  3849 ;;		Nothing
  3850 ;; This function is called by:
  3851 ;;		_leerEntradas
  3852 ;; This function uses a non-reentrant model
  3853 ;;
  3854                           
  3855                           
  3856                           ;psect for function _checkColission_L
  3857  0398                     _checkColission_L:	
  3858  0398                     l1457:	
  3859                           ;incstack = 0
  3860                           ; Regs used in _checkColission_L: [wreg-fsr0h+status,2+status,0]
  3861                           
  3862  0398                     l1459:	
  3863                           
  3864                           ;colisiones.c: 63:     for(i=con.ficha_Hpos; i<(con.ficha_Hpos+4); i++){
  3865  0398  1283               	bcf	3,5	;RP0=0, select bank0
  3866  0399  1303               	bcf	3,6	;RP1=0, select bank0
  3867  039A  0849               	movf	_con+3,w
  3868  039B  00F3               	movwf	??_checkColission_L
  3869  039C  01F4               	clrf	??_checkColission_L+1
  3870  039D  0873               	movf	??_checkColission_L,w
  3871  039E  00A0               	movwf	checkColission_L@i
  3872  039F  0874               	movf	??_checkColission_L+1,w
  3873  03A0  00A1               	movwf	checkColission_L@i+1
  3874  03A1  2BCD               	goto	l241
  3875  03A2                     l1461:	
  3876                           
  3877                           ;colisiones.c: 64:         if((ficha[i] & fondo[i-1]) != 0){
  3878  03A2  1283               	bcf	3,5	;RP0=0, select bank0
  3879  03A3  1303               	bcf	3,6	;RP1=0, select bank0
  3880  03A4  0820               	movf	checkColission_L@i,w
  3881  03A5  00F3               	movwf	??_checkColission_L
  3882  03A6  0773               	addwf	??_checkColission_L,w
  3883  03A7  3E9E               	addlw	(low ((_fondo| 0+254)))& (0+255)
  3884  03A8  0084               	movwf	4
  3885  03A9  1383               	bcf	3,7	;select IRP bank1
  3886  03AA  0800               	movf	0,w
  3887  03AB  00F4               	movwf	??_checkColission_L+1
  3888  03AC  0A84               	incf	4,f
  3889  03AD  0800               	movf	0,w
  3890  03AE  00F5               	movwf	??_checkColission_L+2
  3891  03AF  0820               	movf	checkColission_L@i,w
  3892  03B0  00F6               	movwf	??_checkColission_L+3
  3893  03B1  0776               	addwf	??_checkColission_L+3,w
  3894  03B2  3E58               	addlw	(low (_ficha| 0))& (0+255)
  3895  03B3  0084               	movwf	4
  3896  03B4  0800               	movf	0,w
  3897  03B5  00F7               	movwf	??_checkColission_L+4
  3898  03B6  0A84               	incf	4,f
  3899  03B7  0800               	movf	0,w
  3900  03B8  00F8               	movwf	??_checkColission_L+5
  3901  03B9  0874               	movf	??_checkColission_L+1,w
  3902  03BA  0577               	andwf	??_checkColission_L+4,w
  3903  03BB  00F9               	movwf	??_checkColission_L+6
  3904  03BC  0875               	movf	??_checkColission_L+2,w
  3905  03BD  0578               	andwf	??_checkColission_L+5,w
  3906  03BE  00FA               	movwf	??_checkColission_L+7
  3907  03BF  0879               	movf	??_checkColission_L+6,w
  3908  03C0  047A               	iorwf	??_checkColission_L+7,w
  3909  03C1  1903               	btfsc	3,2
  3910  03C2  2BC4               	goto	u911
  3911  03C3  2BC5               	goto	u910
  3912  03C4                     u911:	
  3913  03C4  2BC7               	goto	l1467
  3914  03C5                     u910:	
  3915  03C5                     l1463:	
  3916                           
  3917                           ;colisiones.c: 65:             return 1;
  3918  03C5  3001               	movlw	1
  3919  03C6  2BE3               	goto	l244
  3920  03C7                     l1467:	
  3921                           
  3922                           ;colisiones.c: 67:     }
  3923  03C7  3001               	movlw	1
  3924  03C8  07A0               	addwf	checkColission_L@i,f
  3925  03C9  1803               	skipnc
  3926  03CA  0AA1               	incf	checkColission_L@i+1,f
  3927  03CB  3000               	movlw	0
  3928  03CC  07A1               	addwf	checkColission_L@i+1,f
  3929  03CD                     l241:	
  3930  03CD  0849               	movf	_con+3,w
  3931  03CE  3E04               	addlw	4
  3932  03CF  00F3               	movwf	??_checkColission_L
  3933  03D0  3000               	movlw	0
  3934  03D1  1803               	skipnc
  3935  03D2  3001               	movlw	1
  3936  03D3  00F4               	movwf	??_checkColission_L+1
  3937  03D4  0821               	movf	checkColission_L@i+1,w
  3938  03D5  3A80               	xorlw	128
  3939  03D6  00F5               	movwf	??_checkColission_L+2
  3940  03D7  0874               	movf	??_checkColission_L+1,w
  3941  03D8  3A80               	xorlw	128
  3942  03D9  0275               	subwf	??_checkColission_L+2,w
  3943  03DA  1D03               	skipz
  3944  03DB  2BDE               	goto	u925
  3945  03DC  0873               	movf	??_checkColission_L,w
  3946  03DD  0220               	subwf	checkColission_L@i,w
  3947  03DE                     u925:	
  3948  03DE  1C03               	skipc
  3949  03DF  2BE1               	goto	u921
  3950  03E0  2BE2               	goto	u920
  3951  03E1                     u921:	
  3952  03E1  2BA2               	goto	l1461
  3953  03E2                     u920:	
  3954  03E2                     l1469:	
  3955                           
  3956                           ;colisiones.c: 68:     return 0;
  3957  03E2  3000               	movlw	0
  3958  03E3                     l244:	
  3959  03E3  0008               	return
  3960  03E4                     __end_of_checkColission_L:	
  3961                           
  3962                           	psect	text24
  3963  0557                     __ptext24:	
  3964 ;; *************** function _checkColission_D *****************
  3965 ;; Defined at:
  3966 ;;		line 38 in file "colisiones.c"
  3967 ;; Parameters:    Size  Location     Type
  3968 ;;		None
  3969 ;; Auto vars:     Size  Location     Type
  3970 ;;  i               2   26[BANK0 ] int 
  3971 ;; Return value:  Size  Location     Type
  3972 ;;                  1    wreg      void 
  3973 ;; Registers used:
  3974 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3975 ;; Tracked objects:
  3976 ;;		On entry : 0/0
  3977 ;;		On exit  : 0/0
  3978 ;;		Unchanged: 0/0
  3979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3980 ;;      Params:         0       0       0       0       0
  3981 ;;      Locals:         0       2       0       0       0
  3982 ;;      Temps:          0       8       0       0       0
  3983 ;;      Totals:         0      10       0       0       0
  3984 ;;Total ram usage:       10 bytes
  3985 ;; Hardware stack levels used:    1
  3986 ;; Hardware stack levels required when called:    3
  3987 ;; This function calls:
  3988 ;;		___awmod
  3989 ;;		_drawBground
  3990 ;;		_rand
  3991 ;; This function is called by:
  3992 ;;		_checkCount
  3993 ;; This function uses a non-reentrant model
  3994 ;;
  3995                           
  3996                           
  3997                           ;psect for function _checkColission_D
  3998  0557                     _checkColission_D:	
  3999  0557                     l1663:	
  4000                           ;incstack = 0
  4001                           ; Regs used in _checkColission_D: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4002                           
  4003  0557                     l1665:	
  4004                           
  4005                           ;colisiones.c: 40:     for(i=con.ficha_Hpos; i<(con.ficha_Hpos+4); i++){
  4006  0557  1283               	bcf	3,5	;RP0=0, select bank0
  4007  0558  1303               	bcf	3,6	;RP1=0, select bank0
  4008  0559  0849               	movf	_con+3,w
  4009  055A  00B2               	movwf	??_checkColission_D
  4010  055B  01B3               	clrf	??_checkColission_D+1
  4011  055C  0832               	movf	??_checkColission_D,w
  4012  055D  00BA               	movwf	checkColission_D@i
  4013  055E  0833               	movf	??_checkColission_D+1,w
  4014  055F  00BB               	movwf	checkColission_D@i+1
  4015  0560  2DB7               	goto	l227
  4016  0561                     l1667:	
  4017                           
  4018                           ;colisiones.c: 41:         if((ficha[i]>>1 & fondo[i]) != 0){
  4019  0561  1283               	bcf	3,5	;RP0=0, select bank0
  4020  0562  1303               	bcf	3,6	;RP1=0, select bank0
  4021  0563  083A               	movf	checkColission_D@i,w
  4022  0564  00B2               	movwf	??_checkColission_D
  4023  0565  0732               	addwf	??_checkColission_D,w
  4024  0566  3EA0               	addlw	(low (_fondo| 0))& (0+255)
  4025  0567  0084               	movwf	4
  4026  0568  1383               	bcf	3,7	;select IRP bank1
  4027  0569  0800               	movf	0,w
  4028  056A  00B3               	movwf	??_checkColission_D+1
  4029  056B  0A84               	incf	4,f
  4030  056C  0800               	movf	0,w
  4031  056D  00B4               	movwf	??_checkColission_D+2
  4032  056E  083A               	movf	checkColission_D@i,w
  4033  056F  00B5               	movwf	??_checkColission_D+3
  4034  0570  0735               	addwf	??_checkColission_D+3,w
  4035  0571  3E58               	addlw	(low (_ficha| 0))& (0+255)
  4036  0572  0084               	movwf	4
  4037  0573  0800               	movf	0,w
  4038  0574  00B6               	movwf	??_checkColission_D+4
  4039  0575  0A84               	incf	4,f
  4040  0576  0800               	movf	0,w
  4041  0577  00B7               	movwf	??_checkColission_D+5
  4042  0578  1003               	clrc
  4043  0579  0CB7               	rrf	??_checkColission_D+5,f
  4044  057A  0CB6               	rrf	??_checkColission_D+4,f
  4045  057B  0833               	movf	??_checkColission_D+1,w
  4046  057C  0536               	andwf	??_checkColission_D+4,w
  4047  057D  00B8               	movwf	??_checkColission_D+6
  4048  057E  0834               	movf	??_checkColission_D+2,w
  4049  057F  0537               	andwf	??_checkColission_D+5,w
  4050  0580  00B9               	movwf	??_checkColission_D+7
  4051  0581  0838               	movf	??_checkColission_D+6,w
  4052  0582  0439               	iorwf	??_checkColission_D+7,w
  4053  0583  1903               	btfsc	3,2
  4054  0584  2D86               	goto	u1231
  4055  0585  2D87               	goto	u1230
  4056  0586                     u1231:	
  4057  0586  2DB1               	goto	l1677
  4058  0587                     u1230:	
  4059  0587                     l1669:	
  4060                           
  4061                           ;colisiones.c: 42:             drawBground();
  4062  0587  120A  118A  2166  120A  118A  	fcall	_drawBground
  4063  058C                     l1671:	
  4064                           
  4065                           ;colisiones.c: 43:             con.ficha_Vpos = 16;
  4066  058C  3010               	movlw	16
  4067  058D  1283               	bcf	3,5	;RP0=0, select bank0
  4068  058E  1303               	bcf	3,6	;RP1=0, select bank0
  4069  058F  00B2               	movwf	??_checkColission_D
  4070  0590  0832               	movf	??_checkColission_D,w
  4071  0591  00C8               	movwf	_con+2
  4072  0592                     l1673:	
  4073                           
  4074                           ;colisiones.c: 44:             con.ficha_Hpos = 2;
  4075  0592  3002               	movlw	2
  4076  0593  00B2               	movwf	??_checkColission_D
  4077  0594  0832               	movf	??_checkColission_D,w
  4078  0595  00C9               	movwf	_con+3
  4079  0596                     l1675:	
  4080                           
  4081                           ;colisiones.c: 45:             con.ficha_actual = rand() % 7;
  4082  0596  3007               	movlw	7
  4083  0597  00AB               	movwf	___awmod@divisor
  4084  0598  3000               	movlw	0
  4085  0599  00AC               	movwf	___awmod@divisor+1
  4086  059A  120A  118A  222C  120A  118A  	fcall	_rand
  4087  059F  1283               	bcf	3,5	;RP0=0, select bank0
  4088  05A0  1303               	bcf	3,6	;RP1=0, select bank0
  4089  05A1  0825               	movf	?_rand+1,w
  4090  05A2  00AE               	movwf	___awmod@dividend+1
  4091  05A3  0824               	movf	?_rand,w
  4092  05A4  00AD               	movwf	___awmod@dividend
  4093  05A5  120A  118A  2433  120A  118A  	fcall	___awmod
  4094  05AA  1283               	bcf	3,5	;RP0=0, select bank0
  4095  05AB  1303               	bcf	3,6	;RP1=0, select bank0
  4096  05AC  082B               	movf	?___awmod,w
  4097  05AD  00B2               	movwf	??_checkColission_D
  4098  05AE  0832               	movf	??_checkColission_D,w
  4099  05AF  00CA               	movwf	_con+4
  4100                           
  4101                           ;colisiones.c: 46:             break;
  4102  05B0  2DCC               	goto	l231
  4103  05B1                     l1677:	
  4104                           
  4105                           ;colisiones.c: 48:     }
  4106  05B1  3001               	movlw	1
  4107  05B2  07BA               	addwf	checkColission_D@i,f
  4108  05B3  1803               	skipnc
  4109  05B4  0ABB               	incf	checkColission_D@i+1,f
  4110  05B5  3000               	movlw	0
  4111  05B6  07BB               	addwf	checkColission_D@i+1,f
  4112  05B7                     l227:	
  4113  05B7  0849               	movf	_con+3,w
  4114  05B8  3E04               	addlw	4
  4115  05B9  00B2               	movwf	??_checkColission_D
  4116  05BA  3000               	movlw	0
  4117  05BB  1803               	skipnc
  4118  05BC  3001               	movlw	1
  4119  05BD  00B3               	movwf	??_checkColission_D+1
  4120  05BE  083B               	movf	checkColission_D@i+1,w
  4121  05BF  3A80               	xorlw	128
  4122  05C0  00B4               	movwf	??_checkColission_D+2
  4123  05C1  0833               	movf	??_checkColission_D+1,w
  4124  05C2  3A80               	xorlw	128
  4125  05C3  0234               	subwf	??_checkColission_D+2,w
  4126  05C4  1D03               	skipz
  4127  05C5  2DC8               	goto	u1245
  4128  05C6  0832               	movf	??_checkColission_D,w
  4129  05C7  023A               	subwf	checkColission_D@i,w
  4130  05C8                     u1245:	
  4131  05C8  1C03               	skipc
  4132  05C9  2DCB               	goto	u1241
  4133  05CA  2DCC               	goto	u1240
  4134  05CB                     u1241:	
  4135  05CB  2D61               	goto	l1667
  4136  05CC                     u1240:	
  4137  05CC                     l231:	
  4138  05CC  0008               	return
  4139  05CD                     __end_of_checkColission_D:	
  4140                           
  4141                           	psect	text25
  4142  0101                     __ptext25:	
  4143 ;; *************** function _checkBottom *****************
  4144 ;; Defined at:
  4145 ;;		line 17 in file "colisiones.c"
  4146 ;; Parameters:    Size  Location     Type
  4147 ;;		None
  4148 ;; Auto vars:     Size  Location     Type
  4149 ;;		None
  4150 ;; Return value:  Size  Location     Type
  4151 ;;                  1    wreg      void 
  4152 ;; Registers used:
  4153 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4154 ;; Tracked objects:
  4155 ;;		On entry : 0/0
  4156 ;;		On exit  : 0/0
  4157 ;;		Unchanged: 0/0
  4158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4159 ;;      Params:         0       0       0       0       0
  4160 ;;      Locals:         0       0       0       0       0
  4161 ;;      Temps:          0       1       0       0       0
  4162 ;;      Totals:         0       1       0       0       0
  4163 ;;Total ram usage:        1 bytes
  4164 ;; Hardware stack levels used:    1
  4165 ;; Hardware stack levels required when called:    3
  4166 ;; This function calls:
  4167 ;;		___awmod
  4168 ;;		_drawBground
  4169 ;;		_rand
  4170 ;; This function is called by:
  4171 ;;		_checkCount
  4172 ;; This function uses a non-reentrant model
  4173 ;;
  4174                           
  4175                           
  4176                           ;psect for function _checkBottom
  4177  0101                     _checkBottom:	
  4178  0101                     l1653:	
  4179                           ;incstack = 0
  4180                           ; Regs used in _checkBottom: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4181                           
  4182                           
  4183                           ;colisiones.c: 18:     if(con.ficha_Vpos==0){
  4184  0101  1283               	bcf	3,5	;RP0=0, select bank0
  4185  0102  1303               	bcf	3,6	;RP1=0, select bank0
  4186  0103  0848               	movf	_con+2,w
  4187  0104  1D03               	btfss	3,2
  4188  0105  2907               	goto	u1221
  4189  0106  2908               	goto	u1220
  4190  0107                     u1221:	
  4191  0107  2931               	goto	l220
  4192  0108                     u1220:	
  4193  0108                     l1655:	
  4194                           
  4195                           ;colisiones.c: 19:         drawBground();
  4196  0108  120A  118A  2166  120A  118A  	fcall	_drawBground
  4197  010D                     l1657:	
  4198                           
  4199                           ;colisiones.c: 20:         con.ficha_Vpos = 16;
  4200  010D  3010               	movlw	16
  4201  010E  1283               	bcf	3,5	;RP0=0, select bank0
  4202  010F  1303               	bcf	3,6	;RP1=0, select bank0
  4203  0110  00B2               	movwf	??_checkBottom
  4204  0111  0832               	movf	??_checkBottom,w
  4205  0112  00C8               	movwf	_con+2
  4206  0113                     l1659:	
  4207                           
  4208                           ;colisiones.c: 21:         con.ficha_Hpos = 2;
  4209  0113  3002               	movlw	2
  4210  0114  00B2               	movwf	??_checkBottom
  4211  0115  0832               	movf	??_checkBottom,w
  4212  0116  00C9               	movwf	_con+3
  4213  0117                     l1661:	
  4214                           
  4215                           ;colisiones.c: 22:         con.ficha_actual = rand() % 7;
  4216  0117  3007               	movlw	7
  4217  0118  00AB               	movwf	___awmod@divisor
  4218  0119  3000               	movlw	0
  4219  011A  00AC               	movwf	___awmod@divisor+1
  4220  011B  120A  118A  222C  120A  118A  	fcall	_rand
  4221  0120  1283               	bcf	3,5	;RP0=0, select bank0
  4222  0121  1303               	bcf	3,6	;RP1=0, select bank0
  4223  0122  0825               	movf	?_rand+1,w
  4224  0123  00AE               	movwf	___awmod@dividend+1
  4225  0124  0824               	movf	?_rand,w
  4226  0125  00AD               	movwf	___awmod@dividend
  4227  0126  120A  118A  2433  120A  118A  	fcall	___awmod
  4228  012B  1283               	bcf	3,5	;RP0=0, select bank0
  4229  012C  1303               	bcf	3,6	;RP1=0, select bank0
  4230  012D  082B               	movf	?___awmod,w
  4231  012E  00B2               	movwf	??_checkBottom
  4232  012F  0832               	movf	??_checkBottom,w
  4233  0130  00CA               	movwf	_con+4
  4234  0131                     l220:	
  4235  0131  0008               	return
  4236  0132                     __end_of_checkBottom:	
  4237                           
  4238                           	psect	text26
  4239  022C                     __ptext26:	
  4240 ;; *************** function _rand *****************
  4241 ;; Defined at:
  4242 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  4243 ;; Parameters:    Size  Location     Type
  4244 ;;		None
  4245 ;; Auto vars:     Size  Location     Type
  4246 ;;		None
  4247 ;; Return value:  Size  Location     Type
  4248 ;;                  2    4[BANK0 ] int 
  4249 ;; Registers used:
  4250 ;;		wreg, status,2, status,0, pclath, cstack
  4251 ;; Tracked objects:
  4252 ;;		On entry : 0/0
  4253 ;;		On exit  : 0/0
  4254 ;;		Unchanged: 0/0
  4255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4256 ;;      Params:         0       2       0       0       0
  4257 ;;      Locals:         0       0       0       0       0
  4258 ;;      Temps:          0       5       0       0       0
  4259 ;;      Totals:         0       7       0       0       0
  4260 ;;Total ram usage:        7 bytes
  4261 ;; Hardware stack levels used:    1
  4262 ;; Hardware stack levels required when called:    2
  4263 ;; This function calls:
  4264 ;;		___lmul
  4265 ;; This function is called by:
  4266 ;;		_main
  4267 ;;		_checkBottom
  4268 ;;		_checkColission_D
  4269 ;;		_perdio
  4270 ;; This function uses a non-reentrant model
  4271 ;;
  4272                           
  4273                           
  4274                           ;psect for function _rand
  4275  022C                     _rand:	
  4276  022C                     l1413:	
  4277                           ;incstack = 0
  4278                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  4279                           
  4280  022C  1283               	bcf	3,5	;RP0=0, select bank0
  4281  022D  1303               	bcf	3,6	;RP1=0, select bank0
  4282  022E  086B               	movf	_randx+3,w
  4283  022F  00F6               	movwf	___lmul@multiplier+3
  4284  0230  086A               	movf	_randx+2,w
  4285  0231  00F5               	movwf	___lmul@multiplier+2
  4286  0232  0869               	movf	_randx+1,w
  4287  0233  00F4               	movwf	___lmul@multiplier+1
  4288  0234  0868               	movf	_randx,w
  4289  0235  00F3               	movwf	___lmul@multiplier
  4290  0236  3041               	movlw	65
  4291  0237  00FA               	movwf	___lmul@multiplicand+3
  4292  0238  30C6               	movlw	198
  4293  0239  00F9               	movwf	___lmul@multiplicand+2
  4294  023A  304E               	movlw	78
  4295  023B  00F8               	movwf	___lmul@multiplicand+1
  4296  023C  306D               	movlw	109
  4297  023D  00F7               	movwf	___lmul@multiplicand
  4298  023E  120A  118A  234C  120A  118A  	fcall	___lmul
  4299  0243  0876               	movf	?___lmul+3,w
  4300  0244  1283               	bcf	3,5	;RP0=0, select bank0
  4301  0245  1303               	bcf	3,6	;RP1=0, select bank0
  4302  0246  00EB               	movwf	_randx+3
  4303  0247  0875               	movf	?___lmul+2,w
  4304  0248  00EA               	movwf	_randx+2
  4305  0249  0874               	movf	?___lmul+1,w
  4306  024A  00E9               	movwf	_randx+1
  4307  024B  0873               	movf	?___lmul,w
  4308  024C  00E8               	movwf	_randx
  4309  024D                     l1415:	
  4310  024D  3039               	movlw	57
  4311  024E  07E8               	addwf	_randx,f
  4312  024F  3030               	movlw	48
  4313  0250  1803               	skipnc
  4314  0251  3031               	movlw	49
  4315  0252  07E9               	addwf	_randx+1,f
  4316  0253  3000               	movlw	0
  4317  0254  1803               	skipnc
  4318  0255  3001               	movlw	1
  4319  0256  07EA               	addwf	_randx+2,f
  4320  0257  3000               	movlw	0
  4321  0258  1803               	skipnc
  4322  0259  3001               	movlw	1
  4323  025A  07EB               	addwf	_randx+3,f
  4324  025B                     l1417:	
  4325  025B  0868               	movf	_randx,w
  4326  025C  00A6               	movwf	??_rand
  4327  025D  0869               	movf	_randx+1,w
  4328  025E  00A7               	movwf	??_rand+1
  4329  025F  086A               	movf	_randx+2,w
  4330  0260  00A8               	movwf	??_rand+2
  4331  0261  086B               	movf	_randx+3,w
  4332  0262  00A9               	movwf	??_rand+3
  4333  0263  3010               	movlw	16
  4334  0264  00AA               	movwf	??_rand+4
  4335  0265                     u795:	
  4336  0265  0D29               	rlf	??_rand+3,w
  4337  0266  0CA9               	rrf	??_rand+3,f
  4338  0267  0CA8               	rrf	??_rand+2,f
  4339  0268  0CA7               	rrf	??_rand+1,f
  4340  0269  0CA6               	rrf	??_rand,f
  4341  026A                     u790:	
  4342  026A  0BAA               	decfsz	??_rand+4,f
  4343  026B  2A65               	goto	u795
  4344  026C  30FF               	movlw	255
  4345  026D  0526               	andwf	??_rand,w
  4346  026E  00A4               	movwf	?_rand
  4347  026F  307F               	movlw	127
  4348  0270  0527               	andwf	??_rand+1,w
  4349  0271  00A5               	movwf	?_rand+1
  4350  0272                     l817:	
  4351  0272  0008               	return
  4352  0273                     __end_of_rand:	
  4353                           
  4354                           	psect	text27
  4355  034C                     __ptext27:	
  4356 ;; *************** function ___lmul *****************
  4357 ;; Defined at:
  4358 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  4359 ;; Parameters:    Size  Location     Type
  4360 ;;  multiplier      4    2[COMMON] unsigned long 
  4361 ;;  multiplicand    4    6[COMMON] unsigned long 
  4362 ;; Auto vars:     Size  Location     Type
  4363 ;;  product         4    0[BANK0 ] unsigned long 
  4364 ;; Return value:  Size  Location     Type
  4365 ;;                  4    2[COMMON] unsigned long 
  4366 ;; Registers used:
  4367 ;;		wreg, status,2, status,0
  4368 ;; Tracked objects:
  4369 ;;		On entry : 0/0
  4370 ;;		On exit  : 0/0
  4371 ;;		Unchanged: 0/0
  4372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4373 ;;      Params:         8       0       0       0       0
  4374 ;;      Locals:         0       4       0       0       0
  4375 ;;      Temps:          1       0       0       0       0
  4376 ;;      Totals:         9       4       0       0       0
  4377 ;;Total ram usage:       13 bytes
  4378 ;; Hardware stack levels used:    1
  4379 ;; Hardware stack levels required when called:    1
  4380 ;; This function calls:
  4381 ;;		Nothing
  4382 ;; This function is called by:
  4383 ;;		_rand
  4384 ;; This function uses a non-reentrant model
  4385 ;;
  4386                           
  4387                           
  4388                           ;psect for function ___lmul
  4389  034C                     ___lmul:	
  4390  034C                     l1399:	
  4391                           ;incstack = 0
  4392                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4393                           
  4394  034C  3000               	movlw	0
  4395  034D  1283               	bcf	3,5	;RP0=0, select bank0
  4396  034E  1303               	bcf	3,6	;RP1=0, select bank0
  4397  034F  00A3               	movwf	___lmul@product+3
  4398  0350  3000               	movlw	0
  4399  0351  00A2               	movwf	___lmul@product+2
  4400  0352  3000               	movlw	0
  4401  0353  00A1               	movwf	___lmul@product+1
  4402  0354  3000               	movlw	0
  4403  0355  00A0               	movwf	___lmul@product
  4404  0356                     l1401:	
  4405  0356  1C73               	btfss	___lmul@multiplier,0
  4406  0357  2B59               	goto	u741
  4407  0358  2B5A               	goto	u740
  4408  0359                     u741:	
  4409  0359  2B73               	goto	l1405
  4410  035A                     u740:	
  4411  035A                     l1403:	
  4412  035A  0877               	movf	___lmul@multiplicand,w
  4413  035B  1283               	bcf	3,5	;RP0=0, select bank0
  4414  035C  1303               	bcf	3,6	;RP1=0, select bank0
  4415  035D  07A0               	addwf	___lmul@product,f
  4416  035E  0878               	movf	___lmul@multiplicand+1,w
  4417  035F  1103               	clrz
  4418  0360  1803               	skipnc
  4419  0361  3E01               	addlw	1
  4420  0362  1903               	skipnz
  4421  0363  2B65               	goto	u751
  4422  0364  07A1               	addwf	___lmul@product+1,f
  4423  0365                     u751:	
  4424  0365  0879               	movf	___lmul@multiplicand+2,w
  4425  0366  1103               	clrz
  4426  0367  1803               	skipnc
  4427  0368  3E01               	addlw	1
  4428  0369  1903               	skipnz
  4429  036A  2B6C               	goto	u752
  4430  036B  07A2               	addwf	___lmul@product+2,f
  4431  036C                     u752:	
  4432  036C  087A               	movf	___lmul@multiplicand+3,w
  4433  036D  1103               	clrz
  4434  036E  1803               	skipnc
  4435  036F  3E01               	addlw	1
  4436  0370  1903               	skipnz
  4437  0371  2B73               	goto	u753
  4438  0372  07A3               	addwf	___lmul@product+3,f
  4439  0373                     u753:	
  4440  0373                     l1405:	
  4441  0373  3001               	movlw	1
  4442  0374  00FB               	movwf	??___lmul
  4443  0375                     u765:	
  4444  0375  1003               	clrc
  4445  0376  0DF7               	rlf	___lmul@multiplicand,f
  4446  0377  0DF8               	rlf	___lmul@multiplicand+1,f
  4447  0378  0DF9               	rlf	___lmul@multiplicand+2,f
  4448  0379  0DFA               	rlf	___lmul@multiplicand+3,f
  4449  037A  0BFB               	decfsz	??___lmul,f
  4450  037B  2B75               	goto	u765
  4451  037C                     l1407:	
  4452  037C  3001               	movlw	1
  4453  037D                     u775:	
  4454  037D  1003               	clrc
  4455  037E  0CF6               	rrf	___lmul@multiplier+3,f
  4456  037F  0CF5               	rrf	___lmul@multiplier+2,f
  4457  0380  0CF4               	rrf	___lmul@multiplier+1,f
  4458  0381  0CF3               	rrf	___lmul@multiplier,f
  4459  0382  3EFF               	addlw	-1
  4460  0383  1D03               	skipz
  4461  0384  2B7D               	goto	u775
  4462  0385  0876               	movf	___lmul@multiplier+3,w
  4463  0386  0475               	iorwf	___lmul@multiplier+2,w
  4464  0387  0474               	iorwf	___lmul@multiplier+1,w
  4465  0388  0473               	iorwf	___lmul@multiplier,w
  4466  0389  1D03               	skipz
  4467  038A  2B8C               	goto	u781
  4468  038B  2B8D               	goto	u780
  4469  038C                     u781:	
  4470  038C  2B56               	goto	l1401
  4471  038D                     u780:	
  4472  038D                     l1409:	
  4473  038D  1283               	bcf	3,5	;RP0=0, select bank0
  4474  038E  1303               	bcf	3,6	;RP1=0, select bank0
  4475  038F  0823               	movf	___lmul@product+3,w
  4476  0390  00F6               	movwf	?___lmul+3
  4477  0391  0822               	movf	___lmul@product+2,w
  4478  0392  00F5               	movwf	?___lmul+2
  4479  0393  0821               	movf	___lmul@product+1,w
  4480  0394  00F4               	movwf	?___lmul+1
  4481  0395  0820               	movf	___lmul@product,w
  4482  0396  00F3               	movwf	?___lmul
  4483  0397                     l375:	
  4484  0397  0008               	return
  4485  0398                     __end_of___lmul:	
  4486                           
  4487                           	psect	text28
  4488  0166                     __ptext28:	
  4489 ;; *************** function _drawBground *****************
  4490 ;; Defined at:
  4491 ;;		line 46 in file "screen.c"
  4492 ;; Parameters:    Size  Location     Type
  4493 ;;		None
  4494 ;; Auto vars:     Size  Location     Type
  4495 ;;  i               2    0[BANK0 ] int 
  4496 ;; Return value:  Size  Location     Type
  4497 ;;                  1    wreg      void 
  4498 ;; Registers used:
  4499 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4500 ;; Tracked objects:
  4501 ;;		On entry : 0/0
  4502 ;;		On exit  : 0/0
  4503 ;;		Unchanged: 0/0
  4504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4505 ;;      Params:         0       0       0       0       0
  4506 ;;      Locals:         0       2       0       0       0
  4507 ;;      Temps:          9       0       0       0       0
  4508 ;;      Totals:         9       2       0       0       0
  4509 ;;Total ram usage:       11 bytes
  4510 ;; Hardware stack levels used:    1
  4511 ;; Hardware stack levels required when called:    1
  4512 ;; This function calls:
  4513 ;;		Nothing
  4514 ;; This function is called by:
  4515 ;;		_checkBottom
  4516 ;;		_checkColission_D
  4517 ;; This function uses a non-reentrant model
  4518 ;;
  4519                           
  4520                           
  4521                           ;psect for function _drawBground
  4522  0166                     _drawBground:	
  4523  0166                     l1481:	
  4524                           ;incstack = 0
  4525                           ; Regs used in _drawBground: [wreg-fsr0h+status,2+status,0+btemp+1]
  4526                           
  4527                           
  4528                           ;screen.c: 47:     int i=0;
  4529  0166  1283               	bcf	3,5	;RP0=0, select bank0
  4530  0167  1303               	bcf	3,6	;RP1=0, select bank0
  4531  0168  01A0               	clrf	drawBground@i
  4532  0169  01A1               	clrf	drawBground@i+1
  4533                           
  4534                           ;screen.c: 48:     for(i=0; i<8; i++){
  4535  016A  01A0               	clrf	drawBground@i
  4536  016B  01A1               	clrf	drawBground@i+1
  4537  016C                     l1487:	
  4538                           
  4539                           ;screen.c: 49:         fondo[i] = fondo[i] | ficha[i];
  4540  016C  1283               	bcf	3,5	;RP0=0, select bank0
  4541  016D  1303               	bcf	3,6	;RP1=0, select bank0
  4542  016E  0820               	movf	drawBground@i,w
  4543  016F  00F3               	movwf	??_drawBground
  4544  0170  0773               	addwf	??_drawBground,w
  4545  0171  3E58               	addlw	(low (_ficha| 0))& (0+255)
  4546  0172  0084               	movwf	4
  4547  0173  1383               	bcf	3,7	;select IRP bank0
  4548  0174  0800               	movf	0,w
  4549  0175  00F4               	movwf	??_drawBground+1
  4550  0176  0A84               	incf	4,f
  4551  0177  0800               	movf	0,w
  4552  0178  00F5               	movwf	??_drawBground+2
  4553  0179  0820               	movf	drawBground@i,w
  4554  017A  00F6               	movwf	??_drawBground+3
  4555  017B  0776               	addwf	??_drawBground+3,w
  4556  017C  3EA0               	addlw	(low (_fondo| 0))& (0+255)
  4557  017D  0084               	movwf	4
  4558  017E  0800               	movf	0,w
  4559  017F  00F7               	movwf	??_drawBground+4
  4560  0180  0A84               	incf	4,f
  4561  0181  0800               	movf	0,w
  4562  0182  00F8               	movwf	??_drawBground+5
  4563  0183  0874               	movf	??_drawBground+1,w
  4564  0184  0477               	iorwf	??_drawBground+4,w
  4565  0185  00F9               	movwf	??_drawBground+6
  4566  0186  0875               	movf	??_drawBground+2,w
  4567  0187  0478               	iorwf	??_drawBground+5,w
  4568  0188  00FA               	movwf	??_drawBground+7
  4569  0189  0820               	movf	drawBground@i,w
  4570  018A  00FB               	movwf	??_drawBground+8
  4571  018B  077B               	addwf	??_drawBground+8,w
  4572  018C  3EA0               	addlw	(low (_fondo| 0))& (0+255)
  4573  018D  0084               	movwf	4
  4574  018E  0879               	movf	??_drawBground+6,w
  4575  018F  0080               	movwf	0
  4576  0190  0A84               	incf	4,f
  4577  0191  087A               	movf	??_drawBground+7,w
  4578  0192  0080               	movwf	0
  4579  0193                     l1489:	
  4580                           
  4581                           ;screen.c: 50:     }
  4582  0193  3001               	movlw	1
  4583  0194  07A0               	addwf	drawBground@i,f
  4584  0195  1803               	skipnc
  4585  0196  0AA1               	incf	drawBground@i+1,f
  4586  0197  3000               	movlw	0
  4587  0198  07A1               	addwf	drawBground@i+1,f
  4588  0199                     l1491:	
  4589  0199  0821               	movf	drawBground@i+1,w
  4590  019A  3A80               	xorlw	128
  4591  019B  00FF               	movwf	btemp+1
  4592  019C  3080               	movlw	128
  4593  019D  027F               	subwf	btemp+1,w
  4594  019E  1D03               	skipz
  4595  019F  29A2               	goto	u935
  4596  01A0  3008               	movlw	8
  4597  01A1  0220               	subwf	drawBground@i,w
  4598  01A2                     u935:	
  4599  01A2  1C03               	skipc
  4600  01A3  29A5               	goto	u931
  4601  01A4  29A6               	goto	u930
  4602  01A5                     u931:	
  4603  01A5  296C               	goto	l1487
  4604  01A6                     u930:	
  4605  01A6                     l197:	
  4606  01A6  0008               	return
  4607  01A7                     __end_of_drawBground:	
  4608                           
  4609                           	psect	text29
  4610  0433                     __ptext29:	
  4611 ;; *************** function ___awmod *****************
  4612 ;; Defined at:
  4613 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  4614 ;; Parameters:    Size  Location     Type
  4615 ;;  divisor         2   11[BANK0 ] int 
  4616 ;;  dividend        2   13[BANK0 ] int 
  4617 ;; Auto vars:     Size  Location     Type
  4618 ;;  sign            1   17[BANK0 ] unsigned char 
  4619 ;;  counter         1   16[BANK0 ] unsigned char 
  4620 ;; Return value:  Size  Location     Type
  4621 ;;                  2   11[BANK0 ] int 
  4622 ;; Registers used:
  4623 ;;		wreg, status,2, status,0
  4624 ;; Tracked objects:
  4625 ;;		On entry : 0/0
  4626 ;;		On exit  : 0/0
  4627 ;;		Unchanged: 0/0
  4628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4629 ;;      Params:         0       4       0       0       0
  4630 ;;      Locals:         0       2       0       0       0
  4631 ;;      Temps:          0       1       0       0       0
  4632 ;;      Totals:         0       7       0       0       0
  4633 ;;Total ram usage:        7 bytes
  4634 ;; Hardware stack levels used:    1
  4635 ;; Hardware stack levels required when called:    1
  4636 ;; This function calls:
  4637 ;;		Nothing
  4638 ;; This function is called by:
  4639 ;;		_main
  4640 ;;		_checkBottom
  4641 ;;		_checkColission_D
  4642 ;;		_perdio
  4643 ;; This function uses a non-reentrant model
  4644 ;;
  4645                           
  4646                           
  4647                           ;psect for function ___awmod
  4648  0433                     ___awmod:	
  4649  0433                     l1493:	
  4650                           ;incstack = 0
  4651                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4652                           
  4653  0433  1283               	bcf	3,5	;RP0=0, select bank0
  4654  0434  1303               	bcf	3,6	;RP1=0, select bank0
  4655  0435  01B1               	clrf	___awmod@sign
  4656  0436                     l1495:	
  4657  0436  1FAE               	btfss	___awmod@dividend+1,7
  4658  0437  2C39               	goto	u941
  4659  0438  2C3A               	goto	u940
  4660  0439                     u941:	
  4661  0439  2C41               	goto	l1501
  4662  043A                     u940:	
  4663  043A                     l1497:	
  4664  043A  09AD               	comf	___awmod@dividend,f
  4665  043B  09AE               	comf	___awmod@dividend+1,f
  4666  043C  0AAD               	incf	___awmod@dividend,f
  4667  043D  1903               	skipnz
  4668  043E  0AAE               	incf	___awmod@dividend+1,f
  4669  043F                     l1499:	
  4670  043F  01B1               	clrf	___awmod@sign
  4671  0440  0AB1               	incf	___awmod@sign,f
  4672  0441                     l1501:	
  4673  0441  1FAC               	btfss	___awmod@divisor+1,7
  4674  0442  2C44               	goto	u951
  4675  0443  2C45               	goto	u950
  4676  0444                     u951:	
  4677  0444  2C4A               	goto	l1505
  4678  0445                     u950:	
  4679  0445                     l1503:	
  4680  0445  09AB               	comf	___awmod@divisor,f
  4681  0446  09AC               	comf	___awmod@divisor+1,f
  4682  0447  0AAB               	incf	___awmod@divisor,f
  4683  0448  1903               	skipnz
  4684  0449  0AAC               	incf	___awmod@divisor+1,f
  4685  044A                     l1505:	
  4686  044A  082B               	movf	___awmod@divisor,w
  4687  044B  042C               	iorwf	___awmod@divisor+1,w
  4688  044C  1903               	btfsc	3,2
  4689  044D  2C4F               	goto	u961
  4690  044E  2C50               	goto	u960
  4691  044F                     u961:	
  4692  044F  2C7F               	goto	l1523
  4693  0450                     u960:	
  4694  0450                     l1507:	
  4695  0450  01B0               	clrf	___awmod@counter
  4696  0451  0AB0               	incf	___awmod@counter,f
  4697  0452  2C5E               	goto	l1513
  4698  0453                     l1509:	
  4699  0453  3001               	movlw	1
  4700  0454                     u975:	
  4701  0454  1003               	clrc
  4702  0455  0DAB               	rlf	___awmod@divisor,f
  4703  0456  0DAC               	rlf	___awmod@divisor+1,f
  4704  0457  3EFF               	addlw	-1
  4705  0458  1D03               	skipz
  4706  0459  2C54               	goto	u975
  4707  045A                     l1511:	
  4708  045A  3001               	movlw	1
  4709  045B  00AF               	movwf	??___awmod
  4710  045C  082F               	movf	??___awmod,w
  4711  045D  07B0               	addwf	___awmod@counter,f
  4712  045E                     l1513:	
  4713  045E  1FAC               	btfss	___awmod@divisor+1,7
  4714  045F  2C61               	goto	u981
  4715  0460  2C62               	goto	u980
  4716  0461                     u981:	
  4717  0461  2C53               	goto	l1509
  4718  0462                     u980:	
  4719  0462                     l1515:	
  4720  0462  082C               	movf	___awmod@divisor+1,w
  4721  0463  022E               	subwf	___awmod@dividend+1,w
  4722  0464  1D03               	skipz
  4723  0465  2C68               	goto	u995
  4724  0466  082B               	movf	___awmod@divisor,w
  4725  0467  022D               	subwf	___awmod@dividend,w
  4726  0468                     u995:	
  4727  0468  1C03               	skipc
  4728  0469  2C6B               	goto	u991
  4729  046A  2C6C               	goto	u990
  4730  046B                     u991:	
  4731  046B  2C72               	goto	l1519
  4732  046C                     u990:	
  4733  046C                     l1517:	
  4734  046C  082B               	movf	___awmod@divisor,w
  4735  046D  02AD               	subwf	___awmod@dividend,f
  4736  046E  082C               	movf	___awmod@divisor+1,w
  4737  046F  1C03               	skipc
  4738  0470  03AE               	decf	___awmod@dividend+1,f
  4739  0471  02AE               	subwf	___awmod@dividend+1,f
  4740  0472                     l1519:	
  4741  0472  3001               	movlw	1
  4742  0473                     u1005:	
  4743  0473  1003               	clrc
  4744  0474  0CAC               	rrf	___awmod@divisor+1,f
  4745  0475  0CAB               	rrf	___awmod@divisor,f
  4746  0476  3EFF               	addlw	-1
  4747  0477  1D03               	skipz
  4748  0478  2C73               	goto	u1005
  4749  0479                     l1521:	
  4750  0479  3001               	movlw	1
  4751  047A  02B0               	subwf	___awmod@counter,f
  4752  047B  1D03               	btfss	3,2
  4753  047C  2C7E               	goto	u1011
  4754  047D  2C7F               	goto	u1010
  4755  047E                     u1011:	
  4756  047E  2C62               	goto	l1515
  4757  047F                     u1010:	
  4758  047F                     l1523:	
  4759  047F  0831               	movf	___awmod@sign,w
  4760  0480  1903               	btfsc	3,2
  4761  0481  2C83               	goto	u1021
  4762  0482  2C84               	goto	u1020
  4763  0483                     u1021:	
  4764  0483  2C89               	goto	l1527
  4765  0484                     u1020:	
  4766  0484                     l1525:	
  4767  0484  09AD               	comf	___awmod@dividend,f
  4768  0485  09AE               	comf	___awmod@dividend+1,f
  4769  0486  0AAD               	incf	___awmod@dividend,f
  4770  0487  1903               	skipnz
  4771  0488  0AAE               	incf	___awmod@dividend+1,f
  4772  0489                     l1527:	
  4773  0489  082E               	movf	___awmod@dividend+1,w
  4774  048A  00AC               	movwf	?___awmod+1
  4775  048B  082D               	movf	___awmod@dividend,w
  4776  048C  00AB               	movwf	?___awmod
  4777  048D                     l527:	
  4778  048D  0008               	return
  4779  048E                     __end_of___awmod:	
  4780                           
  4781                           	psect	text30
  4782  0132                     __ptext30:	
  4783 ;; *************** function _Timer0_ISR *****************
  4784 ;; Defined at:
  4785 ;;		line 160 in file "mainsource.c"
  4786 ;; Parameters:    Size  Location     Type
  4787 ;;		None
  4788 ;; Auto vars:     Size  Location     Type
  4789 ;;		None
  4790 ;; Return value:  Size  Location     Type
  4791 ;;                  1    wreg      void 
  4792 ;; Registers used:
  4793 ;;		wreg, status,2
  4794 ;; Tracked objects:
  4795 ;;		On entry : 0/0
  4796 ;;		On exit  : 0/0
  4797 ;;		Unchanged: 0/0
  4798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4799 ;;      Params:         0       0       0       0       0
  4800 ;;      Locals:         0       0       0       0       0
  4801 ;;      Temps:          2       0       0       0       0
  4802 ;;      Totals:         2       0       0       0       0
  4803 ;;Total ram usage:        2 bytes
  4804 ;; Hardware stack levels used:    1
  4805 ;; This function calls:
  4806 ;;		Nothing
  4807 ;; This function is called by:
  4808 ;;		Interrupt level 1
  4809 ;; This function uses a non-reentrant model
  4810 ;;
  4811                           
  4812                           
  4813                           ;psect for function _Timer0_ISR
  4814  0132                     _Timer0_ISR:	
  4815  0132                     i1l1849:	
  4816                           
  4817                           ;mainsource.c: 161:     if(INTCONbits.TMR0IF){
  4818  0132  1D0B               	btfss	11,2	;volatile
  4819  0133  2935               	goto	u138_21
  4820  0134  2936               	goto	u138_20
  4821  0135                     u138_21:	
  4822  0135  2949               	goto	i1l1857
  4823  0136                     u138_20:	
  4824  0136                     i1l1851:	
  4825                           
  4826                           ;mainsource.c: 162:         INTCONbits.TMR0IF=0;
  4827  0136  110B               	bcf	11,2	;volatile
  4828  0137                     i1l1853:	
  4829                           
  4830                           ;mainsource.c: 163:         timerCount ++;
  4831  0137  3001               	movlw	1
  4832  0138  1283               	bcf	3,5	;RP0=0, select bank0
  4833  0139  1303               	bcf	3,6	;RP1=0, select bank0
  4834  013A  07D4               	addwf	_timerCount,f
  4835  013B  3000               	movlw	0
  4836  013C  1803               	skipnc
  4837  013D  3001               	movlw	1
  4838  013E  07D5               	addwf	_timerCount+1,f
  4839  013F  3000               	movlw	0
  4840  0140  1803               	skipnc
  4841  0141  3001               	movlw	1
  4842  0142  07D6               	addwf	_timerCount+2,f
  4843  0143  3000               	movlw	0
  4844  0144  1803               	skipnc
  4845  0145  3001               	movlw	1
  4846  0146  07D7               	addwf	_timerCount+3,f
  4847  0147                     i1l1855:	
  4848                           
  4849                           ;mainsource.c: 164:         con.check_count = 1;
  4850  0147  01CD               	clrf	_con+7
  4851  0148  0ACD               	incf	_con+7,f
  4852  0149                     i1l1857:	
  4853                           
  4854                           ;mainsource.c: 167:     if(PORTBbits.RB5 == 0){
  4855  0149  1283               	bcf	3,5	;RP0=0, select bank0
  4856  014A  1303               	bcf	3,6	;RP1=0, select bank0
  4857  014B  1A86               	btfsc	6,5	;volatile
  4858  014C  294E               	goto	u139_21
  4859  014D  294F               	goto	u139_20
  4860  014E                     u139_21:	
  4861  014E  2952               	goto	i1l1863
  4862  014F                     u139_20:	
  4863  014F                     i1l1859:	
  4864                           
  4865                           ;mainsource.c: 168:         con.derecha = 1;
  4866  014F  01CB               	clrf	_con+5
  4867  0150  0ACB               	incf	_con+5,f
  4868  0151                     i1l1861:	
  4869                           
  4870                           ;mainsource.c: 169:         con.izquierda = 0;
  4871  0151  01CC               	clrf	_con+6
  4872  0152                     i1l1863:	
  4873                           
  4874                           ;mainsource.c: 171:     if(PORTBbits.RB4 == 0){
  4875  0152  1A06               	btfsc	6,4	;volatile
  4876  0153  2955               	goto	u140_21
  4877  0154  2956               	goto	u140_20
  4878  0155                     u140_21:	
  4879  0155  2959               	goto	i1l1869
  4880  0156                     u140_20:	
  4881  0156                     i1l1865:	
  4882                           
  4883                           ;mainsource.c: 172:         con.derecha = 0;
  4884  0156  01CB               	clrf	_con+5
  4885  0157                     i1l1867:	
  4886                           
  4887                           ;mainsource.c: 173:         con.izquierda = 1;
  4888  0157  01CC               	clrf	_con+6
  4889  0158  0ACC               	incf	_con+6,f
  4890  0159                     i1l1869:	
  4891                           
  4892                           ;mainsource.c: 175:     if(PORTBbits.RB3== 0){
  4893  0159  1986               	btfsc	6,3	;volatile
  4894  015A  295C               	goto	u141_21
  4895  015B  295D               	goto	u141_20
  4896  015C                     u141_21:	
  4897  015C  295F               	goto	i1l129
  4898  015D                     u141_20:	
  4899  015D                     i1l1871:	
  4900                           
  4901                           ;mainsource.c: 176:         con.girar = 1;
  4902  015D  01C6               	clrf	_con
  4903  015E  0AC6               	incf	_con,f
  4904  015F                     i1l129:	
  4905  015F  0872               	movf	??_Timer0_ISR+1,w
  4906  0160  008A               	movwf	10
  4907  0161  0E71               	swapf	??_Timer0_ISR^(0+4294967168),w
  4908  0162  0083               	movwf	3
  4909  0163  0EFE               	swapf	btemp,f
  4910  0164  0E7E               	swapf	btemp,w
  4911  0165  0009               	retfie
  4912  0166                     __end_of_Timer0_ISR:	
  4913  007E                     btemp	set	126	;btemp
  4914  007E                     wtemp0	set	126
  4915                           
  4916                           	psect	intentry
  4917  0004                     __pintentry:	
  4918                           ;incstack = 0
  4919                           ; Regs used in _Timer0_ISR: [wreg+status,2]
  4920                           
  4921  0004                     interrupt_function:	
  4922  007E                     saved_w	set	btemp
  4923  0004  00FE               	movwf	btemp
  4924  0005  0E03               	swapf	3,w
  4925  0006  00F1               	movwf	??_Timer0_ISR
  4926  0007  080A               	movf	10,w
  4927  0008  00F2               	movwf	??_Timer0_ISR+1
  4928  0009  120A  118A  2932   	ljmp	_Timer0_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         66
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13     11      11
    BANK0            80     42      80
    BANK1            80      0      60
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(1) Largest target is 16
		 -> fondo(BANK1[16]), ficha(BANK0[16]), 

    memset@p	PTR unsigned char  size(1) Largest target is 16
		 -> fondo(BANK1[16]), ficha(BANK0[16]), 

    sp__memset	PTR void  size(1) Largest target is 16
		 -> fondo(BANK1[16]), ficha(BANK0[16]), 

    updateScreen@screen	PTR unsigned int  size(1) Largest target is 16
		 -> pantalla(BANK1[16]), 


Critical Paths under _main in COMMON

    _updateScreen->_addToScreen
    _checkCount->_sumaPuntos
    _leerEntradas->_checkColission_L
    _leerEntradas->_checkColission_R
    _drawFigure->_memset
    _checkColission_D->_drawBground
    _checkBottom->_drawBground
    _rand->___lmul

Critical Paths under _Timer0_ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_checkCount
    _updateScreen->_addToScreen
    _updateScreen->_setFilas
    _checkCount->_checkColission_D
    _perdio->___awmod
    _leerEntradas->_drawFigure
    _checkColission_D->___awmod
    _checkBottom->___awmod
    _rand->___lmul
    ___awmod->_rand

Critical Paths under _Timer0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer0_ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     5      4    8750
                                             33 BANK0      9     5      4
                            ___awmod
                         _checkCount
                         _init_pines
                         _init_timer
                               _rand
                              _srand
                       _updateScreen
 ---------------------------------------------------------------------------------
 (1) _updateScreen                                         7     7      0     590
                                              2 BANK0      7     7      0
                        _addToScreen
                           _setFilas
                    _shiftBitColumna
 ---------------------------------------------------------------------------------
 (2) _shiftBitColumna                                      2     2      0      22
                                              2 COMMON     2     2      0
                     _latchClock_Col
                     _latchClock_Fil
                     _shiftClock_Col
 ---------------------------------------------------------------------------------
 (3) _shiftClock_Col                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _latchClock_Fil                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _latchClock_Col                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setFilas                                            10     8      2     265
                                              2 COMMON     8     6      2
                                              0 BANK0      2     2      0
                     _shiftClock_Fil
 ---------------------------------------------------------------------------------
 (3) _shiftClock_Fil                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _addToScreen                                         11    11      0     113
                                              2 COMMON     9     9      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_pines                                           0     0      0       0
                     _init_pines_col
                     _init_pines_fil
                      _init_pines_in
 ---------------------------------------------------------------------------------
 (2) _init_pines_in                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_pines_fil                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_pines_col                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkCount                                           5     5      0    6912
                                             28 BANK0      5     5      0
                        _checkBottom
                   _checkColission_D
                         _drawFigure
                       _leerEntradas
                             _perdio
                         _sumaPuntos
 ---------------------------------------------------------------------------------
 (2) _sumaPuntos                                           9     9      0     184
                                              2 COMMON     9     9      0
 ---------------------------------------------------------------------------------
 (2) _perdio                                               5     5      0    1868
                                             18 BANK0      5     5      0
                            ___awmod
                             _memset
                               _rand
 ---------------------------------------------------------------------------------
 (2) _leerEntradas                                        16    16      0    1616
                                              5 BANK0     16    16      0
                   _checkColission_L
                   _checkColission_R
                         _checkRight
                         _drawFigure
 ---------------------------------------------------------------------------------
 (3) _drawFigure                                           5     5      0     651
                                              0 BANK0      5     5      0
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               7     3      4     651
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) _checkRight                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _checkColission_R                                    10    10      0      69
                                              2 COMMON     8     8      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _checkColission_L                                    10    10      0      69
                                              2 COMMON     8     8      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _checkColission_D                                    10    10      0    1330
                                             18 BANK0     10    10      0
                            ___awmod
                        _drawBground
                               _rand
 ---------------------------------------------------------------------------------
 (2) _checkBottom                                          1     1      0    1261
                                             18 BANK0      1     1      0
                            ___awmod
                        _drawBground
                               _rand
 ---------------------------------------------------------------------------------
 (1) _rand                                                 7     5      2     244
                                              4 BANK0      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     244
                                              2 COMMON     9     1      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _drawBground                                         11    11      0     113
                                              2 COMMON     9     9      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     904
                                             11 BANK0      7     3      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Timer0_ISR                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awmod
     _rand (ARG)
       ___lmul
   _checkCount
     _checkBottom
       ___awmod
         _rand (ARG)
           ___lmul
       _drawBground
       _rand
         ___lmul
     _checkColission_D
       ___awmod
         _rand (ARG)
           ___lmul
       _drawBground
       _rand
         ___lmul
     _drawFigure
       _memset
     _leerEntradas
       _checkColission_L
       _checkColission_R
       _checkRight
       _drawFigure
         _memset
     _perdio
       ___awmod
         _rand (ARG)
           ___lmul
       _memset
       _rand
         ___lmul
     _sumaPuntos
   _init_pines
     _init_pines_col
     _init_pines_fil
     _init_pines_in
   _init_timer
   _rand
     ___lmul
   _srand
   _updateScreen
     _addToScreen
     _setFilas
       _shiftClock_Fil
     _shiftBitColumna
       _latchClock_Col
       _latchClock_Fil
       _shiftClock_Col

 _Timer0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               55      0       0       9        0.0%
BITBANK3            55      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      3C       7       75.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2A      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               D      B       B       1       84.6%
BITCOMMON            D      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      97      12        0.0%
ABS                  0      0      97       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu May 14 21:38:10 2020

                        pc 0002                __CFG_CP$OFF 0000                         l21 0028  
                       l30 0082                         l24 0064                         l27 0095  
                       l36 0072               drawBground@i 0020                         fsr 0004  
         ??_init_pines_col 0073           ??_init_pines_fil 0073                        l110 07D0  
                      l200 0669                        l120 0432                        l220 0131  
                      l142 0300                        l134 0034                        l231 05CC  
                      l224 0057                        l152 003A                        l160 00C4  
                      l241 03CD                        l137 002E                        l234 021D  
                      l227 05B7                        l244 03E3                        l237 022B  
                      l149 0022                        l192 01E7                        l267 0556  
                      l275 02B9                        l187 04F0                        l197 01A6  
                      l527 048D                        l375 0397                        l814 004B  
                      l817 0272                        l809 0100               __CFG_CPD$OFF 0000  
                      u730 0100                        u731 00FF                        u740 035A  
                      u900 0054                        u741 0359                        u901 0053  
                      u805 05E3                        u910 03C5                        u814 05F4  
                      u751 0365                        u911 03C4                        u815 05F1  
                      u752 036C                        u920 03E2                        u753 0373  
                      u921 03E1                        u825 0607                        u930 01A6  
                      u834 0617                        u931 01A5                        u835 0614  
                      u940 043A                        u780 038D                        u941 0439  
                      u781 038C                        u765 0375                        u925 03DE  
                      u845 062A                        u950 0445                        u790 026A  
                      u854 063A                        u951 0444                        u935 01A2  
                      u775 037D                        u855 0637                        u960 0450  
                      u880 0215                        u961 044F                        u881 0214  
                      u865 064D                        u890 022A                        u874 065D  
                      u795 0265                        u891 0229                        u875 065A  
                      u980 0462                        u981 0461                        u990 046C  
                      u991 046B                        u975 0454                        u895 0226  
                      u995 0468                        _con 0046                        fsr0 0004  
                      indf 0000               ___awmod@sign 0031               __CFG_FOSC$XT 0000  
             __CFG_LVP$OFF 0000                       l1401 0356                       l1403 035A  
                     l1501 0441                       l1405 0373                       l1413 022C  
                     l1421 05CD                       l1511 045A                       l1503 0445  
                     l1407 037C                       l1415 024D                       l1431 01E8  
                     l1423 05DA                       l1521 0479                       l1513 045E  
                     l1505 044A                       l1409 038D                       l1417 025B  
                     l1441 0217                       l1433 01E8                       l1425 0600  
                     l1601 0753                       l1515 0462                       l1507 0450  
                     l1523 047F                       l1443 022A                       l1435 01F2  
                     l1427 0623                       l1611 0762                       l1603 075F  
                     l1531 0023                       l1525 0484                       l1517 046C  
                     l1509 0453                       l1461 03A2                       l1437 0215  
                     l1453 0056                       l1429 0646                       l1613 077C  
                     l1605 0760                       l1621 0795                       l1541 0678  
                     l1533 0058                       l1527 0489                       l1519 0472  
                     l1463 03C5                       l1447 004C                       l1391 00E2  
                     l1623 079A                       l1615 0782                       l1551 0680  
                     l1543 0678                       l1711 027B                       l1535 0083  
                     l1481 0166                       l1457 0398                       l1449 0054  
                     l1393 00E7                       l1641 07BF                       l1625 079B  
                     l1617 078F                       l1561 06C1                       l1545 067D  
                     l1537 066A                       l1721 02AC                       l1713 0293  
                     l1705 0279                       l1801 042D                       l1473 002F  
                     l1491 0199                       l1467 03C7                       l1459 0398  
                     l1395 00EE                       l1643 07C0                       l1563 06CE  
                     l1539 0670                       l1715 0299                       l1475 0029  
                     l1731 02F2                       l1723 02BA                       l1803 0491  
                     l1493 0433                       l1661 0117                       l1653 0101  
                     l1469 03E2                       l1397 00F2                       l1629 07B0  
                     l1637 07B5                       l1573 06E8                       l1565 06D6  
                     l1557 0684                       l1733 02F7                       l1725 02C0  
                     l1477 001E                       l1741 00BA                       l1821 04D5  
                     l1813 049A                       l1805 0491                       l1495 0436  
                     l1487 016C                       l1399 034C                       l1655 0108  
                     l1671 058C                       l1663 0557                       l1647 07CB  
                     l1639 07BA                       l1591 071F                       l1567 06E4  
                     l1559 06BB                       l1719 02A6                       l1751 01AD  
                     l1479 0035                       l1743 00BF                       l1823 04DB  
                     l1815 04A2                       l1807 0496                       l1831 030B  
                     l1497 043A                       l1489 0193                       l1657 010D  
                     l1673 0592                       l1665 0557                       l1593 0727  
                     l1585 06FC                       l1577 06F3                       l1761 0068  
                     l1753 01D4                       l1745 01A7                       l1729 02CE  
                     l1737 00AA                       l1825 04E3                       l1817 04B8  
                     l1841 0318                       l1833 030B                       l1499 043F  
                     l1659 0113                       l1675 0596                       l1667 0561  
                     l1587 070C                       l1579 06FA                       l1595 0734  
                     l1691 0528                       l1771 006F                       l1763 0069  
                     l1755 01DA                       l1739 00B5                       l1819 04BF  
                     l1843 0321                       l1835 030E                       l1827 0301  
                     l1669 0587                       l1677 05B1                       l1589 0712  
                     l1597 073C                       l1693 0543                       l1685 04F7  
                     l1781 03EB                       l1757 0073                       l1773 0070  
                     l1765 006A                       l1845 033D                       l1837 0312  
                     l1829 030B                       l1599 074B                       l1695 0549  
                     l1687 0508                       l1679 04F1                       l1791 0413  
                     l1783 03EE                       l1775 0071                       l1767 006B  
                     l1759 0065                       l1847 0342                       l1839 0316  
                     l1689 0522                       l1697 0273                       l1793 0419  
                     l1785 03F3                       l1769 006E                       l1777 0043  
                     l1699 0275                       l1795 041E                       l1787 0406  
                     l1779 03E4                       l1797 0423                       l1789 040E  
                     l1799 0428                       u1010 047F                       u1011 047E  
                     u1020 0484                       u1100 06FA                       u1021 0483  
                     u1005 0473                       u1101 06F9                       u1110 071F  
                     u1030 067D                       u1111 071E                       u1031 067C  
                     u1200 07BF                       u1120 0734                       u1201 07BE  
                     u1121 0733                       u1210 07CA                       u1130 074B  
                     u1211 07C9                       u1131 074A                       u1115 071B  
                     u1220 0108                       u1140 0753                       u1300 02CD  
                     u1221 0107                       u1141 0752                       u1125 0730  
                     u1045 0689                       u1301 02CC                       u1230 0587  
                     u1070 06CE                       u1054 069D                       u1231 0586  
                     u1135 0747                       u1071 06CD                       u1055 069B  
                     u1240 05CC                       u1160 078F                       u1080 06E3  
                     u1064 06B0                       u1241 05CB                       u1161 078E  
                     u1081 06E2                       u1065 06AE                       u1305 02C9  
                     u1170 079A                       u1090 06F2                       u1250 0508  
                     u1330 01E7                       u1314 02DA                       u1171 0799  
                     u1155 076D                       u1091 06F1                       u1075 06CA  
                     u1251 0507                       u1331 01E6                       u1315 02D7  
                     u1180 07AF                       u1260 0556                       u1340 03EB  
                     u1324 02E7                       u1245 05C8                       u1181 07AE  
                     u1165 078B                       u1085 06DF                       u1261 0555  
                     u1341 03EA                       u1325 02E4                       u1190 07BA  
                     u1350 0406                       u1191 07B9                       u1351 0405  
                     u1335 01E3                       u1280 02A6                       u1360 04A2  
                     u1265 0552                       u1281 02A5                       u1353 0402  
                     u1361 04A1                       u1290 02B9                       u1274 028B  
                     u1370 04F0                       u1291 02B8                       u1275 0288  
                     u1371 04EF                       u1285 02A2                       u1295 02B5  
                     u1375 04EC                       _TMR0 0001              ?_leerEntradas 0071  
             __CFG_WRT$OFF 0000                       _main 0301                       _rand 022C  
                     btemp 007E              __CFG_BOREN$ON 0000                       start 000C  
       shiftBitColumna@bit 0074                      ?_main 0041                      ?_rand 0024  
            __CFG_WDTE$OFF 0000            __end_of___awmod 048E                      i1l129 015F  
     __size_of_checkBottom 0031        ___lmul@multiplicand 0077                      _ficha 0058  
                    _fondo 00A0                      _randx 0068                      _srand 0043  
           ??_leerEntradas 0025                      pclath 000A                      status 0003  
                    wtemp0 007E            __initialization 07D1               __end_of_main 034C  
             __end_of_rand 0273             _latchClock_Fil 002F             _latchClock_Col 001E  
  __size_of_shiftClock_Fil 0006    __size_of_shiftClock_Col 0006          checkColission_D@i 003A  
        checkColission_L@i 0020                     ??_main 0045          checkColission_R@i 0020  
                   ??_rand 0026                     ?_srand 0073                     i1l1851 0136  
                   i1l1861 0151                     i1l1853 0137                     i1l1871 015D  
                   i1l1863 0152                     i1l1855 0147                     i1l1865 0156  
                   i1l1857 0149                     i1l1849 0132                     i1l1867 0157  
                   i1l1859 014F                     i1l1869 0159                     u140_20 0156  
                   u140_21 0155                     u141_20 015D                     u141_21 015C  
                   u138_20 0136                     u138_21 0135                     u139_20 014F  
                   u139_21 014E             __CFG_PWRTE$OFF 0000       __size_of_drawBground 0041  
               _Timer0_ISR 0132     __end_of_latchClock_Col 0023     __end_of_latchClock_Fil 0035  
                   ___lmul 034C                  ??___awmod 002F          ?_checkColission_D 0071  
        ?_checkColission_L 0071          ?_checkColission_R 0071                     _memset 00E1  
                   _perdio 04F1            ___awmod@divisor 002B            ___awmod@counter 0030  
       ??_checkColission_D 0032         ??_checkColission_L 0073           __end_of_setFilas 0301  
       ??_checkColission_R 0073               addToScreen@i 0020     __size_of_init_pines_in 0006  
                   saved_w 007E                     srand@x 0073    __end_of__initialization 07FC  
            updateScreen@i 0027   __size_of_shiftBitColumna 001C         updateScreen@screen 0026  
          ?_latchClock_Col 0071            ?_latchClock_Fil 0071             __pcstackCOMMON 0071  
             __pidataBANK0 001A               __pidataBANK1 00C5              __end_of_srand 004C  
     __end_of_leerEntradas 07D1             _OPTION_REGbits 0081          leerEntradas@F1199 0050  
               _checkCount 03E4                    ??_srand 0075                 _checkRight 004C  
               __pbssBANK0 0046                 __pbssBANK1 00A0              ??_addToScreen 0073  
            _init_pines_in 0023                ?_Timer0_ISR 0071            leerEntradas@aux 002D  
            leerEntradas@i 0033              leerEntradas@j 0031              leerEntradas@k 002A  
               __pmaintext 0301                    ?___lmul 0073                 __pintentry 0004  
           _shiftClock_Fil 0029             _shiftClock_Col 0035                    ?_memset 0073  
           ___lmul@product 0020                    ?_perdio 0071                 _drawFigure 05CD  
           ?_init_pines_in 0071                  ?_setFilas 0073     __end_of_shiftClock_Fil 002F  
   __end_of_shiftClock_Col 003B        __end_of_addToScreen 01E8            __size_of___lmul 004C  
                  ___awmod 0433          ??_shiftBitColumna 0073              ??_checkBottom 0032  
               _init_pines 0073                 _init_timer 0065            __size_of_memset 0020  
          __size_of_perdio 0066                    __ptext1 048E                    __ptext2 00A9  
                  __ptext3 0035                    __ptext4 002F                    __ptext5 001E  
                  __ptext6 02BA                    __ptext7 0029                    __ptext8 01A7  
                  __ptext9 0043                    _figuras 00C0           ___awmod@dividend 002D  
      __size_of_Timer0_ISR 0034                    clrloop0 003C                ?_checkCount 0071  
              ?_checkRight 0071       end_of_initialization 07FC    __size_of_init_pines_col 0013  
  __size_of_init_pines_fil 000D                    memset@c 0073                    memset@n 0075  
                  memset@p 0078                    perdio@i 0035                 ??_setFilas 0075  
    __size_of_leerEntradas 0167              sumaPuntos@aux 0077            ?_shiftClock_Col 0071  
          ?_shiftClock_Fil 0071                 _timerCount 0054                  _PORTBbits 0006  
                _PORTCbits 0007                  _PORTDbits 0008                ?_drawFigure 0071  
                _TRISBbits 0086        __end_of_checkBottom 0132                  _TRISCbits 0087  
                _TRISDbits 0088  __size_of_checkColission_D 0076  __size_of_checkColission_L 004C  
__size_of_checkColission_R 0044            ??_init_pines_in 0073                 _sumaPuntos 0273  
             _leerEntradas 066A              ??_drawBground 0073           ??_latchClock_Col 0073  
         ??_latchClock_Fil 0073                _addToScreen 01A7              ?_updateScreen 0071  
           __end_of___lmul 0398        __size_of_checkCount 004F                ?_init_pines 0071  
      __size_of_checkRight 000C                ?_init_timer 0071             __end_of_memset 0101  
           __end_of_perdio 0557        start_initialization 07D1             ??_updateScreen 0022  
             ??_Timer0_ISR 0071        __size_of_drawFigure 009D        __end_of_drawBground 01A7  
                 ??___lmul 007B          setFilas@reg_value 0073                 init_fetch0 0096  
              __pdataBANK0 0068                __pdataBANK1 00C0                   ??_memset 0077  
                 ??_perdio 0032                sumaPuntos@i 0078                sumaPuntos@j 007A  
              _checkBottom 0101                  ___latbits 0002              __pcstackBANK0 0020  
       __end_of_Timer0_ISR 0166             _init_pines_fil 0058             _init_pines_col 0083  
              ?_sumaPuntos 0071        __size_of_init_pines 0010            _shiftBitColumna 00A9  
      __size_of_init_timer 000E           leerEntradas@mask 002C          __size_of_setFilas 0047  
                 ?___awmod 002B     __end_of_init_pines_col 0096     __end_of_init_pines_fil 0065  
             ??_checkCount 003C           _checkColission_D 0557           _checkColission_L 0398  
         _checkColission_R 01E8               ??_checkRight 0073             __size_of_srand 0009  
        interrupt_function 0004                _drawBground 0166           ??_shiftClock_Col 0073  
         ??_shiftClock_Fil 0073                  clear_ram0 003B         __end_of_checkCount 0433  
      __size_of_sumaPuntos 0047         __end_of_checkRight 0058               ??_drawFigure 0020  
     __end_of_updateScreen 04F1            ?_init_pines_col 0071            ?_init_pines_fil 0071  
  __end_of_shiftBitColumna 00C5          ___lmul@multiplier 0073               ?_addToScreen 0071  
              checkCount@j 003F         __end_of_drawFigure 066A           __size_of___awmod 005B  
             ??_init_pines 0073               ??_init_timer 0073                  setFilas@i 0020  
                 __ptext10 0065                   __ptext11 0073                   __ptext20 00E1  
                 __ptext12 0023                   __ptext21 004C                   __ptext13 0058  
                 __ptext30 0132                   __ptext22 01E8                   __ptext14 0083  
                 __ptext23 0398                   __ptext15 03E4                   __ptext24 0557  
                 __ptext16 0273                   __ptext25 0101                   __ptext17 04F1  
                 __ptext26 022C                   __ptext18 066A                   __ptext27 034C  
                 __ptext19 05CD                   __ptext28 0166                   __ptext29 0433  
    __end_of_init_pines_in 0029              __size_of_main 004B              __size_of_rand 0047  
       __end_of_init_pines 0083         __end_of_init_timer 0073                   _pantalla 00B0  
                 _setFilas 02BA                   main@argc 0041                   main@argv 0043  
             ?_checkBottom 0071                 _INTCONbits 000B                   init_ram0 009A  
                 memset@p1 0079           ?_shiftBitColumna 0071               ??_sumaPuntos 0073  
                 intlevel1 0000   __end_of_checkColission_D 05CD   __end_of_checkColission_L 03E4  
 __end_of_checkColission_R 022C    __size_of_latchClock_Col 0005    __size_of_latchClock_Fil 0006  
    __size_of_updateScreen 0063         __end_of_sumaPuntos 02BA               ?_drawBground 0071  
     __size_of_addToScreen 0041               _updateScreen 048E  
