

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat May 02 00:04:33 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 2.10
    37                           ; Generated 31/07/2019 GMT
    38                           ; 
    39                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F877A Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0008                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000D                     	;# 
    84  000E                     	;# 
    85  000E                     	;# 
    86  000F                     	;# 
    87  0010                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0013                     	;# 
    91  0014                     	;# 
    92  0015                     	;# 
    93  0015                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001B                     	;# 
   100  001B                     	;# 
   101  001C                     	;# 
   102  001D                     	;# 
   103  001E                     	;# 
   104  001F                     	;# 
   105  0081                     	;# 
   106  0085                     	;# 
   107  0086                     	;# 
   108  0087                     	;# 
   109  0088                     	;# 
   110  0089                     	;# 
   111  008C                     	;# 
   112  008D                     	;# 
   113  008E                     	;# 
   114  0091                     	;# 
   115  0092                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  009F                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0098                     	;# 
   179  0099                     	;# 
   180  009C                     	;# 
   181  009D                     	;# 
   182  009E                     	;# 
   183  009F                     	;# 
   184  010C                     	;# 
   185  010D                     	;# 
   186  010E                     	;# 
   187  010F                     	;# 
   188  018C                     	;# 
   189  018D                     	;# 
   190  0000                     	;# 
   191  0001                     	;# 
   192  0002                     	;# 
   193  0003                     	;# 
   194  0004                     	;# 
   195  0005                     	;# 
   196  0006                     	;# 
   197  0007                     	;# 
   198  0008                     	;# 
   199  0009                     	;# 
   200  000A                     	;# 
   201  000B                     	;# 
   202  000C                     	;# 
   203  000D                     	;# 
   204  000E                     	;# 
   205  000E                     	;# 
   206  000F                     	;# 
   207  0010                     	;# 
   208  0011                     	;# 
   209  0012                     	;# 
   210  0013                     	;# 
   211  0014                     	;# 
   212  0015                     	;# 
   213  0015                     	;# 
   214  0016                     	;# 
   215  0017                     	;# 
   216  0018                     	;# 
   217  0019                     	;# 
   218  001A                     	;# 
   219  001B                     	;# 
   220  001B                     	;# 
   221  001C                     	;# 
   222  001D                     	;# 
   223  001E                     	;# 
   224  001F                     	;# 
   225  0081                     	;# 
   226  0085                     	;# 
   227  0086                     	;# 
   228  0087                     	;# 
   229  0088                     	;# 
   230  0089                     	;# 
   231  008C                     	;# 
   232  008D                     	;# 
   233  008E                     	;# 
   234  0091                     	;# 
   235  0092                     	;# 
   236  0093                     	;# 
   237  0094                     	;# 
   238  0098                     	;# 
   239  0099                     	;# 
   240  009C                     	;# 
   241  009D                     	;# 
   242  009E                     	;# 
   243  009F                     	;# 
   244  010C                     	;# 
   245  010D                     	;# 
   246  010E                     	;# 
   247  010F                     	;# 
   248  018C                     	;# 
   249  018D                     	;# 
   250  0000                     	;# 
   251  0001                     	;# 
   252  0002                     	;# 
   253  0003                     	;# 
   254  0004                     	;# 
   255  0005                     	;# 
   256  0006                     	;# 
   257  0007                     	;# 
   258  0008                     	;# 
   259  0009                     	;# 
   260  000A                     	;# 
   261  000B                     	;# 
   262  000C                     	;# 
   263  000D                     	;# 
   264  000E                     	;# 
   265  000E                     	;# 
   266  000F                     	;# 
   267  0010                     	;# 
   268  0011                     	;# 
   269  0012                     	;# 
   270  0013                     	;# 
   271  0014                     	;# 
   272  0015                     	;# 
   273  0015                     	;# 
   274  0016                     	;# 
   275  0017                     	;# 
   276  0018                     	;# 
   277  0019                     	;# 
   278  001A                     	;# 
   279  001B                     	;# 
   280  001B                     	;# 
   281  001C                     	;# 
   282  001D                     	;# 
   283  001E                     	;# 
   284  001F                     	;# 
   285  0081                     	;# 
   286  0085                     	;# 
   287  0086                     	;# 
   288  0087                     	;# 
   289  0088                     	;# 
   290  0089                     	;# 
   291  008C                     	;# 
   292  008D                     	;# 
   293  008E                     	;# 
   294  0091                     	;# 
   295  0092                     	;# 
   296  0093                     	;# 
   297  0094                     	;# 
   298  0098                     	;# 
   299  0099                     	;# 
   300  009C                     	;# 
   301  009D                     	;# 
   302  009E                     	;# 
   303  009F                     	;# 
   304  010C                     	;# 
   305  010D                     	;# 
   306  010E                     	;# 
   307  010F                     	;# 
   308  018C                     	;# 
   309  018D                     	;# 
   310  0000                     	;# 
   311  0001                     	;# 
   312  0002                     	;# 
   313  0003                     	;# 
   314  0004                     	;# 
   315  0005                     	;# 
   316  0006                     	;# 
   317  0007                     	;# 
   318  0008                     	;# 
   319  0009                     	;# 
   320  000A                     	;# 
   321  000B                     	;# 
   322  000C                     	;# 
   323  000D                     	;# 
   324  000E                     	;# 
   325  000E                     	;# 
   326  000F                     	;# 
   327  0010                     	;# 
   328  0011                     	;# 
   329  0012                     	;# 
   330  0013                     	;# 
   331  0014                     	;# 
   332  0015                     	;# 
   333  0015                     	;# 
   334  0016                     	;# 
   335  0017                     	;# 
   336  0018                     	;# 
   337  0019                     	;# 
   338  001A                     	;# 
   339  001B                     	;# 
   340  001B                     	;# 
   341  001C                     	;# 
   342  001D                     	;# 
   343  001E                     	;# 
   344  001F                     	;# 
   345  0081                     	;# 
   346  0085                     	;# 
   347  0086                     	;# 
   348  0087                     	;# 
   349  0088                     	;# 
   350  0089                     	;# 
   351  008C                     	;# 
   352  008D                     	;# 
   353  008E                     	;# 
   354  0091                     	;# 
   355  0092                     	;# 
   356  0093                     	;# 
   357  0094                     	;# 
   358  0098                     	;# 
   359  0099                     	;# 
   360  009C                     	;# 
   361  009D                     	;# 
   362  009E                     	;# 
   363  009F                     	;# 
   364  010C                     	;# 
   365  010D                     	;# 
   366  010E                     	;# 
   367  010F                     	;# 
   368  018C                     	;# 
   369  018D                     	;# 
   370  0000                     	;# 
   371  0001                     	;# 
   372  0002                     	;# 
   373  0003                     	;# 
   374  0004                     	;# 
   375  0005                     	;# 
   376  0006                     	;# 
   377  0007                     	;# 
   378  0008                     	;# 
   379  0009                     	;# 
   380  000A                     	;# 
   381  000B                     	;# 
   382  000C                     	;# 
   383  000D                     	;# 
   384  000E                     	;# 
   385  000E                     	;# 
   386  000F                     	;# 
   387  0010                     	;# 
   388  0011                     	;# 
   389  0012                     	;# 
   390  0013                     	;# 
   391  0014                     	;# 
   392  0015                     	;# 
   393  0015                     	;# 
   394  0016                     	;# 
   395  0017                     	;# 
   396  0018                     	;# 
   397  0019                     	;# 
   398  001A                     	;# 
   399  001B                     	;# 
   400  001B                     	;# 
   401  001C                     	;# 
   402  001D                     	;# 
   403  001E                     	;# 
   404  001F                     	;# 
   405  0081                     	;# 
   406  0085                     	;# 
   407  0086                     	;# 
   408  0087                     	;# 
   409  0088                     	;# 
   410  0089                     	;# 
   411  008C                     	;# 
   412  008D                     	;# 
   413  008E                     	;# 
   414  0091                     	;# 
   415  0092                     	;# 
   416  0093                     	;# 
   417  0094                     	;# 
   418  0098                     	;# 
   419  0099                     	;# 
   420  009C                     	;# 
   421  009D                     	;# 
   422  009E                     	;# 
   423  009F                     	;# 
   424  010C                     	;# 
   425  010D                     	;# 
   426  010E                     	;# 
   427  010F                     	;# 
   428  018C                     	;# 
   429  018D                     	;# 
   430                           
   431                           	psect	idataBANK0
   432  041C                     __pidataBANK0:	
   433                           
   434                           ;initializer for _randx
   435  041C  3401               	retlw	1
   436  041D  3400               	retlw	0
   437  041E  3400               	retlw	0
   438  041F  3400               	retlw	0
   439                           
   440                           ;initializer for _ficha_pos
   441  0420  3410               	retlw	16
   442                           
   443                           ;initializer for _columna
   444  0421  3401               	retlw	1
   445                           
   446                           	psect	idataBANK1
   447  05F6                     __pidataBANK1:	
   448                           
   449                           ;initializer for _figuras
   450  05F6  3402               	retlw	2
   451  05F7  3400               	retlw	0
   452  05F8  3402               	retlw	2
   453  05F9  3400               	retlw	0
   454  05FA  3403               	retlw	3
   455  05FB  3400               	retlw	0
   456  05FC  3400               	retlw	0
   457  05FD  3400               	retlw	0
   458  05FE  3400               	retlw	0
   459  05FF  3400               	retlw	0
   460  0600  3403               	retlw	3
   461  0601  3400               	retlw	0
   462  0602  3402               	retlw	2
   463  0603  3400               	retlw	0
   464  0604  3402               	retlw	2
   465  0605  3400               	retlw	0
   466  0606  3401               	retlw	1
   467  0607  3400               	retlw	0
   468  0608  3403               	retlw	3
   469  0609  3400               	retlw	0
   470  060A  3402               	retlw	2
   471  060B  3400               	retlw	0
   472  060C  3400               	retlw	0
   473  060D  3400               	retlw	0
   474  060E  3400               	retlw	0
   475  060F  3400               	retlw	0
   476  0610  3402               	retlw	2
   477  0611  3400               	retlw	0
   478  0612  3403               	retlw	3
   479  0613  3400               	retlw	0
   480  0614  3401               	retlw	1
   481  0615  3400               	retlw	0
   482  0616  3401               	retlw	1
   483  0617  3400               	retlw	0
   484  0618  3401               	retlw	1
   485  0619  3400               	retlw	0
   486  061A  3401               	retlw	1
   487  061B  3400               	retlw	0
   488  061C  3401               	retlw	1
   489  061D  3400               	retlw	0
   490  061E  3400               	retlw	0
   491  061F  3400               	retlw	0
   492  0620  3403               	retlw	3
   493  0621  3400               	retlw	0
   494  0622  3403               	retlw	3
   495  0623  3400               	retlw	0
   496  0624  3400               	retlw	0
   497  0625  3400               	retlw	0
   498                           
   499                           ;initializer for _test
   500  0626  34FF               	retlw	255
   501  0627  34FF               	retlw	255
   502  0628  34FF               	retlw	255
   503  0629  34FF               	retlw	255
   504  062A  34FF               	retlw	255
   505  062B  34FF               	retlw	255
   506  062C  34FF               	retlw	255
   507  062D  34FF               	retlw	255
   508  062E  34FF               	retlw	255
   509  062F  34FF               	retlw	255
   510  0630  34FF               	retlw	255
   511  0631  34FF               	retlw	255
   512  0632  34FF               	retlw	255
   513  0633  34FF               	retlw	255
   514  0634  34FF               	retlw	255
   515  0635  34FF               	retlw	255
   516                           
   517                           ;initializer for _corazon
   518  0636  3430               	retlw	48
   519  0637  3400               	retlw	0
   520  0638  3448               	retlw	72
   521  0639  3400               	retlw	0
   522  063A  3444               	retlw	68
   523  063B  3400               	retlw	0
   524  063C  3422               	retlw	34
   525  063D  3400               	retlw	0
   526  063E  3444               	retlw	68
   527  063F  3400               	retlw	0
   528  0640  3448               	retlw	72
   529  0641  3400               	retlw	0
   530  0642  3430               	retlw	48
   531  0643  3400               	retlw	0
   532  0644  3400               	retlw	0
   533  0645  3400               	retlw	0
   534  0001                     _TMR0	set	1
   535  000B                     _INTCONbits	set	11
   536  0008                     _PORTDbits	set	8
   537  0007                     _PORTCbits	set	7
   538  0006                     _PORTBbits	set	6
   539  0081                     _OPTION_REGbits	set	129
   540  0088                     _TRISDbits	set	136
   541  0087                     _TRISCbits	set	135
   542  0086                     _TRISBbits	set	134
   543                           
   544                           ; #config settings
   545  0000                     
   546                           	psect	cinit
   547  07D9                     start_initialization:	
   548  07D9                     __initialization:	
   549                           
   550                           ; Initialize objects allocated to BANK1
   551  07D9  1383               	bcf	3,7	;select IRP bank0
   552  07DA  30F0               	movlw	low (__pdataBANK1+80)
   553  07DB  00FD               	movwf	btemp+-1
   554  07DC  3005               	movlw	high __pidataBANK1
   555  07DD  00FE               	movwf	btemp
   556  07DE  30F6               	movlw	low __pidataBANK1
   557  07DF  00FF               	movwf	btemp+1
   558  07E0  30A0               	movlw	low __pdataBANK1
   559  07E1  0084               	movwf	4
   560  07E2  120A  118A  246F  120A  118A  	fcall	init_ram0
   561                           
   562                           ; Initialize objects allocated to BANK0
   563  07E7  305C               	movlw	low (__pdataBANK0+6)
   564  07E8  00FD               	movwf	btemp+-1
   565  07E9  3004               	movlw	high __pidataBANK0
   566  07EA  00FE               	movwf	btemp
   567  07EB  301C               	movlw	low __pidataBANK0
   568  07EC  00FF               	movwf	btemp+1
   569  07ED  3056               	movlw	low __pdataBANK0
   570  07EE  0084               	movwf	4
   571  07EF  120A  118A  246F  120A  118A  	fcall	init_ram0
   572                           
   573                           ; Clear objects allocated to BANK0
   574  07F4  3041               	movlw	low __pbssBANK0
   575  07F5  0084               	movwf	4
   576  07F6  3056               	movlw	low (__pbssBANK0+21)
   577  07F7  120A  118A  242A  120A  118A  	fcall	clear_ram0
   578  07FC                     end_of_initialization:	
   579                           ;End of C runtime variable initialization code
   580                           
   581  07FC                     __end_of__initialization:	
   582  07FC  0183               	clrf	3
   583  07FD  120A  118A  2F01   	ljmp	_main	;jump to C main() function
   584                           
   585                           	psect	bssBANK0
   586  0041                     __pbssBANK0:	
   587  0041                     _counter:	
   588  0041                     	ds	2
   589  0043                     _tecla:	
   590  0043                     	ds	1
   591  0044                     _ficha_actual:	
   592  0044                     	ds	1
   593  0045                     _led:	
   594  0045                     	ds	1
   595  0046                     _pantalla:	
   596  0046                     	ds	16
   597                           
   598                           	psect	dataBANK0
   599  0056                     __pdataBANK0:	
   600  0056                     _randx:	
   601  0056                     	ds	4
   602  005A                     _ficha_pos:	
   603  005A                     	ds	1
   604  005B                     _columna:	
   605  005B                     	ds	1
   606                           
   607                           	psect	dataBANK1
   608  00A0                     __pdataBANK1:	
   609  00A0                     _figuras:	
   610  00A0                     	ds	48
   611  00D0                     _test:	
   612  00D0                     	ds	16
   613  00E0                     _corazon:	
   614  00E0                     	ds	16
   615                           
   616                           	psect	inittext
   617  046B                     init_fetch0:	
   618                           ;	Called with low address in FSR and high address in W
   619                           
   620  046B  087E               	movf	btemp,w
   621  046C  008A               	movwf	10
   622  046D  087F               	movf	btemp+1,w
   623  046E  0082               	movwf	2
   624  046F                     init_ram0:	
   625                           ;Called with:
   626                           ;	high address of idata address in btemp 
   627                           ;	low address of idata address in btemp+1 
   628                           ;	low address of data in FSR
   629                           ;	high address + 1 of data in btemp-1
   630                           
   631  046F  120A  118A  246B  120A  118A  	fcall	init_fetch0
   632  0474  0080               	movwf	0
   633  0475  0A84               	incf	4,f
   634  0476  0804               	movf	4,w
   635  0477  067D               	xorwf	btemp+-1,w
   636  0478  1903               	btfsc	3,2
   637  0479  3400               	retlw	0
   638  047A  0AFF               	incf	btemp+1,f
   639  047B  1903               	btfsc	3,2
   640  047C  0AFE               	incf	btemp,f
   641  047D  2C6F               	goto	init_ram0
   642                           
   643                           	psect	clrtext
   644  042A                     clear_ram0:	
   645                           ;	Called with FSR containing the base address, and
   646                           ;	W with the last address+1
   647                           
   648  042A  0064               	clrwdt	;clear the watchdog before getting into this loop
   649  042B                     clrloop0:	
   650  042B  0180               	clrf	0	;clear RAM location pointed to by FSR
   651  042C  0A84               	incf	4,f	;increment pointer
   652  042D  0604               	xorwf	4,w	;XOR with final address
   653  042E  1903               	btfsc	3,2	;have we reached the end yet?
   654  042F  3400               	retlw	0	;all done for this memory range, return
   655  0430  0604               	xorwf	4,w	;XOR again to restore value
   656  0431  2C2B               	goto	clrloop0	;do the next byte
   657                           
   658                           	psect	cstackBANK3
   659  0190                     __pcstackBANK3:	
   660  0190                     ?_main:	
   661  0190                     main@argc:	
   662                           ; 2 bytes @ 0x0
   663                           
   664                           
   665                           ; 2 bytes @ 0x0
   666  0190                     	ds	2
   667  0192                     main@argv:	
   668                           
   669                           ; 2 bytes @ 0x2
   670  0192                     	ds	2
   671  0194                     ??_main:	
   672                           
   673                           ; 1 bytes @ 0x4
   674  0194                     	ds	4
   675                           
   676                           	psect	cstackCOMMON
   677  0071                     __pcstackCOMMON:	
   678  0071                     ?_setColumnas:	
   679  0071                     ?_updateScreen:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0071                     ?_shiftBitColumna:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0071                     ?_init_pines_fil:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0071                     ?_init_pines_col:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0071                     ?_init_pines:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0071                     ?_init_interrupt:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0071                     ?_init_timer:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0071                     ?_Timer0_ISR:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0071                     ?_latchClock_Fil:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0071                     ?_shiftClock_Fil:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0071                     ?_latchClock_Col:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0071                     ?_shiftClock_Col:	
   713                           ; 1 bytes @ 0x0
   714                           
   715  0071                     ?___lmul:	
   716                           ; 1 bytes @ 0x0
   717                           
   718  0071                     ___lmul@multiplier:	
   719                           ; 4 bytes @ 0x0
   720                           
   721                           
   722                           ; 4 bytes @ 0x0
   723  0071                     	ds	4
   724  0075                     ___lmul@multiplicand:	
   725                           
   726                           ; 4 bytes @ 0x4
   727  0075                     	ds	4
   728  0079                     ??___lmul:	
   729                           
   730                           ; 1 bytes @ 0x8
   731  0079                     	ds	1
   732  007A                     ___lmul@product:	
   733                           
   734                           ; 4 bytes @ 0x9
   735  007A                     	ds	4
   736                           
   737                           	psect	cstackBANK0
   738  0020                     __pcstackBANK0:	
   739  0020                     ?_rand:	
   740                           
   741                           ; 2 bytes @ 0x0
   742  0020                     	ds	2
   743  0022                     ??_rand:	
   744                           
   745                           ; 1 bytes @ 0x2
   746  0022                     	ds	5
   747  0027                     ?___awmod:	
   748  0027                     ___awmod@divisor:	
   749                           ; 2 bytes @ 0x7
   750                           
   751                           
   752                           ; 2 bytes @ 0x7
   753  0027                     	ds	2
   754  0029                     ___awmod@dividend:	
   755                           
   756                           ; 2 bytes @ 0x9
   757  0029                     	ds	2
   758  002B                     ??___awmod:	
   759                           
   760                           ; 1 bytes @ 0xB
   761  002B                     	ds	1
   762  002C                     ___awmod@counter:	
   763                           
   764                           ; 1 bytes @ 0xC
   765  002C                     	ds	1
   766  002D                     ___awmod@sign:	
   767                           
   768                           ; 1 bytes @ 0xD
   769  002D                     	ds	1
   770  002E                     ??_Timer0_ISR:	
   771                           
   772                           ; 1 bytes @ 0xE
   773  002E                     	ds	4
   774  0032                     ??_setColumnas:	
   775  0032                     ?_setFilas:	
   776                           ; 1 bytes @ 0x12
   777                           
   778  0032                     ??_shiftBitColumna:	
   779                           ; 1 bytes @ 0x12
   780                           
   781  0032                     ??_init_pines_fil:	
   782                           ; 1 bytes @ 0x12
   783                           
   784  0032                     ??_init_pines_col:	
   785                           ; 1 bytes @ 0x12
   786                           
   787  0032                     ??_init_pines:	
   788                           ; 1 bytes @ 0x12
   789                           
   790  0032                     ??_init_interrupt:	
   791                           ; 1 bytes @ 0x12
   792                           
   793  0032                     ??_init_timer:	
   794                           ; 1 bytes @ 0x12
   795                           
   796  0032                     ??_latchClock_Fil:	
   797                           ; 1 bytes @ 0x12
   798                           
   799  0032                     ??_shiftClock_Fil:	
   800                           ; 1 bytes @ 0x12
   801                           
   802  0032                     ??_latchClock_Col:	
   803                           ; 1 bytes @ 0x12
   804                           
   805  0032                     ??_shiftClock_Col:	
   806                           ; 1 bytes @ 0x12
   807                           
   808  0032                     setFilas@reg_value:	
   809                           ; 1 bytes @ 0x12
   810                           
   811                           
   812                           ; 2 bytes @ 0x12
   813  0032                     	ds	1
   814  0033                     shiftBitColumna@bit:	
   815                           
   816                           ; 1 bytes @ 0x13
   817  0033                     	ds	1
   818  0034                     ??_setFilas:	
   819                           
   820                           ; 1 bytes @ 0x14
   821  0034                     	ds	2
   822  0036                     setColumnas@valor:	
   823                           
   824                           ; 1 bytes @ 0x16
   825  0036                     	ds	1
   826  0037                     setColumnas@reg_value:	
   827                           
   828                           ; 1 bytes @ 0x17
   829  0037                     	ds	1
   830  0038                     setColumnas@i:	
   831                           
   832                           ; 2 bytes @ 0x18
   833  0038                     	ds	2
   834  003A                     setFilas@i:	
   835                           
   836                           ; 2 bytes @ 0x1A
   837  003A                     	ds	2
   838  003C                     ??_updateScreen:	
   839                           
   840                           ; 1 bytes @ 0x1C
   841  003C                     	ds	4
   842  0040                     updateScreen@screen:	
   843                           
   844                           ; 1 bytes @ 0x20
   845  0040                     	ds	1
   846                           
   847                           	psect	maintext
   848  0701                     __pmaintext:	
   849 ;;
   850 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   851 ;;
   852 ;; *************** function _main *****************
   853 ;; Defined at:
   854 ;;		line 82 in file "mainsource.c"
   855 ;; Parameters:    Size  Location     Type
   856 ;;  argc            2    0[BANK3 ] int 
   857 ;;  argv            2    2[BANK3 ] PTR PTR unsigned char 
   858 ;; Auto vars:     Size  Location     Type
   859 ;;  i               2    0        int 
   860 ;; Return value:  Size  Location     Type
   861 ;;                  2    0[BANK3 ] int 
   862 ;; Registers used:
   863 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   864 ;; Tracked objects:
   865 ;;		On entry : B00/0
   866 ;;		On exit  : 0/0
   867 ;;		Unchanged: 0/0
   868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   869 ;;      Params:         0       0       0       4       0
   870 ;;      Locals:         0       2       0       0       0
   871 ;;      Temps:          0       0       0       4       0
   872 ;;      Totals:         0       2       0       8       0
   873 ;;Total ram usage:       10 bytes
   874 ;; Hardware stack levels required when called:    6
   875 ;; This function calls:
   876 ;;		_init_interrupt
   877 ;;		_init_pines
   878 ;;		_init_timer
   879 ;;		_setColumnas
   880 ;;		_setFilas
   881 ;;		_updateScreen
   882 ;; This function is called by:
   883 ;;		Startup code after reset
   884 ;; This function uses a non-reentrant model
   885 ;;
   886                           
   887                           
   888                           ;psect for function _main
   889  0701                     _main:	
   890  0701                     l1133:	
   891                           ;incstack = 0
   892                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   893                           
   894                           
   895                           ;mainsource.c: 85:     init_pines();
   896  0701  120A  118A  2432  120A  118A  	fcall	_init_pines
   897                           
   898                           ;mainsource.c: 86:     init_interrupt();
   899  0706  120A  118A  2422  120A  118A  	fcall	_init_interrupt
   900                           
   901                           ;mainsource.c: 87:     init_timer();
   902  070B  120A  118A  244A  120A  118A  	fcall	_init_timer
   903  0710                     l1135:	
   904  0710                     l1137:	
   905                           
   906                           ;mainsource.c: 89:     setColumnas(0x00);
   907  0710  3000               	movlw	0
   908  0711  120A  118A  249A  120A  118A  	fcall	_setColumnas
   909  0716                     l1139:	
   910                           
   911                           ;mainsource.c: 90:     setFilas(0x0000);
   912  0716  3000               	movlw	0
   913  0717  1283               	bcf	3,5	;RP0=0, select bank0
   914  0718  1303               	bcf	3,6	;RP1=0, select bank0
   915  0719  00B2               	movwf	setFilas@reg_value
   916  071A  00B3               	movwf	setFilas@reg_value+1
   917  071B  120A  118A  25AF  120A  118A  	fcall	_setFilas
   918  0720                     l1141:	
   919                           
   920                           ;mainsource.c: 93:         pantalla[2]= figuras[ficha_actual][0] << (ficha_pos-1);
   921  0720  1283               	bcf	3,5	;RP0=0, select bank0
   922  0721  1303               	bcf	3,6	;RP1=0, select bank0
   923  0722  085A               	movf	_ficha_pos,w
   924  0723  3EFF               	addlw	-1
   925  0724  1683               	bsf	3,5	;RP0=1, select bank3
   926  0725  1703               	bsf	3,6	;RP1=1, select bank3
   927  0726  0094               	movwf	??_main^(0+384)
   928  0727  0A94               	incf	??_main^(0+384),f
   929  0728  1283               	bcf	3,5	;RP0=0, select bank0
   930  0729  1303               	bcf	3,6	;RP1=0, select bank0
   931  072A  0844               	movf	_ficha_actual,w
   932  072B  1683               	bsf	3,5	;RP0=1, select bank3
   933  072C  1703               	bsf	3,6	;RP1=1, select bank3
   934  072D  0095               	movwf	(??_main+1)^(0+384)
   935  072E  3002               	movlw	2
   936  072F                     u715:	
   937  072F  1003               	clrc
   938  0730  0D95               	rlf	(??_main+1)^(0+384),f
   939  0731  3EFF               	addlw	-1
   940  0732  1D03               	skipz
   941  0733  2F2F               	goto	u715
   942  0734  1003               	clrc
   943  0735  0D15               	rlf	(??_main+1)^(0+384),w
   944  0736  3EA0               	addlw	(low (_figuras| 0))& (0+255)
   945  0737  0084               	movwf	4
   946  0738  1383               	bcf	3,7	;select IRP bank1
   947  0739  0800               	movf	0,w
   948  073A  0096               	movwf	(??_main+2)^(0+384)
   949  073B  0A84               	incf	4,f
   950  073C  0800               	movf	0,w
   951  073D  0097               	movwf	((??_main+2)^(0+384)+1)
   952  073E  2F42               	goto	u724
   953  073F                     u725:	
   954  073F  1003               	clrc
   955  0740  0D96               	rlf	(??_main+2)^(0+384),f
   956  0741  0D97               	rlf	((??_main+2)^(0+384)+1),f
   957  0742                     u724:	
   958  0742  0B94               	decfsz	??_main^(0+384),f
   959  0743  2F3F               	goto	u725
   960  0744  0816               	movf	(??_main+2)^(0+384),w
   961  0745  1283               	bcf	3,5	;RP0=0, select bank0
   962  0746  1303               	bcf	3,6	;RP1=0, select bank0
   963  0747  00CA               	movwf	_pantalla+4
   964  0748  1683               	bsf	3,5	;RP0=1, select bank3
   965  0749  1703               	bsf	3,6	;RP1=1, select bank3
   966  074A  0817               	movf	(??_main+3)^(0+384),w
   967  074B  1283               	bcf	3,5	;RP0=0, select bank0
   968  074C  1303               	bcf	3,6	;RP1=0, select bank0
   969  074D  00CB               	movwf	_pantalla+5
   970  074E                     l1143:	
   971                           
   972                           ;mainsource.c: 94:         pantalla[3]= figuras[ficha_actual][1] << (ficha_pos-1);
   973  074E  085A               	movf	_ficha_pos,w
   974  074F  3EFF               	addlw	-1
   975  0750  1683               	bsf	3,5	;RP0=1, select bank3
   976  0751  1703               	bsf	3,6	;RP1=1, select bank3
   977  0752  0094               	movwf	??_main^(0+384)
   978  0753  0A94               	incf	??_main^(0+384),f
   979  0754  1283               	bcf	3,5	;RP0=0, select bank0
   980  0755  1303               	bcf	3,6	;RP1=0, select bank0
   981  0756  0844               	movf	_ficha_actual,w
   982  0757  1683               	bsf	3,5	;RP0=1, select bank3
   983  0758  1703               	bsf	3,6	;RP1=1, select bank3
   984  0759  0095               	movwf	(??_main+1)^(0+384)
   985  075A  3002               	movlw	2
   986  075B                     u735:	
   987  075B  1003               	clrc
   988  075C  0D95               	rlf	(??_main+1)^(0+384),f
   989  075D  3EFF               	addlw	-1
   990  075E  1D03               	skipz
   991  075F  2F5B               	goto	u735
   992  0760  1003               	clrc
   993  0761  0D15               	rlf	(??_main+1)^(0+384),w
   994  0762  3EA2               	addlw	(low ((_figuras| 0+2)))& (0+255)
   995  0763  0084               	movwf	4
   996  0764  0800               	movf	0,w
   997  0765  0096               	movwf	(??_main+2)^(0+384)
   998  0766  0A84               	incf	4,f
   999  0767  0800               	movf	0,w
  1000  0768  0097               	movwf	((??_main+2)^(0+384)+1)
  1001  0769  2F6D               	goto	u744
  1002  076A                     u745:	
  1003  076A  1003               	clrc
  1004  076B  0D96               	rlf	(??_main+2)^(0+384),f
  1005  076C  0D97               	rlf	((??_main+2)^(0+384)+1),f
  1006  076D                     u744:	
  1007  076D  0B94               	decfsz	??_main^(0+384),f
  1008  076E  2F6A               	goto	u745
  1009  076F  0816               	movf	(??_main+2)^(0+384),w
  1010  0770  1283               	bcf	3,5	;RP0=0, select bank0
  1011  0771  1303               	bcf	3,6	;RP1=0, select bank0
  1012  0772  00CC               	movwf	_pantalla+6
  1013  0773  1683               	bsf	3,5	;RP0=1, select bank3
  1014  0774  1703               	bsf	3,6	;RP1=1, select bank3
  1015  0775  0817               	movf	(??_main+3)^(0+384),w
  1016  0776  1283               	bcf	3,5	;RP0=0, select bank0
  1017  0777  1303               	bcf	3,6	;RP1=0, select bank0
  1018  0778  00CD               	movwf	_pantalla+7
  1019  0779                     l1145:	
  1020                           
  1021                           ;mainsource.c: 95:         pantalla[4]= figuras[ficha_actual][2] << (ficha_pos-1);
  1022  0779  085A               	movf	_ficha_pos,w
  1023  077A  3EFF               	addlw	-1
  1024  077B  1683               	bsf	3,5	;RP0=1, select bank3
  1025  077C  1703               	bsf	3,6	;RP1=1, select bank3
  1026  077D  0094               	movwf	??_main^(0+384)
  1027  077E  0A94               	incf	??_main^(0+384),f
  1028  077F  1283               	bcf	3,5	;RP0=0, select bank0
  1029  0780  1303               	bcf	3,6	;RP1=0, select bank0
  1030  0781  0844               	movf	_ficha_actual,w
  1031  0782  1683               	bsf	3,5	;RP0=1, select bank3
  1032  0783  1703               	bsf	3,6	;RP1=1, select bank3
  1033  0784  0095               	movwf	(??_main+1)^(0+384)
  1034  0785  3002               	movlw	2
  1035  0786                     u755:	
  1036  0786  1003               	clrc
  1037  0787  0D95               	rlf	(??_main+1)^(0+384),f
  1038  0788  3EFF               	addlw	-1
  1039  0789  1D03               	skipz
  1040  078A  2F86               	goto	u755
  1041  078B  1003               	clrc
  1042  078C  0D15               	rlf	(??_main+1)^(0+384),w
  1043  078D  3EA4               	addlw	(low ((_figuras| 0+4)))& (0+255)
  1044  078E  0084               	movwf	4
  1045  078F  0800               	movf	0,w
  1046  0790  0096               	movwf	(??_main+2)^(0+384)
  1047  0791  0A84               	incf	4,f
  1048  0792  0800               	movf	0,w
  1049  0793  0097               	movwf	((??_main+2)^(0+384)+1)
  1050  0794  2F98               	goto	u764
  1051  0795                     u765:	
  1052  0795  1003               	clrc
  1053  0796  0D96               	rlf	(??_main+2)^(0+384),f
  1054  0797  0D97               	rlf	((??_main+2)^(0+384)+1),f
  1055  0798                     u764:	
  1056  0798  0B94               	decfsz	??_main^(0+384),f
  1057  0799  2F95               	goto	u765
  1058  079A  0816               	movf	(??_main+2)^(0+384),w
  1059  079B  1283               	bcf	3,5	;RP0=0, select bank0
  1060  079C  1303               	bcf	3,6	;RP1=0, select bank0
  1061  079D  00CE               	movwf	_pantalla+8
  1062  079E  1683               	bsf	3,5	;RP0=1, select bank3
  1063  079F  1703               	bsf	3,6	;RP1=1, select bank3
  1064  07A0  0817               	movf	(??_main+3)^(0+384),w
  1065  07A1  1283               	bcf	3,5	;RP0=0, select bank0
  1066  07A2  1303               	bcf	3,6	;RP1=0, select bank0
  1067  07A3  00CF               	movwf	_pantalla+9
  1068  07A4                     l1147:	
  1069                           
  1070                           ;mainsource.c: 96:         pantalla[5]= figuras[ficha_actual][3] << (ficha_pos-1);
  1071  07A4  085A               	movf	_ficha_pos,w
  1072  07A5  3EFF               	addlw	-1
  1073  07A6  1683               	bsf	3,5	;RP0=1, select bank3
  1074  07A7  1703               	bsf	3,6	;RP1=1, select bank3
  1075  07A8  0094               	movwf	??_main^(0+384)
  1076  07A9  0A94               	incf	??_main^(0+384),f
  1077  07AA  1283               	bcf	3,5	;RP0=0, select bank0
  1078  07AB  1303               	bcf	3,6	;RP1=0, select bank0
  1079  07AC  0844               	movf	_ficha_actual,w
  1080  07AD  1683               	bsf	3,5	;RP0=1, select bank3
  1081  07AE  1703               	bsf	3,6	;RP1=1, select bank3
  1082  07AF  0095               	movwf	(??_main+1)^(0+384)
  1083  07B0  3002               	movlw	2
  1084  07B1                     u775:	
  1085  07B1  1003               	clrc
  1086  07B2  0D95               	rlf	(??_main+1)^(0+384),f
  1087  07B3  3EFF               	addlw	-1
  1088  07B4  1D03               	skipz
  1089  07B5  2FB1               	goto	u775
  1090  07B6  1003               	clrc
  1091  07B7  0D15               	rlf	(??_main+1)^(0+384),w
  1092  07B8  3EA6               	addlw	(low ((_figuras| 0+6)))& (0+255)
  1093  07B9  0084               	movwf	4
  1094  07BA  0800               	movf	0,w
  1095  07BB  0096               	movwf	(??_main+2)^(0+384)
  1096  07BC  0A84               	incf	4,f
  1097  07BD  0800               	movf	0,w
  1098  07BE  0097               	movwf	((??_main+2)^(0+384)+1)
  1099  07BF  2FC3               	goto	u784
  1100  07C0                     u785:	
  1101  07C0  1003               	clrc
  1102  07C1  0D96               	rlf	(??_main+2)^(0+384),f
  1103  07C2  0D97               	rlf	((??_main+2)^(0+384)+1),f
  1104  07C3                     u784:	
  1105  07C3  0B94               	decfsz	??_main^(0+384),f
  1106  07C4  2FC0               	goto	u785
  1107  07C5  0816               	movf	(??_main+2)^(0+384),w
  1108  07C6  1283               	bcf	3,5	;RP0=0, select bank0
  1109  07C7  1303               	bcf	3,6	;RP1=0, select bank0
  1110  07C8  00D0               	movwf	_pantalla+10
  1111  07C9  1683               	bsf	3,5	;RP0=1, select bank3
  1112  07CA  1703               	bsf	3,6	;RP1=1, select bank3
  1113  07CB  0817               	movf	(??_main+3)^(0+384),w
  1114  07CC  1283               	bcf	3,5	;RP0=0, select bank0
  1115  07CD  1303               	bcf	3,6	;RP1=0, select bank0
  1116  07CE  00D1               	movwf	_pantalla+11
  1117  07CF                     l1149:	
  1118                           
  1119                           ;mainsource.c: 98:         updateScreen(pantalla);
  1120  07CF  3046               	movlw	(low (_pantalla| 0))& (0+255)
  1121  07D0  120A  118A  24DD  120A  118A  	fcall	_updateScreen
  1122  07D5  2F20               	goto	l1141
  1123  07D6  120A  118A  2810   	ljmp	start
  1124  07D9                     __end_of_main:	
  1125                           
  1126                           	psect	text1
  1127  04DD                     __ptext1:	
  1128 ;; *************** function _updateScreen *****************
  1129 ;; Defined at:
  1130 ;;		line 106 in file "mainsource.c"
  1131 ;; Parameters:    Size  Location     Type
  1132 ;;  screen          1    wreg     PTR unsigned int 
  1133 ;;		 -> pantalla(16), 
  1134 ;; Auto vars:     Size  Location     Type
  1135 ;;  screen          1   32[BANK0 ] PTR unsigned int 
  1136 ;;		 -> pantalla(16), 
  1137 ;; Return value:  Size  Location     Type
  1138 ;;                  1    wreg      void 
  1139 ;; Registers used:
  1140 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1141 ;; Tracked objects:
  1142 ;;		On entry : 0/0
  1143 ;;		On exit  : 0/0
  1144 ;;		Unchanged: 0/0
  1145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1146 ;;      Params:         0       0       0       0       0
  1147 ;;      Locals:         0       1       0       0       0
  1148 ;;      Temps:          0       4       0       0       0
  1149 ;;      Totals:         0       5       0       0       0
  1150 ;;Total ram usage:        5 bytes
  1151 ;; Hardware stack levels used:    1
  1152 ;; Hardware stack levels required when called:    5
  1153 ;; This function calls:
  1154 ;;		_setFilas
  1155 ;;		_shiftBitColumna
  1156 ;; This function is called by:
  1157 ;;		_main
  1158 ;; This function uses a non-reentrant model
  1159 ;;
  1160                           
  1161                           
  1162                           ;psect for function _updateScreen
  1163  04DD                     _updateScreen:	
  1164                           
  1165                           ;incstack = 0
  1166                           ; Regs used in _updateScreen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1167                           ;updateScreen@screen stored from wreg
  1168  04DD  1283               	bcf	3,5	;RP0=0, select bank0
  1169  04DE  1303               	bcf	3,6	;RP1=0, select bank0
  1170  04DF  00C0               	movwf	updateScreen@screen
  1171  04E0                     l1037:	
  1172                           
  1173                           ;mainsource.c: 107:     if(columna == 9){
  1174  04E0  3009               	movlw	9
  1175  04E1  065B               	xorwf	_columna,w
  1176  04E2  1D03               	btfss	3,2
  1177  04E3  2CE5               	goto	u481
  1178  04E4  2CE6               	goto	u480
  1179  04E5                     u481:	
  1180  04E5  2D00               	goto	l1045
  1181  04E6                     u480:	
  1182  04E6                     l1039:	
  1183                           
  1184                           ;mainsource.c: 108:         columna=1;
  1185  04E6  01DB               	clrf	_columna
  1186  04E7  0ADB               	incf	_columna,f
  1187  04E8                     l1041:	
  1188                           
  1189                           ;mainsource.c: 109:         setFilas(~screen[columna-1]);
  1190  04E8  0840               	movf	updateScreen@screen,w
  1191  04E9  0084               	movwf	4
  1192  04EA  1383               	bcf	3,7	;select IRP bank0
  1193  04EB  0800               	movf	0,w
  1194  04EC  00BC               	movwf	??_updateScreen
  1195  04ED  0A84               	incf	4,f
  1196  04EE  0800               	movf	0,w
  1197  04EF  00BD               	movwf	??_updateScreen+1
  1198  04F0  093C               	comf	??_updateScreen,w
  1199  04F1  00B2               	movwf	setFilas@reg_value
  1200  04F2  093D               	comf	??_updateScreen+1,w
  1201  04F3  00B3               	movwf	setFilas@reg_value+1
  1202  04F4  120A  118A  25AF  120A  118A  	fcall	_setFilas
  1203  04F9                     l1043:	
  1204                           
  1205                           ;mainsource.c: 110:         shiftBitColumna(1);
  1206  04F9  3001               	movlw	1
  1207  04FA  120A  118A  247E  120A  118A  	fcall	_shiftBitColumna
  1208                           
  1209                           ;mainsource.c: 111:     }
  1210  04FF  2D21               	goto	l100
  1211  0500                     l1045:	
  1212                           
  1213                           ;mainsource.c: 113:         columna++;
  1214  0500  3001               	movlw	1
  1215  0501  00BC               	movwf	??_updateScreen
  1216  0502  083C               	movf	??_updateScreen,w
  1217  0503  07DB               	addwf	_columna,f
  1218  0504                     l1047:	
  1219                           
  1220                           ;mainsource.c: 114:         setFilas(~screen[columna-1]);
  1221  0504  085B               	movf	_columna,w
  1222  0505  00BC               	movwf	??_updateScreen
  1223  0506  073C               	addwf	??_updateScreen,w
  1224  0507  0740               	addwf	updateScreen@screen,w
  1225  0508  00BD               	movwf	??_updateScreen+1
  1226  0509  083D               	movf	??_updateScreen+1,w
  1227  050A  3EFE               	addlw	-2
  1228  050B  0084               	movwf	4
  1229  050C  1383               	bcf	3,7	;select IRP bank0
  1230  050D  0800               	movf	0,w
  1231  050E  00BE               	movwf	??_updateScreen+2
  1232  050F  0A84               	incf	4,f
  1233  0510  0800               	movf	0,w
  1234  0511  00BF               	movwf	??_updateScreen+3
  1235  0512  093E               	comf	??_updateScreen+2,w
  1236  0513  00B2               	movwf	setFilas@reg_value
  1237  0514  093F               	comf	??_updateScreen+3,w
  1238  0515  00B3               	movwf	setFilas@reg_value+1
  1239  0516  120A  118A  25AF  120A  118A  	fcall	_setFilas
  1240  051B                     l1049:	
  1241                           
  1242                           ;mainsource.c: 115:         shiftBitColumna(0);
  1243  051B  3000               	movlw	0
  1244  051C  120A  118A  247E  120A  118A  	fcall	_shiftBitColumna
  1245  0521                     l100:	
  1246  0521  0008               	return
  1247  0522                     __end_of_updateScreen:	
  1248                           
  1249                           	psect	text2
  1250  047E                     __ptext2:	
  1251 ;; *************** function _shiftBitColumna *****************
  1252 ;; Defined at:
  1253 ;;		line 32 in file "columnas.c"
  1254 ;; Parameters:    Size  Location     Type
  1255 ;;  bit             1    wreg     unsigned char 
  1256 ;; Auto vars:     Size  Location     Type
  1257 ;;  bit             1   19[BANK0 ] unsigned char 
  1258 ;; Return value:  Size  Location     Type
  1259 ;;                  1    wreg      void 
  1260 ;; Registers used:
  1261 ;;		wreg, status,2, status,0, pclath, cstack
  1262 ;; Tracked objects:
  1263 ;;		On entry : 0/0
  1264 ;;		On exit  : 0/0
  1265 ;;		Unchanged: 0/0
  1266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1267 ;;      Params:         0       0       0       0       0
  1268 ;;      Locals:         0       1       0       0       0
  1269 ;;      Temps:          0       1       0       0       0
  1270 ;;      Totals:         0       2       0       0       0
  1271 ;;Total ram usage:        2 bytes
  1272 ;; Hardware stack levels used:    1
  1273 ;; Hardware stack levels required when called:    4
  1274 ;; This function calls:
  1275 ;;		_latchClock_Col
  1276 ;;		_latchClock_Fil
  1277 ;;		_shiftClock_Col
  1278 ;; This function is called by:
  1279 ;;		_updateScreen
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282                           
  1283                           
  1284                           ;psect for function _shiftBitColumna
  1285  047E                     _shiftBitColumna:	
  1286                           
  1287                           ;incstack = 0
  1288                           ; Regs used in _shiftBitColumna: [wreg+status,2+status,0+pclath+cstack]
  1289                           ;shiftBitColumna@bit stored from wreg
  1290  047E  1283               	bcf	3,5	;RP0=0, select bank0
  1291  047F  1303               	bcf	3,6	;RP1=0, select bank0
  1292  0480  00B3               	movwf	shiftBitColumna@bit
  1293  0481                     l959:	
  1294                           
  1295                           ;columnas.c: 33:     PORTDbits.RD4= bit & 0x01;
  1296  0481  0833               	movf	shiftBitColumna@bit,w
  1297  0482  3901               	andlw	1
  1298  0483  00B2               	movwf	??_shiftBitColumna
  1299  0484  0EB2               	swapf	??_shiftBitColumna,f
  1300  0485  0808               	movf	8,w	;volatile
  1301  0486  0632               	xorwf	??_shiftBitColumna,w
  1302  0487  39EF               	andlw	-17
  1303  0488  0632               	xorwf	??_shiftBitColumna,w
  1304  0489  0088               	movwf	8	;volatile
  1305  048A                     l961:	
  1306                           
  1307                           ;columnas.c: 34:     shiftClock_Col();
  1308  048A  120A  118A  240A  120A  118A  	fcall	_shiftClock_Col
  1309  048F                     l963:	
  1310                           
  1311                           ;columnas.c: 35:     latchClock_Col();
  1312  048F  120A  118A  2405  120A  118A  	fcall	_latchClock_Col
  1313  0494                     l965:	
  1314                           
  1315                           ;columnas.c: 36:     latchClock_Fil();
  1316  0494  120A  118A  2416  120A  118A  	fcall	_latchClock_Fil
  1317  0499                     l131:	
  1318  0499  0008               	return
  1319  049A                     __end_of_shiftBitColumna:	
  1320                           
  1321                           	psect	text3
  1322  0416                     __ptext3:	
  1323 ;; *************** function _latchClock_Fil *****************
  1324 ;; Defined at:
  1325 ;;		line 7 in file "filas.c"
  1326 ;; Parameters:    Size  Location     Type
  1327 ;;		None
  1328 ;; Auto vars:     Size  Location     Type
  1329 ;;		None
  1330 ;; Return value:  Size  Location     Type
  1331 ;;                  1    wreg      void 
  1332 ;; Registers used:
  1333 ;;		None
  1334 ;; Tracked objects:
  1335 ;;		On entry : 0/0
  1336 ;;		On exit  : 0/0
  1337 ;;		Unchanged: 0/0
  1338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1339 ;;      Params:         0       0       0       0       0
  1340 ;;      Locals:         0       0       0       0       0
  1341 ;;      Temps:          0       0       0       0       0
  1342 ;;      Totals:         0       0       0       0       0
  1343 ;;Total ram usage:        0 bytes
  1344 ;; Hardware stack levels used:    1
  1345 ;; Hardware stack levels required when called:    3
  1346 ;; This function calls:
  1347 ;;		Nothing
  1348 ;; This function is called by:
  1349 ;;		_shiftBitColumna
  1350 ;; This function uses a non-reentrant model
  1351 ;;
  1352                           
  1353                           
  1354                           ;psect for function _latchClock_Fil
  1355  0416                     _latchClock_Fil:	
  1356  0416                     l933:	
  1357                           ;incstack = 0
  1358                           ; Regs used in _latchClock_Fil: []
  1359                           
  1360                           
  1361                           ;filas.c: 8:     PORTCbits.RC6 = 0;
  1362  0416  1283               	bcf	3,5	;RP0=0, select bank0
  1363  0417  1303               	bcf	3,6	;RP1=0, select bank0
  1364  0418  1307               	bcf	7,6	;volatile
  1365                           
  1366                           ;filas.c: 9:     PORTCbits.RC6 = 1;
  1367  0419  1707               	bsf	7,6	;volatile
  1368                           
  1369                           ;filas.c: 10:     PORTCbits.RC6 = 0;
  1370  041A  1307               	bcf	7,6	;volatile
  1371  041B                     l105:	
  1372  041B  0008               	return
  1373  041C                     __end_of_latchClock_Fil:	
  1374                           
  1375                           	psect	text4
  1376  05AF                     __ptext4:	
  1377 ;; *************** function _setFilas *****************
  1378 ;; Defined at:
  1379 ;;		line 19 in file "filas.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;  reg_value       2   18[BANK0 ] unsigned int 
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;  i               2   26[BANK0 ] int 
  1384 ;; Return value:  Size  Location     Type
  1385 ;;                  1    wreg      void 
  1386 ;; Registers used:
  1387 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1388 ;; Tracked objects:
  1389 ;;		On entry : 0/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1393 ;;      Params:         0       2       0       0       0
  1394 ;;      Locals:         0       2       0       0       0
  1395 ;;      Temps:          0       6       0       0       0
  1396 ;;      Totals:         0      10       0       0       0
  1397 ;;Total ram usage:       10 bytes
  1398 ;; Hardware stack levels used:    1
  1399 ;; Hardware stack levels required when called:    4
  1400 ;; This function calls:
  1401 ;;		_shiftClock_Fil
  1402 ;; This function is called by:
  1403 ;;		_main
  1404 ;;		_updateScreen
  1405 ;; This function uses a non-reentrant model
  1406 ;;
  1407                           
  1408                           
  1409                           ;psect for function _setFilas
  1410  05AF                     _setFilas:	
  1411  05AF                     l945:	
  1412                           ;incstack = 0
  1413                           ; Regs used in _setFilas: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1414                           
  1415                           
  1416                           ;filas.c: 20:     int i = 0;
  1417  05AF  1283               	bcf	3,5	;RP0=0, select bank0
  1418  05B0  1303               	bcf	3,6	;RP1=0, select bank0
  1419  05B1  01BA               	clrf	setFilas@i
  1420  05B2  01BB               	clrf	setFilas@i+1
  1421                           
  1422                           ;filas.c: 21:     for(i=0;i<16;i++){
  1423  05B3  01BA               	clrf	setFilas@i
  1424  05B4  01BB               	clrf	setFilas@i+1
  1425  05B5                     l947:	
  1426  05B5  083B               	movf	setFilas@i+1,w
  1427  05B6  3A80               	xorlw	128
  1428  05B7  00FF               	movwf	btemp+1
  1429  05B8  3080               	movlw	128
  1430  05B9  027F               	subwf	btemp+1,w
  1431  05BA  1D03               	skipz
  1432  05BB  2DBE               	goto	u365
  1433  05BC  3010               	movlw	16
  1434  05BD  023A               	subwf	setFilas@i,w
  1435  05BE                     u365:	
  1436  05BE  1C03               	skipc
  1437  05BF  2DC1               	goto	u361
  1438  05C0  2DC2               	goto	u360
  1439  05C1                     u361:	
  1440  05C1  2DC3               	goto	l951
  1441  05C2                     u360:	
  1442  05C2  2DF5               	goto	l113
  1443  05C3                     l951:	
  1444                           
  1445                           ;filas.c: 22:         PORTCbits.RC4 = (reg_value & (1<<i) )>>i;
  1446  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  1447  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  1448  05C5  0A3A               	incf	setFilas@i,w
  1449  05C6  00B4               	movwf	??_setFilas
  1450  05C7  3001               	movlw	1
  1451  05C8  00B5               	movwf	??_setFilas+1
  1452  05C9  3000               	movlw	0
  1453  05CA  00B6               	movwf	??_setFilas+2
  1454  05CB  2DCF               	goto	u374
  1455  05CC                     u375:	
  1456  05CC  1003               	clrc
  1457  05CD  0DB5               	rlf	??_setFilas+1,f
  1458  05CE  0DB6               	rlf	??_setFilas+2,f
  1459  05CF                     u374:	
  1460  05CF  0BB4               	decfsz	??_setFilas,f
  1461  05D0  2DCC               	goto	u375
  1462  05D1  0832               	movf	setFilas@reg_value,w
  1463  05D2  0535               	andwf	??_setFilas+1,w
  1464  05D3  00B7               	movwf	??_setFilas+3
  1465  05D4  0833               	movf	setFilas@reg_value+1,w
  1466  05D5  0536               	andwf	??_setFilas+2,w
  1467  05D6  00B8               	movwf	??_setFilas+4
  1468  05D7  0A3A               	incf	setFilas@i,w
  1469  05D8  2DDC               	goto	u384
  1470  05D9                     u385:	
  1471  05D9  1003               	clrc
  1472  05DA  0CB8               	rrf	??_setFilas+4,f
  1473  05DB  0CB7               	rrf	??_setFilas+3,f
  1474  05DC                     u384:	
  1475  05DC  3EFF               	addlw	-1
  1476  05DD  1D03               	skipz
  1477  05DE  2DD9               	goto	u385
  1478  05DF  0837               	movf	??_setFilas+3,w
  1479  05E0  00B9               	movwf	??_setFilas+5
  1480  05E1  0EB9               	swapf	??_setFilas+5,f
  1481  05E2  0807               	movf	7,w	;volatile
  1482  05E3  0639               	xorwf	??_setFilas+5,w
  1483  05E4  39EF               	andlw	-17
  1484  05E5  0639               	xorwf	??_setFilas+5,w
  1485  05E6  0087               	movwf	7	;volatile
  1486  05E7                     l953:	
  1487                           
  1488                           ;filas.c: 23:         shiftClock_Fil();
  1489  05E7  120A  118A  2410  120A  118A  	fcall	_shiftClock_Fil
  1490  05EC                     l955:	
  1491                           
  1492                           ;filas.c: 24:     }
  1493  05EC  3001               	movlw	1
  1494  05ED  1283               	bcf	3,5	;RP0=0, select bank0
  1495  05EE  1303               	bcf	3,6	;RP1=0, select bank0
  1496  05EF  07BA               	addwf	setFilas@i,f
  1497  05F0  1803               	skipnc
  1498  05F1  0ABB               	incf	setFilas@i+1,f
  1499  05F2  3000               	movlw	0
  1500  05F3  07BB               	addwf	setFilas@i+1,f
  1501  05F4  2DB5               	goto	l947
  1502  05F5                     l113:	
  1503  05F5  0008               	return
  1504  05F6                     __end_of_setFilas:	
  1505                           
  1506                           	psect	text5
  1507  0410                     __ptext5:	
  1508 ;; *************** function _shiftClock_Fil *****************
  1509 ;; Defined at:
  1510 ;;		line 13 in file "filas.c"
  1511 ;; Parameters:    Size  Location     Type
  1512 ;;		None
  1513 ;; Auto vars:     Size  Location     Type
  1514 ;;		None
  1515 ;; Return value:  Size  Location     Type
  1516 ;;                  1    wreg      void 
  1517 ;; Registers used:
  1518 ;;		None
  1519 ;; Tracked objects:
  1520 ;;		On entry : 0/0
  1521 ;;		On exit  : 0/0
  1522 ;;		Unchanged: 0/0
  1523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1524 ;;      Params:         0       0       0       0       0
  1525 ;;      Locals:         0       0       0       0       0
  1526 ;;      Temps:          0       0       0       0       0
  1527 ;;      Totals:         0       0       0       0       0
  1528 ;;Total ram usage:        0 bytes
  1529 ;; Hardware stack levels used:    1
  1530 ;; Hardware stack levels required when called:    3
  1531 ;; This function calls:
  1532 ;;		Nothing
  1533 ;; This function is called by:
  1534 ;;		_setFilas
  1535 ;; This function uses a non-reentrant model
  1536 ;;
  1537                           
  1538                           
  1539                           ;psect for function _shiftClock_Fil
  1540  0410                     _shiftClock_Fil:	
  1541  0410                     l935:	
  1542                           ;incstack = 0
  1543                           ; Regs used in _shiftClock_Fil: []
  1544                           
  1545                           
  1546                           ;filas.c: 14:     PORTCbits.RC7 = 0;
  1547  0410  1283               	bcf	3,5	;RP0=0, select bank0
  1548  0411  1303               	bcf	3,6	;RP1=0, select bank0
  1549  0412  1387               	bcf	7,7	;volatile
  1550                           
  1551                           ;filas.c: 15:     PORTCbits.RC7 = 1;
  1552  0413  1787               	bsf	7,7	;volatile
  1553                           
  1554                           ;filas.c: 16:     PORTCbits.RC7 = 0;
  1555  0414  1387               	bcf	7,7	;volatile
  1556  0415                     l108:	
  1557  0415  0008               	return
  1558  0416                     __end_of_shiftClock_Fil:	
  1559                           
  1560                           	psect	text6
  1561  049A                     __ptext6:	
  1562 ;; *************** function _setColumnas *****************
  1563 ;; Defined at:
  1564 ;;		line 18 in file "columnas.c"
  1565 ;; Parameters:    Size  Location     Type
  1566 ;;  reg_value       1    wreg     unsigned char 
  1567 ;; Auto vars:     Size  Location     Type
  1568 ;;  reg_value       1   23[BANK0 ] unsigned char 
  1569 ;;  i               2   24[BANK0 ] int 
  1570 ;;  valor           1   22[BANK0 ] unsigned char 
  1571 ;;  indice          1    0        unsigned char 
  1572 ;; Return value:  Size  Location     Type
  1573 ;;                  1    wreg      void 
  1574 ;; Registers used:
  1575 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1576 ;; Tracked objects:
  1577 ;;		On entry : 0/0
  1578 ;;		On exit  : 0/0
  1579 ;;		Unchanged: 0/0
  1580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1581 ;;      Params:         0       0       0       0       0
  1582 ;;      Locals:         0       5       0       0       0
  1583 ;;      Temps:          0       3       0       0       0
  1584 ;;      Totals:         0       8       0       0       0
  1585 ;;Total ram usage:        8 bytes
  1586 ;; Hardware stack levels used:    1
  1587 ;; Hardware stack levels required when called:    4
  1588 ;; This function calls:
  1589 ;;		_latchClock_Col
  1590 ;;		_shiftClock_Col
  1591 ;; This function is called by:
  1592 ;;		_main
  1593 ;; This function uses a non-reentrant model
  1594 ;;
  1595                           
  1596                           
  1597                           ;psect for function _setColumnas
  1598  049A                     _setColumnas:	
  1599                           
  1600                           ;incstack = 0
  1601                           ; Regs used in _setColumnas: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1602                           ;setColumnas@reg_value stored from wreg
  1603  049A  1283               	bcf	3,5	;RP0=0, select bank0
  1604  049B  1303               	bcf	3,6	;RP1=0, select bank0
  1605  049C  00B7               	movwf	setColumnas@reg_value
  1606  049D                     l1011:	
  1607  049D                     l1013:	
  1608  049D                     l1015:	
  1609  049D                     l1017:	
  1610                           
  1611                           ;columnas.c: 22:     for(i=0;i<8;i++){
  1612  049D  01B8               	clrf	setColumnas@i
  1613  049E  01B9               	clrf	setColumnas@i+1
  1614  049F                     l1023:	
  1615                           
  1616                           ;columnas.c: 23:         valor = (reg_value & (1<<i) )>>i;
  1617  049F  3001               	movlw	1
  1618  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  1619  04A1  1303               	bcf	3,6	;RP1=0, select bank0
  1620  04A2  00B2               	movwf	??_setColumnas
  1621  04A3  0A38               	incf	setColumnas@i,w
  1622  04A4  2CA7               	goto	u454
  1623  04A5                     u455:	
  1624  04A5  1003               	clrc
  1625  04A6  0DB2               	rlf	??_setColumnas,f
  1626  04A7                     u454:	
  1627  04A7  3EFF               	addlw	-1
  1628  04A8  1D03               	skipz
  1629  04A9  2CA5               	goto	u455
  1630  04AA  0832               	movf	??_setColumnas,w
  1631  04AB  0537               	andwf	setColumnas@reg_value,w
  1632  04AC  00B3               	movwf	??_setColumnas+1
  1633  04AD  0A38               	incf	setColumnas@i,w
  1634  04AE  2CB1               	goto	u464
  1635  04AF                     u465:	
  1636  04AF  1003               	clrc
  1637  04B0  0CB3               	rrf	??_setColumnas+1,f
  1638  04B1                     u464:	
  1639  04B1  3EFF               	addlw	-1
  1640  04B2  1D03               	skipz
  1641  04B3  2CAF               	goto	u465
  1642  04B4  0833               	movf	??_setColumnas+1,w
  1643  04B5  00B4               	movwf	??_setColumnas+2
  1644  04B6  0834               	movf	??_setColumnas+2,w
  1645  04B7  00B6               	movwf	setColumnas@valor
  1646  04B8                     l1025:	
  1647                           
  1648                           ;columnas.c: 24:         PORTDbits.RD4 = valor;
  1649  04B8  0C36               	rrf	setColumnas@valor,w
  1650  04B9  1C03               	skipc
  1651  04BA  1208               	bcf	8,4	;volatile
  1652  04BB  1803               	skipnc
  1653  04BC  1608               	bsf	8,4	;volatile
  1654  04BD                     l1027:	
  1655                           
  1656                           ;columnas.c: 25:         shiftClock_Col();
  1657  04BD  120A  118A  240A  120A  118A  	fcall	_shiftClock_Col
  1658  04C2                     l1029:	
  1659                           
  1660                           ;columnas.c: 26:     }
  1661  04C2  3001               	movlw	1
  1662  04C3  1283               	bcf	3,5	;RP0=0, select bank0
  1663  04C4  1303               	bcf	3,6	;RP1=0, select bank0
  1664  04C5  07B8               	addwf	setColumnas@i,f
  1665  04C6  1803               	skipnc
  1666  04C7  0AB9               	incf	setColumnas@i+1,f
  1667  04C8  3000               	movlw	0
  1668  04C9  07B9               	addwf	setColumnas@i+1,f
  1669  04CA                     l1031:	
  1670  04CA  0839               	movf	setColumnas@i+1,w
  1671  04CB  3A80               	xorlw	128
  1672  04CC  00FF               	movwf	btemp+1
  1673  04CD  3080               	movlw	128
  1674  04CE  027F               	subwf	btemp+1,w
  1675  04CF  1D03               	skipz
  1676  04D0  2CD3               	goto	u475
  1677  04D1  3008               	movlw	8
  1678  04D2  0238               	subwf	setColumnas@i,w
  1679  04D3                     u475:	
  1680  04D3  1C03               	skipc
  1681  04D4  2CD6               	goto	u471
  1682  04D5  2CD7               	goto	u470
  1683  04D6                     u471:	
  1684  04D6  2C9F               	goto	l1023
  1685  04D7                     u470:	
  1686  04D7                     l1033:	
  1687                           
  1688                           ;columnas.c: 27:     latchClock_Col();
  1689  04D7  120A  118A  2405  120A  118A  	fcall	_latchClock_Col
  1690  04DC                     l128:	
  1691  04DC  0008               	return
  1692  04DD                     __end_of_setColumnas:	
  1693                           
  1694                           	psect	text7
  1695  040A                     __ptext7:	
  1696 ;; *************** function _shiftClock_Col *****************
  1697 ;; Defined at:
  1698 ;;		line 12 in file "columnas.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;		None
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;		None
  1703 ;; Return value:  Size  Location     Type
  1704 ;;                  1    wreg      void 
  1705 ;; Registers used:
  1706 ;;		None
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/0
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1712 ;;      Params:         0       0       0       0       0
  1713 ;;      Locals:         0       0       0       0       0
  1714 ;;      Temps:          0       0       0       0       0
  1715 ;;      Totals:         0       0       0       0       0
  1716 ;;Total ram usage:        0 bytes
  1717 ;; Hardware stack levels used:    1
  1718 ;; Hardware stack levels required when called:    3
  1719 ;; This function calls:
  1720 ;;		Nothing
  1721 ;; This function is called by:
  1722 ;;		_setColumnas
  1723 ;;		_shiftBitColumna
  1724 ;; This function uses a non-reentrant model
  1725 ;;
  1726                           
  1727                           
  1728                           ;psect for function _shiftClock_Col
  1729  040A                     _shiftClock_Col:	
  1730  040A                     l939:	
  1731                           ;incstack = 0
  1732                           ; Regs used in _shiftClock_Col: []
  1733                           
  1734                           
  1735                           ;columnas.c: 13:     PORTDbits.RD7 = 0;
  1736  040A  1283               	bcf	3,5	;RP0=0, select bank0
  1737  040B  1303               	bcf	3,6	;RP1=0, select bank0
  1738  040C  1388               	bcf	8,7	;volatile
  1739                           
  1740                           ;columnas.c: 14:     PORTDbits.RD7 = 1;
  1741  040D  1788               	bsf	8,7	;volatile
  1742                           
  1743                           ;columnas.c: 15:     PORTDbits.RD7 = 0;
  1744  040E  1388               	bcf	8,7	;volatile
  1745  040F                     l123:	
  1746  040F  0008               	return
  1747  0410                     __end_of_shiftClock_Col:	
  1748                           
  1749                           	psect	text8
  1750  0405                     __ptext8:	
  1751 ;; *************** function _latchClock_Col *****************
  1752 ;; Defined at:
  1753 ;;		line 7 in file "columnas.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;		None
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;		None
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  1    wreg      void 
  1760 ;; Registers used:
  1761 ;;		None
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1767 ;;      Params:         0       0       0       0       0
  1768 ;;      Locals:         0       0       0       0       0
  1769 ;;      Temps:          0       0       0       0       0
  1770 ;;      Totals:         0       0       0       0       0
  1771 ;;Total ram usage:        0 bytes
  1772 ;; Hardware stack levels used:    1
  1773 ;; Hardware stack levels required when called:    3
  1774 ;; This function calls:
  1775 ;;		Nothing
  1776 ;; This function is called by:
  1777 ;;		_setColumnas
  1778 ;;		_shiftBitColumna
  1779 ;; This function uses a non-reentrant model
  1780 ;;
  1781                           
  1782                           
  1783                           ;psect for function _latchClock_Col
  1784  0405                     _latchClock_Col:	
  1785  0405                     l937:	
  1786                           ;incstack = 0
  1787                           ; Regs used in _latchClock_Col: []
  1788                           
  1789                           
  1790                           ;columnas.c: 8:     PORTDbits.RD6 = 1;
  1791  0405  1283               	bcf	3,5	;RP0=0, select bank0
  1792  0406  1303               	bcf	3,6	;RP1=0, select bank0
  1793  0407  1708               	bsf	8,6	;volatile
  1794                           
  1795                           ;columnas.c: 9:     PORTDbits.RD6 = 0;
  1796  0408  1308               	bcf	8,6	;volatile
  1797  0409                     l120:	
  1798  0409  0008               	return
  1799  040A                     __end_of_latchClock_Col:	
  1800                           
  1801                           	psect	text9
  1802  044A                     __ptext9:	
  1803 ;; *************** function _init_timer *****************
  1804 ;; Defined at:
  1805 ;;		line 60 in file "init.c"
  1806 ;; Parameters:    Size  Location     Type
  1807 ;;		None
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;		None
  1810 ;; Return value:  Size  Location     Type
  1811 ;;                  1    wreg      void 
  1812 ;; Registers used:
  1813 ;;		status,2
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 0/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1819 ;;      Params:         0       0       0       0       0
  1820 ;;      Locals:         0       0       0       0       0
  1821 ;;      Temps:          0       0       0       0       0
  1822 ;;      Totals:         0       0       0       0       0
  1823 ;;Total ram usage:        0 bytes
  1824 ;; Hardware stack levels used:    1
  1825 ;; Hardware stack levels required when called:    3
  1826 ;; This function calls:
  1827 ;;		Nothing
  1828 ;; This function is called by:
  1829 ;;		_main
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           
  1834                           ;psect for function _init_timer
  1835  044A                     _init_timer:	
  1836  044A                     l985:	
  1837                           ;incstack = 0
  1838                           ; Regs used in _init_timer: [status,2]
  1839                           
  1840                           
  1841                           ;init.c: 62:     TMR0=0;
  1842  044A  1283               	bcf	3,5	;RP0=0, select bank0
  1843  044B  1303               	bcf	3,6	;RP1=0, select bank0
  1844  044C  0181               	clrf	1	;volatile
  1845  044D                     l987:	
  1846                           
  1847                           ;init.c: 70:     INTCONbits.GIE = 1;
  1848  044D  178B               	bsf	11,7	;volatile
  1849  044E                     l989:	
  1850                           
  1851                           ;init.c: 71:     INTCONbits.TMR0IE = 1;
  1852  044E  168B               	bsf	11,5	;volatile
  1853  044F                     l991:	
  1854                           
  1855                           ;init.c: 72:     INTCONbits.TMR0IF = 0;
  1856  044F  110B               	bcf	11,2	;volatile
  1857  0450                     l993:	
  1858                           
  1859                           ;init.c: 81:     OPTION_REGbits.PSA = 1;
  1860  0450  1683               	bsf	3,5	;RP0=1, select bank1
  1861  0451  1303               	bcf	3,6	;RP1=0, select bank1
  1862  0452  1581               	bsf	1,3	;volatile
  1863  0453                     l995:	
  1864                           
  1865                           ;init.c: 82:     OPTION_REGbits.PS0 = 1;
  1866  0453  1401               	bsf	1,0	;volatile
  1867  0454                     l997:	
  1868                           
  1869                           ;init.c: 83:     OPTION_REGbits.PS1 = 1;
  1870  0454  1481               	bsf	1,1	;volatile
  1871  0455                     l999:	
  1872                           
  1873                           ;init.c: 84:     OPTION_REGbits.PS2 = 1;
  1874  0455  1501               	bsf	1,2	;volatile
  1875  0456                     l1001:	
  1876                           
  1877                           ;init.c: 85:     OPTION_REGbits.T0CS = 0;
  1878  0456  1281               	bcf	1,5	;volatile
  1879  0457                     l36:	
  1880  0457  0008               	return
  1881  0458                     __end_of_init_timer:	
  1882                           
  1883                           	psect	text10
  1884  0432                     __ptext10:	
  1885 ;; *************** function _init_pines *****************
  1886 ;; Defined at:
  1887 ;;		line 44 in file "init.c"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;		None
  1890 ;; Auto vars:     Size  Location     Type
  1891 ;;		None
  1892 ;; Return value:  Size  Location     Type
  1893 ;;                  1    wreg      void 
  1894 ;; Registers used:
  1895 ;;		status,2, status,0, pclath, cstack
  1896 ;; Tracked objects:
  1897 ;;		On entry : 0/0
  1898 ;;		On exit  : 0/0
  1899 ;;		Unchanged: 0/0
  1900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1901 ;;      Params:         0       0       0       0       0
  1902 ;;      Locals:         0       0       0       0       0
  1903 ;;      Temps:          0       0       0       0       0
  1904 ;;      Totals:         0       0       0       0       0
  1905 ;;Total ram usage:        0 bytes
  1906 ;; Hardware stack levels used:    1
  1907 ;; Hardware stack levels required when called:    4
  1908 ;; This function calls:
  1909 ;;		_init_pines_col
  1910 ;;		_init_pines_fil
  1911 ;; This function is called by:
  1912 ;;		_main
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916                           
  1917                           ;psect for function _init_pines
  1918  0432                     _init_pines:	
  1919  0432                     l981:	
  1920                           ;incstack = 0
  1921                           ; Regs used in _init_pines: [status,2+status,0+pclath+cstack]
  1922                           
  1923                           
  1924                           ;init.c: 46:     init_pines_fil();
  1925  0432  120A  118A  243D  120A  118A  	fcall	_init_pines_fil
  1926                           
  1927                           ;init.c: 47:     init_pines_col();
  1928  0437  120A  118A  2458  120A  118A  	fcall	_init_pines_col
  1929  043C                     l30:	
  1930  043C  0008               	return
  1931  043D                     __end_of_init_pines:	
  1932                           
  1933                           	psect	text11
  1934  043D                     __ptext11:	
  1935 ;; *************** function _init_pines_fil *****************
  1936 ;; Defined at:
  1937 ;;		line 17 in file "init.c"
  1938 ;; Parameters:    Size  Location     Type
  1939 ;;		None
  1940 ;; Auto vars:     Size  Location     Type
  1941 ;;		None
  1942 ;; Return value:  Size  Location     Type
  1943 ;;                  1    wreg      void 
  1944 ;; Registers used:
  1945 ;;		None
  1946 ;; Tracked objects:
  1947 ;;		On entry : 0/0
  1948 ;;		On exit  : 0/0
  1949 ;;		Unchanged: 0/0
  1950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1951 ;;      Params:         0       0       0       0       0
  1952 ;;      Locals:         0       0       0       0       0
  1953 ;;      Temps:          0       0       0       0       0
  1954 ;;      Totals:         0       0       0       0       0
  1955 ;;Total ram usage:        0 bytes
  1956 ;; Hardware stack levels used:    1
  1957 ;; Hardware stack levels required when called:    3
  1958 ;; This function calls:
  1959 ;;		Nothing
  1960 ;; This function is called by:
  1961 ;;		_init_pines
  1962 ;; This function uses a non-reentrant model
  1963 ;;
  1964                           
  1965                           
  1966                           ;psect for function _init_pines_fil
  1967  043D                     _init_pines_fil:	
  1968  043D                     l941:	
  1969                           ;incstack = 0
  1970                           ; Regs used in _init_pines_fil: []
  1971                           
  1972                           
  1973                           ;init.c: 19:     TRISCbits.TRISC4 = 0;
  1974  043D  1683               	bsf	3,5	;RP0=1, select bank1
  1975  043E  1303               	bcf	3,6	;RP1=0, select bank1
  1976  043F  1207               	bcf	7,4	;volatile
  1977                           
  1978                           ;init.c: 20:     TRISCbits.TRISC5 = 0;
  1979  0440  1287               	bcf	7,5	;volatile
  1980                           
  1981                           ;init.c: 21:     TRISCbits.TRISC6 = 0;
  1982  0441  1307               	bcf	7,6	;volatile
  1983                           
  1984                           ;init.c: 22:     TRISCbits.TRISC7 = 0;
  1985  0442  1387               	bcf	7,7	;volatile
  1986                           
  1987                           ;init.c: 24:     PORTCbits.RC4 = 0;
  1988  0443  1283               	bcf	3,5	;RP0=0, select bank0
  1989  0444  1303               	bcf	3,6	;RP1=0, select bank0
  1990  0445  1207               	bcf	7,4	;volatile
  1991                           
  1992                           ;init.c: 25:     PORTCbits.RC5 = 0;
  1993  0446  1287               	bcf	7,5	;volatile
  1994                           
  1995                           ;init.c: 26:     PORTCbits.RC6 = 0;
  1996  0447  1307               	bcf	7,6	;volatile
  1997                           
  1998                           ;init.c: 27:     PORTCbits.RC7 = 0;
  1999  0448  1387               	bcf	7,7	;volatile
  2000  0449                     l24:	
  2001  0449  0008               	return
  2002  044A                     __end_of_init_pines_fil:	
  2003                           
  2004                           	psect	text12
  2005  0458                     __ptext12:	
  2006 ;; *************** function _init_pines_col *****************
  2007 ;; Defined at:
  2008 ;;		line 30 in file "init.c"
  2009 ;; Parameters:    Size  Location     Type
  2010 ;;		None
  2011 ;; Auto vars:     Size  Location     Type
  2012 ;;		None
  2013 ;; Return value:  Size  Location     Type
  2014 ;;                  1    wreg      void 
  2015 ;; Registers used:
  2016 ;;		None
  2017 ;; Tracked objects:
  2018 ;;		On entry : 0/0
  2019 ;;		On exit  : 0/0
  2020 ;;		Unchanged: 0/0
  2021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2022 ;;      Params:         0       0       0       0       0
  2023 ;;      Locals:         0       0       0       0       0
  2024 ;;      Temps:          0       0       0       0       0
  2025 ;;      Totals:         0       0       0       0       0
  2026 ;;Total ram usage:        0 bytes
  2027 ;; Hardware stack levels used:    1
  2028 ;; Hardware stack levels required when called:    3
  2029 ;; This function calls:
  2030 ;;		Nothing
  2031 ;; This function is called by:
  2032 ;;		_init_pines
  2033 ;; This function uses a non-reentrant model
  2034 ;;
  2035                           
  2036                           
  2037                           ;psect for function _init_pines_col
  2038  0458                     _init_pines_col:	
  2039  0458                     l943:	
  2040                           ;incstack = 0
  2041                           ; Regs used in _init_pines_col: []
  2042                           
  2043                           
  2044                           ;init.c: 31:     TRISBbits.TRISB0 = 0;
  2045  0458  1683               	bsf	3,5	;RP0=1, select bank1
  2046  0459  1303               	bcf	3,6	;RP1=0, select bank1
  2047  045A  1006               	bcf	6,0	;volatile
  2048                           
  2049                           ;init.c: 32:     PORTBbits.RB0 = 0;
  2050  045B  1283               	bcf	3,5	;RP0=0, select bank0
  2051  045C  1303               	bcf	3,6	;RP1=0, select bank0
  2052  045D  1006               	bcf	6,0	;volatile
  2053                           
  2054                           ;init.c: 34:     TRISDbits.TRISD4 = 0;
  2055  045E  1683               	bsf	3,5	;RP0=1, select bank1
  2056  045F  1303               	bcf	3,6	;RP1=0, select bank1
  2057  0460  1208               	bcf	8,4	;volatile
  2058                           
  2059                           ;init.c: 35:     TRISDbits.TRISD5 = 0;
  2060  0461  1288               	bcf	8,5	;volatile
  2061                           
  2062                           ;init.c: 36:     TRISDbits.TRISD6 = 0;
  2063  0462  1308               	bcf	8,6	;volatile
  2064                           
  2065                           ;init.c: 37:     TRISDbits.TRISD7 = 0;
  2066  0463  1388               	bcf	8,7	;volatile
  2067                           
  2068                           ;init.c: 39:     PORTDbits.RD4 = 0;
  2069  0464  1283               	bcf	3,5	;RP0=0, select bank0
  2070  0465  1303               	bcf	3,6	;RP1=0, select bank0
  2071  0466  1208               	bcf	8,4	;volatile
  2072                           
  2073                           ;init.c: 40:     PORTDbits.RD5 = 0;
  2074  0467  1288               	bcf	8,5	;volatile
  2075                           
  2076                           ;init.c: 41:     PORTDbits.RD6 = 0;
  2077  0468  1308               	bcf	8,6	;volatile
  2078                           
  2079                           ;init.c: 42:     PORTDbits.RD7 = 0;
  2080  0469  1388               	bcf	8,7	;volatile
  2081  046A                     l27:	
  2082  046A  0008               	return
  2083  046B                     __end_of_init_pines_col:	
  2084                           
  2085                           	psect	text13
  2086  0422                     __ptext13:	
  2087 ;; *************** function _init_interrupt *****************
  2088 ;; Defined at:
  2089 ;;		line 51 in file "init.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;		None
  2092 ;; Auto vars:     Size  Location     Type
  2093 ;;		None
  2094 ;; Return value:  Size  Location     Type
  2095 ;;                  1    wreg      void 
  2096 ;; Registers used:
  2097 ;;		None
  2098 ;; Tracked objects:
  2099 ;;		On entry : 0/0
  2100 ;;		On exit  : 0/0
  2101 ;;		Unchanged: 0/0
  2102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2103 ;;      Params:         0       0       0       0       0
  2104 ;;      Locals:         0       0       0       0       0
  2105 ;;      Temps:          0       0       0       0       0
  2106 ;;      Totals:         0       0       0       0       0
  2107 ;;Total ram usage:        0 bytes
  2108 ;; Hardware stack levels used:    1
  2109 ;; Hardware stack levels required when called:    3
  2110 ;; This function calls:
  2111 ;;		Nothing
  2112 ;; This function is called by:
  2113 ;;		_main
  2114 ;; This function uses a non-reentrant model
  2115 ;;
  2116                           
  2117                           
  2118                           ;psect for function _init_interrupt
  2119  0422                     _init_interrupt:	
  2120  0422                     l983:	
  2121                           ;incstack = 0
  2122                           ; Regs used in _init_interrupt: []
  2123                           
  2124                           
  2125                           ;init.c: 52:     INTCONbits.GIE = 1;
  2126  0422  178B               	bsf	11,7	;volatile
  2127                           
  2128                           ;init.c: 53:     INTCONbits.PEIE = 1;
  2129  0423  170B               	bsf	11,6	;volatile
  2130                           
  2131                           ;init.c: 54:     INTCONbits.RBIE = 1;
  2132  0424  158B               	bsf	11,3	;volatile
  2133                           
  2134                           ;init.c: 55:     INTCONbits.RBIF = 0;
  2135  0425  100B               	bcf	11,0	;volatile
  2136                           
  2137                           ;init.c: 57:     OPTION_REGbits.nRBPU = 0;
  2138  0426  1683               	bsf	3,5	;RP0=1, select bank1
  2139  0427  1303               	bcf	3,6	;RP1=0, select bank1
  2140  0428  1381               	bcf	1,7	;volatile
  2141  0429                     l33:	
  2142  0429  0008               	return
  2143  042A                     __end_of_init_interrupt:	
  2144                           
  2145                           	psect	text14
  2146  06A1                     __ptext14:	
  2147 ;; *************** function _Timer0_ISR *****************
  2148 ;; Defined at:
  2149 ;;		line 56 in file "mainsource.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;		None
  2152 ;; Auto vars:     Size  Location     Type
  2153 ;;		None
  2154 ;; Return value:  Size  Location     Type
  2155 ;;                  1    wreg      void 
  2156 ;; Registers used:
  2157 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2158 ;; Tracked objects:
  2159 ;;		On entry : 0/0
  2160 ;;		On exit  : 0/0
  2161 ;;		Unchanged: 0/0
  2162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2163 ;;      Params:         0       0       0       0       0
  2164 ;;      Locals:         0       0       0       0       0
  2165 ;;      Temps:          0       4       0       0       0
  2166 ;;      Totals:         0       4       0       0       0
  2167 ;;Total ram usage:        4 bytes
  2168 ;; Hardware stack levels used:    1
  2169 ;; Hardware stack levels required when called:    2
  2170 ;; This function calls:
  2171 ;;		___awmod
  2172 ;;		_rand
  2173 ;; This function is called by:
  2174 ;;		Interrupt level 1
  2175 ;; This function uses a non-reentrant model
  2176 ;;
  2177                           
  2178                           
  2179                           ;psect for function _Timer0_ISR
  2180  06A1                     _Timer0_ISR:	
  2181  06A1                     i1l1089:	
  2182                           
  2183                           ;mainsource.c: 58:     if(INTCONbits.TMR0IF){
  2184  06A1  1D0B               	btfss	11,2	;volatile
  2185  06A2  2EA4               	goto	u58_21
  2186  06A3  2EA5               	goto	u58_20
  2187  06A4                     u58_21:	
  2188  06A4  2EE9               	goto	i1l81
  2189  06A5                     u58_20:	
  2190  06A5                     i1l1091:	
  2191                           
  2192                           ;mainsource.c: 60:         INTCONbits.TMR0IF=0;
  2193  06A5  110B               	bcf	11,2	;volatile
  2194  06A6                     i1l1093:	
  2195                           
  2196                           ;mainsource.c: 61:         counter ++;
  2197  06A6  3001               	movlw	1
  2198  06A7  07C1               	addwf	_counter,f
  2199  06A8  1803               	skipnc
  2200  06A9  0AC2               	incf	_counter+1,f
  2201  06AA  3000               	movlw	0
  2202  06AB  07C2               	addwf	_counter+1,f
  2203  06AC                     i1l1095:	
  2204                           
  2205                           ;mainsource.c: 62:         if(counter >= 3906){
  2206  06AC  0842               	movf	_counter+1,w
  2207  06AD  3A80               	xorlw	128
  2208  06AE  00FF               	movwf	btemp+1
  2209  06AF  308F               	movlw	143
  2210  06B0  027F               	subwf	btemp+1,w
  2211  06B1  1D03               	skipz
  2212  06B2  2EB5               	goto	u59_25
  2213  06B3  3042               	movlw	66
  2214  06B4  0241               	subwf	_counter,w
  2215  06B5                     u59_25:	
  2216  06B5  1C03               	skipc
  2217  06B6  2EB8               	goto	u59_21
  2218  06B7  2EB9               	goto	u59_20
  2219  06B8                     u59_21:	
  2220  06B8  2EF6               	goto	i1l87
  2221  06B9                     u59_20:	
  2222  06B9                     i1l1097:	
  2223                           
  2224                           ;mainsource.c: 63:             PORTBbits.RB0 = led;
  2225  06B9  1283               	bcf	3,5	;RP0=0, select bank0
  2226  06BA  1303               	bcf	3,6	;RP1=0, select bank0
  2227  06BB  0C45               	rrf	_led,w
  2228  06BC  1C03               	skipc
  2229  06BD  1006               	bcf	6,0	;volatile
  2230  06BE  1803               	skipnc
  2231  06BF  1406               	bsf	6,0	;volatile
  2232  06C0                     i1l1099:	
  2233                           
  2234                           ;mainsource.c: 64:             led= ~led;
  2235  06C0  09C5               	comf	_led,f
  2236  06C1                     i1l1101:	
  2237                           
  2238                           ;mainsource.c: 65:             ficha_pos--;
  2239  06C1  3001               	movlw	1
  2240  06C2  02DA               	subwf	_ficha_pos,f
  2241                           
  2242                           ;mainsource.c: 66:             counter=0;
  2243  06C3  01C1               	clrf	_counter
  2244  06C4  01C2               	clrf	_counter+1
  2245  06C5                     i1l1103:	
  2246                           
  2247                           ;mainsource.c: 67:             if(ficha_pos==0){
  2248  06C5  085A               	movf	_ficha_pos,w
  2249  06C6  1D03               	btfss	3,2
  2250  06C7  2EC9               	goto	u60_21
  2251  06C8  2ECA               	goto	u60_20
  2252  06C9                     u60_21:	
  2253  06C9  2EF6               	goto	i1l87
  2254  06CA                     u60_20:	
  2255  06CA                     i1l1105:	
  2256                           
  2257                           ;mainsource.c: 68:                 ficha_pos=16;
  2258  06CA  3010               	movlw	16
  2259  06CB  00AE               	movwf	??_Timer0_ISR
  2260  06CC  082E               	movf	??_Timer0_ISR,w
  2261  06CD  00DA               	movwf	_ficha_pos
  2262  06CE                     i1l1107:	
  2263                           
  2264                           ;mainsource.c: 69:                 ficha_actual = rand() % 5;
  2265  06CE  3005               	movlw	5
  2266  06CF  00A7               	movwf	___awmod@divisor
  2267  06D0  3000               	movlw	0
  2268  06D1  00A8               	movwf	___awmod@divisor+1
  2269  06D2  120A  118A  2568  120A  118A  	fcall	_rand
  2270  06D7  1283               	bcf	3,5	;RP0=0, select bank0
  2271  06D8  1303               	bcf	3,6	;RP1=0, select bank0
  2272  06D9  0821               	movf	?_rand+1,w
  2273  06DA  00AA               	movwf	___awmod@dividend+1
  2274  06DB  0820               	movf	?_rand,w
  2275  06DC  00A9               	movwf	___awmod@dividend
  2276  06DD  120A  118A  2646  120A  118A  	fcall	___awmod
  2277  06E2  1283               	bcf	3,5	;RP0=0, select bank0
  2278  06E3  1303               	bcf	3,6	;RP1=0, select bank0
  2279  06E4  0827               	movf	?___awmod,w
  2280  06E5  00AE               	movwf	??_Timer0_ISR
  2281  06E6  082E               	movf	??_Timer0_ISR,w
  2282  06E7  00C4               	movwf	_ficha_actual
  2283  06E8  2EF6               	goto	i1l87
  2284  06E9                     i1l81:	
  2285                           ;mainsource.c: 73:     else if(INTCONbits.RBIF){
  2286                           
  2287  06E9  1C0B               	btfss	11,0	;volatile
  2288  06EA  2EEC               	goto	u61_21
  2289  06EB  2EED               	goto	u61_20
  2290  06EC                     u61_21:	
  2291  06EC  2EF6               	goto	i1l87
  2292  06ED                     u61_20:	
  2293  06ED                     i1l1109:	
  2294                           
  2295                           ;mainsource.c: 74:         if(PORTBbits.RB5 == 0){
  2296  06ED  1A86               	btfsc	6,5	;volatile
  2297  06EE  2EF0               	goto	u62_21
  2298  06EF  2EF1               	goto	u62_20
  2299  06F0                     u62_21:	
  2300  06F0  2EF5               	goto	i1l1113
  2301  06F1                     u62_20:	
  2302  06F1                     i1l1111:	
  2303                           
  2304                           ;mainsource.c: 75:             ficha_pos=16;
  2305  06F1  3010               	movlw	16
  2306  06F2  00AE               	movwf	??_Timer0_ISR
  2307  06F3  082E               	movf	??_Timer0_ISR,w
  2308  06F4  00DA               	movwf	_ficha_pos
  2309  06F5                     i1l1113:	
  2310                           
  2311                           ;mainsource.c: 77:         INTCONbits.RBIF=0;
  2312  06F5  100B               	bcf	11,0	;volatile
  2313  06F6                     i1l87:	
  2314  06F6  1283               	bcf	3,5	;RP0=0, select bank0
  2315  06F7  1303               	bcf	3,6	;RP1=0, select bank0
  2316  06F8  0831               	movf	??_Timer0_ISR+3,w
  2317  06F9  00FF               	movwf	btemp+1
  2318  06FA  0830               	movf	??_Timer0_ISR+2,w
  2319  06FB  008A               	movwf	10
  2320  06FC  0E2F               	swapf	(??_Timer0_ISR+1)^0,w
  2321  06FD  0083               	movwf	3
  2322  06FE  0EFE               	swapf	btemp,f
  2323  06FF  0E7E               	swapf	btemp,w
  2324  0700  0009               	retfie
  2325  0701                     __end_of_Timer0_ISR:	
  2326                           
  2327                           	psect	intentry
  2328  0004                     __pintentry:	
  2329                           ;incstack = 0
  2330                           ; Regs used in _Timer0_ISR: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2331                           
  2332  0004                     interrupt_function:	
  2333  007E                     saved_w	set	btemp
  2334  0004  00FE               	movwf	btemp
  2335  0005  0E03               	swapf	3,w
  2336  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2337  0007  1303               	bcf	3,6	;RP1=0, select bank0
  2338  0008  00AF               	movwf	??_Timer0_ISR+1
  2339  0009  080A               	movf	10,w
  2340  000A  00B0               	movwf	??_Timer0_ISR+2
  2341  000B  087F               	movf	btemp+1,w
  2342  000C  00B1               	movwf	??_Timer0_ISR+3
  2343  000D  120A  118A  2EA1   	ljmp	_Timer0_ISR
  2344                           
  2345                           	psect	text15
  2346  0568                     __ptext15:	
  2347 ;; *************** function _rand *****************
  2348 ;; Defined at:
  2349 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  2350 ;; Parameters:    Size  Location     Type
  2351 ;;		None
  2352 ;; Auto vars:     Size  Location     Type
  2353 ;;		None
  2354 ;; Return value:  Size  Location     Type
  2355 ;;                  2    0[BANK0 ] int 
  2356 ;; Registers used:
  2357 ;;		wreg, status,2, status,0, pclath, cstack
  2358 ;; Tracked objects:
  2359 ;;		On entry : 0/0
  2360 ;;		On exit  : 0/0
  2361 ;;		Unchanged: 0/0
  2362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2363 ;;      Params:         0       2       0       0       0
  2364 ;;      Locals:         0       0       0       0       0
  2365 ;;      Temps:          0       5       0       0       0
  2366 ;;      Totals:         0       7       0       0       0
  2367 ;;Total ram usage:        7 bytes
  2368 ;; Hardware stack levels used:    1
  2369 ;; Hardware stack levels required when called:    1
  2370 ;; This function calls:
  2371 ;;		___lmul
  2372 ;; This function is called by:
  2373 ;;		_Timer0_ISR
  2374 ;; This function uses a non-reentrant model
  2375 ;;
  2376                           
  2377                           
  2378                           ;psect for function _rand
  2379  0568                     _rand:	
  2380  0568                     i1l1003:	
  2381                           ;incstack = 0
  2382                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  2383                           
  2384  0568  1283               	bcf	3,5	;RP0=0, select bank0
  2385  0569  1303               	bcf	3,6	;RP1=0, select bank0
  2386  056A  0859               	movf	_randx+3,w
  2387  056B  00F4               	movwf	___lmul@multiplier+3
  2388  056C  0858               	movf	_randx+2,w
  2389  056D  00F3               	movwf	___lmul@multiplier+2
  2390  056E  0857               	movf	_randx+1,w
  2391  056F  00F2               	movwf	___lmul@multiplier+1
  2392  0570  0856               	movf	_randx,w
  2393  0571  00F1               	movwf	___lmul@multiplier
  2394  0572  3041               	movlw	65
  2395  0573  00F8               	movwf	___lmul@multiplicand+3
  2396  0574  30C6               	movlw	198
  2397  0575  00F7               	movwf	___lmul@multiplicand+2
  2398  0576  304E               	movlw	78
  2399  0577  00F6               	movwf	___lmul@multiplicand+1
  2400  0578  306D               	movlw	109
  2401  0579  00F5               	movwf	___lmul@multiplicand
  2402  057A  120A  118A  2522  120A  118A  	fcall	___lmul
  2403  057F  0874               	movf	?___lmul+3,w
  2404  0580  1283               	bcf	3,5	;RP0=0, select bank0
  2405  0581  1303               	bcf	3,6	;RP1=0, select bank0
  2406  0582  00D9               	movwf	_randx+3
  2407  0583  0873               	movf	?___lmul+2,w
  2408  0584  00D8               	movwf	_randx+2
  2409  0585  0872               	movf	?___lmul+1,w
  2410  0586  00D7               	movwf	_randx+1
  2411  0587  0871               	movf	?___lmul,w
  2412  0588  00D6               	movwf	_randx
  2413  0589                     i1l1005:	
  2414  0589  3039               	movlw	57
  2415  058A  07D6               	addwf	_randx,f
  2416  058B  3030               	movlw	48
  2417  058C  1803               	skipnc
  2418  058D  3031               	movlw	49
  2419  058E  07D7               	addwf	_randx+1,f
  2420  058F  3000               	movlw	0
  2421  0590  1803               	skipnc
  2422  0591  3001               	movlw	1
  2423  0592  07D8               	addwf	_randx+2,f
  2424  0593  3000               	movlw	0
  2425  0594  1803               	skipnc
  2426  0595  3001               	movlw	1
  2427  0596  07D9               	addwf	_randx+3,f
  2428  0597                     i1l1007:	
  2429  0597  0856               	movf	_randx,w
  2430  0598  00A2               	movwf	??_rand
  2431  0599  0857               	movf	_randx+1,w
  2432  059A  00A3               	movwf	??_rand+1
  2433  059B  0858               	movf	_randx+2,w
  2434  059C  00A4               	movwf	??_rand+2
  2435  059D  0859               	movf	_randx+3,w
  2436  059E  00A5               	movwf	??_rand+3
  2437  059F  3010               	movlw	16
  2438  05A0  00A6               	movwf	??_rand+4
  2439  05A1                     u44_25:	
  2440  05A1  0D25               	rlf	??_rand+3,w
  2441  05A2  0CA5               	rrf	??_rand+3,f
  2442  05A3  0CA4               	rrf	??_rand+2,f
  2443  05A4  0CA3               	rrf	??_rand+1,f
  2444  05A5  0CA2               	rrf	??_rand,f
  2445  05A6                     u44_20:	
  2446  05A6  0BA6               	decfsz	??_rand+4,f
  2447  05A7  2DA1               	goto	u44_25
  2448  05A8  30FF               	movlw	255
  2449  05A9  0522               	andwf	??_rand,w
  2450  05AA  00A0               	movwf	?_rand
  2451  05AB  307F               	movlw	127
  2452  05AC  0523               	andwf	??_rand+1,w
  2453  05AD  00A1               	movwf	?_rand+1
  2454  05AE                     i1l667:	
  2455  05AE  0008               	return
  2456  05AF                     __end_of_rand:	
  2457                           
  2458                           	psect	text16
  2459  0522                     __ptext16:	
  2460 ;; *************** function ___lmul *****************
  2461 ;; Defined at:
  2462 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  2463 ;; Parameters:    Size  Location     Type
  2464 ;;  multiplier      4    0[COMMON] unsigned long 
  2465 ;;  multiplicand    4    4[COMMON] unsigned long 
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;  product         4    9[COMMON] unsigned long 
  2468 ;; Return value:  Size  Location     Type
  2469 ;;                  4    0[COMMON] unsigned long 
  2470 ;; Registers used:
  2471 ;;		wreg, status,2, status,0
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/0
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2477 ;;      Params:         8       0       0       0       0
  2478 ;;      Locals:         4       0       0       0       0
  2479 ;;      Temps:          1       0       0       0       0
  2480 ;;      Totals:        13       0       0       0       0
  2481 ;;Total ram usage:       13 bytes
  2482 ;; Hardware stack levels used:    1
  2483 ;; This function calls:
  2484 ;;		Nothing
  2485 ;; This function is called by:
  2486 ;;		_rand
  2487 ;; This function uses a non-reentrant model
  2488 ;;
  2489                           
  2490                           
  2491                           ;psect for function ___lmul
  2492  0522                     ___lmul:	
  2493  0522                     i1l967:	
  2494                           ;incstack = 0
  2495                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2496                           
  2497  0522  3000               	movlw	0
  2498  0523  00FD               	movwf	___lmul@product+3
  2499  0524  3000               	movlw	0
  2500  0525  00FC               	movwf	___lmul@product+2
  2501  0526  3000               	movlw	0
  2502  0527  00FB               	movwf	___lmul@product+1
  2503  0528  3000               	movlw	0
  2504  0529  00FA               	movwf	___lmul@product
  2505  052A                     i1l969:	
  2506  052A  1C71               	btfss	___lmul@multiplier,0
  2507  052B  2D2D               	goto	u39_21
  2508  052C  2D2E               	goto	u39_20
  2509  052D                     u39_21:	
  2510  052D  2D45               	goto	i1l973
  2511  052E                     u39_20:	
  2512  052E                     i1l971:	
  2513  052E  0875               	movf	___lmul@multiplicand,w
  2514  052F  07FA               	addwf	___lmul@product,f
  2515  0530  0876               	movf	___lmul@multiplicand+1,w
  2516  0531  1103               	clrz
  2517  0532  1803               	skipnc
  2518  0533  3E01               	addlw	1
  2519  0534  1903               	skipnz
  2520  0535  2D37               	goto	u40_21
  2521  0536  07FB               	addwf	___lmul@product+1,f
  2522  0537                     u40_21:	
  2523  0537  0877               	movf	___lmul@multiplicand+2,w
  2524  0538  1103               	clrz
  2525  0539  1803               	skipnc
  2526  053A  3E01               	addlw	1
  2527  053B  1903               	skipnz
  2528  053C  2D3E               	goto	u40_22
  2529  053D  07FC               	addwf	___lmul@product+2,f
  2530  053E                     u40_22:	
  2531  053E  0878               	movf	___lmul@multiplicand+3,w
  2532  053F  1103               	clrz
  2533  0540  1803               	skipnc
  2534  0541  3E01               	addlw	1
  2535  0542  1903               	skipnz
  2536  0543  2D45               	goto	u40_23
  2537  0544  07FD               	addwf	___lmul@product+3,f
  2538  0545                     u40_23:	
  2539  0545                     i1l973:	
  2540  0545  3001               	movlw	1
  2541  0546  00F9               	movwf	??___lmul
  2542  0547                     u41_25:	
  2543  0547  1003               	clrc
  2544  0548  0DF5               	rlf	___lmul@multiplicand,f
  2545  0549  0DF6               	rlf	___lmul@multiplicand+1,f
  2546  054A  0DF7               	rlf	___lmul@multiplicand+2,f
  2547  054B  0DF8               	rlf	___lmul@multiplicand+3,f
  2548  054C  0BF9               	decfsz	??___lmul,f
  2549  054D  2D47               	goto	u41_25
  2550  054E                     i1l975:	
  2551  054E  3001               	movlw	1
  2552  054F                     u42_25:	
  2553  054F  1003               	clrc
  2554  0550  0CF4               	rrf	___lmul@multiplier+3,f
  2555  0551  0CF3               	rrf	___lmul@multiplier+2,f
  2556  0552  0CF2               	rrf	___lmul@multiplier+1,f
  2557  0553  0CF1               	rrf	___lmul@multiplier,f
  2558  0554  3EFF               	addlw	-1
  2559  0555  1D03               	skipz
  2560  0556  2D4F               	goto	u42_25
  2561  0557  0874               	movf	___lmul@multiplier+3,w
  2562  0558  0473               	iorwf	___lmul@multiplier+2,w
  2563  0559  0472               	iorwf	___lmul@multiplier+1,w
  2564  055A  0471               	iorwf	___lmul@multiplier,w
  2565  055B  1D03               	skipz
  2566  055C  2D5E               	goto	u43_21
  2567  055D  2D5F               	goto	u43_20
  2568  055E                     u43_21:	
  2569  055E  2D2A               	goto	i1l969
  2570  055F                     u43_20:	
  2571  055F                     i1l977:	
  2572  055F  087D               	movf	___lmul@product+3,w
  2573  0560  00F4               	movwf	?___lmul+3
  2574  0561  087C               	movf	___lmul@product+2,w
  2575  0562  00F3               	movwf	?___lmul+2
  2576  0563  087B               	movf	___lmul@product+1,w
  2577  0564  00F2               	movwf	?___lmul+1
  2578  0565  087A               	movf	___lmul@product,w
  2579  0566  00F1               	movwf	?___lmul
  2580  0567                     i1l231:	
  2581  0567  0008               	return
  2582  0568                     __end_of___lmul:	
  2583                           
  2584                           	psect	text17
  2585  0646                     __ptext17:	
  2586 ;; *************** function ___awmod *****************
  2587 ;; Defined at:
  2588 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  2589 ;; Parameters:    Size  Location     Type
  2590 ;;  divisor         2    7[BANK0 ] int 
  2591 ;;  dividend        2    9[BANK0 ] int 
  2592 ;; Auto vars:     Size  Location     Type
  2593 ;;  sign            1   13[BANK0 ] unsigned char 
  2594 ;;  counter         1   12[BANK0 ] unsigned char 
  2595 ;; Return value:  Size  Location     Type
  2596 ;;                  2    7[BANK0 ] int 
  2597 ;; Registers used:
  2598 ;;		wreg, status,2, status,0
  2599 ;; Tracked objects:
  2600 ;;		On entry : 0/0
  2601 ;;		On exit  : 0/0
  2602 ;;		Unchanged: 0/0
  2603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2604 ;;      Params:         0       4       0       0       0
  2605 ;;      Locals:         0       2       0       0       0
  2606 ;;      Temps:          0       1       0       0       0
  2607 ;;      Totals:         0       7       0       0       0
  2608 ;;Total ram usage:        7 bytes
  2609 ;; Hardware stack levels used:    1
  2610 ;; This function calls:
  2611 ;;		Nothing
  2612 ;; This function is called by:
  2613 ;;		_Timer0_ISR
  2614 ;; This function uses a non-reentrant model
  2615 ;;
  2616                           
  2617                           
  2618                           ;psect for function ___awmod
  2619  0646                     ___awmod:	
  2620  0646                     i1l1051:	
  2621                           ;incstack = 0
  2622                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2623                           
  2624  0646  1283               	bcf	3,5	;RP0=0, select bank0
  2625  0647  1303               	bcf	3,6	;RP1=0, select bank0
  2626  0648  01AD               	clrf	___awmod@sign
  2627  0649                     i1l1053:	
  2628  0649  1FAA               	btfss	___awmod@dividend+1,7
  2629  064A  2E4C               	goto	u49_21
  2630  064B  2E4D               	goto	u49_20
  2631  064C                     u49_21:	
  2632  064C  2E54               	goto	i1l1059
  2633  064D                     u49_20:	
  2634  064D                     i1l1055:	
  2635  064D  09A9               	comf	___awmod@dividend,f
  2636  064E  09AA               	comf	___awmod@dividend+1,f
  2637  064F  0AA9               	incf	___awmod@dividend,f
  2638  0650  1903               	skipnz
  2639  0651  0AAA               	incf	___awmod@dividend+1,f
  2640  0652                     i1l1057:	
  2641  0652  01AD               	clrf	___awmod@sign
  2642  0653  0AAD               	incf	___awmod@sign,f
  2643  0654                     i1l1059:	
  2644  0654  1FA8               	btfss	___awmod@divisor+1,7
  2645  0655  2E57               	goto	u50_21
  2646  0656  2E58               	goto	u50_20
  2647  0657                     u50_21:	
  2648  0657  2E5D               	goto	i1l1063
  2649  0658                     u50_20:	
  2650  0658                     i1l1061:	
  2651  0658  09A7               	comf	___awmod@divisor,f
  2652  0659  09A8               	comf	___awmod@divisor+1,f
  2653  065A  0AA7               	incf	___awmod@divisor,f
  2654  065B  1903               	skipnz
  2655  065C  0AA8               	incf	___awmod@divisor+1,f
  2656  065D                     i1l1063:	
  2657  065D  0827               	movf	___awmod@divisor,w
  2658  065E  0428               	iorwf	___awmod@divisor+1,w
  2659  065F  1903               	btfsc	3,2
  2660  0660  2E62               	goto	u51_21
  2661  0661  2E63               	goto	u51_20
  2662  0662                     u51_21:	
  2663  0662  2E92               	goto	i1l1081
  2664  0663                     u51_20:	
  2665  0663                     i1l1065:	
  2666  0663  01AC               	clrf	___awmod@counter
  2667  0664  0AAC               	incf	___awmod@counter,f
  2668  0665  2E71               	goto	i1l1071
  2669  0666                     i1l1067:	
  2670  0666  3001               	movlw	1
  2671  0667                     u52_25:	
  2672  0667  1003               	clrc
  2673  0668  0DA7               	rlf	___awmod@divisor,f
  2674  0669  0DA8               	rlf	___awmod@divisor+1,f
  2675  066A  3EFF               	addlw	-1
  2676  066B  1D03               	skipz
  2677  066C  2E67               	goto	u52_25
  2678  066D                     i1l1069:	
  2679  066D  3001               	movlw	1
  2680  066E  00AB               	movwf	??___awmod
  2681  066F  082B               	movf	??___awmod,w
  2682  0670  07AC               	addwf	___awmod@counter,f
  2683  0671                     i1l1071:	
  2684  0671  1FA8               	btfss	___awmod@divisor+1,7
  2685  0672  2E74               	goto	u53_21
  2686  0673  2E75               	goto	u53_20
  2687  0674                     u53_21:	
  2688  0674  2E66               	goto	i1l1067
  2689  0675                     u53_20:	
  2690  0675                     i1l1073:	
  2691  0675  0828               	movf	___awmod@divisor+1,w
  2692  0676  022A               	subwf	___awmod@dividend+1,w
  2693  0677  1D03               	skipz
  2694  0678  2E7B               	goto	u54_25
  2695  0679  0827               	movf	___awmod@divisor,w
  2696  067A  0229               	subwf	___awmod@dividend,w
  2697  067B                     u54_25:	
  2698  067B  1C03               	skipc
  2699  067C  2E7E               	goto	u54_21
  2700  067D  2E7F               	goto	u54_20
  2701  067E                     u54_21:	
  2702  067E  2E85               	goto	i1l1077
  2703  067F                     u54_20:	
  2704  067F                     i1l1075:	
  2705  067F  0827               	movf	___awmod@divisor,w
  2706  0680  02A9               	subwf	___awmod@dividend,f
  2707  0681  0828               	movf	___awmod@divisor+1,w
  2708  0682  1C03               	skipc
  2709  0683  03AA               	decf	___awmod@dividend+1,f
  2710  0684  02AA               	subwf	___awmod@dividend+1,f
  2711  0685                     i1l1077:	
  2712  0685  3001               	movlw	1
  2713  0686                     u55_25:	
  2714  0686  1003               	clrc
  2715  0687  0CA8               	rrf	___awmod@divisor+1,f
  2716  0688  0CA7               	rrf	___awmod@divisor,f
  2717  0689  3EFF               	addlw	-1
  2718  068A  1D03               	skipz
  2719  068B  2E86               	goto	u55_25
  2720  068C                     i1l1079:	
  2721  068C  3001               	movlw	1
  2722  068D  02AC               	subwf	___awmod@counter,f
  2723  068E  1D03               	btfss	3,2
  2724  068F  2E91               	goto	u56_21
  2725  0690  2E92               	goto	u56_20
  2726  0691                     u56_21:	
  2727  0691  2E75               	goto	i1l1073
  2728  0692                     u56_20:	
  2729  0692                     i1l1081:	
  2730  0692  082D               	movf	___awmod@sign,w
  2731  0693  1903               	btfsc	3,2
  2732  0694  2E96               	goto	u57_21
  2733  0695  2E97               	goto	u57_20
  2734  0696                     u57_21:	
  2735  0696  2E9C               	goto	i1l1085
  2736  0697                     u57_20:	
  2737  0697                     i1l1083:	
  2738  0697  09A9               	comf	___awmod@dividend,f
  2739  0698  09AA               	comf	___awmod@dividend+1,f
  2740  0699  0AA9               	incf	___awmod@dividend,f
  2741  069A  1903               	skipnz
  2742  069B  0AAA               	incf	___awmod@dividend+1,f
  2743  069C                     i1l1085:	
  2744  069C  082A               	movf	___awmod@dividend+1,w
  2745  069D  00A8               	movwf	?___awmod+1
  2746  069E  0829               	movf	___awmod@dividend,w
  2747  069F  00A7               	movwf	?___awmod
  2748  06A0                     i1l383:	
  2749  06A0  0008               	return
  2750  06A1                     __end_of___awmod:	
  2751  007E                     btemp	set	126	;btemp
  2752  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        86
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13     13      13
    BANK0            80     35      62
    BANK1            80      0      80
    BANK3            85      8       8
    BANK2            96      0       0

Pointer List with Targets:

    updateScreen@screen	PTR unsigned int  size(1) Largest target is 16
		 -> pantalla(BANK0[16]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _Timer0_ISR in COMMON

    _rand->___lmul

Critical Paths under _main in BANK0

    _main->_updateScreen
    _updateScreen->_setFilas

Critical Paths under _Timer0_ISR in BANK0

    _Timer0_ISR->___awmod
    ___awmod->_rand

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer0_ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10     6      4     966
                                             33 BANK0      2     2      0
                                              0 BANK3      8     4      4
                     _init_interrupt
                         _init_pines
                         _init_timer
                        _setColumnas
                           _setFilas
                       _updateScreen
 ---------------------------------------------------------------------------------
 (1) _updateScreen                                         5     5      0     440
                                             28 BANK0      5     5      0
                           _setFilas
                    _shiftBitColumna
 ---------------------------------------------------------------------------------
 (2) _shiftBitColumna                                      2     2      0      22
                                             18 BANK0      2     2      0
                     _latchClock_Col
                     _latchClock_Fil
                     _shiftClock_Col
 ---------------------------------------------------------------------------------
 (3) _latchClock_Fil                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setFilas                                            10     8      2     341
                                             18 BANK0     10     8      2
                     _shiftClock_Fil
 ---------------------------------------------------------------------------------
 (3) _shiftClock_Fil                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setColumnas                                          8     8      0     182
                                             18 BANK0      8     8      0
                     _latchClock_Col
                     _shiftClock_Col
 ---------------------------------------------------------------------------------
 (3) _shiftClock_Col                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _latchClock_Col                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_timer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_pines                                           0     0      0       0
                     _init_pines_col
                     _init_pines_fil
 ---------------------------------------------------------------------------------
 (2) _init_pines_fil                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_pines_col                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_interrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Timer0_ISR                                           4     4      0     692
                                             14 BANK0      4     4      0
                            ___awmod
                               _rand
 ---------------------------------------------------------------------------------
 (5) _rand                                                 7     5      2     244
                                              0 BANK0      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     448
                                              7 BANK0      7     3      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_interrupt
   _init_pines
     _init_pines_col
     _init_pines_fil
   _init_timer
   _setColumnas
     _latchClock_Col
     _shiftClock_Col
   _setFilas
     _shiftClock_Fil
   _updateScreen
     _setFilas
       _shiftClock_Fil
     _shiftBitColumna
       _latchClock_Col
       _latchClock_Fil
       _shiftClock_Col

 _Timer0_ISR (ROOT)
   ___awmod
     _rand (ARG)
       ___lmul
   _rand
     ___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               55      8       8       9        9.4%
BITBANK3            55      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      50       7      100.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     23      3E       5       77.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               D      D       D       1      100.0%
BITCOMMON            D      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      A3      12        0.0%
ABS                  0      0      A3       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat May 02 00:04:33 2020

                       pc 0002               __CFG_CP$OFF 0000          ??_init_interrupt 0032  
                      l30 043C                        l24 0449                        l33 0429  
                      l27 046A                        l36 0457                        fsr 0004  
        ??_init_pines_col 0032          ??_init_pines_fil 0032                       l100 0521  
                     l120 0409                       l113 05F5                       l105 041B  
                     l123 040F                       l131 0499                       l108 0415  
                     l128 04DC                       l941 043D                       l933 0416  
                     l943 0458                       l935 0410                       l951 05C3  
                     l937 0405                       l953 05E7                       l945 05AF  
                     l961 048A                       l939 040A                       l955 05EC  
                     l947 05B5                       l963 048F                       l981 0432  
                     l965 0494                       l983 0422                       l991 044F  
                     l959 0481                       l993 0450                       l985 044A  
                     l995 0453                       l987 044D                       l997 0454  
                     l989 044E                       l999 0455                       u360 05C2  
                     u361 05C1              __CFG_CPD$OFF 0000                       u365 05BE  
                     u470 04D7                       u454 04A7                       u374 05CF  
                     u471 04D6                       u455 04A5                       u375 05CC  
                     u464 04B1                       u384 05DC                       u480 04E6  
                     u465 04AF                       u385 05D9                       u481 04E5  
                     u475 04D3                       u715 072F                       u724 0742  
                     u725 073F                       u735 075B                       u744 076D  
                     u745 076A                       u755 0786                       u764 0798  
                     u765 0795                       u775 07B1                       u784 07C3  
                     u785 07C0                       _led 0045                       fsr0 0004  
                     indf 0000              ___awmod@sign 002D              __CFG_FOSC$XT 0000  
            __CFG_LVP$OFF 0000                      l1001 0456                      l1011 049D  
                    l1013 049D                      l1031 04CA                      l1023 049F  
                    l1015 049D                      l1033 04D7                      l1025 04B8  
                    l1017 049D                      l1041 04E8                      l1027 04BD  
                    l1043 04F9                      l1029 04C2                      l1045 0500  
                    l1037 04E0                      l1141 0720                      l1133 0701  
                    l1047 0504                      l1039 04E6                      l1143 074E  
                    l1135 0710                      l1049 051B                      l1145 0779  
                    l1137 0710                      l1147 07A4                      l1139 0716  
                    l1149 07CF                      i1l81 06E9                      i1l87 06F6  
                    _TMR0 0001              __CFG_WRT$OFF 0000                      _main 0701  
                    _rand 0568                      _test 00D0                      btemp 007E  
           __CFG_BOREN$ON 0000                      start 0010        shiftBitColumna@bit 0033  
                   ?_main 0190                     ?_rand 0020             __CFG_WDTE$OFF 0000  
         __end_of___awmod 06A1                     i1l231 0567                     i1l383 06A0  
                   i1l667 05AE                     i1l971 052E                     i1l973 0545  
                   i1l975 054E                     i1l967 0522                     i1l977 055F  
                   i1l969 052A                     u40_21 0537                     u40_22 053E  
                   u40_23 0545                     u41_25 0547                     u50_20 0658  
                   u50_21 0657                     u42_25 054F                     u51_20 0663  
                   u43_20 055F                     u51_21 0662                     u43_21 055E  
                   u44_20 05A6                     u60_20 06CA                     u60_21 06C9  
                   u52_25 0667                     u44_25 05A1                     u53_20 0675  
                   u61_20 06ED                     u53_21 0674                     u61_21 06EC  
                   u54_20 067F                     u62_20 06F1                     u54_21 067E  
                   u62_21 06F0                     u54_25 067B                     u39_20 052E  
                   u39_21 052D                     u55_25 0686                     u56_20 0692  
                   u56_21 0691                     u57_20 0697                     u49_20 064D  
                   u57_21 0696                     u49_21 064C                     u58_20 06A5  
                   u58_21 06A4                     u59_20 06B9                     u59_21 06B8  
                   u59_25 06B5       ___lmul@multiplicand 0075                     _randx 0056  
                   _tecla 0043                     pclath 000A                     status 0003  
                   wtemp0 007E           __initialization 07D9              __end_of_main 07D9  
            __end_of_rand 05AF            _latchClock_Fil 0416            _latchClock_Col 0405  
 __size_of_shiftClock_Col 0006   __size_of_shiftClock_Fil 0006              ?_setColumnas 0071  
                  ??_main 0194                    ??_rand 0022                    i1l1003 0568  
                  i1l1005 0589                    i1l1101 06C1                    i1l1007 0597  
                  i1l1111 06F1                    i1l1103 06C5                    i1l1113 06F5  
                  i1l1105 06CA                    i1l1051 0646                    i1l1107 06CE  
                  i1l1061 0658                    i1l1053 0649                    i1l1109 06ED  
                  i1l1071 0671                    i1l1063 065D                    i1l1055 064D  
                  i1l1073 0675                    i1l1065 0663                    i1l1081 0692  
                  i1l1057 0652                    i1l1083 0697                    i1l1075 067F  
                  i1l1067 0666                    i1l1059 0654                    i1l1091 06A5  
                  i1l1085 069C                    i1l1077 0685                    i1l1069 066D  
                  i1l1093 06A6                    i1l1079 068C                    i1l1095 06AC  
                  i1l1097 06B9                    i1l1089 06A1                    i1l1099 06C0  
          __CFG_PWRTE$OFF 0000                _Timer0_ISR 06A1    __end_of_latchClock_Col 040A  
  __end_of_latchClock_Fil 041C                    ___lmul 0522                 ??___awmod 002B  
         ___awmod@divisor 0027           ___awmod@counter 002C          __end_of_setFilas 05F6  
                  saved_w 007E   __end_of__initialization 07FC  __size_of_shiftBitColumna 001C  
      updateScreen@screen 0040           ?_latchClock_Col 0071           ?_latchClock_Fil 0071  
          __pcstackCOMMON 0071              __pidataBANK0 041C              __pidataBANK1 05F6  
          _OPTION_REGbits 0081                __pbssBANK0 0041               ?_Timer0_ISR 0071  
              __pmaintext 0701                   ?___lmul 0071                __pintentry 0004  
          _shiftClock_Fil 0410            _shiftClock_Col 040A            ___lmul@product 007A  
            _ficha_actual 0044      __size_of_setColumnas 0043                 ?_setFilas 0032  
  __end_of_shiftClock_Col 0410    __end_of_shiftClock_Fil 0416           __size_of___lmul 0046  
                 ___awmod 0646         ??_shiftBitColumna 0032                _init_pines 0432  
              _init_timer 044A                   __ptext1 04DD                   __ptext2 047E  
                 __ptext3 0416                   __ptext4 05AF                   __ptext5 0410  
                 __ptext6 049A                   __ptext7 040A                   __ptext8 0405  
                 __ptext9 044A                   _figuras 00A0                   _columna 005B  
                 _corazon 00E0                   _counter 0041          ___awmod@dividend 0029  
     __size_of_Timer0_ISR 0060   __size_of_init_interrupt 0008                   clrloop0 042B  
    end_of_initialization 07FC   __size_of_init_pines_col 0013   __size_of_init_pines_fil 000D  
              ??_setFilas 0034           ?_shiftClock_Col 0071           ?_shiftClock_Fil 0071  
               _PORTBbits 0006                 _PORTCbits 0007                 _PORTDbits 0008  
               _TRISBbits 0086                 _TRISCbits 0087                 _TRISDbits 0088  
        ??_latchClock_Col 0032          ??_latchClock_Fil 0032             ?_updateScreen 0071  
          __end_of___lmul 0568               ?_init_pines 0071               ?_init_timer 0071  
     start_initialization 07D9            ??_updateScreen 003C              ??_Timer0_ISR 002E  
                ??___lmul 0079         setFilas@reg_value 0032                init_fetch0 046B  
             __pdataBANK0 0056               __pdataBANK1 00A0                 ___latbits 0002  
           __pcstackBANK0 0020             __pcstackBANK3 0190            _init_interrupt 0422  
      __end_of_Timer0_ISR 0701            _init_pines_fil 043D            _init_pines_col 0458  
     __size_of_init_pines 000B           _shiftBitColumna 047E       __size_of_init_timer 000E  
       __size_of_setFilas 0047                 _ficha_pos 005A              setColumnas@i 0038  
                ?___awmod 0027             ??_setColumnas 0032    __end_of_init_interrupt 042A  
  __end_of_init_pines_col 046B    __end_of_init_pines_fil 044A         interrupt_function 0004  
        ??_shiftClock_Col 0032          ??_shiftClock_Fil 0032                 clear_ram0 042A  
        setColumnas@valor 0036           ?_init_interrupt 0071      __end_of_updateScreen 0522  
     __end_of_setColumnas 04DD           ?_init_pines_col 0071           ?_init_pines_fil 0071  
 __end_of_shiftBitColumna 049A         ___lmul@multiplier 0071          __size_of___awmod 005B  
            ??_init_pines 0032              ??_init_timer 0032                 setFilas@i 003A  
                __ptext10 0432                  __ptext11 043D                  __ptext12 0458  
                __ptext13 0422                  __ptext14 06A1                  __ptext15 0568  
                __ptext16 0522                  __ptext17 0646             __size_of_main 00D8  
           __size_of_rand 0047        __end_of_init_pines 043D        __end_of_init_timer 0458  
                _pantalla 0046                  _setFilas 05AF                  main@argc 0190  
                main@argv 0192               _setColumnas 049A                _INTCONbits 000B  
                init_ram0 046F          ?_shiftBitColumna 0071                  intlevel1 0000  
    setColumnas@reg_value 0037   __size_of_latchClock_Col 0005   __size_of_latchClock_Fil 0006  
   __size_of_updateScreen 0045              _updateScreen 04DD  
