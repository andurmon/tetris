

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri May 15 15:04:50 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2
    49                           	psect	text34,local,class=CODE,merge=1,delta=2
    50                           	psect	text35,local,class=CODE,merge=1,delta=2
    51                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text37,local,class=CODE,merge=1,delta=2,group=1
    53                           	psect	text38,local,class=CODE,merge=1,delta=2
    54                           	psect	text39,local,class=CODE,merge=1,delta=2,group=1
    55                           	psect	text40,local,class=CODE,merge=1,delta=2
    56                           	psect	intentry,global,class=CODE,delta=2
    57                           	dabs	1,0x7E,2
    58  0000                     
    59                           ; Version 2.10
    60                           ; Generated 31/07/2019 GMT
    61                           ; 
    62                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC16F877A Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     	;# 
    94  0001                     	;# 
    95  0002                     	;# 
    96  0003                     	;# 
    97  0004                     	;# 
    98  0005                     	;# 
    99  0006                     	;# 
   100  0007                     	;# 
   101  0008                     	;# 
   102  0009                     	;# 
   103  000A                     	;# 
   104  000B                     	;# 
   105  000C                     	;# 
   106  000D                     	;# 
   107  000E                     	;# 
   108  000E                     	;# 
   109  000F                     	;# 
   110  0010                     	;# 
   111  0011                     	;# 
   112  0012                     	;# 
   113  0013                     	;# 
   114  0014                     	;# 
   115  0015                     	;# 
   116  0015                     	;# 
   117  0016                     	;# 
   118  0017                     	;# 
   119  0018                     	;# 
   120  0019                     	;# 
   121  001A                     	;# 
   122  001B                     	;# 
   123  001B                     	;# 
   124  001C                     	;# 
   125  001D                     	;# 
   126  001E                     	;# 
   127  001F                     	;# 
   128  0081                     	;# 
   129  0085                     	;# 
   130  0086                     	;# 
   131  0087                     	;# 
   132  0088                     	;# 
   133  0089                     	;# 
   134  008C                     	;# 
   135  008D                     	;# 
   136  008E                     	;# 
   137  0091                     	;# 
   138  0092                     	;# 
   139  0093                     	;# 
   140  0094                     	;# 
   141  0098                     	;# 
   142  0099                     	;# 
   143  009C                     	;# 
   144  009D                     	;# 
   145  009E                     	;# 
   146  009F                     	;# 
   147  010C                     	;# 
   148  010D                     	;# 
   149  010E                     	;# 
   150  010F                     	;# 
   151  018C                     	;# 
   152  018D                     	;# 
   153  0000                     	;# 
   154  0001                     	;# 
   155  0002                     	;# 
   156  0003                     	;# 
   157  0004                     	;# 
   158  0005                     	;# 
   159  0006                     	;# 
   160  0007                     	;# 
   161  0008                     	;# 
   162  0009                     	;# 
   163  000A                     	;# 
   164  000B                     	;# 
   165  000C                     	;# 
   166  000D                     	;# 
   167  000E                     	;# 
   168  000E                     	;# 
   169  000F                     	;# 
   170  0010                     	;# 
   171  0011                     	;# 
   172  0012                     	;# 
   173  0013                     	;# 
   174  0014                     	;# 
   175  0015                     	;# 
   176  0015                     	;# 
   177  0016                     	;# 
   178  0017                     	;# 
   179  0018                     	;# 
   180  0019                     	;# 
   181  001A                     	;# 
   182  001B                     	;# 
   183  001B                     	;# 
   184  001C                     	;# 
   185  001D                     	;# 
   186  001E                     	;# 
   187  001F                     	;# 
   188  0081                     	;# 
   189  0085                     	;# 
   190  0086                     	;# 
   191  0087                     	;# 
   192  0088                     	;# 
   193  0089                     	;# 
   194  008C                     	;# 
   195  008D                     	;# 
   196  008E                     	;# 
   197  0091                     	;# 
   198  0092                     	;# 
   199  0093                     	;# 
   200  0094                     	;# 
   201  0098                     	;# 
   202  0099                     	;# 
   203  009C                     	;# 
   204  009D                     	;# 
   205  009E                     	;# 
   206  009F                     	;# 
   207  010C                     	;# 
   208  010D                     	;# 
   209  010E                     	;# 
   210  010F                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  0000                     	;# 
   214  0001                     	;# 
   215  0002                     	;# 
   216  0003                     	;# 
   217  0004                     	;# 
   218  0005                     	;# 
   219  0006                     	;# 
   220  0007                     	;# 
   221  0008                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000D                     	;# 
   227  000E                     	;# 
   228  000E                     	;# 
   229  000F                     	;# 
   230  0010                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0013                     	;# 
   234  0014                     	;# 
   235  0015                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  001D                     	;# 
   246  001E                     	;# 
   247  001F                     	;# 
   248  0081                     	;# 
   249  0085                     	;# 
   250  0086                     	;# 
   251  0087                     	;# 
   252  0088                     	;# 
   253  0089                     	;# 
   254  008C                     	;# 
   255  008D                     	;# 
   256  008E                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009C                     	;# 
   264  009D                     	;# 
   265  009E                     	;# 
   266  009F                     	;# 
   267  010C                     	;# 
   268  010D                     	;# 
   269  010E                     	;# 
   270  010F                     	;# 
   271  018C                     	;# 
   272  018D                     	;# 
   273  0000                     	;# 
   274  0001                     	;# 
   275  0002                     	;# 
   276  0003                     	;# 
   277  0004                     	;# 
   278  0005                     	;# 
   279  0006                     	;# 
   280  0007                     	;# 
   281  0008                     	;# 
   282  0009                     	;# 
   283  000A                     	;# 
   284  000B                     	;# 
   285  000C                     	;# 
   286  000D                     	;# 
   287  000E                     	;# 
   288  000E                     	;# 
   289  000F                     	;# 
   290  0010                     	;# 
   291  0011                     	;# 
   292  0012                     	;# 
   293  0013                     	;# 
   294  0014                     	;# 
   295  0015                     	;# 
   296  0015                     	;# 
   297  0016                     	;# 
   298  0017                     	;# 
   299  0018                     	;# 
   300  0019                     	;# 
   301  001A                     	;# 
   302  001B                     	;# 
   303  001B                     	;# 
   304  001C                     	;# 
   305  001D                     	;# 
   306  001E                     	;# 
   307  001F                     	;# 
   308  0081                     	;# 
   309  0085                     	;# 
   310  0086                     	;# 
   311  0087                     	;# 
   312  0088                     	;# 
   313  0089                     	;# 
   314  008C                     	;# 
   315  008D                     	;# 
   316  008E                     	;# 
   317  0091                     	;# 
   318  0092                     	;# 
   319  0093                     	;# 
   320  0094                     	;# 
   321  0098                     	;# 
   322  0099                     	;# 
   323  009C                     	;# 
   324  009D                     	;# 
   325  009E                     	;# 
   326  009F                     	;# 
   327  010C                     	;# 
   328  010D                     	;# 
   329  010E                     	;# 
   330  010F                     	;# 
   331  018C                     	;# 
   332  018D                     	;# 
   333  0000                     	;# 
   334  0001                     	;# 
   335  0002                     	;# 
   336  0003                     	;# 
   337  0004                     	;# 
   338  0005                     	;# 
   339  0006                     	;# 
   340  0007                     	;# 
   341  0008                     	;# 
   342  0009                     	;# 
   343  000A                     	;# 
   344  000B                     	;# 
   345  000C                     	;# 
   346  000D                     	;# 
   347  000E                     	;# 
   348  000E                     	;# 
   349  000F                     	;# 
   350  0010                     	;# 
   351  0011                     	;# 
   352  0012                     	;# 
   353  0013                     	;# 
   354  0014                     	;# 
   355  0015                     	;# 
   356  0015                     	;# 
   357  0016                     	;# 
   358  0017                     	;# 
   359  0018                     	;# 
   360  0019                     	;# 
   361  001A                     	;# 
   362  001B                     	;# 
   363  001B                     	;# 
   364  001C                     	;# 
   365  001D                     	;# 
   366  001E                     	;# 
   367  001F                     	;# 
   368  0081                     	;# 
   369  0085                     	;# 
   370  0086                     	;# 
   371  0087                     	;# 
   372  0088                     	;# 
   373  0089                     	;# 
   374  008C                     	;# 
   375  008D                     	;# 
   376  008E                     	;# 
   377  0091                     	;# 
   378  0092                     	;# 
   379  0093                     	;# 
   380  0094                     	;# 
   381  0098                     	;# 
   382  0099                     	;# 
   383  009C                     	;# 
   384  009D                     	;# 
   385  009E                     	;# 
   386  009F                     	;# 
   387  010C                     	;# 
   388  010D                     	;# 
   389  010E                     	;# 
   390  010F                     	;# 
   391  018C                     	;# 
   392  018D                     	;# 
   393  0000                     	;# 
   394  0001                     	;# 
   395  0002                     	;# 
   396  0003                     	;# 
   397  0004                     	;# 
   398  0005                     	;# 
   399  0006                     	;# 
   400  0007                     	;# 
   401  0008                     	;# 
   402  0009                     	;# 
   403  000A                     	;# 
   404  000B                     	;# 
   405  000C                     	;# 
   406  000D                     	;# 
   407  000E                     	;# 
   408  000E                     	;# 
   409  000F                     	;# 
   410  0010                     	;# 
   411  0011                     	;# 
   412  0012                     	;# 
   413  0013                     	;# 
   414  0014                     	;# 
   415  0015                     	;# 
   416  0015                     	;# 
   417  0016                     	;# 
   418  0017                     	;# 
   419  0018                     	;# 
   420  0019                     	;# 
   421  001A                     	;# 
   422  001B                     	;# 
   423  001B                     	;# 
   424  001C                     	;# 
   425  001D                     	;# 
   426  001E                     	;# 
   427  001F                     	;# 
   428  0081                     	;# 
   429  0085                     	;# 
   430  0086                     	;# 
   431  0087                     	;# 
   432  0088                     	;# 
   433  0089                     	;# 
   434  008C                     	;# 
   435  008D                     	;# 
   436  008E                     	;# 
   437  0091                     	;# 
   438  0092                     	;# 
   439  0093                     	;# 
   440  0094                     	;# 
   441  0098                     	;# 
   442  0099                     	;# 
   443  009C                     	;# 
   444  009D                     	;# 
   445  009E                     	;# 
   446  009F                     	;# 
   447  010C                     	;# 
   448  010D                     	;# 
   449  010E                     	;# 
   450  010F                     	;# 
   451  018C                     	;# 
   452  018D                     	;# 
   453  0000                     	;# 
   454  0001                     	;# 
   455  0002                     	;# 
   456  0003                     	;# 
   457  0004                     	;# 
   458  0005                     	;# 
   459  0006                     	;# 
   460  0007                     	;# 
   461  0008                     	;# 
   462  0009                     	;# 
   463  000A                     	;# 
   464  000B                     	;# 
   465  000C                     	;# 
   466  000D                     	;# 
   467  000E                     	;# 
   468  000E                     	;# 
   469  000F                     	;# 
   470  0010                     	;# 
   471  0011                     	;# 
   472  0012                     	;# 
   473  0013                     	;# 
   474  0014                     	;# 
   475  0015                     	;# 
   476  0015                     	;# 
   477  0016                     	;# 
   478  0017                     	;# 
   479  0018                     	;# 
   480  0019                     	;# 
   481  001A                     	;# 
   482  001B                     	;# 
   483  001B                     	;# 
   484  001C                     	;# 
   485  001D                     	;# 
   486  001E                     	;# 
   487  001F                     	;# 
   488  0081                     	;# 
   489  0085                     	;# 
   490  0086                     	;# 
   491  0087                     	;# 
   492  0088                     	;# 
   493  0089                     	;# 
   494  008C                     	;# 
   495  008D                     	;# 
   496  008E                     	;# 
   497  0091                     	;# 
   498  0092                     	;# 
   499  0093                     	;# 
   500  0094                     	;# 
   501  0098                     	;# 
   502  0099                     	;# 
   503  009C                     	;# 
   504  009D                     	;# 
   505  009E                     	;# 
   506  009F                     	;# 
   507  010C                     	;# 
   508  010D                     	;# 
   509  010E                     	;# 
   510  010F                     	;# 
   511  018C                     	;# 
   512  018D                     	;# 
   513  0000                     	;# 
   514  0001                     	;# 
   515  0002                     	;# 
   516  0003                     	;# 
   517  0004                     	;# 
   518  0005                     	;# 
   519  0006                     	;# 
   520  0007                     	;# 
   521  0008                     	;# 
   522  0009                     	;# 
   523  000A                     	;# 
   524  000B                     	;# 
   525  000C                     	;# 
   526  000D                     	;# 
   527  000E                     	;# 
   528  000E                     	;# 
   529  000F                     	;# 
   530  0010                     	;# 
   531  0011                     	;# 
   532  0012                     	;# 
   533  0013                     	;# 
   534  0014                     	;# 
   535  0015                     	;# 
   536  0015                     	;# 
   537  0016                     	;# 
   538  0017                     	;# 
   539  0018                     	;# 
   540  0019                     	;# 
   541  001A                     	;# 
   542  001B                     	;# 
   543  001B                     	;# 
   544  001C                     	;# 
   545  001D                     	;# 
   546  001E                     	;# 
   547  001F                     	;# 
   548  0081                     	;# 
   549  0085                     	;# 
   550  0086                     	;# 
   551  0087                     	;# 
   552  0088                     	;# 
   553  0089                     	;# 
   554  008C                     	;# 
   555  008D                     	;# 
   556  008E                     	;# 
   557  0091                     	;# 
   558  0092                     	;# 
   559  0093                     	;# 
   560  0094                     	;# 
   561  0098                     	;# 
   562  0099                     	;# 
   563  009C                     	;# 
   564  009D                     	;# 
   565  009E                     	;# 
   566  009F                     	;# 
   567  010C                     	;# 
   568  010D                     	;# 
   569  010E                     	;# 
   570  010F                     	;# 
   571  018C                     	;# 
   572  018D                     	;# 
   573  0000                     	;# 
   574  0001                     	;# 
   575  0002                     	;# 
   576  0003                     	;# 
   577  0004                     	;# 
   578  0005                     	;# 
   579  0006                     	;# 
   580  0007                     	;# 
   581  0008                     	;# 
   582  0009                     	;# 
   583  000A                     	;# 
   584  000B                     	;# 
   585  000C                     	;# 
   586  000D                     	;# 
   587  000E                     	;# 
   588  000E                     	;# 
   589  000F                     	;# 
   590  0010                     	;# 
   591  0011                     	;# 
   592  0012                     	;# 
   593  0013                     	;# 
   594  0014                     	;# 
   595  0015                     	;# 
   596  0015                     	;# 
   597  0016                     	;# 
   598  0017                     	;# 
   599  0018                     	;# 
   600  0019                     	;# 
   601  001A                     	;# 
   602  001B                     	;# 
   603  001B                     	;# 
   604  001C                     	;# 
   605  001D                     	;# 
   606  001E                     	;# 
   607  001F                     	;# 
   608  0081                     	;# 
   609  0085                     	;# 
   610  0086                     	;# 
   611  0087                     	;# 
   612  0088                     	;# 
   613  0089                     	;# 
   614  008C                     	;# 
   615  008D                     	;# 
   616  008E                     	;# 
   617  0091                     	;# 
   618  0092                     	;# 
   619  0093                     	;# 
   620  0094                     	;# 
   621  0098                     	;# 
   622  0099                     	;# 
   623  009C                     	;# 
   624  009D                     	;# 
   625  009E                     	;# 
   626  009F                     	;# 
   627  010C                     	;# 
   628  010D                     	;# 
   629  010E                     	;# 
   630  010F                     	;# 
   631  018C                     	;# 
   632  018D                     	;# 
   633  0000                     	;# 
   634  0001                     	;# 
   635  0002                     	;# 
   636  0003                     	;# 
   637  0004                     	;# 
   638  0005                     	;# 
   639  0006                     	;# 
   640  0007                     	;# 
   641  0008                     	;# 
   642  0009                     	;# 
   643  000A                     	;# 
   644  000B                     	;# 
   645  000C                     	;# 
   646  000D                     	;# 
   647  000E                     	;# 
   648  000E                     	;# 
   649  000F                     	;# 
   650  0010                     	;# 
   651  0011                     	;# 
   652  0012                     	;# 
   653  0013                     	;# 
   654  0014                     	;# 
   655  0015                     	;# 
   656  0015                     	;# 
   657  0016                     	;# 
   658  0017                     	;# 
   659  0018                     	;# 
   660  0019                     	;# 
   661  001A                     	;# 
   662  001B                     	;# 
   663  001B                     	;# 
   664  001C                     	;# 
   665  001D                     	;# 
   666  001E                     	;# 
   667  001F                     	;# 
   668  0081                     	;# 
   669  0085                     	;# 
   670  0086                     	;# 
   671  0087                     	;# 
   672  0088                     	;# 
   673  0089                     	;# 
   674  008C                     	;# 
   675  008D                     	;# 
   676  008E                     	;# 
   677  0091                     	;# 
   678  0092                     	;# 
   679  0093                     	;# 
   680  0094                     	;# 
   681  0098                     	;# 
   682  0099                     	;# 
   683  009C                     	;# 
   684  009D                     	;# 
   685  009E                     	;# 
   686  009F                     	;# 
   687  010C                     	;# 
   688  010D                     	;# 
   689  010E                     	;# 
   690  010F                     	;# 
   691  018C                     	;# 
   692  018D                     	;# 
   693                           
   694                           	psect	idataBANK0
   695  0E08                     __pidataBANK0:	
   696                           
   697                           ;initializer for _randx
   698  0E08  3401               	retlw	1
   699  0E09  3400               	retlw	0
   700  0E0A  3400               	retlw	0
   701  0E0B  3400               	retlw	0
   702                           
   703                           	psect	idataBANK1
   704  0ECC                     __pidataBANK1:	
   705                           
   706                           ;initializer for _figuras
   707  0ECC  3402               	retlw	2
   708  0ECD  3402               	retlw	2
   709  0ECE  3403               	retlw	3
   710  0ECF  3400               	retlw	0
   711  0ED0  3403               	retlw	3
   712  0ED1  3402               	retlw	2
   713  0ED2  3402               	retlw	2
   714  0ED3  3400               	retlw	0
   715  0ED4  3401               	retlw	1
   716  0ED5  3403               	retlw	3
   717  0ED6  3402               	retlw	2
   718  0ED7  3400               	retlw	0
   719  0ED8  3402               	retlw	2
   720  0ED9  3403               	retlw	3
   721  0EDA  3401               	retlw	1
   722  0EDB  3400               	retlw	0
   723  0EDC  3401               	retlw	1
   724  0EDD  3401               	retlw	1
   725  0EDE  3401               	retlw	1
   726  0EDF  3401               	retlw	1
   727  0EE0  3403               	retlw	3
   728  0EE1  3403               	retlw	3
   729  0EE2  3400               	retlw	0
   730  0EE3  3400               	retlw	0
   731  0EE4  3401               	retlw	1
   732  0EE5  3403               	retlw	3
   733  0EE6  3401               	retlw	1
   734  0EE7  3400               	retlw	0
   735  0001                     _TMR0	set	1
   736  000B                     _INTCONbits	set	11
   737  0008                     _PORTDbits	set	8
   738  0006                     _PORTBbits	set	6
   739  0007                     _PORTCbits	set	7
   740  0009                     _PORTEbits	set	9
   741  0005                     _PORTAbits	set	5
   742  0081                     _OPTION_REGbits	set	129
   743  0088                     _TRISDbits	set	136
   744  0087                     _TRISCbits	set	135
   745  0089                     _TRISEbits	set	137
   746  0085                     _TRISAbits	set	133
   747  009F                     _ADCON1	set	159
   748  0086                     _TRISBbits	set	134
   749                           
   750                           ; #config settings
   751  0000                     
   752                           	psect	cinit
   753  07D1                     start_initialization:	
   754  07D1                     __initialization:	
   755                           
   756                           ; Initialize objects allocated to BANK1
   757  07D1  1383               	bcf	3,7	;select IRP bank0
   758  07D2  30DC               	movlw	low (__pdataBANK1+28)
   759  07D3  00FD               	movwf	btemp+-1
   760  07D4  300E               	movlw	high __pidataBANK1
   761  07D5  00FE               	movwf	btemp
   762  07D6  30CC               	movlw	low __pidataBANK1
   763  07D7  00FF               	movwf	btemp+1
   764  07D8  30C0               	movlw	low __pdataBANK1
   765  07D9  0084               	movwf	4
   766  07DA  120A  158A  2672  120A  118A  	fcall	init_ram0
   767                           
   768                           ; Initialize objects allocated to BANK0
   769  07DF  306C               	movlw	low (__pdataBANK0+4)
   770  07E0  00FD               	movwf	btemp+-1
   771  07E1  300E               	movlw	high __pidataBANK0
   772  07E2  00FE               	movwf	btemp
   773  07E3  3008               	movlw	low __pidataBANK0
   774  07E4  00FF               	movwf	btemp+1
   775  07E5  3068               	movlw	low __pdataBANK0
   776  07E6  0084               	movwf	4
   777  07E7  120A  158A  2672  120A  118A  	fcall	init_ram0
   778                           
   779                           ; Clear objects allocated to BANK1
   780  07EC  30A0               	movlw	low __pbssBANK1
   781  07ED  0084               	movwf	4
   782  07EE  30C0               	movlw	low (__pbssBANK1+32)
   783  07EF  120A  158A  2623  120A  118A  	fcall	clear_ram0
   784                           
   785                           ; Clear objects allocated to BANK0
   786  07F4  3046               	movlw	low __pbssBANK0
   787  07F5  0084               	movwf	4
   788  07F6  3068               	movlw	low (__pbssBANK0+34)
   789  07F7  120A  158A  2623  120A  118A  	fcall	clear_ram0
   790  07FC                     end_of_initialization:	
   791                           ;End of C runtime variable initialization code
   792                           
   793  07FC                     __end_of__initialization:	
   794  07FC  0183               	clrf	3
   795  07FD  120A  118A  2B32   	ljmp	_main	;jump to C main() function
   796                           
   797                           	psect	bssBANK0
   798  0046                     __pbssBANK0:	
   799  0046                     _con:	
   800  0046                     	ds	10
   801  0050                     gire@F1224:	
   802  0050                     	ds	4
   803  0054                     _timerCount:	
   804  0054                     	ds	4
   805  0058                     _ficha:	
   806  0058                     	ds	16
   807                           
   808                           	psect	dataBANK0
   809  0068                     __pdataBANK0:	
   810  0068                     _randx:	
   811  0068                     	ds	4
   812                           
   813                           	psect	bssBANK1
   814  00A0                     __pbssBANK1:	
   815  00A0                     _fondo:	
   816  00A0                     	ds	16
   817  00B0                     _pantalla:	
   818  00B0                     	ds	16
   819                           
   820                           	psect	dataBANK1
   821  00C0                     __pdataBANK1:	
   822  00C0                     _figuras:	
   823  00C0                     	ds	28
   824                           
   825                           	psect	inittext
   826  0E6E                     init_fetch0:	
   827                           ;	Called with low address in FSR and high address in W
   828                           
   829  0E6E  087E               	movf	btemp,w
   830  0E6F  008A               	movwf	10
   831  0E70  087F               	movf	btemp+1,w
   832  0E71  0082               	movwf	2
   833  0E72                     init_ram0:	
   834                           ;Called with:
   835                           ;	high address of idata address in btemp 
   836                           ;	low address of idata address in btemp+1 
   837                           ;	low address of data in FSR
   838                           ;	high address + 1 of data in btemp-1
   839                           
   840  0E72  120A  158A  266E  120A  158A  	fcall	init_fetch0
   841  0E77  0080               	movwf	0
   842  0E78  0A84               	incf	4,f
   843  0E79  0804               	movf	4,w
   844  0E7A  067D               	xorwf	btemp+-1,w
   845  0E7B  1903               	btfsc	3,2
   846  0E7C  3400               	retlw	0
   847  0E7D  0AFF               	incf	btemp+1,f
   848  0E7E  1903               	btfsc	3,2
   849  0E7F  0AFE               	incf	btemp,f
   850  0E80  2E72               	goto	init_ram0
   851                           
   852                           	psect	clrtext
   853  0E23                     clear_ram0:	
   854                           ;	Called with FSR containing the base address, and
   855                           ;	W with the last address+1
   856                           
   857  0E23  0064               	clrwdt	;clear the watchdog before getting into this loop
   858  0E24                     clrloop0:	
   859  0E24  0180               	clrf	0	;clear RAM location pointed to by FSR
   860  0E25  0A84               	incf	4,f	;increment pointer
   861  0E26  0604               	xorwf	4,w	;XOR with final address
   862  0E27  1903               	btfsc	3,2	;have we reached the end yet?
   863  0E28  3400               	retlw	0	;all done for this memory range, return
   864  0E29  0604               	xorwf	4,w	;XOR again to restore value
   865  0E2A  2E24               	goto	clrloop0	;do the next byte
   866                           
   867                           	psect	cstackCOMMON
   868  0071                     __pcstackCOMMON:	
   869  0071                     ?_init_pines_LCD:	
   870  0071                     ?_init_pines_fil:	
   871                           ; 1 bytes @ 0x0
   872                           
   873  0071                     ?_init_pines_col:	
   874                           ; 1 bytes @ 0x0
   875                           
   876  0071                     ?_init_pines_in:	
   877                           ; 1 bytes @ 0x0
   878                           
   879  0071                     ?_init_LCD:	
   880                           ; 1 bytes @ 0x0
   881                           
   882  0071                     ?_checkCount:	
   883                           ; 1 bytes @ 0x0
   884                           
   885  0071                     ?_updateScreen:	
   886                           ; 1 bytes @ 0x0
   887                           
   888  0071                     ?_drawFigure:	
   889                           ; 1 bytes @ 0x0
   890                           
   891  0071                     ?_checkColission_R:	
   892                           ; 1 bytes @ 0x0
   893                           
   894  0071                     ?_checkRight:	
   895                           ; 1 bytes @ 0x0
   896                           
   897  0071                     ?_checkColission_L:	
   898                           ; 1 bytes @ 0x0
   899                           
   900  0071                     ?_checkBottom:	
   901                           ; 1 bytes @ 0x0
   902                           
   903  0071                     ?_checkColission_D:	
   904                           ; 1 bytes @ 0x0
   905                           
   906  0071                     ?_perdio:	
   907                           ; 1 bytes @ 0x0
   908                           
   909  0071                     ?_sumaPuntos:	
   910                           ; 1 bytes @ 0x0
   911                           
   912  0071                     ?_addToScreen:	
   913                           ; 1 bytes @ 0x0
   914                           
   915  0071                     ?_clearDisplay:	
   916                           ; 1 bytes @ 0x0
   917                           
   918  0071                     ?_clearRS:	
   919                           ; 1 bytes @ 0x0
   920                           
   921  0071                     ?_clearRW:	
   922                           ; 1 bytes @ 0x0
   923                           
   924  0071                     ?_setData:	
   925                           ; 1 bytes @ 0x0
   926                           
   927  0071                     ?_init_pines:	
   928                           ; 1 bytes @ 0x0
   929                           
   930  0071                     ?_init_timer:	
   931                           ; 1 bytes @ 0x0
   932                           
   933  0071                     ?_gire:	
   934                           ; 1 bytes @ 0x0
   935                           
   936  0071                     ?_leerEntradas:	
   937                           ; 1 bytes @ 0x0
   938                           
   939  0071                     ?_Timer0_ISR:	
   940                           ; 1 bytes @ 0x0
   941                           
   942  0071                     ??_Timer0_ISR:	
   943                           ; 1 bytes @ 0x0
   944                           
   945  0071                     ?_latchClock_Fil:	
   946                           ; 1 bytes @ 0x0
   947                           
   948  0071                     ?_shiftClock_Fil:	
   949                           ; 1 bytes @ 0x0
   950                           
   951  0071                     ?_latchClock_Col:	
   952                           ; 1 bytes @ 0x0
   953                           
   954  0071                     ?_shiftClock_Col:	
   955                           ; 1 bytes @ 0x0
   956                           
   957  0071                     ?_shiftBitColumna:	
   958                           ; 1 bytes @ 0x0
   959                           
   960  0071                     ?_drawBground:	
   961                           ; 1 bytes @ 0x0
   962                           
   963                           
   964                           ; 1 bytes @ 0x0
   965  0071                     	ds	2
   966  0073                     ??_init_pines_LCD:	
   967  0073                     ??_init_pines_fil:	
   968                           ; 1 bytes @ 0x2
   969                           
   970  0073                     ??_init_pines_col:	
   971                           ; 1 bytes @ 0x2
   972                           
   973  0073                     ??_init_pines_in:	
   974                           ; 1 bytes @ 0x2
   975                           
   976  0073                     ?_srand:	
   977                           ; 1 bytes @ 0x2
   978                           
   979  0073                     ??_checkColission_R:	
   980                           ; 1 bytes @ 0x2
   981                           
   982  0073                     ??_checkRight:	
   983                           ; 1 bytes @ 0x2
   984                           
   985  0073                     ??_checkColission_L:	
   986                           ; 1 bytes @ 0x2
   987                           
   988  0073                     ??_sumaPuntos:	
   989                           ; 1 bytes @ 0x2
   990                           
   991  0073                     ??_addToScreen:	
   992                           ; 1 bytes @ 0x2
   993                           
   994  0073                     ?_memset:	
   995                           ; 1 bytes @ 0x2
   996                           
   997  0073                     ??_clearRS:	
   998                           ; 1 bytes @ 0x2
   999                           
  1000  0073                     ??_clearRW:	
  1001                           ; 1 bytes @ 0x2
  1002                           
  1003  0073                     ??_setData:	
  1004                           ; 1 bytes @ 0x2
  1005                           
  1006  0073                     ??_init_pines:	
  1007                           ; 1 bytes @ 0x2
  1008                           
  1009  0073                     ??_init_timer:	
  1010                           ; 1 bytes @ 0x2
  1011                           
  1012  0073                     ??_gire:	
  1013                           ; 1 bytes @ 0x2
  1014                           
  1015  0073                     ??_latchClock_Fil:	
  1016                           ; 1 bytes @ 0x2
  1017                           
  1018  0073                     ??_shiftClock_Fil:	
  1019                           ; 1 bytes @ 0x2
  1020                           
  1021  0073                     ?_setFilas:	
  1022                           ; 1 bytes @ 0x2
  1023                           
  1024  0073                     ??_latchClock_Col:	
  1025                           ; 1 bytes @ 0x2
  1026                           
  1027  0073                     ??_shiftClock_Col:	
  1028                           ; 1 bytes @ 0x2
  1029                           
  1030  0073                     ??_shiftBitColumna:	
  1031                           ; 1 bytes @ 0x2
  1032                           
  1033  0073                     ??_drawBground:	
  1034                           ; 1 bytes @ 0x2
  1035                           
  1036  0073                     ?___lmul:	
  1037                           ; 1 bytes @ 0x2
  1038                           
  1039  0073                     setFilas@reg_value:	
  1040                           ; 4 bytes @ 0x2
  1041                           
  1042  0073                     memset@c:	
  1043                           ; 2 bytes @ 0x2
  1044                           
  1045  0073                     srand@x:	
  1046                           ; 2 bytes @ 0x2
  1047                           
  1048  0073                     ___lmul@multiplier:	
  1049                           ; 2 bytes @ 0x2
  1050                           
  1051                           
  1052                           ; 4 bytes @ 0x2
  1053  0073                     	ds	1
  1054  0074                     shiftBitColumna@bit:	
  1055                           
  1056                           ; 1 bytes @ 0x3
  1057  0074                     	ds	1
  1058  0075                     ??_srand:	
  1059  0075                     ??_setFilas:	
  1060                           ; 1 bytes @ 0x4
  1061                           
  1062  0075                     setData@data:	
  1063                           ; 1 bytes @ 0x4
  1064                           
  1065  0075                     memset@n:	
  1066                           ; 1 bytes @ 0x4
  1067                           
  1068                           
  1069                           ; 2 bytes @ 0x4
  1070  0075                     	ds	1
  1071  0076                     ?_functionSet:	
  1072  0076                     ?_displayONOFF:	
  1073                           ; 1 bytes @ 0x5
  1074                           
  1075  0076                     ??_clearDisplay:	
  1076                           ; 1 bytes @ 0x5
  1077                           
  1078  0076                     ?_entryModeSet:	
  1079                           ; 1 bytes @ 0x5
  1080                           
  1081  0076                     entryModeSet@SH:	
  1082                           ; 1 bytes @ 0x5
  1083                           
  1084  0076                     displayONOFF@C:	
  1085                           ; 1 bytes @ 0x5
  1086                           
  1087  0076                     functionSet@N:	
  1088                           ; 1 bytes @ 0x5
  1089                           
  1090                           
  1091                           ; 1 bytes @ 0x5
  1092  0076                     	ds	1
  1093  0077                     ??_memset:	
  1094  0077                     ??_entryModeSet:	
  1095                           ; 1 bytes @ 0x6
  1096                           
  1097  0077                     sumaPuntos@aux:	
  1098                           ; 1 bytes @ 0x6
  1099                           
  1100  0077                     displayONOFF@B:	
  1101                           ; 1 bytes @ 0x6
  1102                           
  1103  0077                     functionSet@F:	
  1104                           ; 1 bytes @ 0x6
  1105                           
  1106  0077                     ___lmul@multiplicand:	
  1107                           ; 1 bytes @ 0x6
  1108                           
  1109                           
  1110                           ; 4 bytes @ 0x6
  1111  0077                     	ds	1
  1112  0078                     ??_functionSet:	
  1113  0078                     ??_displayONOFF:	
  1114                           ; 1 bytes @ 0x7
  1115                           
  1116  0078                     entryModeSet@ID:	
  1117                           ; 1 bytes @ 0x7
  1118                           
  1119  0078                     memset@p:	
  1120                           ; 1 bytes @ 0x7
  1121                           
  1122  0078                     sumaPuntos@i:	
  1123                           ; 1 bytes @ 0x7
  1124                           
  1125                           
  1126                           ; 2 bytes @ 0x7
  1127  0078                     	ds	1
  1128  0079                     memset@p1:	
  1129  0079                     _entryModeSet$749:	
  1130                           ; 1 bytes @ 0x8
  1131                           
  1132                           
  1133                           ; 2 bytes @ 0x8
  1134  0079                     	ds	1
  1135  007A                     sumaPuntos@j:	
  1136                           
  1137                           ; 2 bytes @ 0x9
  1138  007A                     	ds	1
  1139  007B                     ??_leerEntradas:	
  1140  007B                     ??___lmul:	
  1141                           ; 1 bytes @ 0xA
  1142                           
  1143  007B                     entryModeSet@data:	
  1144                           ; 1 bytes @ 0xA
  1145                           
  1146                           
  1147                           ; 1 bytes @ 0xA
  1148  007B                     	ds	1
  1149                           
  1150                           	psect	cstackBANK0
  1151  0020                     __pcstackBANK0:	
  1152  0020                     ??_drawFigure:	
  1153  0020                     displayONOFF@D:	
  1154                           ; 1 bytes @ 0x0
  1155                           
  1156  0020                     functionSet@DL:	
  1157                           ; 1 bytes @ 0x0
  1158                           
  1159  0020                     gire@k:	
  1160                           ; 1 bytes @ 0x0
  1161                           
  1162  0020                     setFilas@i:	
  1163                           ; 2 bytes @ 0x0
  1164                           
  1165  0020                     addToScreen@i:	
  1166                           ; 2 bytes @ 0x0
  1167                           
  1168  0020                     drawBground@i:	
  1169                           ; 2 bytes @ 0x0
  1170                           
  1171  0020                     checkColission_R@i:	
  1172                           ; 2 bytes @ 0x0
  1173                           
  1174  0020                     checkColission_L@i:	
  1175                           ; 2 bytes @ 0x0
  1176                           
  1177  0020                     ___lmul@product:	
  1178                           ; 2 bytes @ 0x0
  1179                           
  1180                           
  1181                           ; 4 bytes @ 0x0
  1182  0020                     	ds	1
  1183  0021                     _displayONOFF$755:	
  1184  0021                     _functionSet$762:	
  1185                           ; 2 bytes @ 0x1
  1186                           
  1187                           
  1188                           ; 2 bytes @ 0x1
  1189  0021                     	ds	1
  1190  0022                     ??_updateScreen:	
  1191  0022                     gire@mask:	
  1192                           ; 1 bytes @ 0x2
  1193                           
  1194                           
  1195                           ; 1 bytes @ 0x2
  1196  0022                     	ds	1
  1197  0023                     _displayONOFF$756:	
  1198  0023                     _functionSet$763:	
  1199                           ; 2 bytes @ 0x3
  1200                           
  1201  0023                     gire@aux:	
  1202                           ; 2 bytes @ 0x3
  1203                           
  1204                           
  1205                           ; 4 bytes @ 0x3
  1206  0023                     	ds	1
  1207  0024                     ?_rand:	
  1208                           
  1209                           ; 2 bytes @ 0x4
  1210  0024                     	ds	1
  1211  0025                     displayONOFF@data:	
  1212  0025                     _functionSet$764:	
  1213                           ; 1 bytes @ 0x5
  1214                           
  1215                           
  1216                           ; 2 bytes @ 0x5
  1217  0025                     	ds	1
  1218  0026                     ??_rand:	
  1219  0026                     updateScreen@screen:	
  1220                           ; 1 bytes @ 0x6
  1221                           
  1222                           
  1223                           ; 1 bytes @ 0x6
  1224  0026                     	ds	1
  1225  0027                     functionSet@data:	
  1226  0027                     gire@j:	
  1227                           ; 1 bytes @ 0x7
  1228                           
  1229  0027                     updateScreen@i:	
  1230                           ; 2 bytes @ 0x7
  1231                           
  1232                           
  1233                           ; 2 bytes @ 0x7
  1234  0027                     	ds	1
  1235  0028                     ??_init_LCD:	
  1236                           
  1237                           ; 1 bytes @ 0x8
  1238  0028                     	ds	1
  1239  0029                     gire@i:	
  1240                           
  1241                           ; 2 bytes @ 0x9
  1242  0029                     	ds	2
  1243  002B                     ?___awmod:	
  1244  002B                     ___awmod@divisor:	
  1245                           ; 2 bytes @ 0xB
  1246                           
  1247                           
  1248                           ; 2 bytes @ 0xB
  1249  002B                     	ds	1
  1250  002C                     init_LCD@N:	
  1251                           
  1252                           ; 1 bytes @ 0xC
  1253  002C                     	ds	1
  1254  002D                     ___awmod@dividend:	
  1255                           
  1256                           ; 2 bytes @ 0xD
  1257  002D                     	ds	2
  1258  002F                     ??___awmod:	
  1259  002F                     init_LCD@S:	
  1260                           ; 1 bytes @ 0xF
  1261                           
  1262                           
  1263                           ; 1 bytes @ 0xF
  1264  002F                     	ds	1
  1265  0030                     ___awmod@counter:	
  1266                           
  1267                           ; 1 bytes @ 0x10
  1268  0030                     	ds	1
  1269  0031                     ___awmod@sign:	
  1270                           
  1271                           ; 1 bytes @ 0x11
  1272  0031                     	ds	1
  1273  0032                     ??_checkBottom:	
  1274  0032                     ??_checkColission_D:	
  1275                           ; 1 bytes @ 0x12
  1276                           
  1277  0032                     ??_perdio:	
  1278                           ; 1 bytes @ 0x12
  1279                           
  1280                           
  1281                           ; 1 bytes @ 0x12
  1282  0032                     	ds	3
  1283  0035                     perdio@i:	
  1284                           
  1285                           ; 2 bytes @ 0x15
  1286  0035                     	ds	5
  1287  003A                     checkColission_D@i:	
  1288                           
  1289                           ; 2 bytes @ 0x1A
  1290  003A                     	ds	2
  1291  003C                     ??_checkCount:	
  1292                           
  1293                           ; 1 bytes @ 0x1C
  1294  003C                     	ds	3
  1295  003F                     checkCount@j:	
  1296                           
  1297                           ; 2 bytes @ 0x1F
  1298  003F                     	ds	2
  1299  0041                     ?_main:	
  1300  0041                     main@argc:	
  1301                           ; 2 bytes @ 0x21
  1302                           
  1303                           
  1304                           ; 2 bytes @ 0x21
  1305  0041                     	ds	2
  1306  0043                     main@argv:	
  1307                           
  1308                           ; 2 bytes @ 0x23
  1309  0043                     	ds	2
  1310  0045                     ??_main:	
  1311                           
  1312                           ; 1 bytes @ 0x25
  1313  0045                     	ds	1
  1314                           
  1315                           	psect	maintext
  1316  0332                     __pmaintext:	
  1317 ;;
  1318 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1319 ;;
  1320 ;; *************** function _main *****************
  1321 ;; Defined at:
  1322 ;;		line 45 in file "mainsource.c"
  1323 ;; Parameters:    Size  Location     Type
  1324 ;;  argc            2   33[BANK0 ] int 
  1325 ;;  argv            2   35[BANK0 ] PTR PTR unsigned char 
  1326 ;; Auto vars:     Size  Location     Type
  1327 ;;  j               2    0        int 
  1328 ;;  i               2    0        int 
  1329 ;; Return value:  Size  Location     Type
  1330 ;;                  2   33[BANK0 ] int 
  1331 ;; Registers used:
  1332 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1333 ;; Tracked objects:
  1334 ;;		On entry : B00/0
  1335 ;;		On exit  : 0/0
  1336 ;;		Unchanged: 0/0
  1337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1338 ;;      Params:         0       4       0       0       0
  1339 ;;      Locals:         0       4       0       0       0
  1340 ;;      Temps:          0       1       0       0       0
  1341 ;;      Totals:         0       9       0       0       0
  1342 ;;Total ram usage:        9 bytes
  1343 ;; Hardware stack levels required when called:    5
  1344 ;; This function calls:
  1345 ;;		___awmod
  1346 ;;		_checkCount
  1347 ;;		_init_LCD
  1348 ;;		_init_pines
  1349 ;;		_init_timer
  1350 ;;		_rand
  1351 ;;		_srand
  1352 ;;		_updateScreen
  1353 ;; This function is called by:
  1354 ;;		Startup code after reset
  1355 ;; This function uses a non-reentrant model
  1356 ;;
  1357                           
  1358                           
  1359                           ;psect for function _main
  1360  0332                     _main:	
  1361  0332                     l2302:	
  1362                           ;incstack = 0
  1363                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1364                           
  1365                           
  1366                           ;mainsource.c: 49:     init_timer();
  1367  0332  120A  158A  264D  120A  118A  	fcall	_init_timer
  1368  0337                     l2304:	
  1369                           
  1370                           ;mainsource.c: 50:     init_pines();
  1371  0337  120A  158A  2681  120A  118A  	fcall	_init_pines
  1372  033C                     l2306:	
  1373                           
  1374                           ;mainsource.c: 51:     init_LCD();
  1375  033C  120A  118A  251C  120A  118A  	fcall	_init_LCD
  1376  0341                     l2308:	
  1377  0341                     l2310:	
  1378  0341                     l2312:	
  1379                           
  1380                           ;mainsource.c: 54:     con.girar =0;
  1381  0341  1283               	bcf	3,5	;RP0=0, select bank0
  1382  0342  1303               	bcf	3,6	;RP1=0, select bank0
  1383  0343  01C6               	clrf	_con
  1384  0344                     l2314:	
  1385                           
  1386                           ;mainsource.c: 55:     con.ficha_Vpos = 16;
  1387  0344  3010               	movlw	16
  1388  0345  00C5               	movwf	??_main
  1389  0346  0845               	movf	??_main,w
  1390  0347  00C8               	movwf	_con+2
  1391  0348                     l2316:	
  1392                           
  1393                           ;mainsource.c: 56:     con.ficha_Hpos = 2;
  1394  0348  3002               	movlw	2
  1395  0349  00C5               	movwf	??_main
  1396  034A  0845               	movf	??_main,w
  1397  034B  00C9               	movwf	_con+3
  1398  034C                     l2318:	
  1399                           
  1400                           ;mainsource.c: 57:     con.puntaje = 0;
  1401  034C  01CE               	clrf	_con+8
  1402  034D  01CF               	clrf	_con+9
  1403  034E                     l2320:	
  1404                           
  1405                           ;mainsource.c: 58:     srand(2);
  1406  034E  3002               	movlw	2
  1407  034F  00F3               	movwf	srand@x
  1408  0350  3000               	movlw	0
  1409  0351  00F4               	movwf	srand@x+1
  1410  0352  120A  158A  262B  120A  118A  	fcall	_srand
  1411  0357                     l2322:	
  1412                           
  1413                           ;mainsource.c: 59:     con.ficha_actual = rand() % 7;
  1414  0357  3007               	movlw	7
  1415  0358  1283               	bcf	3,5	;RP0=0, select bank0
  1416  0359  1303               	bcf	3,6	;RP1=0, select bank0
  1417  035A  00AB               	movwf	___awmod@divisor
  1418  035B  3000               	movlw	0
  1419  035C  00AC               	movwf	___awmod@divisor+1
  1420  035D  120A  118A  209A  120A  118A  	fcall	_rand
  1421  0362  1283               	bcf	3,5	;RP0=0, select bank0
  1422  0363  1303               	bcf	3,6	;RP1=0, select bank0
  1423  0364  0825               	movf	?_rand+1,w
  1424  0365  00AE               	movwf	___awmod@dividend+1
  1425  0366  0824               	movf	?_rand,w
  1426  0367  00AD               	movwf	___awmod@dividend
  1427  0368  120A  118A  2382  120A  118A  	fcall	___awmod
  1428  036D  1283               	bcf	3,5	;RP0=0, select bank0
  1429  036E  1303               	bcf	3,6	;RP1=0, select bank0
  1430  036F  082B               	movf	?___awmod,w
  1431  0370  00C5               	movwf	??_main
  1432  0371  0845               	movf	??_main,w
  1433  0372  00CA               	movwf	_con+4
  1434  0373                     l2324:	
  1435                           
  1436                           ;mainsource.c: 62:         checkCount();
  1437  0373  120A  118A  22E3  120A  118A  	fcall	_checkCount
  1438  0378                     l2326:	
  1439                           
  1440                           ;mainsource.c: 63:         updateScreen(pantalla);
  1441  0378  30B0               	movlw	(low (_pantalla| 0))& (0+255)
  1442  0379  120A  118A  23DD  120A  118A  	fcall	_updateScreen
  1443  037E  2B73               	goto	l2324
  1444  037F  120A  118A  280C   	ljmp	start
  1445  0382                     __end_of_main:	
  1446                           
  1447                           	psect	text1
  1448  03DD                     __ptext1:	
  1449 ;; *************** function _updateScreen *****************
  1450 ;; Defined at:
  1451 ;;		line 17 in file "screen.c"
  1452 ;; Parameters:    Size  Location     Type
  1453 ;;  screen          1    wreg     PTR unsigned int 
  1454 ;;		 -> pantalla(16), 
  1455 ;; Auto vars:     Size  Location     Type
  1456 ;;  screen          1    6[BANK0 ] PTR unsigned int 
  1457 ;;		 -> pantalla(16), 
  1458 ;;  i               2    7[BANK0 ] int 
  1459 ;; Return value:  Size  Location     Type
  1460 ;;                  1    wreg      void 
  1461 ;; Registers used:
  1462 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1463 ;; Tracked objects:
  1464 ;;		On entry : 0/0
  1465 ;;		On exit  : 0/0
  1466 ;;		Unchanged: 0/0
  1467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1468 ;;      Params:         0       0       0       0       0
  1469 ;;      Locals:         0       3       0       0       0
  1470 ;;      Temps:          0       4       0       0       0
  1471 ;;      Totals:         0       7       0       0       0
  1472 ;;Total ram usage:        7 bytes
  1473 ;; Hardware stack levels used:    1
  1474 ;; Hardware stack levels required when called:    3
  1475 ;; This function calls:
  1476 ;;		_addToScreen
  1477 ;;		_setFilas
  1478 ;;		_shiftBitColumna
  1479 ;; This function is called by:
  1480 ;;		_main
  1481 ;; This function uses a non-reentrant model
  1482 ;;
  1483                           
  1484                           
  1485                           ;psect for function _updateScreen
  1486  03DD                     _updateScreen:	
  1487                           
  1488                           ;incstack = 0
  1489                           ; Regs used in _updateScreen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1490                           ;updateScreen@screen stored from wreg
  1491  03DD  1283               	bcf	3,5	;RP0=0, select bank0
  1492  03DE  1303               	bcf	3,6	;RP1=0, select bank0
  1493  03DF  00A6               	movwf	updateScreen@screen
  1494  03E0                     l2278:	
  1495  03E0                     l2280:	
  1496                           
  1497                           ;screen.c: 20:     addToScreen();
  1498  03E0  120A  118A  2015  120A  118A  	fcall	_addToScreen
  1499  03E5                     l2282:	
  1500                           
  1501                           ;screen.c: 22:     for(i=0; i<=7;i++){
  1502  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  1503  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  1504  03E7  01A7               	clrf	updateScreen@i
  1505  03E8  01A8               	clrf	updateScreen@i+1
  1506  03E9                     l2288:	
  1507                           
  1508                           ;screen.c: 23:        if(i == 0){
  1509  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  1510  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  1511  03EB  0827               	movf	updateScreen@i,w
  1512  03EC  0428               	iorwf	updateScreen@i+1,w
  1513  03ED  1D03               	btfss	3,2
  1514  03EE  2BF0               	goto	u1681
  1515  03EF  2BF1               	goto	u1680
  1516  03F0                     u1681:	
  1517  03F0  2C0E               	goto	l2294
  1518  03F1                     u1680:	
  1519  03F1                     l2290:	
  1520                           
  1521                           ;screen.c: 24:             setFilas(~screen[i]);
  1522  03F1  0827               	movf	updateScreen@i,w
  1523  03F2  00A2               	movwf	??_updateScreen
  1524  03F3  0722               	addwf	??_updateScreen,w
  1525  03F4  0726               	addwf	updateScreen@screen,w
  1526  03F5  00A3               	movwf	??_updateScreen+1
  1527  03F6  0823               	movf	??_updateScreen+1,w
  1528  03F7  0084               	movwf	4
  1529  03F8  1383               	bcf	3,7	;select IRP bank0
  1530  03F9  0800               	movf	0,w
  1531  03FA  00A4               	movwf	??_updateScreen+2
  1532  03FB  0A84               	incf	4,f
  1533  03FC  0800               	movf	0,w
  1534  03FD  00A5               	movwf	??_updateScreen+3
  1535  03FE  0924               	comf	??_updateScreen+2,w
  1536  03FF  00F3               	movwf	setFilas@reg_value
  1537  0400  0925               	comf	??_updateScreen+3,w
  1538  0401  00F4               	movwf	setFilas@reg_value+1
  1539  0402  120A  118A  216F  120A  118A  	fcall	_setFilas
  1540  0407                     l2292:	
  1541                           
  1542                           ;screen.c: 25:             shiftBitColumna(1);
  1543  0407  3001               	movlw	1
  1544  0408  120A  158A  26B0  120A  118A  	fcall	_shiftBitColumna
  1545                           
  1546                           ;screen.c: 26:         }
  1547  040D  2C2A               	goto	l2298
  1548  040E                     l2294:	
  1549                           
  1550                           ;screen.c: 28:             setFilas(~screen[i]);
  1551  040E  0827               	movf	updateScreen@i,w
  1552  040F  00A2               	movwf	??_updateScreen
  1553  0410  0722               	addwf	??_updateScreen,w
  1554  0411  0726               	addwf	updateScreen@screen,w
  1555  0412  00A3               	movwf	??_updateScreen+1
  1556  0413  0823               	movf	??_updateScreen+1,w
  1557  0414  0084               	movwf	4
  1558  0415  1383               	bcf	3,7	;select IRP bank0
  1559  0416  0800               	movf	0,w
  1560  0417  00A4               	movwf	??_updateScreen+2
  1561  0418  0A84               	incf	4,f
  1562  0419  0800               	movf	0,w
  1563  041A  00A5               	movwf	??_updateScreen+3
  1564  041B  0924               	comf	??_updateScreen+2,w
  1565  041C  00F3               	movwf	setFilas@reg_value
  1566  041D  0925               	comf	??_updateScreen+3,w
  1567  041E  00F4               	movwf	setFilas@reg_value+1
  1568  041F  120A  118A  216F  120A  118A  	fcall	_setFilas
  1569  0424                     l2296:	
  1570                           
  1571                           ;screen.c: 29:             shiftBitColumna(0);
  1572  0424  3000               	movlw	0
  1573  0425  120A  158A  26B0  120A  118A  	fcall	_shiftBitColumna
  1574  042A                     l2298:	
  1575                           
  1576                           ;screen.c: 31:     }
  1577  042A  3001               	movlw	1
  1578  042B  1283               	bcf	3,5	;RP0=0, select bank0
  1579  042C  1303               	bcf	3,6	;RP1=0, select bank0
  1580  042D  07A7               	addwf	updateScreen@i,f
  1581  042E  1803               	skipnc
  1582  042F  0AA8               	incf	updateScreen@i+1,f
  1583  0430  3000               	movlw	0
  1584  0431  07A8               	addwf	updateScreen@i+1,f
  1585  0432                     l2300:	
  1586  0432  0828               	movf	updateScreen@i+1,w
  1587  0433  3A80               	xorlw	128
  1588  0434  00FF               	movwf	btemp+1
  1589  0435  3080               	movlw	128
  1590  0436  027F               	subwf	btemp+1,w
  1591  0437  1D03               	skipz
  1592  0438  2C3B               	goto	u1695
  1593  0439  3008               	movlw	8
  1594  043A  0227               	subwf	updateScreen@i,w
  1595  043B                     u1695:	
  1596  043B  1C03               	skipc
  1597  043C  2C3E               	goto	u1691
  1598  043D  2C3F               	goto	u1690
  1599  043E                     u1691:	
  1600  043E  2BE9               	goto	l2288
  1601  043F                     u1690:	
  1602  043F                     l213:	
  1603  043F  0008               	return
  1604  0440                     __end_of_updateScreen:	
  1605                           
  1606                           	psect	text2
  1607  0EB0                     __ptext2:	
  1608 ;; *************** function _shiftBitColumna *****************
  1609 ;; Defined at:
  1610 ;;		line 33 in file "columnas.c"
  1611 ;; Parameters:    Size  Location     Type
  1612 ;;  bit             1    wreg     unsigned char 
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;  bit             1    3[COMMON] unsigned char 
  1615 ;; Return value:  Size  Location     Type
  1616 ;;                  1    wreg      void 
  1617 ;; Registers used:
  1618 ;;		wreg, status,2, status,0, pclath, cstack
  1619 ;; Tracked objects:
  1620 ;;		On entry : 0/0
  1621 ;;		On exit  : 0/0
  1622 ;;		Unchanged: 0/0
  1623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1624 ;;      Params:         0       0       0       0       0
  1625 ;;      Locals:         1       0       0       0       0
  1626 ;;      Temps:          1       0       0       0       0
  1627 ;;      Totals:         2       0       0       0       0
  1628 ;;Total ram usage:        2 bytes
  1629 ;; Hardware stack levels used:    1
  1630 ;; Hardware stack levels required when called:    2
  1631 ;; This function calls:
  1632 ;;		_latchClock_Col
  1633 ;;		_latchClock_Fil
  1634 ;;		_shiftClock_Col
  1635 ;; This function is called by:
  1636 ;;		_updateScreen
  1637 ;; This function uses a non-reentrant model
  1638 ;;
  1639                           
  1640                           
  1641                           ;psect for function _shiftBitColumna
  1642  0EB0                     _shiftBitColumna:	
  1643                           
  1644                           ;incstack = 0
  1645                           ; Regs used in _shiftBitColumna: [wreg+status,2+status,0+pclath+cstack]
  1646                           ;shiftBitColumna@bit stored from wreg
  1647  0EB0  00F4               	movwf	shiftBitColumna@bit
  1648  0EB1                     l2094:	
  1649                           
  1650                           ;columnas.c: 34:     PORTDbits.RD4= bit & 0x01;
  1651  0EB1  0874               	movf	shiftBitColumna@bit,w
  1652  0EB2  3901               	andlw	1
  1653  0EB3  00F3               	movwf	??_shiftBitColumna
  1654  0EB4  0EF3               	swapf	??_shiftBitColumna,f
  1655  0EB5  1283               	bcf	3,5	;RP0=0, select bank0
  1656  0EB6  1303               	bcf	3,6	;RP1=0, select bank0
  1657  0EB7  0808               	movf	8,w	;volatile
  1658  0EB8  0673               	xorwf	??_shiftBitColumna,w
  1659  0EB9  39EF               	andlw	-17
  1660  0EBA  0673               	xorwf	??_shiftBitColumna,w
  1661  0EBB  0088               	movwf	8	;volatile
  1662  0EBC                     l2096:	
  1663                           
  1664                           ;columnas.c: 35:     shiftClock_Col();
  1665  0EBC  120A  118A  200F  120A  158A  	fcall	_shiftClock_Col
  1666  0EC1                     l2098:	
  1667                           
  1668                           ;columnas.c: 36:     latchClock_Col();
  1669  0EC1  120A  158A  260C  120A  158A  	fcall	_latchClock_Col
  1670  0EC6                     l2100:	
  1671                           
  1672                           ;columnas.c: 37:     latchClock_Fil();
  1673  0EC6  120A  158A  261D  120A  158A  	fcall	_latchClock_Fil
  1674  0ECB                     l186:	
  1675  0ECB  0008               	return
  1676  0ECC                     __end_of_shiftBitColumna:	
  1677                           
  1678                           	psect	text3
  1679  000F                     __ptext3:	
  1680 ;; *************** function _shiftClock_Col *****************
  1681 ;; Defined at:
  1682 ;;		line 13 in file "columnas.c"
  1683 ;; Parameters:    Size  Location     Type
  1684 ;;		None
  1685 ;; Auto vars:     Size  Location     Type
  1686 ;;		None
  1687 ;; Return value:  Size  Location     Type
  1688 ;;                  1    wreg      void 
  1689 ;; Registers used:
  1690 ;;		None
  1691 ;; Tracked objects:
  1692 ;;		On entry : 0/0
  1693 ;;		On exit  : 0/0
  1694 ;;		Unchanged: 0/0
  1695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1696 ;;      Params:         0       0       0       0       0
  1697 ;;      Locals:         0       0       0       0       0
  1698 ;;      Temps:          0       0       0       0       0
  1699 ;;      Totals:         0       0       0       0       0
  1700 ;;Total ram usage:        0 bytes
  1701 ;; Hardware stack levels used:    1
  1702 ;; Hardware stack levels required when called:    1
  1703 ;; This function calls:
  1704 ;;		Nothing
  1705 ;; This function is called by:
  1706 ;;		_shiftBitColumna
  1707 ;;		_setColumnas
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711                           
  1712                           ;psect for function _shiftClock_Col
  1713  000F                     _shiftClock_Col:	
  1714  000F                     l1858:	
  1715                           ;incstack = 0
  1716                           ; Regs used in _shiftClock_Col: []
  1717                           
  1718                           
  1719                           ;columnas.c: 14:     PORTDbits.RD7 = 0;
  1720  000F  1283               	bcf	3,5	;RP0=0, select bank0
  1721  0010  1303               	bcf	3,6	;RP1=0, select bank0
  1722  0011  1388               	bcf	8,7	;volatile
  1723                           
  1724                           ;columnas.c: 15:     PORTDbits.RD7 = 1;
  1725  0012  1788               	bsf	8,7	;volatile
  1726                           
  1727                           ;columnas.c: 16:     PORTDbits.RD7 = 0;
  1728  0013  1388               	bcf	8,7	;volatile
  1729  0014                     l178:	
  1730  0014  0008               	return
  1731  0015                     __end_of_shiftClock_Col:	
  1732                           
  1733                           	psect	text4
  1734  0E1D                     __ptext4:	
  1735 ;; *************** function _latchClock_Fil *****************
  1736 ;; Defined at:
  1737 ;;		line 7 in file "filas.c"
  1738 ;; Parameters:    Size  Location     Type
  1739 ;;		None
  1740 ;; Auto vars:     Size  Location     Type
  1741 ;;		None
  1742 ;; Return value:  Size  Location     Type
  1743 ;;                  1    wreg      void 
  1744 ;; Registers used:
  1745 ;;		None
  1746 ;; Tracked objects:
  1747 ;;		On entry : 0/0
  1748 ;;		On exit  : 0/0
  1749 ;;		Unchanged: 0/0
  1750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1751 ;;      Params:         0       0       0       0       0
  1752 ;;      Locals:         0       0       0       0       0
  1753 ;;      Temps:          0       0       0       0       0
  1754 ;;      Totals:         0       0       0       0       0
  1755 ;;Total ram usage:        0 bytes
  1756 ;; Hardware stack levels used:    1
  1757 ;; Hardware stack levels required when called:    1
  1758 ;; This function calls:
  1759 ;;		Nothing
  1760 ;; This function is called by:
  1761 ;;		_shiftBitColumna
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765                           
  1766                           ;psect for function _latchClock_Fil
  1767  0E1D                     _latchClock_Fil:	
  1768  0E1D                     l1852:	
  1769                           ;incstack = 0
  1770                           ; Regs used in _latchClock_Fil: []
  1771                           
  1772                           
  1773                           ;filas.c: 8:     PORTCbits.RC6 = 0;
  1774  0E1D  1283               	bcf	3,5	;RP0=0, select bank0
  1775  0E1E  1303               	bcf	3,6	;RP1=0, select bank0
  1776  0E1F  1307               	bcf	7,6	;volatile
  1777                           
  1778                           ;filas.c: 9:     PORTCbits.RC6 = 1;
  1779  0E20  1707               	bsf	7,6	;volatile
  1780                           
  1781                           ;filas.c: 10:     PORTCbits.RC6 = 0;
  1782  0E21  1307               	bcf	7,6	;volatile
  1783  0E22                     l160:	
  1784  0E22  0008               	return
  1785  0E23                     __end_of_latchClock_Fil:	
  1786                           
  1787                           	psect	text5
  1788  0E0C                     __ptext5:	
  1789 ;; *************** function _latchClock_Col *****************
  1790 ;; Defined at:
  1791 ;;		line 8 in file "columnas.c"
  1792 ;; Parameters:    Size  Location     Type
  1793 ;;		None
  1794 ;; Auto vars:     Size  Location     Type
  1795 ;;		None
  1796 ;; Return value:  Size  Location     Type
  1797 ;;                  1    wreg      void 
  1798 ;; Registers used:
  1799 ;;		None
  1800 ;; Tracked objects:
  1801 ;;		On entry : 0/0
  1802 ;;		On exit  : 0/0
  1803 ;;		Unchanged: 0/0
  1804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1805 ;;      Params:         0       0       0       0       0
  1806 ;;      Locals:         0       0       0       0       0
  1807 ;;      Temps:          0       0       0       0       0
  1808 ;;      Totals:         0       0       0       0       0
  1809 ;;Total ram usage:        0 bytes
  1810 ;; Hardware stack levels used:    1
  1811 ;; Hardware stack levels required when called:    1
  1812 ;; This function calls:
  1813 ;;		Nothing
  1814 ;; This function is called by:
  1815 ;;		_shiftBitColumna
  1816 ;;		_setColumnas
  1817 ;; This function uses a non-reentrant model
  1818 ;;
  1819                           
  1820                           
  1821                           ;psect for function _latchClock_Col
  1822  0E0C                     _latchClock_Col:	
  1823  0E0C                     l1856:	
  1824                           ;incstack = 0
  1825                           ; Regs used in _latchClock_Col: []
  1826                           
  1827                           
  1828                           ;columnas.c: 9:     PORTDbits.RD6 = 1;
  1829  0E0C  1283               	bcf	3,5	;RP0=0, select bank0
  1830  0E0D  1303               	bcf	3,6	;RP1=0, select bank0
  1831  0E0E  1708               	bsf	8,6	;volatile
  1832                           
  1833                           ;columnas.c: 10:     PORTDbits.RD6 = 0;
  1834  0E0F  1308               	bcf	8,6	;volatile
  1835  0E10                     l175:	
  1836  0E10  0008               	return
  1837  0E11                     __end_of_latchClock_Col:	
  1838                           
  1839                           	psect	text6
  1840  016F                     __ptext6:	
  1841 ;; *************** function _setFilas *****************
  1842 ;; Defined at:
  1843 ;;		line 19 in file "filas.c"
  1844 ;; Parameters:    Size  Location     Type
  1845 ;;  reg_value       2    2[COMMON] unsigned int 
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;  i               2    0[BANK0 ] int 
  1848 ;; Return value:  Size  Location     Type
  1849 ;;                  1    wreg      void 
  1850 ;; Registers used:
  1851 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1852 ;; Tracked objects:
  1853 ;;		On entry : 0/0
  1854 ;;		On exit  : 0/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1857 ;;      Params:         2       0       0       0       0
  1858 ;;      Locals:         0       2       0       0       0
  1859 ;;      Temps:          6       0       0       0       0
  1860 ;;      Totals:         8       2       0       0       0
  1861 ;;Total ram usage:       10 bytes
  1862 ;; Hardware stack levels used:    1
  1863 ;; Hardware stack levels required when called:    2
  1864 ;; This function calls:
  1865 ;;		_shiftClock_Fil
  1866 ;; This function is called by:
  1867 ;;		_updateScreen
  1868 ;; This function uses a non-reentrant model
  1869 ;;
  1870                           
  1871                           
  1872                           ;psect for function _setFilas
  1873  016F                     _setFilas:	
  1874  016F                     l2080:	
  1875                           ;incstack = 0
  1876                           ; Regs used in _setFilas: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1877                           
  1878                           
  1879                           ;filas.c: 20:     int i = 0;
  1880  016F  1283               	bcf	3,5	;RP0=0, select bank0
  1881  0170  1303               	bcf	3,6	;RP1=0, select bank0
  1882  0171  01A0               	clrf	setFilas@i
  1883  0172  01A1               	clrf	setFilas@i+1
  1884                           
  1885                           ;filas.c: 21:     for(i=0;i<16;i++){
  1886  0173  01A0               	clrf	setFilas@i
  1887  0174  01A1               	clrf	setFilas@i+1
  1888  0175                     l2082:	
  1889  0175  0821               	movf	setFilas@i+1,w
  1890  0176  3A80               	xorlw	128
  1891  0177  00FF               	movwf	btemp+1
  1892  0178  3080               	movlw	128
  1893  0179  027F               	subwf	btemp+1,w
  1894  017A  1D03               	skipz
  1895  017B  297E               	goto	u1525
  1896  017C  3010               	movlw	16
  1897  017D  0220               	subwf	setFilas@i,w
  1898  017E                     u1525:	
  1899  017E  1C03               	skipc
  1900  017F  2981               	goto	u1521
  1901  0180  2982               	goto	u1520
  1902  0181                     u1521:	
  1903  0181  2983               	goto	l2086
  1904  0182                     u1520:	
  1905  0182  29B5               	goto	l168
  1906  0183                     l2086:	
  1907                           
  1908                           ;filas.c: 22:         PORTCbits.RC4 = (reg_value & (1<<i) )>>i;
  1909  0183  1283               	bcf	3,5	;RP0=0, select bank0
  1910  0184  1303               	bcf	3,6	;RP1=0, select bank0
  1911  0185  0A20               	incf	setFilas@i,w
  1912  0186  00F5               	movwf	??_setFilas
  1913  0187  3001               	movlw	1
  1914  0188  00F6               	movwf	??_setFilas+1
  1915  0189  3000               	movlw	0
  1916  018A  00F7               	movwf	??_setFilas+2
  1917  018B  298F               	goto	u1534
  1918  018C                     u1535:	
  1919  018C  1003               	clrc
  1920  018D  0DF6               	rlf	??_setFilas+1,f
  1921  018E  0DF7               	rlf	??_setFilas+2,f
  1922  018F                     u1534:	
  1923  018F  0BF5               	decfsz	??_setFilas,f
  1924  0190  298C               	goto	u1535
  1925  0191  0873               	movf	setFilas@reg_value,w
  1926  0192  0576               	andwf	??_setFilas+1,w
  1927  0193  00F8               	movwf	??_setFilas+3
  1928  0194  0874               	movf	setFilas@reg_value+1,w
  1929  0195  0577               	andwf	??_setFilas+2,w
  1930  0196  00F9               	movwf	??_setFilas+4
  1931  0197  0A20               	incf	setFilas@i,w
  1932  0198  299C               	goto	u1544
  1933  0199                     u1545:	
  1934  0199  1003               	clrc
  1935  019A  0CF9               	rrf	??_setFilas+4,f
  1936  019B  0CF8               	rrf	??_setFilas+3,f
  1937  019C                     u1544:	
  1938  019C  3EFF               	addlw	-1
  1939  019D  1D03               	skipz
  1940  019E  2999               	goto	u1545
  1941  019F  0878               	movf	??_setFilas+3,w
  1942  01A0  00FA               	movwf	??_setFilas+5
  1943  01A1  0EFA               	swapf	??_setFilas+5,f
  1944  01A2  0807               	movf	7,w	;volatile
  1945  01A3  067A               	xorwf	??_setFilas+5,w
  1946  01A4  39EF               	andlw	-17
  1947  01A5  067A               	xorwf	??_setFilas+5,w
  1948  01A6  0087               	movwf	7	;volatile
  1949  01A7                     l2088:	
  1950                           
  1951                           ;filas.c: 23:         shiftClock_Fil();
  1952  01A7  120A  158A  2617  120A  118A  	fcall	_shiftClock_Fil
  1953  01AC                     l2090:	
  1954                           
  1955                           ;filas.c: 24:     }
  1956  01AC  3001               	movlw	1
  1957  01AD  1283               	bcf	3,5	;RP0=0, select bank0
  1958  01AE  1303               	bcf	3,6	;RP1=0, select bank0
  1959  01AF  07A0               	addwf	setFilas@i,f
  1960  01B0  1803               	skipnc
  1961  01B1  0AA1               	incf	setFilas@i+1,f
  1962  01B2  3000               	movlw	0
  1963  01B3  07A1               	addwf	setFilas@i+1,f
  1964  01B4  2975               	goto	l2082
  1965  01B5                     l168:	
  1966  01B5  0008               	return
  1967  01B6                     __end_of_setFilas:	
  1968                           
  1969                           	psect	text7
  1970  0E17                     __ptext7:	
  1971 ;; *************** function _shiftClock_Fil *****************
  1972 ;; Defined at:
  1973 ;;		line 13 in file "filas.c"
  1974 ;; Parameters:    Size  Location     Type
  1975 ;;		None
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;		None
  1978 ;; Return value:  Size  Location     Type
  1979 ;;                  1    wreg      void 
  1980 ;; Registers used:
  1981 ;;		None
  1982 ;; Tracked objects:
  1983 ;;		On entry : 0/0
  1984 ;;		On exit  : 0/0
  1985 ;;		Unchanged: 0/0
  1986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1987 ;;      Params:         0       0       0       0       0
  1988 ;;      Locals:         0       0       0       0       0
  1989 ;;      Temps:          0       0       0       0       0
  1990 ;;      Totals:         0       0       0       0       0
  1991 ;;Total ram usage:        0 bytes
  1992 ;; Hardware stack levels used:    1
  1993 ;; Hardware stack levels required when called:    1
  1994 ;; This function calls:
  1995 ;;		Nothing
  1996 ;; This function is called by:
  1997 ;;		_setFilas
  1998 ;; This function uses a non-reentrant model
  1999 ;;
  2000                           
  2001                           
  2002                           ;psect for function _shiftClock_Fil
  2003  0E17                     _shiftClock_Fil:	
  2004  0E17                     l1854:	
  2005                           ;incstack = 0
  2006                           ; Regs used in _shiftClock_Fil: []
  2007                           
  2008                           
  2009                           ;filas.c: 14:     PORTCbits.RC7 = 0;
  2010  0E17  1283               	bcf	3,5	;RP0=0, select bank0
  2011  0E18  1303               	bcf	3,6	;RP1=0, select bank0
  2012  0E19  1387               	bcf	7,7	;volatile
  2013                           
  2014                           ;filas.c: 15:     PORTCbits.RC7 = 1;
  2015  0E1A  1787               	bsf	7,7	;volatile
  2016                           
  2017                           ;filas.c: 16:     PORTCbits.RC7 = 0;
  2018  0E1B  1387               	bcf	7,7	;volatile
  2019  0E1C                     l163:	
  2020  0E1C  0008               	return
  2021  0E1D                     __end_of_shiftClock_Fil:	
  2022                           
  2023                           	psect	text8
  2024  0015                     __ptext8:	
  2025 ;; *************** function _addToScreen *****************
  2026 ;; Defined at:
  2027 ;;		line 39 in file "screen.c"
  2028 ;; Parameters:    Size  Location     Type
  2029 ;;		None
  2030 ;; Auto vars:     Size  Location     Type
  2031 ;;  i               2    0[BANK0 ] int 
  2032 ;; Return value:  Size  Location     Type
  2033 ;;                  1    wreg      void 
  2034 ;; Registers used:
  2035 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2036 ;; Tracked objects:
  2037 ;;		On entry : 0/0
  2038 ;;		On exit  : 0/0
  2039 ;;		Unchanged: 0/0
  2040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2041 ;;      Params:         0       0       0       0       0
  2042 ;;      Locals:         0       2       0       0       0
  2043 ;;      Temps:          9       0       0       0       0
  2044 ;;      Totals:         9       2       0       0       0
  2045 ;;Total ram usage:       11 bytes
  2046 ;; Hardware stack levels used:    1
  2047 ;; Hardware stack levels required when called:    1
  2048 ;; This function calls:
  2049 ;;		Nothing
  2050 ;; This function is called by:
  2051 ;;		_updateScreen
  2052 ;; This function uses a non-reentrant model
  2053 ;;
  2054                           
  2055                           
  2056                           ;psect for function _addToScreen
  2057  0015                     _addToScreen:	
  2058  0015                     l2102:	
  2059                           ;incstack = 0
  2060                           ; Regs used in _addToScreen: [wreg-fsr0h+status,2+status,0+btemp+1]
  2061                           
  2062                           
  2063                           ;screen.c: 40:     int i=0;
  2064  0015  1283               	bcf	3,5	;RP0=0, select bank0
  2065  0016  1303               	bcf	3,6	;RP1=0, select bank0
  2066  0017  01A0               	clrf	addToScreen@i
  2067  0018  01A1               	clrf	addToScreen@i+1
  2068                           
  2069                           ;screen.c: 41:     for(i=0; i<8; i++){
  2070  0019  01A0               	clrf	addToScreen@i
  2071  001A  01A1               	clrf	addToScreen@i+1
  2072  001B                     l2108:	
  2073                           
  2074                           ;screen.c: 42:         pantalla[i] = ficha[i] | fondo[i];
  2075  001B  1283               	bcf	3,5	;RP0=0, select bank0
  2076  001C  1303               	bcf	3,6	;RP1=0, select bank0
  2077  001D  0820               	movf	addToScreen@i,w
  2078  001E  00F3               	movwf	??_addToScreen
  2079  001F  0773               	addwf	??_addToScreen,w
  2080  0020  3EA0               	addlw	(low (_fondo| 0))& (0+255)
  2081  0021  0084               	movwf	4
  2082  0022  1383               	bcf	3,7	;select IRP bank1
  2083  0023  0800               	movf	0,w
  2084  0024  00F4               	movwf	??_addToScreen+1
  2085  0025  0A84               	incf	4,f
  2086  0026  0800               	movf	0,w
  2087  0027  00F5               	movwf	??_addToScreen+2
  2088  0028  0820               	movf	addToScreen@i,w
  2089  0029  00F6               	movwf	??_addToScreen+3
  2090  002A  0776               	addwf	??_addToScreen+3,w
  2091  002B  3E58               	addlw	(low (_ficha| 0))& (0+255)
  2092  002C  0084               	movwf	4
  2093  002D  0800               	movf	0,w
  2094  002E  00F7               	movwf	??_addToScreen+4
  2095  002F  0A84               	incf	4,f
  2096  0030  0800               	movf	0,w
  2097  0031  00F8               	movwf	??_addToScreen+5
  2098  0032  0874               	movf	??_addToScreen+1,w
  2099  0033  0477               	iorwf	??_addToScreen+4,w
  2100  0034  00F9               	movwf	??_addToScreen+6
  2101  0035  0875               	movf	??_addToScreen+2,w
  2102  0036  0478               	iorwf	??_addToScreen+5,w
  2103  0037  00FA               	movwf	??_addToScreen+7
  2104  0038  0820               	movf	addToScreen@i,w
  2105  0039  00FB               	movwf	??_addToScreen+8
  2106  003A  077B               	addwf	??_addToScreen+8,w
  2107  003B  3EB0               	addlw	(low (_pantalla| 0))& (0+255)
  2108  003C  0084               	movwf	4
  2109  003D  0879               	movf	??_addToScreen+6,w
  2110  003E  0080               	movwf	0
  2111  003F  0A84               	incf	4,f
  2112  0040  087A               	movf	??_addToScreen+7,w
  2113  0041  0080               	movwf	0
  2114  0042                     l2110:	
  2115                           
  2116                           ;screen.c: 43:     }
  2117  0042  3001               	movlw	1
  2118  0043  07A0               	addwf	addToScreen@i,f
  2119  0044  1803               	skipnc
  2120  0045  0AA1               	incf	addToScreen@i+1,f
  2121  0046  3000               	movlw	0
  2122  0047  07A1               	addwf	addToScreen@i+1,f
  2123  0048                     l2112:	
  2124  0048  0821               	movf	addToScreen@i+1,w
  2125  0049  3A80               	xorlw	128
  2126  004A  00FF               	movwf	btemp+1
  2127  004B  3080               	movlw	128
  2128  004C  027F               	subwf	btemp+1,w
  2129  004D  1D03               	skipz
  2130  004E  2851               	goto	u1555
  2131  004F  3008               	movlw	8
  2132  0050  0220               	subwf	addToScreen@i,w
  2133  0051                     u1555:	
  2134  0051  1C03               	skipc
  2135  0052  2854               	goto	u1551
  2136  0053  2855               	goto	u1550
  2137  0054                     u1551:	
  2138  0054  281B               	goto	l2108
  2139  0055                     u1550:	
  2140  0055                     l218:	
  2141  0055  0008               	return
  2142  0056                     __end_of_addToScreen:	
  2143                           
  2144                           	psect	text9
  2145  0E2B                     __ptext9:	
  2146 ;; *************** function _srand *****************
  2147 ;; Defined at:
  2148 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  2149 ;; Parameters:    Size  Location     Type
  2150 ;;  x               2    2[COMMON] unsigned int 
  2151 ;; Auto vars:     Size  Location     Type
  2152 ;;		None
  2153 ;; Return value:  Size  Location     Type
  2154 ;;                  1    wreg      void 
  2155 ;; Registers used:
  2156 ;;		wreg
  2157 ;; Tracked objects:
  2158 ;;		On entry : 0/0
  2159 ;;		On exit  : 0/0
  2160 ;;		Unchanged: 0/0
  2161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2162 ;;      Params:         2       0       0       0       0
  2163 ;;      Locals:         0       0       0       0       0
  2164 ;;      Temps:          0       0       0       0       0
  2165 ;;      Totals:         2       0       0       0       0
  2166 ;;Total ram usage:        2 bytes
  2167 ;; Hardware stack levels used:    1
  2168 ;; Hardware stack levels required when called:    1
  2169 ;; This function calls:
  2170 ;;		Nothing
  2171 ;; This function is called by:
  2172 ;;		_main
  2173 ;; This function uses a non-reentrant model
  2174 ;;
  2175                           
  2176                           
  2177                           ;psect for function _srand
  2178  0E2B                     _srand:	
  2179  0E2B                     l2252:	
  2180                           ;incstack = 0
  2181                           ; Regs used in _srand: [wreg]
  2182                           
  2183  0E2B  0873               	movf	srand@x,w
  2184  0E2C  1283               	bcf	3,5	;RP0=0, select bank0
  2185  0E2D  1303               	bcf	3,6	;RP1=0, select bank0
  2186  0E2E  00E8               	movwf	_randx
  2187  0E2F  0874               	movf	srand@x+1,w
  2188  0E30  00E9               	movwf	_randx+1
  2189  0E31  01EA               	clrf	_randx+2
  2190  0E32  01EB               	clrf	_randx+3
  2191  0E33                     l925:	
  2192  0E33  0008               	return
  2193  0E34                     __end_of_srand:	
  2194                           
  2195                           	psect	text10
  2196  0E4D                     __ptext10:	
  2197 ;; *************** function _init_timer *****************
  2198 ;; Defined at:
  2199 ;;		line 86 in file "init.c"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;		None
  2202 ;; Auto vars:     Size  Location     Type
  2203 ;;		None
  2204 ;; Return value:  Size  Location     Type
  2205 ;;                  1    wreg      void 
  2206 ;; Registers used:
  2207 ;;		status,2
  2208 ;; Tracked objects:
  2209 ;;		On entry : 0/0
  2210 ;;		On exit  : 0/0
  2211 ;;		Unchanged: 0/0
  2212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2213 ;;      Params:         0       0       0       0       0
  2214 ;;      Locals:         0       0       0       0       0
  2215 ;;      Temps:          0       0       0       0       0
  2216 ;;      Totals:         0       0       0       0       0
  2217 ;;Total ram usage:        0 bytes
  2218 ;; Hardware stack levels used:    1
  2219 ;; Hardware stack levels required when called:    1
  2220 ;; This function calls:
  2221 ;;		Nothing
  2222 ;; This function is called by:
  2223 ;;		_main
  2224 ;; This function uses a non-reentrant model
  2225 ;;
  2226                           
  2227                           
  2228                           ;psect for function _init_timer
  2229  0E4D                     _init_timer:	
  2230  0E4D                     l2196:	
  2231                           ;incstack = 0
  2232                           ; Regs used in _init_timer: [status,2]
  2233                           
  2234                           
  2235                           ;init.c: 88:     TMR0=0;
  2236  0E4D  1283               	bcf	3,5	;RP0=0, select bank0
  2237  0E4E  1303               	bcf	3,6	;RP1=0, select bank0
  2238  0E4F  0181               	clrf	1	;volatile
  2239  0E50                     l2198:	
  2240                           
  2241                           ;init.c: 96:     INTCONbits.GIE = 1;
  2242  0E50  178B               	bsf	11,7	;volatile
  2243  0E51                     l2200:	
  2244                           
  2245                           ;init.c: 97:     INTCONbits.TMR0IE = 1;
  2246  0E51  168B               	bsf	11,5	;volatile
  2247  0E52                     l2202:	
  2248                           
  2249                           ;init.c: 98:     INTCONbits.TMR0IF = 0;
  2250  0E52  110B               	bcf	11,2	;volatile
  2251  0E53                     l2204:	
  2252                           
  2253                           ;init.c: 107:     OPTION_REGbits.PSA = 0;
  2254  0E53  1683               	bsf	3,5	;RP0=1, select bank1
  2255  0E54  1303               	bcf	3,6	;RP1=0, select bank1
  2256  0E55  1181               	bcf	1,3	;volatile
  2257  0E56                     l2206:	
  2258                           
  2259                           ;init.c: 108:     OPTION_REGbits.PS0 = 1;
  2260  0E56  1401               	bsf	1,0	;volatile
  2261  0E57                     l2208:	
  2262                           
  2263                           ;init.c: 109:     OPTION_REGbits.PS1 = 1;
  2264  0E57  1481               	bsf	1,1	;volatile
  2265  0E58                     l2210:	
  2266                           
  2267                           ;init.c: 110:     OPTION_REGbits.PS2 = 1;
  2268  0E58  1501               	bsf	1,2	;volatile
  2269  0E59                     l2212:	
  2270                           
  2271                           ;init.c: 111:     OPTION_REGbits.T0CS = 0;
  2272  0E59  1281               	bcf	1,5	;volatile
  2273  0E5A                     l57:	
  2274  0E5A  0008               	return
  2275  0E5B                     __end_of_init_timer:	
  2276                           
  2277                           	psect	text11
  2278  0E81                     __ptext11:	
  2279 ;; *************** function _init_pines *****************
  2280 ;; Defined at:
  2281 ;;		line 5 in file "init.c"
  2282 ;; Parameters:    Size  Location     Type
  2283 ;;		None
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;		None
  2286 ;; Return value:  Size  Location     Type
  2287 ;;                  1    wreg      void 
  2288 ;; Registers used:
  2289 ;;		wreg, status,2, status,0, pclath, cstack
  2290 ;; Tracked objects:
  2291 ;;		On entry : 0/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2295 ;;      Params:         0       0       0       0       0
  2296 ;;      Locals:         0       0       0       0       0
  2297 ;;      Temps:          0       0       0       0       0
  2298 ;;      Totals:         0       0       0       0       0
  2299 ;;Total ram usage:        0 bytes
  2300 ;; Hardware stack levels used:    1
  2301 ;; Hardware stack levels required when called:    2
  2302 ;; This function calls:
  2303 ;;		_init_pines_LCD
  2304 ;;		_init_pines_col
  2305 ;;		_init_pines_fil
  2306 ;;		_init_pines_in
  2307 ;; This function is called by:
  2308 ;;		_main
  2309 ;; This function uses a non-reentrant model
  2310 ;;
  2311                           
  2312                           
  2313                           ;psect for function _init_pines
  2314  0E81                     _init_pines:	
  2315  0E81                     l2188:	
  2316                           ;incstack = 0
  2317                           ; Regs used in _init_pines: [wreg+status,2+status,0+pclath+cstack]
  2318                           
  2319                           
  2320                           ;init.c: 6:     init_pines_LCD();
  2321  0E81  120A  158A  26E8  120A  158A  	fcall	_init_pines_LCD
  2322  0E86                     l2190:	
  2323                           
  2324                           ;init.c: 7:     init_pines_fil();
  2325  0E86  120A  158A  2640  120A  158A  	fcall	_init_pines_fil
  2326  0E8B                     l2192:	
  2327                           
  2328                           ;init.c: 8:     init_pines_col();
  2329  0E8B  120A  158A  265B  120A  158A  	fcall	_init_pines_col
  2330  0E90                     l2194:	
  2331                           
  2332                           ;init.c: 9:     init_pines_in();
  2333  0E90  120A  158A  2611  120A  158A  	fcall	_init_pines_in
  2334  0E95                     l39:	
  2335  0E95  0008               	return
  2336  0E96                     __end_of_init_pines:	
  2337                           
  2338                           	psect	text12
  2339  0E11                     __ptext12:	
  2340 ;; *************** function _init_pines_in *****************
  2341 ;; Defined at:
  2342 ;;		line 12 in file "init.c"
  2343 ;; Parameters:    Size  Location     Type
  2344 ;;		None
  2345 ;; Auto vars:     Size  Location     Type
  2346 ;;		None
  2347 ;; Return value:  Size  Location     Type
  2348 ;;                  1    wreg      void 
  2349 ;; Registers used:
  2350 ;;		None
  2351 ;; Tracked objects:
  2352 ;;		On entry : 0/0
  2353 ;;		On exit  : 0/0
  2354 ;;		Unchanged: 0/0
  2355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2356 ;;      Params:         0       0       0       0       0
  2357 ;;      Locals:         0       0       0       0       0
  2358 ;;      Temps:          0       0       0       0       0
  2359 ;;      Totals:         0       0       0       0       0
  2360 ;;Total ram usage:        0 bytes
  2361 ;; Hardware stack levels used:    1
  2362 ;; Hardware stack levels required when called:    1
  2363 ;; This function calls:
  2364 ;;		Nothing
  2365 ;; This function is called by:
  2366 ;;		_init_pines
  2367 ;; This function uses a non-reentrant model
  2368 ;;
  2369                           
  2370                           
  2371                           ;psect for function _init_pines_in
  2372  0E11                     _init_pines_in:	
  2373  0E11                     l1966:	
  2374                           ;incstack = 0
  2375                           ; Regs used in _init_pines_in: []
  2376                           
  2377                           
  2378                           ;init.c: 13:     TRISBbits.TRISB5 = 1;
  2379  0E11  1683               	bsf	3,5	;RP0=1, select bank1
  2380  0E12  1303               	bcf	3,6	;RP1=0, select bank1
  2381  0E13  1686               	bsf	6,5	;volatile
  2382                           
  2383                           ;init.c: 14:     TRISBbits.TRISB4 = 1;
  2384  0E14  1606               	bsf	6,4	;volatile
  2385                           
  2386                           ;init.c: 15:     TRISBbits.TRISB3 = 1;
  2387  0E15  1586               	bsf	6,3	;volatile
  2388  0E16                     l42:	
  2389  0E16  0008               	return
  2390  0E17                     __end_of_init_pines_in:	
  2391                           
  2392                           	psect	text13
  2393  0E40                     __ptext13:	
  2394 ;; *************** function _init_pines_fil *****************
  2395 ;; Defined at:
  2396 ;;		line 49 in file "init.c"
  2397 ;; Parameters:    Size  Location     Type
  2398 ;;		None
  2399 ;; Auto vars:     Size  Location     Type
  2400 ;;		None
  2401 ;; Return value:  Size  Location     Type
  2402 ;;                  1    wreg      void 
  2403 ;; Registers used:
  2404 ;;		None
  2405 ;; Tracked objects:
  2406 ;;		On entry : 0/0
  2407 ;;		On exit  : 0/0
  2408 ;;		Unchanged: 0/0
  2409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2410 ;;      Params:         0       0       0       0       0
  2411 ;;      Locals:         0       0       0       0       0
  2412 ;;      Temps:          0       0       0       0       0
  2413 ;;      Totals:         0       0       0       0       0
  2414 ;;Total ram usage:        0 bytes
  2415 ;; Hardware stack levels used:    1
  2416 ;; Hardware stack levels required when called:    1
  2417 ;; This function calls:
  2418 ;;		Nothing
  2419 ;; This function is called by:
  2420 ;;		_init_pines
  2421 ;; This function uses a non-reentrant model
  2422 ;;
  2423                           
  2424                           
  2425                           ;psect for function _init_pines_fil
  2426  0E40                     _init_pines_fil:	
  2427  0E40                     l1962:	
  2428                           ;incstack = 0
  2429                           ; Regs used in _init_pines_fil: []
  2430                           
  2431                           
  2432                           ;init.c: 51:     TRISCbits.TRISC4 = 0;
  2433  0E40  1683               	bsf	3,5	;RP0=1, select bank1
  2434  0E41  1303               	bcf	3,6	;RP1=0, select bank1
  2435  0E42  1207               	bcf	7,4	;volatile
  2436                           
  2437                           ;init.c: 52:     TRISCbits.TRISC5 = 0;
  2438  0E43  1287               	bcf	7,5	;volatile
  2439                           
  2440                           ;init.c: 53:     TRISCbits.TRISC6 = 0;
  2441  0E44  1307               	bcf	7,6	;volatile
  2442                           
  2443                           ;init.c: 54:     TRISCbits.TRISC7 = 0;
  2444  0E45  1387               	bcf	7,7	;volatile
  2445                           
  2446                           ;init.c: 56:     PORTCbits.RC4 = 0;
  2447  0E46  1283               	bcf	3,5	;RP0=0, select bank0
  2448  0E47  1303               	bcf	3,6	;RP1=0, select bank0
  2449  0E48  1207               	bcf	7,4	;volatile
  2450                           
  2451                           ;init.c: 57:     PORTCbits.RC5 = 0;
  2452  0E49  1287               	bcf	7,5	;volatile
  2453                           
  2454                           ;init.c: 58:     PORTCbits.RC6 = 0;
  2455  0E4A  1307               	bcf	7,6	;volatile
  2456                           
  2457                           ;init.c: 59:     PORTCbits.RC7 = 0;
  2458  0E4B  1387               	bcf	7,7	;volatile
  2459  0E4C                     l48:	
  2460  0E4C  0008               	return
  2461  0E4D                     __end_of_init_pines_fil:	
  2462                           
  2463                           	psect	text14
  2464  0E5B                     __ptext14:	
  2465 ;; *************** function _init_pines_col *****************
  2466 ;; Defined at:
  2467 ;;		line 62 in file "init.c"
  2468 ;; Parameters:    Size  Location     Type
  2469 ;;		None
  2470 ;; Auto vars:     Size  Location     Type
  2471 ;;		None
  2472 ;; Return value:  Size  Location     Type
  2473 ;;                  1    wreg      void 
  2474 ;; Registers used:
  2475 ;;		None
  2476 ;; Tracked objects:
  2477 ;;		On entry : 0/0
  2478 ;;		On exit  : 0/0
  2479 ;;		Unchanged: 0/0
  2480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2481 ;;      Params:         0       0       0       0       0
  2482 ;;      Locals:         0       0       0       0       0
  2483 ;;      Temps:          0       0       0       0       0
  2484 ;;      Totals:         0       0       0       0       0
  2485 ;;Total ram usage:        0 bytes
  2486 ;; Hardware stack levels used:    1
  2487 ;; Hardware stack levels required when called:    1
  2488 ;; This function calls:
  2489 ;;		Nothing
  2490 ;; This function is called by:
  2491 ;;		_init_pines
  2492 ;; This function uses a non-reentrant model
  2493 ;;
  2494                           
  2495                           
  2496                           ;psect for function _init_pines_col
  2497  0E5B                     _init_pines_col:	
  2498  0E5B                     l1964:	
  2499                           ;incstack = 0
  2500                           ; Regs used in _init_pines_col: []
  2501                           
  2502                           
  2503                           ;init.c: 63:     TRISBbits.TRISB0 = 0;
  2504  0E5B  1683               	bsf	3,5	;RP0=1, select bank1
  2505  0E5C  1303               	bcf	3,6	;RP1=0, select bank1
  2506  0E5D  1006               	bcf	6,0	;volatile
  2507                           
  2508                           ;init.c: 64:     PORTBbits.RB0 = 0;
  2509  0E5E  1283               	bcf	3,5	;RP0=0, select bank0
  2510  0E5F  1303               	bcf	3,6	;RP1=0, select bank0
  2511  0E60  1006               	bcf	6,0	;volatile
  2512                           
  2513                           ;init.c: 66:     TRISDbits.TRISD4 = 0;
  2514  0E61  1683               	bsf	3,5	;RP0=1, select bank1
  2515  0E62  1303               	bcf	3,6	;RP1=0, select bank1
  2516  0E63  1208               	bcf	8,4	;volatile
  2517                           
  2518                           ;init.c: 67:     TRISDbits.TRISD5 = 0;
  2519  0E64  1288               	bcf	8,5	;volatile
  2520                           
  2521                           ;init.c: 68:     TRISDbits.TRISD6 = 0;
  2522  0E65  1308               	bcf	8,6	;volatile
  2523                           
  2524                           ;init.c: 69:     TRISDbits.TRISD7 = 0;
  2525  0E66  1388               	bcf	8,7	;volatile
  2526                           
  2527                           ;init.c: 71:     PORTDbits.RD4 = 0;
  2528  0E67  1283               	bcf	3,5	;RP0=0, select bank0
  2529  0E68  1303               	bcf	3,6	;RP1=0, select bank0
  2530  0E69  1208               	bcf	8,4	;volatile
  2531                           
  2532                           ;init.c: 72:     PORTDbits.RD5 = 0;
  2533  0E6A  1288               	bcf	8,5	;volatile
  2534                           
  2535                           ;init.c: 73:     PORTDbits.RD6 = 0;
  2536  0E6B  1308               	bcf	8,6	;volatile
  2537                           
  2538                           ;init.c: 74:     PORTDbits.RD7 = 0;
  2539  0E6C  1388               	bcf	8,7	;volatile
  2540  0E6D                     l51:	
  2541  0E6D  0008               	return
  2542  0E6E                     __end_of_init_pines_col:	
  2543                           
  2544                           	psect	text15
  2545  0EE8                     __ptext15:	
  2546 ;; *************** function _init_pines_LCD *****************
  2547 ;; Defined at:
  2548 ;;		line 18 in file "init.c"
  2549 ;; Parameters:    Size  Location     Type
  2550 ;;		None
  2551 ;; Auto vars:     Size  Location     Type
  2552 ;;		None
  2553 ;; Return value:  Size  Location     Type
  2554 ;;                  1    wreg      void 
  2555 ;; Registers used:
  2556 ;;		wreg
  2557 ;; Tracked objects:
  2558 ;;		On entry : 0/0
  2559 ;;		On exit  : 0/0
  2560 ;;		Unchanged: 0/0
  2561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2562 ;;      Params:         0       0       0       0       0
  2563 ;;      Locals:         0       0       0       0       0
  2564 ;;      Temps:          0       0       0       0       0
  2565 ;;      Totals:         0       0       0       0       0
  2566 ;;Total ram usage:        0 bytes
  2567 ;; Hardware stack levels used:    1
  2568 ;; Hardware stack levels required when called:    1
  2569 ;; This function calls:
  2570 ;;		Nothing
  2571 ;; This function is called by:
  2572 ;;		_init_pines
  2573 ;; This function uses a non-reentrant model
  2574 ;;
  2575                           
  2576                           
  2577                           ;psect for function _init_pines_LCD
  2578  0EE8                     _init_pines_LCD:	
  2579  0EE8                     l1916:	
  2580                           ;incstack = 0
  2581                           ; Regs used in _init_pines_LCD: [wreg]
  2582                           
  2583                           
  2584                           ;init.c: 20:     ADCON1 = 0x7;
  2585  0EE8  3007               	movlw	7
  2586  0EE9  1683               	bsf	3,5	;RP0=1, select bank1
  2587  0EEA  1303               	bcf	3,6	;RP1=0, select bank1
  2588  0EEB  009F               	movwf	31	;volatile
  2589  0EEC                     l1918:	
  2590                           
  2591                           ;init.c: 22:     TRISAbits.TRISA0 = 0;
  2592  0EEC  1005               	bcf	5,0	;volatile
  2593  0EED                     l1920:	
  2594                           
  2595                           ;init.c: 23:     TRISAbits.TRISA1 = 0;
  2596  0EED  1085               	bcf	5,1	;volatile
  2597  0EEE                     l1922:	
  2598                           
  2599                           ;init.c: 24:     TRISAbits.TRISA2 = 0;
  2600  0EEE  1105               	bcf	5,2	;volatile
  2601  0EEF                     l1924:	
  2602                           
  2603                           ;init.c: 25:     TRISAbits.TRISA3 = 0;
  2604  0EEF  1185               	bcf	5,3	;volatile
  2605  0EF0                     l1926:	
  2606                           
  2607                           ;init.c: 26:     TRISAbits.TRISA4 = 0;
  2608  0EF0  1205               	bcf	5,4	;volatile
  2609  0EF1                     l1928:	
  2610                           
  2611                           ;init.c: 27:     TRISAbits.TRISA5 = 0;
  2612  0EF1  1285               	bcf	5,5	;volatile
  2613  0EF2                     l1930:	
  2614                           
  2615                           ;init.c: 28:     TRISEbits.TRISE0 = 0;
  2616  0EF2  1009               	bcf	9,0	;volatile
  2617  0EF3                     l1932:	
  2618                           
  2619                           ;init.c: 29:     TRISEbits.TRISE1 = 0;
  2620  0EF3  1089               	bcf	9,1	;volatile
  2621  0EF4                     l1934:	
  2622                           
  2623                           ;init.c: 31:     TRISCbits.TRISC0 = 0;
  2624  0EF4  1007               	bcf	7,0	;volatile
  2625  0EF5                     l1936:	
  2626                           
  2627                           ;init.c: 32:     TRISCbits.TRISC1 = 0;
  2628  0EF5  1087               	bcf	7,1	;volatile
  2629  0EF6                     l1938:	
  2630                           
  2631                           ;init.c: 33:     TRISCbits.TRISC2 = 0;
  2632  0EF6  1107               	bcf	7,2	;volatile
  2633  0EF7                     l1940:	
  2634                           
  2635                           ;init.c: 35:     PORTAbits.RA0 = 0;
  2636  0EF7  1283               	bcf	3,5	;RP0=0, select bank0
  2637  0EF8  1303               	bcf	3,6	;RP1=0, select bank0
  2638  0EF9  1005               	bcf	5,0	;volatile
  2639  0EFA                     l1942:	
  2640                           
  2641                           ;init.c: 36:     PORTAbits.RA1 = 0;
  2642  0EFA  1085               	bcf	5,1	;volatile
  2643  0EFB                     l1944:	
  2644                           
  2645                           ;init.c: 37:     PORTAbits.RA2 = 0;
  2646  0EFB  1105               	bcf	5,2	;volatile
  2647  0EFC                     l1946:	
  2648                           
  2649                           ;init.c: 38:     PORTAbits.RA3 = 0;
  2650  0EFC  1185               	bcf	5,3	;volatile
  2651  0EFD                     l1948:	
  2652                           
  2653                           ;init.c: 39:     PORTAbits.RA4 = 0;
  2654  0EFD  1205               	bcf	5,4	;volatile
  2655  0EFE                     l1950:	
  2656                           
  2657                           ;init.c: 40:     PORTAbits.RA5 = 0;
  2658  0EFE  1285               	bcf	5,5	;volatile
  2659  0EFF                     l1952:	
  2660                           
  2661                           ;init.c: 41:     PORTEbits.RE0 = 0;
  2662  0EFF  1009               	bcf	9,0	;volatile
  2663  0F00                     l1954:	
  2664                           
  2665                           ;init.c: 42:     PORTEbits.RE1 = 0;
  2666  0F00  1089               	bcf	9,1	;volatile
  2667  0F01                     l1956:	
  2668                           
  2669                           ;init.c: 44:     PORTCbits.RC0 = 0;
  2670  0F01  1007               	bcf	7,0	;volatile
  2671  0F02                     l1958:	
  2672                           
  2673                           ;init.c: 45:     PORTCbits.RC1 = 0;
  2674  0F02  1087               	bcf	7,1	;volatile
  2675  0F03                     l1960:	
  2676                           
  2677                           ;init.c: 46:     PORTCbits.RC2 = 0;
  2678  0F03  1107               	bcf	7,2	;volatile
  2679  0F04                     l45:	
  2680  0F04  0008               	return
  2681  0F05                     __end_of_init_pines_LCD:	
  2682                           
  2683                           	psect	text16
  2684  051C                     __ptext16:	
  2685 ;; *************** function _init_LCD *****************
  2686 ;; Defined at:
  2687 ;;		line 12 in file "LCD.c"
  2688 ;; Parameters:    Size  Location     Type
  2689 ;;		None
  2690 ;; Auto vars:     Size  Location     Type
  2691 ;;  B               1    0        _Bool 
  2692 ;;  C               1    0        _Bool 
  2693 ;;  D               1    0        _Bool 
  2694 ;;  S               1   15[BANK0 ] _Bool 
  2695 ;;  ID              1    0        _Bool 
  2696 ;;  F               1    0        _Bool 
  2697 ;;  N               1   12[BANK0 ] _Bool 
  2698 ;;  DL              1    0        _Bool 
  2699 ;; Return value:  Size  Location     Type
  2700 ;;                  1    wreg      void 
  2701 ;; Registers used:
  2702 ;;		wreg, status,2, status,0, pclath, cstack
  2703 ;; Tracked objects:
  2704 ;;		On entry : 0/0
  2705 ;;		On exit  : 0/0
  2706 ;;		Unchanged: 0/0
  2707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2708 ;;      Params:         0       0       0       0       0
  2709 ;;      Locals:         0       8       0       0       0
  2710 ;;      Temps:          0       3       0       0       0
  2711 ;;      Totals:         0      11       0       0       0
  2712 ;;Total ram usage:       11 bytes
  2713 ;; Hardware stack levels used:    1
  2714 ;; Hardware stack levels required when called:    3
  2715 ;; This function calls:
  2716 ;;		_clearDisplay
  2717 ;;		_displayONOFF
  2718 ;;		_entryModeSet
  2719 ;;		_functionSet
  2720 ;; This function is called by:
  2721 ;;		_main
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725                           
  2726                           ;psect for function _init_LCD
  2727  051C                     _init_LCD:	
  2728  051C                     l2214:	
  2729                           ;incstack = 0
  2730                           ; Regs used in _init_LCD: [wreg+status,2+status,0+pclath+cstack]
  2731                           
  2732                           
  2733                           ;LCD.c: 14:     _Bool N=1;
  2734  051C  1283               	bcf	3,5	;RP0=0, select bank0
  2735  051D  1303               	bcf	3,6	;RP1=0, select bank0
  2736  051E  01AC               	clrf	init_LCD@N
  2737  051F  0AAC               	incf	init_LCD@N,f
  2738  0520                     l2216:	
  2739  0520                     l2218:	
  2740                           
  2741                           ;LCD.c: 18:     _Bool S=0;
  2742  0520  01AF               	clrf	init_LCD@S
  2743  0521                     l2220:	
  2744  0521                     l2222:	
  2745  0521                     l2224:	
  2746  0521                     l2226:	
  2747                           
  2748                           ;LCD.c: 22:     _delay((unsigned long)((200)*(4000000/4000.0)));
  2749  0521  3002               	movlw	2
  2750  0522  1283               	bcf	3,5	;RP0=0, select bank0
  2751  0523  1303               	bcf	3,6	;RP1=0, select bank0
  2752  0524  00AA               	movwf	??_init_LCD+2
  2753  0525  3004               	movlw	4
  2754  0526  00A9               	movwf	??_init_LCD+1
  2755  0527  30B9               	movlw	185
  2756  0528  00A8               	movwf	??_init_LCD
  2757  0529                     u1777:	
  2758  0529  0BA8               	decfsz	??_init_LCD,f
  2759  052A  2D29               	goto	u1777
  2760  052B  0BA9               	decfsz	??_init_LCD+1,f
  2761  052C  2D29               	goto	u1777
  2762  052D  0BAA               	decfsz	??_init_LCD+2,f
  2763  052E  2D29               	goto	u1777
  2764  052F  2D30               	nop2
  2765  0530                     l2228:	
  2766                           
  2767                           ;LCD.c: 23:     functionSet(1, 0, 0);
  2768  0530  01F6               	clrf	functionSet@N
  2769  0531  01F7               	clrf	functionSet@F
  2770  0532  3001               	movlw	1
  2771  0533  120A  118A  2128  120A  118A  	fcall	_functionSet
  2772  0538                     l2230:	
  2773                           
  2774                           ;LCD.c: 24:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2775  0538  3007               	movlw	7
  2776  0539  1283               	bcf	3,5	;RP0=0, select bank0
  2777  053A  1303               	bcf	3,6	;RP1=0, select bank0
  2778  053B  00A9               	movwf	??_init_LCD+1
  2779  053C  307C               	movlw	124
  2780  053D  00A8               	movwf	??_init_LCD
  2781  053E                     u1787:	
  2782  053E  0BA8               	decfsz	??_init_LCD,f
  2783  053F  2D3E               	goto	u1787
  2784  0540  0BA9               	decfsz	??_init_LCD+1,f
  2785  0541  2D3E               	goto	u1787
  2786  0542  0000               	nop
  2787  0543                     l2232:	
  2788                           
  2789                           ;LCD.c: 25:     functionSet(1, 0, 0);
  2790  0543  01F6               	clrf	functionSet@N
  2791  0544  01F7               	clrf	functionSet@F
  2792  0545  3001               	movlw	1
  2793  0546  120A  118A  2128  120A  118A  	fcall	_functionSet
  2794  054B                     l2234:	
  2795                           
  2796                           ;LCD.c: 26:     _delay((unsigned long)((1)*(4000000/4000.0)));
  2797  054B  30C7               	movlw	199
  2798  054C  1283               	bcf	3,5	;RP0=0, select bank0
  2799  054D  1303               	bcf	3,6	;RP1=0, select bank0
  2800  054E  00A8               	movwf	??_init_LCD
  2801  054F                     u1797:	
  2802  054F  2D50               	nop2
  2803  0550  0BA8               	decfsz	??_init_LCD,f
  2804  0551  2D4F               	goto	u1797
  2805  0552  2D53               	nop2
  2806  0553                     l2236:	
  2807                           
  2808                           ;LCD.c: 27:     functionSet(1, 0, 0);
  2809  0553  01F6               	clrf	functionSet@N
  2810  0554  01F7               	clrf	functionSet@F
  2811  0555  3001               	movlw	1
  2812  0556  120A  118A  2128  120A  118A  	fcall	_functionSet
  2813  055B                     l2238:	
  2814                           
  2815                           ;LCD.c: 28:     _delay((unsigned long)((1)*(4000000/4000.0)));
  2816  055B  30C7               	movlw	199
  2817  055C  1283               	bcf	3,5	;RP0=0, select bank0
  2818  055D  1303               	bcf	3,6	;RP1=0, select bank0
  2819  055E  00A8               	movwf	??_init_LCD
  2820  055F                     u1807:	
  2821  055F  2D60               	nop2
  2822  0560  0BA8               	decfsz	??_init_LCD,f
  2823  0561  2D5F               	goto	u1807
  2824  0562  2D63               	nop2
  2825  0563                     l2240:	
  2826                           
  2827                           ;LCD.c: 30:     functionSet(DL, N, F);
  2828  0563  01F6               	clrf	functionSet@N
  2829  0564  0AF6               	incf	functionSet@N,f
  2830  0565  01F7               	clrf	functionSet@F
  2831  0566  3001               	movlw	1
  2832  0567  120A  118A  2128  120A  118A  	fcall	_functionSet
  2833  056C                     l2242:	
  2834                           
  2835                           ;LCD.c: 31:     _delay((unsigned long)((1)*(4000000/4000.0)));
  2836  056C  30C7               	movlw	199
  2837  056D  1283               	bcf	3,5	;RP0=0, select bank0
  2838  056E  1303               	bcf	3,6	;RP1=0, select bank0
  2839  056F  00A8               	movwf	??_init_LCD
  2840  0570                     u1817:	
  2841  0570  2D71               	nop2
  2842  0571  0BA8               	decfsz	??_init_LCD,f
  2843  0572  2D70               	goto	u1817
  2844  0573  2D74               	nop2
  2845  0574                     l2244:	
  2846                           
  2847                           ;LCD.c: 32:     displayONOFF(0,0,0);
  2848  0574  01F6               	clrf	displayONOFF@C
  2849  0575  01F7               	clrf	displayONOFF@B
  2850  0576  3000               	movlw	0
  2851  0577  120A  118A  21B6  120A  118A  	fcall	_displayONOFF
  2852  057C                     l2246:	
  2853                           
  2854                           ;LCD.c: 33:     clearDisplay();
  2855  057C  120A  158A  2696  120A  118A  	fcall	_clearDisplay
  2856  0581                     l2248:	
  2857                           
  2858                           ;LCD.c: 34:     entryModeSet(ID, S);
  2859  0581  01F6               	clrf	entryModeSet@SH
  2860  0582  3001               	movlw	1
  2861  0583  120A  158A  278A  120A  118A  	fcall	_entryModeSet
  2862  0588                     l2250:	
  2863                           
  2864                           ;LCD.c: 36:     displayONOFF(D,C,B);
  2865  0588  01F6               	clrf	displayONOFF@C
  2866  0589  0AF6               	incf	displayONOFF@C,f
  2867  058A  01F7               	clrf	displayONOFF@B
  2868  058B  0AF7               	incf	displayONOFF@B,f
  2869  058C  3001               	movlw	1
  2870  058D  120A  118A  21B6  120A  118A  	fcall	_displayONOFF
  2871  0592                     l326:	
  2872  0592  0008               	return
  2873  0593                     __end_of_init_LCD:	
  2874                           
  2875                           	psect	text17
  2876  0128                     __ptext17:	
  2877 ;; *************** function _functionSet *****************
  2878 ;; Defined at:
  2879 ;;		line 72 in file "LCD.c"
  2880 ;; Parameters:    Size  Location     Type
  2881 ;;  DL              1    wreg     _Bool 
  2882 ;;  N               1    5[COMMON] _Bool 
  2883 ;;  F               1    6[COMMON] _Bool 
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;  DL              1    0[BANK0 ] _Bool 
  2886 ;;  data            1    7[BANK0 ] unsigned char 
  2887 ;; Return value:  Size  Location     Type
  2888 ;;                  1    wreg      void 
  2889 ;; Registers used:
  2890 ;;		wreg, status,2, status,0, pclath, cstack
  2891 ;; Tracked objects:
  2892 ;;		On entry : 0/0
  2893 ;;		On exit  : 0/0
  2894 ;;		Unchanged: 0/0
  2895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2896 ;;      Params:         2       0       0       0       0
  2897 ;;      Locals:         0       8       0       0       0
  2898 ;;      Temps:          1       0       0       0       0
  2899 ;;      Totals:         3       8       0       0       0
  2900 ;;Total ram usage:       11 bytes
  2901 ;; Hardware stack levels used:    1
  2902 ;; Hardware stack levels required when called:    2
  2903 ;; This function calls:
  2904 ;;		_clearRS
  2905 ;;		_clearRW
  2906 ;;		_setData
  2907 ;; This function is called by:
  2908 ;;		_init_LCD
  2909 ;; This function uses a non-reentrant model
  2910 ;;
  2911                           
  2912                           
  2913                           ;psect for function _functionSet
  2914  0128                     _functionSet:	
  2915                           
  2916                           ;incstack = 0
  2917                           ; Regs used in _functionSet: [wreg+status,2+status,0+pclath+cstack]
  2918                           ;functionSet@DL stored from wreg
  2919  0128  1283               	bcf	3,5	;RP0=0, select bank0
  2920  0129  1303               	bcf	3,6	;RP1=0, select bank0
  2921  012A  00A0               	movwf	functionSet@DL
  2922  012B                     l2114:	
  2923                           
  2924                           ;LCD.c: 73:     uint8_t data = 0x20;
  2925  012B  3020               	movlw	32
  2926  012C  00F8               	movwf	??_functionSet
  2927  012D  0878               	movf	??_functionSet,w
  2928  012E  00A7               	movwf	functionSet@data
  2929  012F                     l2116:	
  2930                           
  2931                           ;LCD.c: 74:     clearRS();
  2932  012F  120A  158A  2600  120A  118A  	fcall	_clearRS
  2933  0134                     l2118:	
  2934                           
  2935                           ;LCD.c: 75:     clearRW();
  2936  0134  120A  158A  2604  120A  118A  	fcall	_clearRW
  2937  0139                     l2120:	
  2938                           
  2939                           ;LCD.c: 76:     data = data | (DL?0x10:0x00) | (N?0x08:0x00) | (F?0x04:0x00);
  2940  0139  0877               	movf	functionSet@F,w
  2941  013A  1D03               	btfss	3,2
  2942  013B  293D               	goto	u1561
  2943  013C  293E               	goto	u1560
  2944  013D                     u1561:	
  2945  013D  2943               	goto	l2124
  2946  013E                     u1560:	
  2947  013E                     l2122:	
  2948  013E  1283               	bcf	3,5	;RP0=0, select bank0
  2949  013F  1303               	bcf	3,6	;RP1=0, select bank0
  2950  0140  01A1               	clrf	_functionSet$762
  2951  0141  01A2               	clrf	_functionSet$762+1
  2952  0142  2949               	goto	l2126
  2953  0143                     l2124:	
  2954  0143  3004               	movlw	4
  2955  0144  1283               	bcf	3,5	;RP0=0, select bank0
  2956  0145  1303               	bcf	3,6	;RP1=0, select bank0
  2957  0146  00A1               	movwf	_functionSet$762
  2958  0147  3000               	movlw	0
  2959  0148  00A2               	movwf	_functionSet$762+1
  2960  0149                     l2126:	
  2961  0149  0876               	movf	functionSet@N,w
  2962  014A  1D03               	btfss	3,2
  2963  014B  294D               	goto	u1571
  2964  014C  294E               	goto	u1570
  2965  014D                     u1571:	
  2966  014D  2951               	goto	l2130
  2967  014E                     u1570:	
  2968  014E                     l2128:	
  2969  014E  01A3               	clrf	_functionSet$763
  2970  014F  01A4               	clrf	_functionSet$763+1
  2971  0150  2955               	goto	l2132
  2972  0151                     l2130:	
  2973  0151  3008               	movlw	8
  2974  0152  00A3               	movwf	_functionSet$763
  2975  0153  3000               	movlw	0
  2976  0154  00A4               	movwf	_functionSet$763+1
  2977  0155                     l2132:	
  2978  0155  0820               	movf	functionSet@DL,w
  2979  0156  1D03               	btfss	3,2
  2980  0157  2959               	goto	u1581
  2981  0158  295A               	goto	u1580
  2982  0159                     u1581:	
  2983  0159  295D               	goto	l2136
  2984  015A                     u1580:	
  2985  015A                     l2134:	
  2986  015A  01A5               	clrf	_functionSet$764
  2987  015B  01A6               	clrf	_functionSet$764+1
  2988  015C  2961               	goto	l2138
  2989  015D                     l2136:	
  2990  015D  3010               	movlw	16
  2991  015E  00A5               	movwf	_functionSet$764
  2992  015F  3000               	movlw	0
  2993  0160  00A6               	movwf	_functionSet$764+1
  2994  0161                     l2138:	
  2995  0161  0827               	movf	functionSet@data,w
  2996  0162  0425               	iorwf	_functionSet$764,w
  2997  0163  0423               	iorwf	_functionSet$763,w
  2998  0164  0421               	iorwf	_functionSet$762,w
  2999  0165  00F8               	movwf	??_functionSet
  3000  0166  0878               	movf	??_functionSet,w
  3001  0167  00A7               	movwf	functionSet@data
  3002  0168                     l2140:	
  3003                           
  3004                           ;LCD.c: 77:     setData(data);
  3005  0168  0827               	movf	functionSet@data,w
  3006  0169  120A  118A  2593  120A  118A  	fcall	_setData
  3007  016E                     l365:	
  3008  016E  0008               	return
  3009  016F                     __end_of_functionSet:	
  3010                           
  3011                           	psect	text18
  3012  0F8A                     __ptext18:	
  3013 ;; *************** function _entryModeSet *****************
  3014 ;; Defined at:
  3015 ;;		line 54 in file "LCD.c"
  3016 ;; Parameters:    Size  Location     Type
  3017 ;;  ID              1    wreg     _Bool 
  3018 ;;  SH              1    5[COMMON] _Bool 
  3019 ;; Auto vars:     Size  Location     Type
  3020 ;;  ID              1    7[COMMON] _Bool 
  3021 ;;  data            1   10[COMMON] unsigned char 
  3022 ;; Return value:  Size  Location     Type
  3023 ;;                  1    wreg      void 
  3024 ;; Registers used:
  3025 ;;		wreg, status,2, status,0, pclath, cstack
  3026 ;; Tracked objects:
  3027 ;;		On entry : 0/0
  3028 ;;		On exit  : 0/0
  3029 ;;		Unchanged: 0/0
  3030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3031 ;;      Params:         1       0       0       0       0
  3032 ;;      Locals:         4       0       0       0       0
  3033 ;;      Temps:          1       0       0       0       0
  3034 ;;      Totals:         6       0       0       0       0
  3035 ;;Total ram usage:        6 bytes
  3036 ;; Hardware stack levels used:    1
  3037 ;; Hardware stack levels required when called:    2
  3038 ;; This function calls:
  3039 ;;		_clearRS
  3040 ;;		_clearRW
  3041 ;;		_setData
  3042 ;; This function is called by:
  3043 ;;		_init_LCD
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           
  3047                           
  3048                           ;psect for function _entryModeSet
  3049  0F8A                     _entryModeSet:	
  3050                           
  3051                           ;incstack = 0
  3052                           ; Regs used in _entryModeSet: [wreg+status,2+status,0+pclath+cstack]
  3053                           ;entryModeSet@ID stored from wreg
  3054  0F8A  00F8               	movwf	entryModeSet@ID
  3055  0F8B                     l2170:	
  3056                           
  3057                           ;LCD.c: 55:     uint8_t data = 0x04;
  3058  0F8B  3004               	movlw	4
  3059  0F8C  00F7               	movwf	??_entryModeSet
  3060  0F8D  0877               	movf	??_entryModeSet,w
  3061  0F8E  00FB               	movwf	entryModeSet@data
  3062  0F8F                     l2172:	
  3063                           
  3064                           ;LCD.c: 56:     clearRS();
  3065  0F8F  120A  158A  2600  120A  158A  	fcall	_clearRS
  3066  0F94                     l2174:	
  3067                           
  3068                           ;LCD.c: 57:     clearRW();
  3069  0F94  120A  158A  2604  120A  158A  	fcall	_clearRW
  3070  0F99                     l2176:	
  3071                           
  3072                           ;LCD.c: 58:     data = data | (ID?0x2:0x0) | (SH?0x1:0x0);
  3073  0F99  0878               	movf	entryModeSet@ID,w
  3074  0F9A  1D03               	btfss	3,2
  3075  0F9B  2F9D               	goto	u1631
  3076  0F9C  2F9E               	goto	u1630
  3077  0F9D                     u1631:	
  3078  0F9D  2FA1               	goto	l2180
  3079  0F9E                     u1630:	
  3080  0F9E                     l2178:	
  3081  0F9E  01F9               	clrf	_entryModeSet$749
  3082  0F9F  01FA               	clrf	_entryModeSet$749+1
  3083  0FA0  2FA5               	goto	l2182
  3084  0FA1                     l2180:	
  3085  0FA1  3002               	movlw	2
  3086  0FA2  00F9               	movwf	_entryModeSet$749
  3087  0FA3  3000               	movlw	0
  3088  0FA4  00FA               	movwf	_entryModeSet$749+1
  3089  0FA5                     l2182:	
  3090  0FA5  0876               	movf	entryModeSet@SH,w
  3091  0FA6  1D03               	btfss	3,2
  3092  0FA7  2FA9               	goto	u1641
  3093  0FA8  2FAB               	goto	u1640
  3094  0FA9                     u1641:	
  3095  0FA9  3001               	movlw	1
  3096  0FAA  2FAC               	goto	u1650
  3097  0FAB                     u1640:	
  3098  0FAB  3000               	movlw	0
  3099  0FAC                     u1650:	
  3100  0FAC  047B               	iorwf	entryModeSet@data,w
  3101  0FAD  0479               	iorwf	_entryModeSet$749,w
  3102  0FAE  00F7               	movwf	??_entryModeSet
  3103  0FAF  0877               	movf	??_entryModeSet,w
  3104  0FB0  00FB               	movwf	entryModeSet@data
  3105  0FB1                     l2184:	
  3106                           
  3107                           ;LCD.c: 59:     setData(data);
  3108  0FB1  087B               	movf	entryModeSet@data,w
  3109  0FB2  120A  118A  2593  120A  158A  	fcall	_setData
  3110  0FB7                     l2186:	
  3111                           
  3112                           ;LCD.c: 60:     _delay((unsigned long)((1)*(4000000/4000.0)));
  3113  0FB7  30C7               	movlw	199
  3114  0FB8  00F7               	movwf	??_entryModeSet
  3115  0FB9                     u1827:	
  3116  0FB9  2FBA               	nop2
  3117  0FBA  0BF7               	decfsz	??_entryModeSet,f
  3118  0FBB  2FB9               	goto	u1827
  3119  0FBC  2FBD               	nop2
  3120  0FBD  2FBE               	nop2
  3121  0FBE                     l339:	
  3122  0FBE  0008               	return
  3123  0FBF                     __end_of_entryModeSet:	
  3124                           
  3125                           	psect	text19
  3126  01B6                     __ptext19:	
  3127 ;; *************** function _displayONOFF *****************
  3128 ;; Defined at:
  3129 ;;		line 63 in file "LCD.c"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;  D               1    wreg     _Bool 
  3132 ;;  C               1    5[COMMON] _Bool 
  3133 ;;  B               1    6[COMMON] _Bool 
  3134 ;; Auto vars:     Size  Location     Type
  3135 ;;  D               1    0[BANK0 ] _Bool 
  3136 ;;  data            1    5[BANK0 ] unsigned char 
  3137 ;; Return value:  Size  Location     Type
  3138 ;;                  1    wreg      void 
  3139 ;; Registers used:
  3140 ;;		wreg, status,2, status,0, pclath, cstack
  3141 ;; Tracked objects:
  3142 ;;		On entry : 0/0
  3143 ;;		On exit  : 0/0
  3144 ;;		Unchanged: 0/0
  3145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3146 ;;      Params:         2       0       0       0       0
  3147 ;;      Locals:         0       6       0       0       0
  3148 ;;      Temps:          1       0       0       0       0
  3149 ;;      Totals:         3       6       0       0       0
  3150 ;;Total ram usage:        9 bytes
  3151 ;; Hardware stack levels used:    1
  3152 ;; Hardware stack levels required when called:    2
  3153 ;; This function calls:
  3154 ;;		_clearRS
  3155 ;;		_clearRW
  3156 ;;		_setData
  3157 ;; This function is called by:
  3158 ;;		_init_LCD
  3159 ;; This function uses a non-reentrant model
  3160 ;;
  3161                           
  3162                           
  3163                           ;psect for function _displayONOFF
  3164  01B6                     _displayONOFF:	
  3165                           
  3166                           ;incstack = 0
  3167                           ; Regs used in _displayONOFF: [wreg+status,2+status,0+pclath+cstack]
  3168                           ;displayONOFF@D stored from wreg
  3169  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  3170  01B7  1303               	bcf	3,6	;RP1=0, select bank0
  3171  01B8  00A0               	movwf	displayONOFF@D
  3172  01B9                     l2142:	
  3173                           
  3174                           ;LCD.c: 64:     uint8_t data = 0x08;
  3175  01B9  3008               	movlw	8
  3176  01BA  00F8               	movwf	??_displayONOFF
  3177  01BB  0878               	movf	??_displayONOFF,w
  3178  01BC  00A5               	movwf	displayONOFF@data
  3179  01BD                     l2144:	
  3180                           
  3181                           ;LCD.c: 65:     clearRS();
  3182  01BD  120A  158A  2600  120A  118A  	fcall	_clearRS
  3183  01C2                     l2146:	
  3184                           
  3185                           ;LCD.c: 66:     clearRW();
  3186  01C2  120A  158A  2604  120A  118A  	fcall	_clearRW
  3187  01C7                     l2148:	
  3188                           
  3189                           ;LCD.c: 67:     data = data | (D?0x04:0x00) | (C?0x02:0x00) | (B?0x01:0x00);
  3190  01C7  0876               	movf	displayONOFF@C,w
  3191  01C8  1D03               	btfss	3,2
  3192  01C9  29CB               	goto	u1591
  3193  01CA  29CC               	goto	u1590
  3194  01CB                     u1591:	
  3195  01CB  29D1               	goto	l2152
  3196  01CC                     u1590:	
  3197  01CC                     l2150:	
  3198  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  3199  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  3200  01CE  01A1               	clrf	_displayONOFF$755
  3201  01CF  01A2               	clrf	_displayONOFF$755+1
  3202  01D0  29D7               	goto	l2154
  3203  01D1                     l2152:	
  3204  01D1  3002               	movlw	2
  3205  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  3206  01D3  1303               	bcf	3,6	;RP1=0, select bank0
  3207  01D4  00A1               	movwf	_displayONOFF$755
  3208  01D5  3000               	movlw	0
  3209  01D6  00A2               	movwf	_displayONOFF$755+1
  3210  01D7                     l2154:	
  3211  01D7  0820               	movf	displayONOFF@D,w
  3212  01D8  1D03               	btfss	3,2
  3213  01D9  29DB               	goto	u1601
  3214  01DA  29DC               	goto	u1600
  3215  01DB                     u1601:	
  3216  01DB  29DF               	goto	l2158
  3217  01DC                     u1600:	
  3218  01DC                     l2156:	
  3219  01DC  01A3               	clrf	_displayONOFF$756
  3220  01DD  01A4               	clrf	_displayONOFF$756+1
  3221  01DE  29E3               	goto	l2160
  3222  01DF                     l2158:	
  3223  01DF  3004               	movlw	4
  3224  01E0  00A3               	movwf	_displayONOFF$756
  3225  01E1  3000               	movlw	0
  3226  01E2  00A4               	movwf	_displayONOFF$756+1
  3227  01E3                     l2160:	
  3228  01E3  0877               	movf	displayONOFF@B,w
  3229  01E4  1D03               	btfss	3,2
  3230  01E5  29E7               	goto	u1611
  3231  01E6  29E9               	goto	u1610
  3232  01E7                     u1611:	
  3233  01E7  3001               	movlw	1
  3234  01E8  29EA               	goto	u1620
  3235  01E9                     u1610:	
  3236  01E9  3000               	movlw	0
  3237  01EA                     u1620:	
  3238  01EA  0425               	iorwf	displayONOFF@data,w
  3239  01EB  0423               	iorwf	_displayONOFF$756,w
  3240  01EC  0421               	iorwf	_displayONOFF$755,w
  3241  01ED  00F8               	movwf	??_displayONOFF
  3242  01EE  0878               	movf	??_displayONOFF,w
  3243  01EF  00A5               	movwf	displayONOFF@data
  3244  01F0                     l2162:	
  3245                           
  3246                           ;LCD.c: 68:     setData(data);
  3247  01F0  0825               	movf	displayONOFF@data,w
  3248  01F1  120A  118A  2593  120A  118A  	fcall	_setData
  3249  01F6                     l2164:	
  3250                           
  3251                           ;LCD.c: 69:     _delay((unsigned long)((1)*(4000000/4000.0)));
  3252  01F6  30C7               	movlw	199
  3253  01F7  00F8               	movwf	??_displayONOFF
  3254  01F8                     u1837:	
  3255  01F8  29F9               	nop2
  3256  01F9  0BF8               	decfsz	??_displayONOFF,f
  3257  01FA  29F8               	goto	u1837
  3258  01FB  29FC               	nop2
  3259  01FC  29FD               	nop2
  3260  01FD                     l350:	
  3261  01FD  0008               	return
  3262  01FE                     __end_of_displayONOFF:	
  3263                           
  3264                           	psect	text20
  3265  0E96                     __ptext20:	
  3266 ;; *************** function _clearDisplay *****************
  3267 ;; Defined at:
  3268 ;;		line 40 in file "LCD.c"
  3269 ;; Parameters:    Size  Location     Type
  3270 ;;		None
  3271 ;; Auto vars:     Size  Location     Type
  3272 ;;		None
  3273 ;; Return value:  Size  Location     Type
  3274 ;;                  1    wreg      void 
  3275 ;; Registers used:
  3276 ;;		wreg, status,2, status,0, pclath, cstack
  3277 ;; Tracked objects:
  3278 ;;		On entry : 0/0
  3279 ;;		On exit  : 0/0
  3280 ;;		Unchanged: 0/0
  3281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3282 ;;      Params:         0       0       0       0       0
  3283 ;;      Locals:         0       0       0       0       0
  3284 ;;      Temps:          2       0       0       0       0
  3285 ;;      Totals:         2       0       0       0       0
  3286 ;;Total ram usage:        2 bytes
  3287 ;; Hardware stack levels used:    1
  3288 ;; Hardware stack levels required when called:    2
  3289 ;; This function calls:
  3290 ;;		_clearRS
  3291 ;;		_clearRW
  3292 ;;		_setData
  3293 ;; This function is called by:
  3294 ;;		_init_LCD
  3295 ;; This function uses a non-reentrant model
  3296 ;;
  3297                           
  3298                           
  3299                           ;psect for function _clearDisplay
  3300  0E96                     _clearDisplay:	
  3301  0E96                     l2166:	
  3302                           ;incstack = 0
  3303                           ; Regs used in _clearDisplay: [wreg+status,2+status,0+pclath+cstack]
  3304                           
  3305                           
  3306                           ;LCD.c: 41:     clearRS();
  3307  0E96  120A  158A  2600  120A  158A  	fcall	_clearRS
  3308                           
  3309                           ;LCD.c: 42:     clearRW();
  3310  0E9B  120A  158A  2604  120A  158A  	fcall	_clearRW
  3311  0EA0                     l2168:	
  3312                           
  3313                           ;LCD.c: 43:     setData(0x01);
  3314  0EA0  3001               	movlw	1
  3315  0EA1  120A  118A  2593  120A  158A  	fcall	_setData
  3316                           
  3317                           ;LCD.c: 44:     _delay((unsigned long)((3)*(4000000/4000.0)));
  3318  0EA6  3004               	movlw	4
  3319  0EA7  00F7               	movwf	??_clearDisplay+1
  3320  0EA8  30E4               	movlw	228
  3321  0EA9  00F6               	movwf	??_clearDisplay
  3322  0EAA                     u1847:	
  3323  0EAA  0BF6               	decfsz	??_clearDisplay,f
  3324  0EAB  2EAA               	goto	u1847
  3325  0EAC  0BF7               	decfsz	??_clearDisplay+1,f
  3326  0EAD  2EAA               	goto	u1847
  3327  0EAE  0000               	nop
  3328  0EAF                     l329:	
  3329  0EAF  0008               	return
  3330  0EB0                     __end_of_clearDisplay:	
  3331                           
  3332                           	psect	text21
  3333  0593                     __ptext21:	
  3334 ;; *************** function _setData *****************
  3335 ;; Defined at:
  3336 ;;		line 104 in file "LCD.c"
  3337 ;; Parameters:    Size  Location     Type
  3338 ;;  data            1    wreg     unsigned char 
  3339 ;; Auto vars:     Size  Location     Type
  3340 ;;  data            1    4[COMMON] unsigned char 
  3341 ;; Return value:  Size  Location     Type
  3342 ;;                  1    wreg      void 
  3343 ;; Registers used:
  3344 ;;		wreg, status,2, status,0
  3345 ;; Tracked objects:
  3346 ;;		On entry : 0/0
  3347 ;;		On exit  : 0/0
  3348 ;;		Unchanged: 0/0
  3349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3350 ;;      Params:         0       0       0       0       0
  3351 ;;      Locals:         1       0       0       0       0
  3352 ;;      Temps:          2       0       0       0       0
  3353 ;;      Totals:         3       0       0       0       0
  3354 ;;Total ram usage:        3 bytes
  3355 ;; Hardware stack levels used:    1
  3356 ;; Hardware stack levels required when called:    1
  3357 ;; This function calls:
  3358 ;;		Nothing
  3359 ;; This function is called by:
  3360 ;;		_clearDisplay
  3361 ;;		_entryModeSet
  3362 ;;		_displayONOFF
  3363 ;;		_functionSet
  3364 ;;		_returnHome
  3365 ;; This function uses a non-reentrant model
  3366 ;;
  3367                           
  3368                           
  3369                           ;psect for function _setData
  3370  0593                     _setData:	
  3371                           
  3372                           ;incstack = 0
  3373                           ; Regs used in _setData: [wreg+status,2+status,0]
  3374                           ;setData@data stored from wreg
  3375  0593  00F5               	movwf	setData@data
  3376  0594                     l1876:	
  3377                           
  3378                           ;LCD.c: 105:     PORTAbits.RA0 = data & 0x1;
  3379  0594  3001               	movlw	1
  3380  0595  0575               	andwf	setData@data,w
  3381  0596  00F3               	movwf	??_setData
  3382  0597  1283               	bcf	3,5	;RP0=0, select bank0
  3383  0598  1303               	bcf	3,6	;RP1=0, select bank0
  3384  0599  0805               	movf	5,w	;volatile
  3385  059A  0673               	xorwf	??_setData,w
  3386  059B  39FE               	andlw	-2
  3387  059C  0673               	xorwf	??_setData,w
  3388  059D  0085               	movwf	5	;volatile
  3389                           
  3390                           ;LCD.c: 106:     PORTAbits.RA1 = (data >>1) & 0x1;
  3391  059E  0875               	movf	setData@data,w
  3392  059F  00F3               	movwf	??_setData
  3393  05A0  1003               	clrc
  3394  05A1  0C73               	rrf	??_setData,w
  3395  05A2  3901               	andlw	1
  3396  05A3  00F4               	movwf	??_setData+1
  3397  05A4  0DF4               	rlf	??_setData+1,f
  3398  05A5  0805               	movf	5,w	;volatile
  3399  05A6  0674               	xorwf	??_setData+1,w
  3400  05A7  39FD               	andlw	-3
  3401  05A8  0674               	xorwf	??_setData+1,w
  3402  05A9  0085               	movwf	5	;volatile
  3403                           
  3404                           ;LCD.c: 107:     PORTAbits.RA2 = (data >>2) & 0x1;
  3405  05AA  0875               	movf	setData@data,w
  3406  05AB  00F3               	movwf	??_setData
  3407  05AC  3002               	movlw	2
  3408  05AD                     u1235:	
  3409  05AD  1003               	clrc
  3410  05AE  0CF3               	rrf	??_setData,f
  3411  05AF  3EFF               	addlw	-1
  3412  05B0  1D03               	skipz
  3413  05B1  2DAD               	goto	u1235
  3414  05B2  0873               	movf	??_setData,w
  3415  05B3  3901               	andlw	1
  3416  05B4  00F4               	movwf	??_setData+1
  3417  05B5  0DF4               	rlf	??_setData+1,f
  3418  05B6  0DF4               	rlf	??_setData+1,f
  3419  05B7  0805               	movf	5,w	;volatile
  3420  05B8  0674               	xorwf	??_setData+1,w
  3421  05B9  39FB               	andlw	-5
  3422  05BA  0674               	xorwf	??_setData+1,w
  3423  05BB  0085               	movwf	5	;volatile
  3424                           
  3425                           ;LCD.c: 108:     PORTAbits.RA3 = (data >>3) & 0x1;
  3426  05BC  0875               	movf	setData@data,w
  3427  05BD  00F3               	movwf	??_setData
  3428  05BE  3003               	movlw	3
  3429  05BF                     u1245:	
  3430  05BF  1003               	clrc
  3431  05C0  0CF3               	rrf	??_setData,f
  3432  05C1  3EFF               	addlw	-1
  3433  05C2  1D03               	skipz
  3434  05C3  2DBF               	goto	u1245
  3435  05C4  0873               	movf	??_setData,w
  3436  05C5  3901               	andlw	1
  3437  05C6  00F4               	movwf	??_setData+1
  3438  05C7  0DF4               	rlf	??_setData+1,f
  3439  05C8  0DF4               	rlf	??_setData+1,f
  3440  05C9  0DF4               	rlf	??_setData+1,f
  3441  05CA  0805               	movf	5,w	;volatile
  3442  05CB  0674               	xorwf	??_setData+1,w
  3443  05CC  39F7               	andlw	-9
  3444  05CD  0674               	xorwf	??_setData+1,w
  3445  05CE  0085               	movwf	5	;volatile
  3446                           
  3447                           ;LCD.c: 109:     PORTAbits.RA4 = (data >>4) & 0x1;
  3448  05CF  0875               	movf	setData@data,w
  3449  05D0  00F3               	movwf	??_setData
  3450  05D1  3004               	movlw	4
  3451  05D2                     u1255:	
  3452  05D2  1003               	clrc
  3453  05D3  0CF3               	rrf	??_setData,f
  3454  05D4  3EFF               	addlw	-1
  3455  05D5  1D03               	skipz
  3456  05D6  2DD2               	goto	u1255
  3457  05D7  0873               	movf	??_setData,w
  3458  05D8  3901               	andlw	1
  3459  05D9  00F4               	movwf	??_setData+1
  3460  05DA  0EF4               	swapf	??_setData+1,f
  3461  05DB  0805               	movf	5,w	;volatile
  3462  05DC  0674               	xorwf	??_setData+1,w
  3463  05DD  39EF               	andlw	-17
  3464  05DE  0674               	xorwf	??_setData+1,w
  3465  05DF  0085               	movwf	5	;volatile
  3466                           
  3467                           ;LCD.c: 110:     PORTAbits.RA5 = (data >>5) & 0x1;
  3468  05E0  0875               	movf	setData@data,w
  3469  05E1  00F3               	movwf	??_setData
  3470  05E2  3005               	movlw	5
  3471  05E3                     u1265:	
  3472  05E3  1003               	clrc
  3473  05E4  0CF3               	rrf	??_setData,f
  3474  05E5  3EFF               	addlw	-1
  3475  05E6  1D03               	skipz
  3476  05E7  2DE3               	goto	u1265
  3477  05E8  0873               	movf	??_setData,w
  3478  05E9  3901               	andlw	1
  3479  05EA  00F4               	movwf	??_setData+1
  3480  05EB  0EF4               	swapf	??_setData+1,f
  3481  05EC  0DF4               	rlf	??_setData+1,f
  3482  05ED  0805               	movf	5,w	;volatile
  3483  05EE  0674               	xorwf	??_setData+1,w
  3484  05EF  39DF               	andlw	-33
  3485  05F0  0674               	xorwf	??_setData+1,w
  3486  05F1  0085               	movwf	5	;volatile
  3487                           
  3488                           ;LCD.c: 111:     PORTEbits.RE0 = (data >>6) & 0x1;
  3489  05F2  0875               	movf	setData@data,w
  3490  05F3  00F3               	movwf	??_setData
  3491  05F4  3006               	movlw	6
  3492  05F5                     u1275:	
  3493  05F5  1003               	clrc
  3494  05F6  0CF3               	rrf	??_setData,f
  3495  05F7  3EFF               	addlw	-1
  3496  05F8  1D03               	skipz
  3497  05F9  2DF5               	goto	u1275
  3498  05FA  3001               	movlw	1
  3499  05FB  0573               	andwf	??_setData,w
  3500  05FC  00F4               	movwf	??_setData+1
  3501  05FD  0809               	movf	9,w	;volatile
  3502  05FE  0674               	xorwf	??_setData+1,w
  3503  05FF  39FE               	andlw	-2
  3504  0600  0674               	xorwf	??_setData+1,w
  3505  0601  0089               	movwf	9	;volatile
  3506                           
  3507                           ;LCD.c: 112:     PORTEbits.RE1 = (data >>7) & 0x1;
  3508  0602  0875               	movf	setData@data,w
  3509  0603  00F3               	movwf	??_setData
  3510  0604  3007               	movlw	7
  3511  0605                     u1285:	
  3512  0605  1003               	clrc
  3513  0606  0CF3               	rrf	??_setData,f
  3514  0607  3EFF               	addlw	-1
  3515  0608  1D03               	skipz
  3516  0609  2E05               	goto	u1285
  3517  060A  0873               	movf	??_setData,w
  3518  060B  3901               	andlw	1
  3519  060C  00F4               	movwf	??_setData+1
  3520  060D  0DF4               	rlf	??_setData+1,f
  3521  060E  0809               	movf	9,w	;volatile
  3522  060F  0674               	xorwf	??_setData+1,w
  3523  0610  39FD               	andlw	-3
  3524  0611  0674               	xorwf	??_setData+1,w
  3525  0612  0089               	movwf	9	;volatile
  3526  0613                     l386:	
  3527  0613  0008               	return
  3528  0614                     __end_of_setData:	
  3529                           
  3530                           	psect	text22
  3531  0E04                     __ptext22:	
  3532 ;; *************** function _clearRW *****************
  3533 ;; Defined at:
  3534 ;;		line 92 in file "LCD.c"
  3535 ;; Parameters:    Size  Location     Type
  3536 ;;		None
  3537 ;; Auto vars:     Size  Location     Type
  3538 ;;		None
  3539 ;; Return value:  Size  Location     Type
  3540 ;;                  1    wreg      void 
  3541 ;; Registers used:
  3542 ;;		None
  3543 ;; Tracked objects:
  3544 ;;		On entry : 0/0
  3545 ;;		On exit  : 0/0
  3546 ;;		Unchanged: 0/0
  3547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3548 ;;      Params:         0       0       0       0       0
  3549 ;;      Locals:         0       0       0       0       0
  3550 ;;      Temps:          0       0       0       0       0
  3551 ;;      Totals:         0       0       0       0       0
  3552 ;;Total ram usage:        0 bytes
  3553 ;; Hardware stack levels used:    1
  3554 ;; Hardware stack levels required when called:    1
  3555 ;; This function calls:
  3556 ;;		Nothing
  3557 ;; This function is called by:
  3558 ;;		_clearDisplay
  3559 ;;		_entryModeSet
  3560 ;;		_displayONOFF
  3561 ;;		_functionSet
  3562 ;;		_returnHome
  3563 ;; This function uses a non-reentrant model
  3564 ;;
  3565                           
  3566                           
  3567                           ;psect for function _clearRW
  3568  0E04                     _clearRW:	
  3569  0E04                     l1874:	
  3570                           ;incstack = 0
  3571                           ; Regs used in _clearRW: []
  3572                           
  3573                           
  3574                           ;LCD.c: 93:     PORTCbits.RC1 = 0;
  3575  0E04  1283               	bcf	3,5	;RP0=0, select bank0
  3576  0E05  1303               	bcf	3,6	;RP1=0, select bank0
  3577  0E06  1087               	bcf	7,1	;volatile
  3578  0E07                     l377:	
  3579  0E07  0008               	return
  3580  0E08                     __end_of_clearRW:	
  3581                           
  3582                           	psect	text23
  3583  0E00                     __ptext23:	
  3584 ;; *************** function _clearRS *****************
  3585 ;; Defined at:
  3586 ;;		line 84 in file "LCD.c"
  3587 ;; Parameters:    Size  Location     Type
  3588 ;;		None
  3589 ;; Auto vars:     Size  Location     Type
  3590 ;;		None
  3591 ;; Return value:  Size  Location     Type
  3592 ;;                  1    wreg      void 
  3593 ;; Registers used:
  3594 ;;		None
  3595 ;; Tracked objects:
  3596 ;;		On entry : 0/0
  3597 ;;		On exit  : 0/0
  3598 ;;		Unchanged: 0/0
  3599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3600 ;;      Params:         0       0       0       0       0
  3601 ;;      Locals:         0       0       0       0       0
  3602 ;;      Temps:          0       0       0       0       0
  3603 ;;      Totals:         0       0       0       0       0
  3604 ;;Total ram usage:        0 bytes
  3605 ;; Hardware stack levels used:    1
  3606 ;; Hardware stack levels required when called:    1
  3607 ;; This function calls:
  3608 ;;		Nothing
  3609 ;; This function is called by:
  3610 ;;		_clearDisplay
  3611 ;;		_entryModeSet
  3612 ;;		_displayONOFF
  3613 ;;		_functionSet
  3614 ;;		_returnHome
  3615 ;; This function uses a non-reentrant model
  3616 ;;
  3617                           
  3618                           
  3619                           ;psect for function _clearRS
  3620  0E00                     _clearRS:	
  3621  0E00                     l1872:	
  3622                           ;incstack = 0
  3623                           ; Regs used in _clearRS: []
  3624                           
  3625                           
  3626                           ;LCD.c: 85:     PORTCbits.RC0 = 0;
  3627  0E00  1283               	bcf	3,5	;RP0=0, select bank0
  3628  0E01  1303               	bcf	3,6	;RP1=0, select bank0
  3629  0E02  1007               	bcf	7,0	;volatile
  3630  0E03                     l371:	
  3631  0E03  0008               	return
  3632  0E04                     __end_of_clearRS:	
  3633                           
  3634                           	psect	text24
  3635  02E3                     __ptext24:	
  3636 ;; *************** function _checkCount *****************
  3637 ;; Defined at:
  3638 ;;		line 137 in file "mainsource.c"
  3639 ;; Parameters:    Size  Location     Type
  3640 ;;		None
  3641 ;; Auto vars:     Size  Location     Type
  3642 ;;  j               2   31[BANK0 ] int 
  3643 ;;  i               2    0        int 
  3644 ;; Return value:  Size  Location     Type
  3645 ;;                  1    wreg      void 
  3646 ;; Registers used:
  3647 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3648 ;; Tracked objects:
  3649 ;;		On entry : 0/0
  3650 ;;		On exit  : 0/0
  3651 ;;		Unchanged: 0/0
  3652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3653 ;;      Params:         0       0       0       0       0
  3654 ;;      Locals:         0       4       0       0       0
  3655 ;;      Temps:          0       1       0       0       0
  3656 ;;      Totals:         0       5       0       0       0
  3657 ;;Total ram usage:        5 bytes
  3658 ;; Hardware stack levels used:    1
  3659 ;; Hardware stack levels required when called:    4
  3660 ;; This function calls:
  3661 ;;		_checkBottom
  3662 ;;		_checkColission_D
  3663 ;;		_drawFigure
  3664 ;;		_leerEntradas
  3665 ;;		_perdio
  3666 ;;		_sumaPuntos
  3667 ;; This function is called by:
  3668 ;;		_main
  3669 ;; This function uses a non-reentrant model
  3670 ;;
  3671                           
  3672                           
  3673                           ;psect for function _checkCount
  3674  02E3                     _checkCount:	
  3675  02E3                     l2254:	
  3676                           ;incstack = 0
  3677                           ; Regs used in _checkCount: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3678                           
  3679                           
  3680                           ;mainsource.c: 138:     if(con.check_count == 1){
  3681  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  3682  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  3683  02E5  034D               	decf	_con+7,w
  3684  02E6  1D03               	btfss	3,2
  3685  02E7  2AE9               	goto	u1661
  3686  02E8  2AEA               	goto	u1660
  3687  02E9                     u1661:	
  3688  02E9  2B31               	goto	l146
  3689  02EA                     u1660:	
  3690  02EA                     l2256:	
  3691  02EA  01BF               	clrf	checkCount@j
  3692  02EB  01C0               	clrf	checkCount@j+1
  3693                           
  3694                           ;mainsource.c: 140:         con.check_count = 0;
  3695  02EC  01CD               	clrf	_con+7
  3696  02ED                     l2258:	
  3697                           
  3698                           ;mainsource.c: 142:         leerEntradas();
  3699  02ED  120A  118A  2296  120A  118A  	fcall	_leerEntradas
  3700  02F2                     l2260:	
  3701                           
  3702                           ;mainsource.c: 145:         if(timerCount >= 15 ){
  3703  02F2  1283               	bcf	3,5	;RP0=0, select bank0
  3704  02F3  1303               	bcf	3,6	;RP1=0, select bank0
  3705  02F4  0857               	movf	_timerCount+3,w
  3706  02F5  1D03               	btfss	3,2
  3707  02F6  2B05               	goto	u1670
  3708  02F7  0856               	movf	_timerCount+2,w
  3709  02F8  1D03               	btfss	3,2
  3710  02F9  2B05               	goto	u1670
  3711  02FA  0855               	movf	_timerCount+1,w
  3712  02FB  1D03               	btfss	3,2
  3713  02FC  2B05               	goto	u1670
  3714  02FD  300F               	movlw	15
  3715  02FE  0254               	subwf	_timerCount,w
  3716  02FF  1D03               	skipz
  3717  0300  2B01               	goto	u1673
  3718  0301                     u1673:	
  3719  0301  1C03               	btfss	3,0
  3720  0302  2B04               	goto	u1671
  3721  0303  2B05               	goto	u1670
  3722  0304                     u1671:	
  3723  0304  2B31               	goto	l146
  3724  0305                     u1670:	
  3725  0305                     l2262:	
  3726                           
  3727                           ;mainsource.c: 146:             timerCount = 0;
  3728  0305  3000               	movlw	0
  3729  0306  00D7               	movwf	_timerCount+3
  3730  0307  3000               	movlw	0
  3731  0308  00D6               	movwf	_timerCount+2
  3732  0309  3000               	movlw	0
  3733  030A  00D5               	movwf	_timerCount+1
  3734  030B  3000               	movlw	0
  3735  030C  00D4               	movwf	_timerCount
  3736  030D                     l2264:	
  3737                           
  3738                           ;mainsource.c: 148:             PORTBbits.RB0 = con.led;
  3739  030D  0C47               	rrf	_con+1,w
  3740  030E  1C03               	skipc
  3741  030F  1006               	bcf	6,0	;volatile
  3742  0310  1803               	skipnc
  3743  0311  1406               	bsf	6,0	;volatile
  3744  0312                     l2266:	
  3745                           
  3746                           ;mainsource.c: 149:             con.led= ~con.led;
  3747  0312  0947               	comf	_con+1,w
  3748  0313  00BC               	movwf	??_checkCount
  3749  0314  083C               	movf	??_checkCount,w
  3750  0315  00C7               	movwf	_con+1
  3751                           
  3752                           ;mainsource.c: 151:             con.ficha_Vpos--;
  3753  0316  3001               	movlw	1
  3754  0317  02C8               	subwf	_con+2,f
  3755  0318                     l2268:	
  3756                           
  3757                           ;mainsource.c: 153:             checkBottom();
  3758  0318  120A  158A  2725  120A  118A  	fcall	_checkBottom
  3759  031D                     l2270:	
  3760                           
  3761                           ;mainsource.c: 154:             checkColission_D();
  3762  031D  120A  118A  24A6  120A  118A  	fcall	_checkColission_D
  3763  0322                     l2272:	
  3764                           
  3765                           ;mainsource.c: 155:             drawFigure();
  3766  0322  120A  118A  2614  120A  118A  	fcall	_drawFigure
  3767  0327                     l2274:	
  3768                           
  3769                           ;mainsource.c: 157:             perdio();
  3770  0327  120A  118A  2440  120A  118A  	fcall	_perdio
  3771  032C                     l2276:	
  3772                           
  3773                           ;mainsource.c: 158:             sumaPuntos();
  3774  032C  120A  118A  20E1  120A  118A  	fcall	_sumaPuntos
  3775  0331                     l146:	
  3776  0331  0008               	return
  3777  0332                     __end_of_checkCount:	
  3778                           
  3779                           	psect	text25
  3780  00E1                     __ptext25:	
  3781 ;; *************** function _sumaPuntos *****************
  3782 ;; Defined at:
  3783 ;;		line 30 in file "puntuacion.c"
  3784 ;; Parameters:    Size  Location     Type
  3785 ;;		None
  3786 ;; Auto vars:     Size  Location     Type
  3787 ;;  j               2    9[COMMON] int 
  3788 ;;  i               2    7[COMMON] int 
  3789 ;;  aux             1    6[COMMON] unsigned char 
  3790 ;; Return value:  Size  Location     Type
  3791 ;;                  1    wreg      void 
  3792 ;; Registers used:
  3793 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3794 ;; Tracked objects:
  3795 ;;		On entry : 0/0
  3796 ;;		On exit  : 0/0
  3797 ;;		Unchanged: 0/0
  3798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3799 ;;      Params:         0       0       0       0       0
  3800 ;;      Locals:         5       0       0       0       0
  3801 ;;      Temps:          4       0       0       0       0
  3802 ;;      Totals:         9       0       0       0       0
  3803 ;;Total ram usage:        9 bytes
  3804 ;; Hardware stack levels used:    1
  3805 ;; Hardware stack levels required when called:    1
  3806 ;; This function calls:
  3807 ;;		Nothing
  3808 ;; This function is called by:
  3809 ;;		_checkCount
  3810 ;; This function uses a non-reentrant model
  3811 ;;
  3812                           
  3813                           
  3814                           ;psect for function _sumaPuntos
  3815  00E1                     _sumaPuntos:	
  3816  00E1                     l2054:	
  3817                           ;incstack = 0
  3818                           ; Regs used in _sumaPuntos: [wreg-fsr0h+status,2+status,0+btemp+1]
  3819                           
  3820  00E1  01FA               	clrf	sumaPuntos@j
  3821  00E2  01FB               	clrf	sumaPuntos@j+1
  3822  00E3                     l2056:	
  3823                           
  3824                           ;puntuacion.c: 32:     uint8_t aux = 1;
  3825  00E3  01F7               	clrf	sumaPuntos@aux
  3826  00E4  0AF7               	incf	sumaPuntos@aux,f
  3827                           
  3828                           ;puntuacion.c: 33:     for (i=0; i<16; i++){
  3829  00E5  01F8               	clrf	sumaPuntos@i
  3830  00E6  01F9               	clrf	sumaPuntos@i+1
  3831  00E7                     l2062:	
  3832                           
  3833                           ;puntuacion.c: 34:         for(j=0; j<8; j++){
  3834  00E7  01FA               	clrf	sumaPuntos@j
  3835  00E8  01FB               	clrf	sumaPuntos@j+1
  3836  00E9                     l2068:	
  3837                           
  3838                           ;puntuacion.c: 35:             aux = aux & fondo[j]>>i;
  3839  00E9  087A               	movf	sumaPuntos@j,w
  3840  00EA  00F3               	movwf	??_sumaPuntos
  3841  00EB  0773               	addwf	??_sumaPuntos,w
  3842  00EC  3EA0               	addlw	(low (_fondo| 0))& (0+255)
  3843  00ED  0084               	movwf	4
  3844  00EE  1383               	bcf	3,7	;select IRP bank1
  3845  00EF  0800               	movf	0,w
  3846  00F0  00F4               	movwf	??_sumaPuntos+1
  3847  00F1  0A84               	incf	4,f
  3848  00F2  0800               	movf	0,w
  3849  00F3  00F5               	movwf	??_sumaPuntos+2
  3850  00F4  0A78               	incf	sumaPuntos@i,w
  3851  00F5  28F9               	goto	u1494
  3852  00F6                     u1495:	
  3853  00F6  1003               	clrc
  3854  00F7  0CF5               	rrf	??_sumaPuntos+2,f
  3855  00F8  0CF4               	rrf	??_sumaPuntos+1,f
  3856  00F9                     u1494:	
  3857  00F9  3EFF               	addlw	-1
  3858  00FA  1D03               	skipz
  3859  00FB  28F6               	goto	u1495
  3860  00FC  0874               	movf	??_sumaPuntos+1,w
  3861  00FD  0577               	andwf	sumaPuntos@aux,w
  3862  00FE  00F6               	movwf	??_sumaPuntos+3
  3863  00FF  0876               	movf	??_sumaPuntos+3,w
  3864  0100  00F7               	movwf	sumaPuntos@aux
  3865  0101                     l2070:	
  3866                           
  3867                           ;puntuacion.c: 36:         }
  3868  0101  3001               	movlw	1
  3869  0102  07FA               	addwf	sumaPuntos@j,f
  3870  0103  1803               	skipnc
  3871  0104  0AFB               	incf	sumaPuntos@j+1,f
  3872  0105  3000               	movlw	0
  3873  0106  07FB               	addwf	sumaPuntos@j+1,f
  3874  0107                     l2072:	
  3875  0107  087B               	movf	sumaPuntos@j+1,w
  3876  0108  3A80               	xorlw	128
  3877  0109  00FF               	movwf	btemp+1
  3878  010A  3080               	movlw	128
  3879  010B  027F               	subwf	btemp+1,w
  3880  010C  1D03               	skipz
  3881  010D  2910               	goto	u1505
  3882  010E  3008               	movlw	8
  3883  010F  027A               	subwf	sumaPuntos@j,w
  3884  0110                     u1505:	
  3885  0110  1C03               	skipc
  3886  0111  2913               	goto	u1501
  3887  0112  2914               	goto	u1500
  3888  0113                     u1501:	
  3889  0113  28E9               	goto	l2068
  3890  0114                     u1500:	
  3891  0114                     l2076:	
  3892                           
  3893                           ;puntuacion.c: 42:     }
  3894  0114  3001               	movlw	1
  3895  0115  07F8               	addwf	sumaPuntos@i,f
  3896  0116  1803               	skipnc
  3897  0117  0AF9               	incf	sumaPuntos@i+1,f
  3898  0118  3000               	movlw	0
  3899  0119  07F9               	addwf	sumaPuntos@i+1,f
  3900  011A                     l2078:	
  3901  011A  0879               	movf	sumaPuntos@i+1,w
  3902  011B  3A80               	xorlw	128
  3903  011C  00FF               	movwf	btemp+1
  3904  011D  3080               	movlw	128
  3905  011E  027F               	subwf	btemp+1,w
  3906  011F  1D03               	skipz
  3907  0120  2923               	goto	u1515
  3908  0121  3010               	movlw	16
  3909  0122  0278               	subwf	sumaPuntos@i,w
  3910  0123                     u1515:	
  3911  0123  1C03               	skipc
  3912  0124  2926               	goto	u1511
  3913  0125  2927               	goto	u1510
  3914  0126                     u1511:	
  3915  0126  28E7               	goto	l2062
  3916  0127                     u1510:	
  3917  0127                     l301:	
  3918  0127  0008               	return
  3919  0128                     __end_of_sumaPuntos:	
  3920                           
  3921                           	psect	text26
  3922  0440                     __ptext26:	
  3923 ;; *************** function _perdio *****************
  3924 ;; Defined at:
  3925 ;;		line 13 in file "puntuacion.c"
  3926 ;; Parameters:    Size  Location     Type
  3927 ;;		None
  3928 ;; Auto vars:     Size  Location     Type
  3929 ;;  i               2   21[BANK0 ] int 
  3930 ;; Return value:  Size  Location     Type
  3931 ;;                  1    wreg      void 
  3932 ;; Registers used:
  3933 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3934 ;; Tracked objects:
  3935 ;;		On entry : 0/0
  3936 ;;		On exit  : 0/0
  3937 ;;		Unchanged: 0/0
  3938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3939 ;;      Params:         0       0       0       0       0
  3940 ;;      Locals:         0       2       0       0       0
  3941 ;;      Temps:          0       3       0       0       0
  3942 ;;      Totals:         0       5       0       0       0
  3943 ;;Total ram usage:        5 bytes
  3944 ;; Hardware stack levels used:    1
  3945 ;; Hardware stack levels required when called:    3
  3946 ;; This function calls:
  3947 ;;		___awmod
  3948 ;;		_memset
  3949 ;;		_rand
  3950 ;; This function is called by:
  3951 ;;		_checkCount
  3952 ;; This function uses a non-reentrant model
  3953 ;;
  3954                           
  3955                           
  3956                           ;psect for function _perdio
  3957  0440                     _perdio:	
  3958  0440                     l2036:	
  3959                           ;incstack = 0
  3960                           ; Regs used in _perdio: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3961                           
  3962                           
  3963                           ;puntuacion.c: 14:     int i = 0;
  3964  0440  1283               	bcf	3,5	;RP0=0, select bank0
  3965  0441  1303               	bcf	3,6	;RP1=0, select bank0
  3966  0442  01B5               	clrf	perdio@i
  3967  0443  01B6               	clrf	perdio@i+1
  3968                           
  3969                           ;puntuacion.c: 15:     for(i=0; i<8; i++){
  3970  0444  01B5               	clrf	perdio@i
  3971  0445  01B6               	clrf	perdio@i+1
  3972  0446                     l2042:	
  3973                           
  3974                           ;puntuacion.c: 16:         if((fondo[i] & 0x8000) != 0){
  3975  0446  1283               	bcf	3,5	;RP0=0, select bank0
  3976  0447  1303               	bcf	3,6	;RP1=0, select bank0
  3977  0448  0835               	movf	perdio@i,w
  3978  0449  00B2               	movwf	??_perdio
  3979  044A  0732               	addwf	??_perdio,w
  3980  044B  3EA0               	addlw	(low (_fondo| 0))& (0+255)
  3981  044C  0084               	movwf	4
  3982  044D  1383               	bcf	3,7	;select IRP bank1
  3983  044E  0800               	movf	0,w
  3984  044F  00B3               	movwf	??_perdio+1
  3985  0450  0A84               	incf	4,f
  3986  0451  0800               	movf	0,w
  3987  0452  00B4               	movwf	??_perdio+2
  3988  0453  1FB4               	btfss	??_perdio+2,7
  3989  0454  2C56               	goto	u1471
  3990  0455  2C57               	goto	u1470
  3991  0456                     u1471:	
  3992  0456  2C92               	goto	l2050
  3993  0457                     u1470:	
  3994  0457                     l2044:	
  3995                           
  3996                           ;puntuacion.c: 17:             memset(ficha, 0, sizeof(ficha));
  3997  0457  3000               	movlw	0
  3998  0458  00F3               	movwf	memset@c
  3999  0459  00F4               	movwf	memset@c+1
  4000  045A  3010               	movlw	16
  4001  045B  00F5               	movwf	memset@n
  4002  045C  3000               	movlw	0
  4003  045D  00F6               	movwf	memset@n+1
  4004  045E  3058               	movlw	(low (_ficha| 0))& (0+255)
  4005  045F  120A  158A  2705  120A  118A  	fcall	_memset
  4006                           
  4007                           ;puntuacion.c: 18:             memset(fondo, 0, sizeof(fondo));
  4008  0464  3000               	movlw	0
  4009  0465  00F3               	movwf	memset@c
  4010  0466  00F4               	movwf	memset@c+1
  4011  0467  3010               	movlw	16
  4012  0468  00F5               	movwf	memset@n
  4013  0469  3000               	movlw	0
  4014  046A  00F6               	movwf	memset@n+1
  4015  046B  30A0               	movlw	(low (_fondo| 0))& (0+255)
  4016  046C  120A  158A  2705  120A  118A  	fcall	_memset
  4017  0471                     l2046:	
  4018                           
  4019                           ;puntuacion.c: 19:             con.ficha_Vpos = 16;
  4020  0471  3010               	movlw	16
  4021  0472  1283               	bcf	3,5	;RP0=0, select bank0
  4022  0473  1303               	bcf	3,6	;RP1=0, select bank0
  4023  0474  00B2               	movwf	??_perdio
  4024  0475  0832               	movf	??_perdio,w
  4025  0476  00C8               	movwf	_con+2
  4026  0477                     l2048:	
  4027                           
  4028                           ;puntuacion.c: 20:             con.ficha_actual = rand() % 7;
  4029  0477  3007               	movlw	7
  4030  0478  00AB               	movwf	___awmod@divisor
  4031  0479  3000               	movlw	0
  4032  047A  00AC               	movwf	___awmod@divisor+1
  4033  047B  120A  118A  209A  120A  118A  	fcall	_rand
  4034  0480  1283               	bcf	3,5	;RP0=0, select bank0
  4035  0481  1303               	bcf	3,6	;RP1=0, select bank0
  4036  0482  0825               	movf	?_rand+1,w
  4037  0483  00AE               	movwf	___awmod@dividend+1
  4038  0484  0824               	movf	?_rand,w
  4039  0485  00AD               	movwf	___awmod@dividend
  4040  0486  120A  118A  2382  120A  118A  	fcall	___awmod
  4041  048B  1283               	bcf	3,5	;RP0=0, select bank0
  4042  048C  1303               	bcf	3,6	;RP1=0, select bank0
  4043  048D  082B               	movf	?___awmod,w
  4044  048E  00B2               	movwf	??_perdio
  4045  048F  0832               	movf	??_perdio,w
  4046  0490  00CA               	movwf	_con+4
  4047                           
  4048                           ;puntuacion.c: 21:             break;
  4049  0491  2CA5               	goto	l293
  4050  0492                     l2050:	
  4051                           
  4052                           ;puntuacion.c: 23:     }
  4053  0492  3001               	movlw	1
  4054  0493  07B5               	addwf	perdio@i,f
  4055  0494  1803               	skipnc
  4056  0495  0AB6               	incf	perdio@i+1,f
  4057  0496  3000               	movlw	0
  4058  0497  07B6               	addwf	perdio@i+1,f
  4059  0498                     l2052:	
  4060  0498  0836               	movf	perdio@i+1,w
  4061  0499  3A80               	xorlw	128
  4062  049A  00FF               	movwf	btemp+1
  4063  049B  3080               	movlw	128
  4064  049C  027F               	subwf	btemp+1,w
  4065  049D  1D03               	skipz
  4066  049E  2CA1               	goto	u1485
  4067  049F  3008               	movlw	8
  4068  04A0  0235               	subwf	perdio@i,w
  4069  04A1                     u1485:	
  4070  04A1  1C03               	skipc
  4071  04A2  2CA4               	goto	u1481
  4072  04A3  2CA5               	goto	u1480
  4073  04A4                     u1481:	
  4074  04A4  2C46               	goto	l2042
  4075  04A5                     u1480:	
  4076  04A5                     l293:	
  4077  04A5  0008               	return
  4078  04A6                     __end_of_perdio:	
  4079                           
  4080                           	psect	text27
  4081  0296                     __ptext27:	
  4082 ;; *************** function _leerEntradas *****************
  4083 ;; Defined at:
  4084 ;;		line 108 in file "mainsource.c"
  4085 ;; Parameters:    Size  Location     Type
  4086 ;;		None
  4087 ;; Auto vars:     Size  Location     Type
  4088 ;;		None
  4089 ;; Return value:  Size  Location     Type
  4090 ;;                  1    wreg      void 
  4091 ;; Registers used:
  4092 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4093 ;; Tracked objects:
  4094 ;;		On entry : 0/0
  4095 ;;		On exit  : 0/0
  4096 ;;		Unchanged: 0/0
  4097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4098 ;;      Params:         0       0       0       0       0
  4099 ;;      Locals:         0       0       0       0       0
  4100 ;;      Temps:          1       0       0       0       0
  4101 ;;      Totals:         1       0       0       0       0
  4102 ;;Total ram usage:        1 bytes
  4103 ;; Hardware stack levels used:    1
  4104 ;; Hardware stack levels required when called:    3
  4105 ;; This function calls:
  4106 ;;		_checkColission_L
  4107 ;;		_checkColission_R
  4108 ;;		_checkRight
  4109 ;;		_drawFigure
  4110 ;;		_gire
  4111 ;; This function is called by:
  4112 ;;		_checkCount
  4113 ;; This function uses a non-reentrant model
  4114 ;;
  4115                           
  4116                           
  4117                           ;psect for function _leerEntradas
  4118  0296                     _leerEntradas:	
  4119  0296                     l1968:	
  4120                           ;incstack = 0
  4121                           ; Regs used in _leerEntradas: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4122                           
  4123                           
  4124                           ;mainsource.c: 110:     if(con.girar){
  4125  0296  1283               	bcf	3,5	;RP0=0, select bank0
  4126  0297  1303               	bcf	3,6	;RP1=0, select bank0
  4127  0298  0846               	movf	_con,w
  4128  0299  1903               	btfsc	3,2
  4129  029A  2A9C               	goto	u1381
  4130  029B  2A9D               	goto	u1380
  4131  029C                     u1381:	
  4132  029C  2AA9               	goto	l1978
  4133  029D                     u1380:	
  4134  029D                     l1970:	
  4135                           
  4136                           ;mainsource.c: 111:         con.girar=0;
  4137  029D  01C6               	clrf	_con
  4138  029E                     l1972:	
  4139                           
  4140                           ;mainsource.c: 112:         gire();
  4141  029E  120A  118A  26B1  120A  118A  	fcall	_gire
  4142  02A3                     l1974:	
  4143                           
  4144                           ;mainsource.c: 113:         drawFigure();
  4145  02A3  120A  118A  2614  120A  118A  	fcall	_drawFigure
  4146  02A8  2AE2               	goto	l136
  4147  02A9                     l1978:	
  4148                           
  4149                           ;mainsource.c: 117:     if(con.derecha == 1 ){
  4150  02A9  034B               	decf	_con+5,w
  4151  02AA  1D03               	btfss	3,2
  4152  02AB  2AAD               	goto	u1391
  4153  02AC  2AAE               	goto	u1390
  4154  02AD                     u1391:	
  4155  02AD  2AC7               	goto	l1994
  4156  02AE                     u1390:	
  4157  02AE                     l1980:	
  4158                           
  4159                           ;mainsource.c: 118:         con.derecha = 0;
  4160  02AE  01CB               	clrf	_con+5
  4161  02AF                     l1982:	
  4162                           
  4163                           ;mainsource.c: 119:         if(checkColission_R() | checkRight()){
  4164  02AF  120A  158A  2634  120A  118A  	fcall	_checkRight
  4165  02B4  00FB               	movwf	??_leerEntradas
  4166  02B5  120A  118A  2056  120A  118A  	fcall	_checkColission_R
  4167  02BA  047B               	iorwf	??_leerEntradas,w
  4168  02BB  1903               	btfsc	3,2
  4169  02BC  2ABE               	goto	u1401
  4170  02BD  2ABF               	goto	u1400
  4171  02BE                     u1401:	
  4172  02BE  2AC0               	goto	l1986
  4173  02BF                     u1400:	
  4174  02BF  2AE2               	goto	l136
  4175  02C0                     l1986:	
  4176                           
  4177                           ;mainsource.c: 122:         con.ficha_Hpos++;
  4178  02C0  3001               	movlw	1
  4179  02C1  00FB               	movwf	??_leerEntradas
  4180  02C2  087B               	movf	??_leerEntradas,w
  4181  02C3  1283               	bcf	3,5	;RP0=0, select bank0
  4182  02C4  1303               	bcf	3,6	;RP1=0, select bank0
  4183  02C5  07C9               	addwf	_con+3,f
  4184  02C6  2AA3               	goto	l1974
  4185  02C7                     l1994:	
  4186  02C7  034C               	decf	_con+6,w
  4187  02C8  1D03               	btfss	3,2
  4188  02C9  2ACB               	goto	u1411
  4189  02CA  2ACC               	goto	u1410
  4190  02CB                     u1411:	
  4191  02CB  2AE2               	goto	l136
  4192  02CC                     u1410:	
  4193  02CC                     l1996:	
  4194  02CC  0849               	movf	_con+3,w
  4195  02CD  1903               	btfsc	3,2
  4196  02CE  2AD0               	goto	u1421
  4197  02CF  2AD1               	goto	u1420
  4198  02D0                     u1421:	
  4199  02D0  2AE2               	goto	l136
  4200  02D1                     u1420:	
  4201  02D1                     l1998:	
  4202                           
  4203                           ;mainsource.c: 127:         con.izquierda = 0;
  4204  02D1  01CC               	clrf	_con+6
  4205  02D2                     l2000:	
  4206                           
  4207                           ;mainsource.c: 128:         if(checkColission_L()==1){
  4208  02D2  120A  118A  224A  120A  118A  	fcall	_checkColission_L
  4209  02D7  3A01               	xorlw	1
  4210  02D8  1D03               	skipz
  4211  02D9  2ADB               	goto	u1431
  4212  02DA  2ADC               	goto	u1430
  4213  02DB                     u1431:	
  4214  02DB  2ADD               	goto	l2004
  4215  02DC                     u1430:	
  4216  02DC  2AE2               	goto	l136
  4217  02DD                     l2004:	
  4218                           
  4219                           ;mainsource.c: 131:         con.ficha_Hpos--;
  4220  02DD  3001               	movlw	1
  4221  02DE  1283               	bcf	3,5	;RP0=0, select bank0
  4222  02DF  1303               	bcf	3,6	;RP1=0, select bank0
  4223  02E0  02C9               	subwf	_con+3,f
  4224  02E1  2AA3               	goto	l1974
  4225  02E2                     l136:	
  4226  02E2  0008               	return
  4227  02E3                     __end_of_leerEntradas:	
  4228                           
  4229                           	psect	text28
  4230  06B1                     __ptext28:	
  4231 ;; *************** function _gire *****************
  4232 ;; Defined at:
  4233 ;;		line 68 in file "mainsource.c"
  4234 ;; Parameters:    Size  Location     Type
  4235 ;;		None
  4236 ;; Auto vars:     Size  Location     Type
  4237 ;;  aux             4    3[BANK0 ] unsigned char [4]
  4238 ;;  i               2    9[BANK0 ] int 
  4239 ;;  j               2    7[BANK0 ] int 
  4240 ;;  k               2    0[BANK0 ] int 
  4241 ;;  mask            1    2[BANK0 ] unsigned char 
  4242 ;; Return value:  Size  Location     Type
  4243 ;;                  1    wreg      void 
  4244 ;; Registers used:
  4245 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4246 ;; Tracked objects:
  4247 ;;		On entry : 0/0
  4248 ;;		On exit  : 0/0
  4249 ;;		Unchanged: 0/0
  4250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4251 ;;      Params:         0       0       0       0       0
  4252 ;;      Locals:         0      11       0       0       0
  4253 ;;      Temps:          5       0       0       0       0
  4254 ;;      Totals:         5      11       0       0       0
  4255 ;;Total ram usage:       16 bytes
  4256 ;; Hardware stack levels used:    1
  4257 ;; Hardware stack levels required when called:    1
  4258 ;; This function calls:
  4259 ;;		Nothing
  4260 ;; This function is called by:
  4261 ;;		_leerEntradas
  4262 ;; This function uses a non-reentrant model
  4263 ;;
  4264                           
  4265                           
  4266                           ;psect for function _gire
  4267  06B1                     _gire:	
  4268  06B1                     l1722:	
  4269                           ;incstack = 0
  4270                           ; Regs used in _gire: [wreg-fsr0h+status,2+status,0+btemp+1]
  4271                           
  4272  06B1  1283               	bcf	3,5	;RP0=0, select bank0
  4273  06B2  1303               	bcf	3,6	;RP1=0, select bank0
  4274  06B3  01A7               	clrf	gire@j
  4275  06B4  01A8               	clrf	gire@j+1
  4276  06B5  01A0               	clrf	gire@k
  4277  06B6  01A1               	clrf	gire@k+1
  4278  06B7                     l1724:	
  4279                           
  4280                           ;mainsource.c: 70:     uint8_t aux[4]={0x0000};
  4281  06B7  3000               	movlw	0
  4282  06B8  00A6               	movwf	gire@aux+3
  4283  06B9  3000               	movlw	0
  4284  06BA  00A5               	movwf	gire@aux+2
  4285  06BB  3000               	movlw	0
  4286  06BC  00A4               	movwf	gire@aux+1
  4287  06BD  3000               	movlw	0
  4288  06BE  00A3               	movwf	gire@aux
  4289  06BF                     l1726:	
  4290  06BF                     l1728:	
  4291                           
  4292                           ;mainsource.c: 72:     for(i=0; i<4; i++){
  4293  06BF  01A9               	clrf	gire@i
  4294  06C0  01AA               	clrf	gire@i+1
  4295  06C1                     l1734:	
  4296                           
  4297                           ;mainsource.c: 73:         for(j=0; j<4; j++){
  4298  06C1  1283               	bcf	3,5	;RP0=0, select bank0
  4299  06C2  1303               	bcf	3,6	;RP1=0, select bank0
  4300  06C3  01A7               	clrf	gire@j
  4301  06C4  01A8               	clrf	gire@j+1
  4302  06C5                     l1740:	
  4303                           
  4304                           ;mainsource.c: 74:             mask = (figuras[con.ficha_actual][j] >> i) & 0x01;
  4305  06C5  1283               	bcf	3,5	;RP0=0, select bank0
  4306  06C6  1303               	bcf	3,6	;RP1=0, select bank0
  4307  06C7  084A               	movf	_con+4,w
  4308  06C8  00F3               	movwf	??_gire
  4309  06C9  3002               	movlw	2
  4310  06CA                     u965:	
  4311  06CA  1003               	clrc
  4312  06CB  0DF3               	rlf	??_gire,f
  4313  06CC  3EFF               	addlw	-1
  4314  06CD  1D03               	skipz
  4315  06CE  2ECA               	goto	u965
  4316  06CF  30C0               	movlw	(low (_figuras| 0))& (0+255)
  4317  06D0  0773               	addwf	??_gire,w
  4318  06D1  00F4               	movwf	??_gire+1
  4319  06D2  0827               	movf	gire@j,w
  4320  06D3  0774               	addwf	??_gire+1,w
  4321  06D4  00F5               	movwf	??_gire+2
  4322  06D5  0875               	movf	??_gire+2,w
  4323  06D6  0084               	movwf	4
  4324  06D7  1383               	bcf	3,7	;select IRP bank1
  4325  06D8  0800               	movf	0,w
  4326  06D9  00F6               	movwf	??_gire+3
  4327  06DA  0A29               	incf	gire@i,w
  4328  06DB  2EDE               	goto	u974
  4329  06DC                     u975:	
  4330  06DC  1003               	clrc
  4331  06DD  0CF6               	rrf	??_gire+3,f
  4332  06DE                     u974:	
  4333  06DE  3EFF               	addlw	-1
  4334  06DF  1D03               	skipz
  4335  06E0  2EDC               	goto	u975
  4336  06E1  0876               	movf	??_gire+3,w
  4337  06E2  3901               	andlw	1
  4338  06E3  00F7               	movwf	??_gire+4
  4339  06E4  0877               	movf	??_gire+4,w
  4340  06E5  00A2               	movwf	gire@mask
  4341                           
  4342                           ;mainsource.c: 75:             aux[i] = aux[i] | (mask<<(3-j));
  4343  06E6  0829               	movf	gire@i,w
  4344  06E7  3E23               	addlw	(low (gire@aux| 0))& (0+255)
  4345  06E8  0084               	movwf	4
  4346  06E9  0822               	movf	gire@mask,w
  4347  06EA  00F3               	movwf	??_gire
  4348  06EB  0827               	movf	gire@j,w
  4349  06EC  3C03               	sublw	3
  4350  06ED  3E01               	addlw	1
  4351  06EE  2EF1               	goto	u984
  4352  06EF                     u985:	
  4353  06EF  1003               	clrc
  4354  06F0  0DF3               	rlf	??_gire,f
  4355  06F1                     u984:	
  4356  06F1  3EFF               	addlw	-1
  4357  06F2  1D03               	skipz
  4358  06F3  2EEF               	goto	u985
  4359  06F4  0873               	movf	??_gire,w
  4360  06F5  0400               	iorwf	0,w
  4361  06F6  00F4               	movwf	??_gire+1
  4362  06F7  0829               	movf	gire@i,w
  4363  06F8  3E23               	addlw	(low (gire@aux| 0))& (0+255)
  4364  06F9  0084               	movwf	4
  4365  06FA  0874               	movf	??_gire+1,w
  4366  06FB  0080               	movwf	0
  4367  06FC                     l1742:	
  4368                           
  4369                           ;mainsource.c: 76:         }
  4370  06FC  3001               	movlw	1
  4371  06FD  07A7               	addwf	gire@j,f
  4372  06FE  1803               	skipnc
  4373  06FF  0AA8               	incf	gire@j+1,f
  4374  0700  3000               	movlw	0
  4375  0701  07A8               	addwf	gire@j+1,f
  4376  0702                     l1744:	
  4377  0702  0828               	movf	gire@j+1,w
  4378  0703  3A80               	xorlw	128
  4379  0704  00FF               	movwf	btemp+1
  4380  0705  3080               	movlw	128
  4381  0706  027F               	subwf	btemp+1,w
  4382  0707  1D03               	skipz
  4383  0708  2F0B               	goto	u995
  4384  0709  3004               	movlw	4
  4385  070A  0227               	subwf	gire@j,w
  4386  070B                     u995:	
  4387  070B  1C03               	skipc
  4388  070C  2F0E               	goto	u991
  4389  070D  2F0F               	goto	u990
  4390  070E                     u991:	
  4391  070E  2EC5               	goto	l1740
  4392  070F                     u990:	
  4393  070F                     l1746:	
  4394                           
  4395                           ;mainsource.c: 77:     }
  4396  070F  3001               	movlw	1
  4397  0710  1283               	bcf	3,5	;RP0=0, select bank0
  4398  0711  1303               	bcf	3,6	;RP1=0, select bank0
  4399  0712  07A9               	addwf	gire@i,f
  4400  0713  1803               	skipnc
  4401  0714  0AAA               	incf	gire@i+1,f
  4402  0715  3000               	movlw	0
  4403  0716  07AA               	addwf	gire@i+1,f
  4404  0717                     l1748:	
  4405  0717  082A               	movf	gire@i+1,w
  4406  0718  3A80               	xorlw	128
  4407  0719  00FF               	movwf	btemp+1
  4408  071A  3080               	movlw	128
  4409  071B  027F               	subwf	btemp+1,w
  4410  071C  1D03               	skipz
  4411  071D  2F20               	goto	u1005
  4412  071E  3004               	movlw	4
  4413  071F  0229               	subwf	gire@i,w
  4414  0720                     u1005:	
  4415  0720  1C03               	skipc
  4416  0721  2F23               	goto	u1001
  4417  0722  2F24               	goto	u1000
  4418  0723                     u1001:	
  4419  0723  2EC1               	goto	l1734
  4420  0724                     u1000:	
  4421  0724  2F7D               	goto	l1780
  4422  0725                     l1750:	
  4423                           
  4424                           ;mainsource.c: 83:         for(i=0; i<4; i++){
  4425  0725  1283               	bcf	3,5	;RP0=0, select bank0
  4426  0726  1303               	bcf	3,6	;RP1=0, select bank0
  4427  0727  01A9               	clrf	gire@i
  4428  0728  01AA               	clrf	gire@i+1
  4429  0729                     l1756:	
  4430                           
  4431                           ;mainsource.c: 84:             if( aux[i] & 0x01 ){
  4432  0729  1283               	bcf	3,5	;RP0=0, select bank0
  4433  072A  1303               	bcf	3,6	;RP1=0, select bank0
  4434  072B  0829               	movf	gire@i,w
  4435  072C  3E23               	addlw	(low (gire@aux| 0))& (0+255)
  4436  072D  0084               	movwf	4
  4437  072E  1383               	bcf	3,7	;select IRP bank0
  4438  072F  1C00               	btfss	0,0
  4439  0730  2F32               	goto	u1011
  4440  0731  2F33               	goto	u1010
  4441  0732                     u1011:	
  4442  0732  2F34               	goto	l1760
  4443  0733                     u1010:	
  4444  0733  2F75               	goto	l1778
  4445  0734                     l1760:	
  4446                           
  4447                           ;mainsource.c: 87:             if(i==3){
  4448  0734  3003               	movlw	3
  4449  0735  0629               	xorwf	gire@i,w
  4450  0736  042A               	iorwf	gire@i+1,w
  4451  0737  1D03               	btfss	3,2
  4452  0738  2F3A               	goto	u1021
  4453  0739  2F3B               	goto	u1020
  4454  073A                     u1021:	
  4455  073A  2F60               	goto	l1774
  4456  073B                     u1020:	
  4457  073B                     l1762:	
  4458                           
  4459                           ;mainsource.c: 88:                 for(j=0; j<4; j++){
  4460  073B  01A7               	clrf	gire@j
  4461  073C  01A8               	clrf	gire@j+1
  4462  073D                     l1768:	
  4463                           
  4464                           ;mainsource.c: 89:                     aux[j] = aux[j]>>1;
  4465  073D  1283               	bcf	3,5	;RP0=0, select bank0
  4466  073E  1303               	bcf	3,6	;RP1=0, select bank0
  4467  073F  0827               	movf	gire@j,w
  4468  0740  3E23               	addlw	(low (gire@aux| 0))& (0+255)
  4469  0741  0084               	movwf	4
  4470  0742  1383               	bcf	3,7	;select IRP bank0
  4471  0743  0800               	movf	0,w
  4472  0744  00F3               	movwf	??_gire
  4473  0745  1003               	clrc
  4474  0746  0C73               	rrf	??_gire,w
  4475  0747  00F4               	movwf	??_gire+1
  4476  0748  0827               	movf	gire@j,w
  4477  0749  3E23               	addlw	(low (gire@aux| 0))& (0+255)
  4478  074A  0084               	movwf	4
  4479  074B  0874               	movf	??_gire+1,w
  4480  074C  0080               	movwf	0
  4481  074D                     l1770:	
  4482                           
  4483                           ;mainsource.c: 90:                 }
  4484  074D  3001               	movlw	1
  4485  074E  07A7               	addwf	gire@j,f
  4486  074F  1803               	skipnc
  4487  0750  0AA8               	incf	gire@j+1,f
  4488  0751  3000               	movlw	0
  4489  0752  07A8               	addwf	gire@j+1,f
  4490  0753                     l1772:	
  4491  0753  0828               	movf	gire@j+1,w
  4492  0754  3A80               	xorlw	128
  4493  0755  00FF               	movwf	btemp+1
  4494  0756  3080               	movlw	128
  4495  0757  027F               	subwf	btemp+1,w
  4496  0758  1D03               	skipz
  4497  0759  2F5C               	goto	u1035
  4498  075A  3004               	movlw	4
  4499  075B  0227               	subwf	gire@j,w
  4500  075C                     u1035:	
  4501  075C  1C03               	skipc
  4502  075D  2F5F               	goto	u1031
  4503  075E  2F60               	goto	u1030
  4504  075F                     u1031:	
  4505  075F  2F3D               	goto	l1768
  4506  0760                     u1030:	
  4507  0760                     l1774:	
  4508                           
  4509                           ;mainsource.c: 92:         }
  4510  0760  3001               	movlw	1
  4511  0761  1283               	bcf	3,5	;RP0=0, select bank0
  4512  0762  1303               	bcf	3,6	;RP1=0, select bank0
  4513  0763  07A9               	addwf	gire@i,f
  4514  0764  1803               	skipnc
  4515  0765  0AAA               	incf	gire@i+1,f
  4516  0766  3000               	movlw	0
  4517  0767  07AA               	addwf	gire@i+1,f
  4518  0768                     l1776:	
  4519  0768  082A               	movf	gire@i+1,w
  4520  0769  3A80               	xorlw	128
  4521  076A  00FF               	movwf	btemp+1
  4522  076B  3080               	movlw	128
  4523  076C  027F               	subwf	btemp+1,w
  4524  076D  1D03               	skipz
  4525  076E  2F71               	goto	u1045
  4526  076F  3004               	movlw	4
  4527  0770  0229               	subwf	gire@i,w
  4528  0771                     u1045:	
  4529  0771  1C03               	skipc
  4530  0772  2F74               	goto	u1041
  4531  0773  2F75               	goto	u1040
  4532  0774                     u1041:	
  4533  0774  2F29               	goto	l1756
  4534  0775                     u1040:	
  4535  0775                     l1778:	
  4536                           
  4537                           ;mainsource.c: 93:         k++;
  4538  0775  3001               	movlw	1
  4539  0776  1283               	bcf	3,5	;RP0=0, select bank0
  4540  0777  1303               	bcf	3,6	;RP1=0, select bank0
  4541  0778  07A0               	addwf	gire@k,f
  4542  0779  1803               	skipnc
  4543  077A  0AA1               	incf	gire@k+1,f
  4544  077B  3000               	movlw	0
  4545  077C  07A1               	addwf	gire@k+1,f
  4546  077D                     l1780:	
  4547                           
  4548                           ;mainsource.c: 82:     while(k<3){
  4549  077D  1283               	bcf	3,5	;RP0=0, select bank0
  4550  077E  1303               	bcf	3,6	;RP1=0, select bank0
  4551  077F  0821               	movf	gire@k+1,w
  4552  0780  3A80               	xorlw	128
  4553  0781  00FF               	movwf	btemp+1
  4554  0782  3080               	movlw	128
  4555  0783  027F               	subwf	btemp+1,w
  4556  0784  1D03               	skipz
  4557  0785  2F88               	goto	u1055
  4558  0786  3003               	movlw	3
  4559  0787  0220               	subwf	gire@k,w
  4560  0788                     u1055:	
  4561  0788  1C03               	skipc
  4562  0789  2F8B               	goto	u1051
  4563  078A  2F8C               	goto	u1050
  4564  078B                     u1051:	
  4565  078B  2F25               	goto	l1750
  4566  078C                     u1050:	
  4567  078C                     l1782:	
  4568                           
  4569                           ;mainsource.c: 96:     if((aux[0] & 0xF) == 0){
  4570  078C  1283               	bcf	3,5	;RP0=0, select bank0
  4571  078D  1303               	bcf	3,6	;RP1=0, select bank0
  4572  078E  0823               	movf	gire@aux,w
  4573  078F  390F               	andlw	15
  4574  0790  1D03               	btfss	3,2
  4575  0791  2F93               	goto	u1061
  4576  0792  2F94               	goto	u1060
  4577  0793                     u1061:	
  4578  0793  2FA1               	goto	l1788
  4579  0794                     u1060:	
  4580  0794                     l1784:	
  4581                           
  4582                           ;mainsource.c: 97:         aux[0] = aux[1];
  4583  0794  0824               	movf	gire@aux+1,w
  4584  0795  00F3               	movwf	??_gire
  4585  0796  0873               	movf	??_gire,w
  4586  0797  00A3               	movwf	gire@aux
  4587                           
  4588                           ;mainsource.c: 98:         aux[1] = aux[2];
  4589  0798  0825               	movf	gire@aux+2,w
  4590  0799  00F3               	movwf	??_gire
  4591  079A  0873               	movf	??_gire,w
  4592  079B  00A4               	movwf	gire@aux+1
  4593                           
  4594                           ;mainsource.c: 99:         aux[2] = aux[3];
  4595  079C  0826               	movf	gire@aux+3,w
  4596  079D  00F3               	movwf	??_gire
  4597  079E  0873               	movf	??_gire,w
  4598  079F  00A5               	movwf	gire@aux+2
  4599  07A0                     l1786:	
  4600                           
  4601                           ;mainsource.c: 100:         aux[3] = 0x0;
  4602  07A0  01A6               	clrf	gire@aux+3
  4603  07A1                     l1788:	
  4604                           
  4605                           ;mainsource.c: 103:     for(i=0; i<4; i++){
  4606  07A1  01A9               	clrf	gire@i
  4607  07A2  01AA               	clrf	gire@i+1
  4608  07A3                     l1794:	
  4609                           
  4610                           ;mainsource.c: 104:         figuras[con.ficha_actual][i] = aux[i];
  4611  07A3  1283               	bcf	3,5	;RP0=0, select bank0
  4612  07A4  1303               	bcf	3,6	;RP1=0, select bank0
  4613  07A5  0829               	movf	gire@i,w
  4614  07A6  3E23               	addlw	(low (gire@aux| 0))& (0+255)
  4615  07A7  0084               	movwf	4
  4616  07A8  1383               	bcf	3,7	;select IRP bank0
  4617  07A9  0800               	movf	0,w
  4618  07AA  00F3               	movwf	??_gire
  4619  07AB  084A               	movf	_con+4,w
  4620  07AC  00F4               	movwf	??_gire+1
  4621  07AD  3002               	movlw	2
  4622  07AE                     u1075:	
  4623  07AE  1003               	clrc
  4624  07AF  0DF4               	rlf	??_gire+1,f
  4625  07B0  3EFF               	addlw	-1
  4626  07B1  1D03               	skipz
  4627  07B2  2FAE               	goto	u1075
  4628  07B3  30C0               	movlw	(low (_figuras| 0))& (0+255)
  4629  07B4  0774               	addwf	??_gire+1,w
  4630  07B5  00F5               	movwf	??_gire+2
  4631  07B6  0829               	movf	gire@i,w
  4632  07B7  0775               	addwf	??_gire+2,w
  4633  07B8  00F6               	movwf	??_gire+3
  4634  07B9  0876               	movf	??_gire+3,w
  4635  07BA  0084               	movwf	4
  4636  07BB  0873               	movf	??_gire,w
  4637  07BC  0080               	movwf	0
  4638  07BD                     l1796:	
  4639                           
  4640                           ;mainsource.c: 105:     }
  4641  07BD  3001               	movlw	1
  4642  07BE  07A9               	addwf	gire@i,f
  4643  07BF  1803               	skipnc
  4644  07C0  0AAA               	incf	gire@i+1,f
  4645  07C1  3000               	movlw	0
  4646  07C2  07AA               	addwf	gire@i+1,f
  4647  07C3                     l1798:	
  4648  07C3  082A               	movf	gire@i+1,w
  4649  07C4  3A80               	xorlw	128
  4650  07C5  00FF               	movwf	btemp+1
  4651  07C6  3080               	movlw	128
  4652  07C7  027F               	subwf	btemp+1,w
  4653  07C8  1D03               	skipz
  4654  07C9  2FCC               	goto	u1085
  4655  07CA  3004               	movlw	4
  4656  07CB  0229               	subwf	gire@i,w
  4657  07CC                     u1085:	
  4658  07CC  1C03               	skipc
  4659  07CD  2FCF               	goto	u1081
  4660  07CE  2FD0               	goto	u1080
  4661  07CF                     u1081:	
  4662  07CF  2FA3               	goto	l1794
  4663  07D0                     u1080:	
  4664  07D0                     l132:	
  4665  07D0  0008               	return
  4666  07D1                     __end_of_gire:	
  4667                           
  4668                           	psect	text29
  4669  0614                     __ptext29:	
  4670 ;; *************** function _drawFigure *****************
  4671 ;; Defined at:
  4672 ;;		line 57 in file "screen.c"
  4673 ;; Parameters:    Size  Location     Type
  4674 ;;		None
  4675 ;; Auto vars:     Size  Location     Type
  4676 ;;		None
  4677 ;; Return value:  Size  Location     Type
  4678 ;;                  1    wreg      void 
  4679 ;; Registers used:
  4680 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4681 ;; Tracked objects:
  4682 ;;		On entry : 0/0
  4683 ;;		On exit  : 0/0
  4684 ;;		Unchanged: 0/0
  4685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4686 ;;      Params:         0       0       0       0       0
  4687 ;;      Locals:         0       0       0       0       0
  4688 ;;      Temps:          0       5       0       0       0
  4689 ;;      Totals:         0       5       0       0       0
  4690 ;;Total ram usage:        5 bytes
  4691 ;; Hardware stack levels used:    1
  4692 ;; Hardware stack levels required when called:    2
  4693 ;; This function calls:
  4694 ;;		_memset
  4695 ;; This function is called by:
  4696 ;;		_leerEntradas
  4697 ;;		_checkCount
  4698 ;; This function uses a non-reentrant model
  4699 ;;
  4700                           
  4701                           
  4702                           ;psect for function _drawFigure
  4703  0614                     _drawFigure:	
  4704  0614                     l1800:	
  4705                           ;incstack = 0
  4706                           ; Regs used in _drawFigure: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4707                           
  4708                           
  4709                           ;screen.c: 58:     memset(ficha, 0, sizeof(ficha));
  4710  0614  3000               	movlw	0
  4711  0615  00F3               	movwf	memset@c
  4712  0616  00F4               	movwf	memset@c+1
  4713  0617  3010               	movlw	16
  4714  0618  00F5               	movwf	memset@n
  4715  0619  3000               	movlw	0
  4716  061A  00F6               	movwf	memset@n+1
  4717  061B  3058               	movlw	(low (_ficha| 0))& (0+255)
  4718  061C  120A  158A  2705  120A  118A  	fcall	_memset
  4719  0621                     l1802:	
  4720                           
  4721                           ;screen.c: 59:     ficha[con.ficha_Hpos ] = figuras[con.ficha_actual][0] << (con.ficha_V
      +                          pos-1);
  4722  0621  1283               	bcf	3,5	;RP0=0, select bank0
  4723  0622  1303               	bcf	3,6	;RP1=0, select bank0
  4724  0623  0848               	movf	_con+2,w
  4725  0624  3EFF               	addlw	-1
  4726  0625  00A0               	movwf	??_drawFigure
  4727  0626  0AA0               	incf	??_drawFigure,f
  4728  0627  084A               	movf	_con+4,w
  4729  0628  00A1               	movwf	??_drawFigure+1
  4730  0629  3001               	movlw	1
  4731  062A                     u1095:	
  4732  062A  1003               	clrc
  4733  062B  0DA1               	rlf	??_drawFigure+1,f
  4734  062C  3EFF               	addlw	-1
  4735  062D  1D03               	skipz
  4736  062E  2E2A               	goto	u1095
  4737  062F  1003               	clrc
  4738  0630  0D21               	rlf	??_drawFigure+1,w
  4739  0631  3EC0               	addlw	(low (_figuras| 0))& (0+255)
  4740  0632  0084               	movwf	4
  4741  0633  1383               	bcf	3,7	;select IRP bank1
  4742  0634  0800               	movf	0,w
  4743  0635  00A2               	movwf	??_drawFigure+2
  4744  0636  01A3               	clrf	??_drawFigure+3
  4745  0637  2E3B               	goto	u1104
  4746  0638                     u1105:	
  4747  0638  1003               	clrc
  4748  0639  0DA2               	rlf	??_drawFigure+2,f
  4749  063A  0DA3               	rlf	??_drawFigure+3,f
  4750  063B                     u1104:	
  4751  063B  0BA0               	decfsz	??_drawFigure,f
  4752  063C  2E38               	goto	u1105
  4753  063D  0849               	movf	_con+3,w
  4754  063E  00A4               	movwf	??_drawFigure+4
  4755  063F  0724               	addwf	??_drawFigure+4,w
  4756  0640  3E58               	addlw	(low (_ficha| 0))& (0+255)
  4757  0641  0084               	movwf	4
  4758  0642  0822               	movf	??_drawFigure+2,w
  4759  0643  0080               	movwf	0
  4760  0644  0A84               	incf	4,f
  4761  0645  0823               	movf	??_drawFigure+3,w
  4762  0646  0080               	movwf	0
  4763  0647                     l1804:	
  4764                           
  4765                           ;screen.c: 60:     ficha[con.ficha_Hpos +1] = figuras[con.ficha_actual][1] << (con.ficha
      +                          _Vpos-1);
  4766  0647  0848               	movf	_con+2,w
  4767  0648  3EFF               	addlw	-1
  4768  0649  00A0               	movwf	??_drawFigure
  4769  064A  0AA0               	incf	??_drawFigure,f
  4770  064B  084A               	movf	_con+4,w
  4771  064C  00A1               	movwf	??_drawFigure+1
  4772  064D  3001               	movlw	1
  4773  064E                     u1115:	
  4774  064E  1003               	clrc
  4775  064F  0DA1               	rlf	??_drawFigure+1,f
  4776  0650  3EFF               	addlw	-1
  4777  0651  1D03               	skipz
  4778  0652  2E4E               	goto	u1115
  4779  0653  1003               	clrc
  4780  0654  0D21               	rlf	??_drawFigure+1,w
  4781  0655  3EC1               	addlw	(low ((_figuras| 0+1)))& (0+255)
  4782  0656  0084               	movwf	4
  4783  0657  0800               	movf	0,w
  4784  0658  00A2               	movwf	??_drawFigure+2
  4785  0659  01A3               	clrf	??_drawFigure+3
  4786  065A  2E5E               	goto	u1124
  4787  065B                     u1125:	
  4788  065B  1003               	clrc
  4789  065C  0DA2               	rlf	??_drawFigure+2,f
  4790  065D  0DA3               	rlf	??_drawFigure+3,f
  4791  065E                     u1124:	
  4792  065E  0BA0               	decfsz	??_drawFigure,f
  4793  065F  2E5B               	goto	u1125
  4794  0660  0849               	movf	_con+3,w
  4795  0661  00A4               	movwf	??_drawFigure+4
  4796  0662  0724               	addwf	??_drawFigure+4,w
  4797  0663  3E5A               	addlw	(low ((_ficha| 0+2)))& (0+255)
  4798  0664  0084               	movwf	4
  4799  0665  0822               	movf	??_drawFigure+2,w
  4800  0666  0080               	movwf	0
  4801  0667  0A84               	incf	4,f
  4802  0668  0823               	movf	??_drawFigure+3,w
  4803  0669  0080               	movwf	0
  4804  066A                     l1806:	
  4805                           
  4806                           ;screen.c: 61:     ficha[con.ficha_Hpos +2] = figuras[con.ficha_actual][2] << (con.ficha
      +                          _Vpos-1);
  4807  066A  0848               	movf	_con+2,w
  4808  066B  3EFF               	addlw	-1
  4809  066C  00A0               	movwf	??_drawFigure
  4810  066D  0AA0               	incf	??_drawFigure,f
  4811  066E  084A               	movf	_con+4,w
  4812  066F  00A1               	movwf	??_drawFigure+1
  4813  0670  3001               	movlw	1
  4814  0671                     u1135:	
  4815  0671  1003               	clrc
  4816  0672  0DA1               	rlf	??_drawFigure+1,f
  4817  0673  3EFF               	addlw	-1
  4818  0674  1D03               	skipz
  4819  0675  2E71               	goto	u1135
  4820  0676  1003               	clrc
  4821  0677  0D21               	rlf	??_drawFigure+1,w
  4822  0678  3EC2               	addlw	(low ((_figuras| 0+2)))& (0+255)
  4823  0679  0084               	movwf	4
  4824  067A  0800               	movf	0,w
  4825  067B  00A2               	movwf	??_drawFigure+2
  4826  067C  01A3               	clrf	??_drawFigure+3
  4827  067D  2E81               	goto	u1144
  4828  067E                     u1145:	
  4829  067E  1003               	clrc
  4830  067F  0DA2               	rlf	??_drawFigure+2,f
  4831  0680  0DA3               	rlf	??_drawFigure+3,f
  4832  0681                     u1144:	
  4833  0681  0BA0               	decfsz	??_drawFigure,f
  4834  0682  2E7E               	goto	u1145
  4835  0683  0849               	movf	_con+3,w
  4836  0684  00A4               	movwf	??_drawFigure+4
  4837  0685  0724               	addwf	??_drawFigure+4,w
  4838  0686  3E5C               	addlw	(low ((_ficha| 0+4)))& (0+255)
  4839  0687  0084               	movwf	4
  4840  0688  0822               	movf	??_drawFigure+2,w
  4841  0689  0080               	movwf	0
  4842  068A  0A84               	incf	4,f
  4843  068B  0823               	movf	??_drawFigure+3,w
  4844  068C  0080               	movwf	0
  4845  068D                     l1808:	
  4846                           
  4847                           ;screen.c: 62:     ficha[con.ficha_Hpos +3] = figuras[con.ficha_actual][3] << (con.ficha
      +                          _Vpos-1);
  4848  068D  0848               	movf	_con+2,w
  4849  068E  3EFF               	addlw	-1
  4850  068F  00A0               	movwf	??_drawFigure
  4851  0690  0AA0               	incf	??_drawFigure,f
  4852  0691  084A               	movf	_con+4,w
  4853  0692  00A1               	movwf	??_drawFigure+1
  4854  0693  3001               	movlw	1
  4855  0694                     u1155:	
  4856  0694  1003               	clrc
  4857  0695  0DA1               	rlf	??_drawFigure+1,f
  4858  0696  3EFF               	addlw	-1
  4859  0697  1D03               	skipz
  4860  0698  2E94               	goto	u1155
  4861  0699  1003               	clrc
  4862  069A  0D21               	rlf	??_drawFigure+1,w
  4863  069B  3EC3               	addlw	(low ((_figuras| 0+3)))& (0+255)
  4864  069C  0084               	movwf	4
  4865  069D  0800               	movf	0,w
  4866  069E  00A2               	movwf	??_drawFigure+2
  4867  069F  01A3               	clrf	??_drawFigure+3
  4868  06A0  2EA4               	goto	u1164
  4869  06A1                     u1165:	
  4870  06A1  1003               	clrc
  4871  06A2  0DA2               	rlf	??_drawFigure+2,f
  4872  06A3  0DA3               	rlf	??_drawFigure+3,f
  4873  06A4                     u1164:	
  4874  06A4  0BA0               	decfsz	??_drawFigure,f
  4875  06A5  2EA1               	goto	u1165
  4876  06A6  0849               	movf	_con+3,w
  4877  06A7  00A4               	movwf	??_drawFigure+4
  4878  06A8  0724               	addwf	??_drawFigure+4,w
  4879  06A9  3E5E               	addlw	(low ((_ficha| 0+6)))& (0+255)
  4880  06AA  0084               	movwf	4
  4881  06AB  0822               	movf	??_drawFigure+2,w
  4882  06AC  0080               	movwf	0
  4883  06AD  0A84               	incf	4,f
  4884  06AE  0823               	movf	??_drawFigure+3,w
  4885  06AF  0080               	movwf	0
  4886  06B0                     l226:	
  4887  06B0  0008               	return
  4888  06B1                     __end_of_drawFigure:	
  4889                           
  4890                           	psect	text30
  4891  0F05                     __ptext30:	
  4892 ;; *************** function _memset *****************
  4893 ;; Defined at:
  4894 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\memset.c"
  4895 ;; Parameters:    Size  Location     Type
  4896 ;;  p1              1    wreg     PTR void 
  4897 ;;		 -> fondo(16), ficha(16), 
  4898 ;;  c               2    2[COMMON] int 
  4899 ;;  n               2    4[COMMON] unsigned int 
  4900 ;; Auto vars:     Size  Location     Type
  4901 ;;  p1              1    8[COMMON] PTR void 
  4902 ;;		 -> fondo(16), ficha(16), 
  4903 ;;  p               1    7[COMMON] PTR unsigned char 
  4904 ;;		 -> fondo(16), ficha(16), 
  4905 ;; Return value:  Size  Location     Type
  4906 ;;                  1    wreg      PTR void 
  4907 ;; Registers used:
  4908 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4909 ;; Tracked objects:
  4910 ;;		On entry : 0/0
  4911 ;;		On exit  : 0/0
  4912 ;;		Unchanged: 0/0
  4913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4914 ;;      Params:         4       0       0       0       0
  4915 ;;      Locals:         2       0       0       0       0
  4916 ;;      Temps:          1       0       0       0       0
  4917 ;;      Totals:         7       0       0       0       0
  4918 ;;Total ram usage:        7 bytes
  4919 ;; Hardware stack levels used:    1
  4920 ;; Hardware stack levels required when called:    1
  4921 ;; This function calls:
  4922 ;;		Nothing
  4923 ;; This function is called by:
  4924 ;;		_drawFigure
  4925 ;;		_perdio
  4926 ;; This function uses a non-reentrant model
  4927 ;;
  4928                           
  4929                           
  4930                           ;psect for function _memset
  4931  0F05                     _memset:	
  4932                           
  4933                           ;incstack = 0
  4934                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0]
  4935                           ;memset@p1 stored from wreg
  4936  0F05  00F9               	movwf	memset@p1
  4937  0F06                     l1692:	
  4938  0F06  0879               	movf	memset@p1,w
  4939  0F07  00F7               	movwf	??_memset
  4940  0F08  0877               	movf	??_memset,w
  4941  0F09  00F8               	movwf	memset@p
  4942  0F0A  2F16               	goto	l1698
  4943  0F0B                     l1694:	
  4944  0F0B  0873               	movf	memset@c,w
  4945  0F0C  00F7               	movwf	??_memset
  4946  0F0D  0878               	movf	memset@p,w
  4947  0F0E  0084               	movwf	4
  4948  0F0F  0877               	movf	??_memset,w
  4949  0F10  1383               	bcf	3,7	;select IRP bank0
  4950  0F11  0080               	movwf	0
  4951  0F12                     l1696:	
  4952  0F12  3001               	movlw	1
  4953  0F13  00F7               	movwf	??_memset
  4954  0F14  0877               	movf	??_memset,w
  4955  0F15  07F8               	addwf	memset@p,f
  4956  0F16                     l1698:	
  4957  0F16  3001               	movlw	1
  4958  0F17  02F5               	subwf	memset@n,f
  4959  0F18  3000               	movlw	0
  4960  0F19  1C03               	skipc
  4961  0F1A  03F6               	decf	memset@n+1,f
  4962  0F1B  02F6               	subwf	memset@n+1,f
  4963  0F1C  0A75               	incf	memset@n,w
  4964  0F1D  1D03               	skipz
  4965  0F1E  2F23               	goto	u891
  4966  0F1F  0A76               	incf	memset@n+1,w
  4967  0F20  1D03               	btfss	3,2
  4968  0F21  2F23               	goto	u891
  4969  0F22  2F24               	goto	u890
  4970  0F23                     u891:	
  4971  0F23  2F0B               	goto	l1694
  4972  0F24                     u890:	
  4973  0F24                     l920:	
  4974  0F24  0008               	return
  4975  0F25                     __end_of_memset:	
  4976                           
  4977                           	psect	text31
  4978  0E34                     __ptext31:	
  4979 ;; *************** function _checkRight *****************
  4980 ;; Defined at:
  4981 ;;		line 26 in file "colisiones.c"
  4982 ;; Parameters:    Size  Location     Type
  4983 ;;		None
  4984 ;; Auto vars:     Size  Location     Type
  4985 ;;		None
  4986 ;; Return value:  Size  Location     Type
  4987 ;;                  1    wreg      _Bool 
  4988 ;; Registers used:
  4989 ;;		wreg, status,2, status,0
  4990 ;; Tracked objects:
  4991 ;;		On entry : 0/0
  4992 ;;		On exit  : 0/0
  4993 ;;		Unchanged: 0/0
  4994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4995 ;;      Params:         0       0       0       0       0
  4996 ;;      Locals:         0       0       0       0       0
  4997 ;;      Temps:          0       0       0       0       0
  4998 ;;      Totals:         0       0       0       0       0
  4999 ;;Total ram usage:        0 bytes
  5000 ;; Hardware stack levels used:    1
  5001 ;; Hardware stack levels required when called:    1
  5002 ;; This function calls:
  5003 ;;		Nothing
  5004 ;; This function is called by:
  5005 ;;		_leerEntradas
  5006 ;; This function uses a non-reentrant model
  5007 ;;
  5008                           
  5009                           
  5010                           ;psect for function _checkRight
  5011  0E34                     _checkRight:	
  5012  0E34                     l1826:	
  5013                           ;incstack = 0
  5014                           ; Regs used in _checkRight: [wreg+status,2+status,0]
  5015                           
  5016                           
  5017                           ;colisiones.c: 27:     if(ficha[7]!=0){
  5018  0E34  1283               	bcf	3,5	;RP0=0, select bank0
  5019  0E35  1303               	bcf	3,6	;RP1=0, select bank0
  5020  0E36  0866               	movf	_ficha+14,w
  5021  0E37  0467               	iorwf	_ficha+15,w
  5022  0E38  1903               	btfsc	3,2
  5023  0E39  2E3B               	goto	u1191
  5024  0E3A  2E3C               	goto	u1190
  5025  0E3B                     u1191:	
  5026  0E3B  2E3E               	goto	l1832
  5027  0E3C                     u1190:	
  5028  0E3C                     l1828:	
  5029                           
  5030                           ;colisiones.c: 28:         return 1;
  5031  0E3C  3001               	movlw	1
  5032  0E3D  2E3F               	goto	l250
  5033  0E3E                     l1832:	
  5034                           
  5035                           ;colisiones.c: 30:     return 0;
  5036  0E3E  3000               	movlw	0
  5037  0E3F                     l250:	
  5038  0E3F  0008               	return
  5039  0E40                     __end_of_checkRight:	
  5040                           
  5041                           	psect	text32
  5042  0056                     __ptext32:	
  5043 ;; *************** function _checkColission_R *****************
  5044 ;; Defined at:
  5045 ;;		line 51 in file "colisiones.c"
  5046 ;; Parameters:    Size  Location     Type
  5047 ;;		None
  5048 ;; Auto vars:     Size  Location     Type
  5049 ;;  i               2    0[BANK0 ] int 
  5050 ;; Return value:  Size  Location     Type
  5051 ;;                  1    wreg      _Bool 
  5052 ;; Registers used:
  5053 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5054 ;; Tracked objects:
  5055 ;;		On entry : 0/0
  5056 ;;		On exit  : 0/0
  5057 ;;		Unchanged: 0/0
  5058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5059 ;;      Params:         0       0       0       0       0
  5060 ;;      Locals:         0       2       0       0       0
  5061 ;;      Temps:          8       0       0       0       0
  5062 ;;      Totals:         8       2       0       0       0
  5063 ;;Total ram usage:       10 bytes
  5064 ;; Hardware stack levels used:    1
  5065 ;; Hardware stack levels required when called:    1
  5066 ;; This function calls:
  5067 ;;		Nothing
  5068 ;; This function is called by:
  5069 ;;		_leerEntradas
  5070 ;; This function uses a non-reentrant model
  5071 ;;
  5072                           
  5073                           
  5074                           ;psect for function _checkColission_R
  5075  0056                     _checkColission_R:	
  5076  0056                     l1810:	
  5077                           ;incstack = 0
  5078                           ; Regs used in _checkColission_R: [wreg-fsr0h+status,2+status,0]
  5079                           
  5080  0056                     l1812:	
  5081                           
  5082                           ;colisiones.c: 53:     for(i=(con.ficha_Hpos+3); i>=con.ficha_Hpos; i--){
  5083  0056  1283               	bcf	3,5	;RP0=0, select bank0
  5084  0057  1303               	bcf	3,6	;RP1=0, select bank0
  5085  0058  0849               	movf	_con+3,w
  5086  0059  3E03               	addlw	3
  5087  005A  00A0               	movwf	checkColission_R@i
  5088  005B  3000               	movlw	0
  5089  005C  1803               	skipnc
  5090  005D  3001               	movlw	1
  5091  005E  00A1               	movwf	checkColission_R@i+1
  5092  005F  288B               	goto	l260
  5093  0060                     l1814:	
  5094                           
  5095                           ;colisiones.c: 54:         if((ficha[i] & fondo[i+1]) != 0){
  5096  0060  1283               	bcf	3,5	;RP0=0, select bank0
  5097  0061  1303               	bcf	3,6	;RP1=0, select bank0
  5098  0062  0820               	movf	checkColission_R@i,w
  5099  0063  00F3               	movwf	??_checkColission_R
  5100  0064  0773               	addwf	??_checkColission_R,w
  5101  0065  3EA2               	addlw	(low ((_fondo| 0+2)))& (0+255)
  5102  0066  0084               	movwf	4
  5103  0067  1383               	bcf	3,7	;select IRP bank1
  5104  0068  0800               	movf	0,w
  5105  0069  00F4               	movwf	??_checkColission_R+1
  5106  006A  0A84               	incf	4,f
  5107  006B  0800               	movf	0,w
  5108  006C  00F5               	movwf	??_checkColission_R+2
  5109  006D  0820               	movf	checkColission_R@i,w
  5110  006E  00F6               	movwf	??_checkColission_R+3
  5111  006F  0776               	addwf	??_checkColission_R+3,w
  5112  0070  3E58               	addlw	(low (_ficha| 0))& (0+255)
  5113  0071  0084               	movwf	4
  5114  0072  0800               	movf	0,w
  5115  0073  00F7               	movwf	??_checkColission_R+4
  5116  0074  0A84               	incf	4,f
  5117  0075  0800               	movf	0,w
  5118  0076  00F8               	movwf	??_checkColission_R+5
  5119  0077  0874               	movf	??_checkColission_R+1,w
  5120  0078  0577               	andwf	??_checkColission_R+4,w
  5121  0079  00F9               	movwf	??_checkColission_R+6
  5122  007A  0875               	movf	??_checkColission_R+2,w
  5123  007B  0578               	andwf	??_checkColission_R+5,w
  5124  007C  00FA               	movwf	??_checkColission_R+7
  5125  007D  0879               	movf	??_checkColission_R+6,w
  5126  007E  047A               	iorwf	??_checkColission_R+7,w
  5127  007F  1903               	btfsc	3,2
  5128  0080  2882               	goto	u1171
  5129  0081  2883               	goto	u1170
  5130  0082                     u1171:	
  5131  0082  2885               	goto	l1820
  5132  0083                     u1170:	
  5133  0083                     l1816:	
  5134                           
  5135                           ;colisiones.c: 55:             return 1;
  5136  0083  3001               	movlw	1
  5137  0084  2899               	goto	l263
  5138  0085                     l1820:	
  5139                           
  5140                           ;colisiones.c: 57:     }
  5141  0085  30FF               	movlw	255
  5142  0086  07A0               	addwf	checkColission_R@i,f
  5143  0087  1803               	skipnc
  5144  0088  0AA1               	incf	checkColission_R@i+1,f
  5145  0089  30FF               	movlw	255
  5146  008A  07A1               	addwf	checkColission_R@i+1,f
  5147  008B                     l260:	
  5148  008B  0821               	movf	checkColission_R@i+1,w
  5149  008C  3A80               	xorlw	128
  5150  008D  00F3               	movwf	??_checkColission_R
  5151  008E  3080               	movlw	128
  5152  008F  0273               	subwf	??_checkColission_R,w
  5153  0090  1D03               	skipz
  5154  0091  2894               	goto	u1185
  5155  0092  0849               	movf	_con+3,w
  5156  0093  0220               	subwf	checkColission_R@i,w
  5157  0094                     u1185:	
  5158  0094  1803               	skipnc
  5159  0095  2897               	goto	u1181
  5160  0096  2898               	goto	u1180
  5161  0097                     u1181:	
  5162  0097  2860               	goto	l1814
  5163  0098                     u1180:	
  5164  0098                     l1822:	
  5165                           
  5166                           ;colisiones.c: 58:     return 0;
  5167  0098  3000               	movlw	0
  5168  0099                     l263:	
  5169  0099  0008               	return
  5170  009A                     __end_of_checkColission_R:	
  5171                           
  5172                           	psect	text33
  5173  024A                     __ptext33:	
  5174 ;; *************** function _checkColission_L *****************
  5175 ;; Defined at:
  5176 ;;		line 61 in file "colisiones.c"
  5177 ;; Parameters:    Size  Location     Type
  5178 ;;		None
  5179 ;; Auto vars:     Size  Location     Type
  5180 ;;  i               2    0[BANK0 ] int 
  5181 ;; Return value:  Size  Location     Type
  5182 ;;                  1    wreg      _Bool 
  5183 ;; Registers used:
  5184 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5185 ;; Tracked objects:
  5186 ;;		On entry : 0/0
  5187 ;;		On exit  : 0/0
  5188 ;;		Unchanged: 0/0
  5189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5190 ;;      Params:         0       0       0       0       0
  5191 ;;      Locals:         0       2       0       0       0
  5192 ;;      Temps:          8       0       0       0       0
  5193 ;;      Totals:         8       2       0       0       0
  5194 ;;Total ram usage:       10 bytes
  5195 ;; Hardware stack levels used:    1
  5196 ;; Hardware stack levels required when called:    1
  5197 ;; This function calls:
  5198 ;;		Nothing
  5199 ;; This function is called by:
  5200 ;;		_leerEntradas
  5201 ;; This function uses a non-reentrant model
  5202 ;;
  5203                           
  5204                           
  5205                           ;psect for function _checkColission_L
  5206  024A                     _checkColission_L:	
  5207  024A                     l1836:	
  5208                           ;incstack = 0
  5209                           ; Regs used in _checkColission_L: [wreg-fsr0h+status,2+status,0]
  5210                           
  5211  024A                     l1838:	
  5212                           
  5213                           ;colisiones.c: 63:     for(i=con.ficha_Hpos; i<(con.ficha_Hpos+4); i++){
  5214  024A  1283               	bcf	3,5	;RP0=0, select bank0
  5215  024B  1303               	bcf	3,6	;RP1=0, select bank0
  5216  024C  0849               	movf	_con+3,w
  5217  024D  00F3               	movwf	??_checkColission_L
  5218  024E  01F4               	clrf	??_checkColission_L+1
  5219  024F  0873               	movf	??_checkColission_L,w
  5220  0250  00A0               	movwf	checkColission_L@i
  5221  0251  0874               	movf	??_checkColission_L+1,w
  5222  0252  00A1               	movwf	checkColission_L@i+1
  5223  0253  2A7F               	goto	l267
  5224  0254                     l1840:	
  5225                           
  5226                           ;colisiones.c: 64:         if((ficha[i] & fondo[i-1]) != 0){
  5227  0254  1283               	bcf	3,5	;RP0=0, select bank0
  5228  0255  1303               	bcf	3,6	;RP1=0, select bank0
  5229  0256  0820               	movf	checkColission_L@i,w
  5230  0257  00F3               	movwf	??_checkColission_L
  5231  0258  0773               	addwf	??_checkColission_L,w
  5232  0259  3E9E               	addlw	(low ((_fondo| 0+254)))& (0+255)
  5233  025A  0084               	movwf	4
  5234  025B  1383               	bcf	3,7	;select IRP bank1
  5235  025C  0800               	movf	0,w
  5236  025D  00F4               	movwf	??_checkColission_L+1
  5237  025E  0A84               	incf	4,f
  5238  025F  0800               	movf	0,w
  5239  0260  00F5               	movwf	??_checkColission_L+2
  5240  0261  0820               	movf	checkColission_L@i,w
  5241  0262  00F6               	movwf	??_checkColission_L+3
  5242  0263  0776               	addwf	??_checkColission_L+3,w
  5243  0264  3E58               	addlw	(low (_ficha| 0))& (0+255)
  5244  0265  0084               	movwf	4
  5245  0266  0800               	movf	0,w
  5246  0267  00F7               	movwf	??_checkColission_L+4
  5247  0268  0A84               	incf	4,f
  5248  0269  0800               	movf	0,w
  5249  026A  00F8               	movwf	??_checkColission_L+5
  5250  026B  0874               	movf	??_checkColission_L+1,w
  5251  026C  0577               	andwf	??_checkColission_L+4,w
  5252  026D  00F9               	movwf	??_checkColission_L+6
  5253  026E  0875               	movf	??_checkColission_L+2,w
  5254  026F  0578               	andwf	??_checkColission_L+5,w
  5255  0270  00FA               	movwf	??_checkColission_L+7
  5256  0271  0879               	movf	??_checkColission_L+6,w
  5257  0272  047A               	iorwf	??_checkColission_L+7,w
  5258  0273  1903               	btfsc	3,2
  5259  0274  2A76               	goto	u1201
  5260  0275  2A77               	goto	u1200
  5261  0276                     u1201:	
  5262  0276  2A79               	goto	l1846
  5263  0277                     u1200:	
  5264  0277                     l1842:	
  5265                           
  5266                           ;colisiones.c: 65:             return 1;
  5267  0277  3001               	movlw	1
  5268  0278  2A95               	goto	l270
  5269  0279                     l1846:	
  5270                           
  5271                           ;colisiones.c: 67:     }
  5272  0279  3001               	movlw	1
  5273  027A  07A0               	addwf	checkColission_L@i,f
  5274  027B  1803               	skipnc
  5275  027C  0AA1               	incf	checkColission_L@i+1,f
  5276  027D  3000               	movlw	0
  5277  027E  07A1               	addwf	checkColission_L@i+1,f
  5278  027F                     l267:	
  5279  027F  0849               	movf	_con+3,w
  5280  0280  3E04               	addlw	4
  5281  0281  00F3               	movwf	??_checkColission_L
  5282  0282  3000               	movlw	0
  5283  0283  1803               	skipnc
  5284  0284  3001               	movlw	1
  5285  0285  00F4               	movwf	??_checkColission_L+1
  5286  0286  0821               	movf	checkColission_L@i+1,w
  5287  0287  3A80               	xorlw	128
  5288  0288  00F5               	movwf	??_checkColission_L+2
  5289  0289  0874               	movf	??_checkColission_L+1,w
  5290  028A  3A80               	xorlw	128
  5291  028B  0275               	subwf	??_checkColission_L+2,w
  5292  028C  1D03               	skipz
  5293  028D  2A90               	goto	u1215
  5294  028E  0873               	movf	??_checkColission_L,w
  5295  028F  0220               	subwf	checkColission_L@i,w
  5296  0290                     u1215:	
  5297  0290  1C03               	skipc
  5298  0291  2A93               	goto	u1211
  5299  0292  2A94               	goto	u1210
  5300  0293                     u1211:	
  5301  0293  2A54               	goto	l1840
  5302  0294                     u1210:	
  5303  0294                     l1848:	
  5304                           
  5305                           ;colisiones.c: 68:     return 0;
  5306  0294  3000               	movlw	0
  5307  0295                     l270:	
  5308  0295  0008               	return
  5309  0296                     __end_of_checkColission_L:	
  5310                           
  5311                           	psect	text34
  5312  04A6                     __ptext34:	
  5313 ;; *************** function _checkColission_D *****************
  5314 ;; Defined at:
  5315 ;;		line 38 in file "colisiones.c"
  5316 ;; Parameters:    Size  Location     Type
  5317 ;;		None
  5318 ;; Auto vars:     Size  Location     Type
  5319 ;;  i               2   26[BANK0 ] int 
  5320 ;; Return value:  Size  Location     Type
  5321 ;;                  1    wreg      void 
  5322 ;; Registers used:
  5323 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5324 ;; Tracked objects:
  5325 ;;		On entry : 0/0
  5326 ;;		On exit  : 0/0
  5327 ;;		Unchanged: 0/0
  5328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5329 ;;      Params:         0       0       0       0       0
  5330 ;;      Locals:         0       2       0       0       0
  5331 ;;      Temps:          0       8       0       0       0
  5332 ;;      Totals:         0      10       0       0       0
  5333 ;;Total ram usage:       10 bytes
  5334 ;; Hardware stack levels used:    1
  5335 ;; Hardware stack levels required when called:    3
  5336 ;; This function calls:
  5337 ;;		___awmod
  5338 ;;		_drawBground
  5339 ;;		_rand
  5340 ;; This function is called by:
  5341 ;;		_checkCount
  5342 ;; This function uses a non-reentrant model
  5343 ;;
  5344                           
  5345                           
  5346                           ;psect for function _checkColission_D
  5347  04A6                     _checkColission_D:	
  5348  04A6                     l2020:	
  5349                           ;incstack = 0
  5350                           ; Regs used in _checkColission_D: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5351                           
  5352  04A6                     l2022:	
  5353                           
  5354                           ;colisiones.c: 40:     for(i=con.ficha_Hpos; i<(con.ficha_Hpos+4); i++){
  5355  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  5356  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  5357  04A8  0849               	movf	_con+3,w
  5358  04A9  00B2               	movwf	??_checkColission_D
  5359  04AA  01B3               	clrf	??_checkColission_D+1
  5360  04AB  0832               	movf	??_checkColission_D,w
  5361  04AC  00BA               	movwf	checkColission_D@i
  5362  04AD  0833               	movf	??_checkColission_D+1,w
  5363  04AE  00BB               	movwf	checkColission_D@i+1
  5364  04AF  2D06               	goto	l253
  5365  04B0                     l2024:	
  5366                           
  5367                           ;colisiones.c: 41:         if((ficha[i]>>1 & fondo[i]) != 0){
  5368  04B0  1283               	bcf	3,5	;RP0=0, select bank0
  5369  04B1  1303               	bcf	3,6	;RP1=0, select bank0
  5370  04B2  083A               	movf	checkColission_D@i,w
  5371  04B3  00B2               	movwf	??_checkColission_D
  5372  04B4  0732               	addwf	??_checkColission_D,w
  5373  04B5  3EA0               	addlw	(low (_fondo| 0))& (0+255)
  5374  04B6  0084               	movwf	4
  5375  04B7  1383               	bcf	3,7	;select IRP bank1
  5376  04B8  0800               	movf	0,w
  5377  04B9  00B3               	movwf	??_checkColission_D+1
  5378  04BA  0A84               	incf	4,f
  5379  04BB  0800               	movf	0,w
  5380  04BC  00B4               	movwf	??_checkColission_D+2
  5381  04BD  083A               	movf	checkColission_D@i,w
  5382  04BE  00B5               	movwf	??_checkColission_D+3
  5383  04BF  0735               	addwf	??_checkColission_D+3,w
  5384  04C0  3E58               	addlw	(low (_ficha| 0))& (0+255)
  5385  04C1  0084               	movwf	4
  5386  04C2  0800               	movf	0,w
  5387  04C3  00B6               	movwf	??_checkColission_D+4
  5388  04C4  0A84               	incf	4,f
  5389  04C5  0800               	movf	0,w
  5390  04C6  00B7               	movwf	??_checkColission_D+5
  5391  04C7  1003               	clrc
  5392  04C8  0CB7               	rrf	??_checkColission_D+5,f
  5393  04C9  0CB6               	rrf	??_checkColission_D+4,f
  5394  04CA  0833               	movf	??_checkColission_D+1,w
  5395  04CB  0536               	andwf	??_checkColission_D+4,w
  5396  04CC  00B8               	movwf	??_checkColission_D+6
  5397  04CD  0834               	movf	??_checkColission_D+2,w
  5398  04CE  0537               	andwf	??_checkColission_D+5,w
  5399  04CF  00B9               	movwf	??_checkColission_D+7
  5400  04D0  0838               	movf	??_checkColission_D+6,w
  5401  04D1  0439               	iorwf	??_checkColission_D+7,w
  5402  04D2  1903               	btfsc	3,2
  5403  04D3  2CD5               	goto	u1451
  5404  04D4  2CD6               	goto	u1450
  5405  04D5                     u1451:	
  5406  04D5  2D00               	goto	l2034
  5407  04D6                     u1450:	
  5408  04D6                     l2026:	
  5409                           
  5410                           ;colisiones.c: 42:             drawBground();
  5411  04D6  120A  158A  27BF  120A  118A  	fcall	_drawBground
  5412  04DB                     l2028:	
  5413                           
  5414                           ;colisiones.c: 43:             con.ficha_Vpos = 16;
  5415  04DB  3010               	movlw	16
  5416  04DC  1283               	bcf	3,5	;RP0=0, select bank0
  5417  04DD  1303               	bcf	3,6	;RP1=0, select bank0
  5418  04DE  00B2               	movwf	??_checkColission_D
  5419  04DF  0832               	movf	??_checkColission_D,w
  5420  04E0  00C8               	movwf	_con+2
  5421  04E1                     l2030:	
  5422                           
  5423                           ;colisiones.c: 44:             con.ficha_Hpos = 2;
  5424  04E1  3002               	movlw	2
  5425  04E2  00B2               	movwf	??_checkColission_D
  5426  04E3  0832               	movf	??_checkColission_D,w
  5427  04E4  00C9               	movwf	_con+3
  5428  04E5                     l2032:	
  5429                           
  5430                           ;colisiones.c: 45:             con.ficha_actual = rand() % 7;
  5431  04E5  3007               	movlw	7
  5432  04E6  00AB               	movwf	___awmod@divisor
  5433  04E7  3000               	movlw	0
  5434  04E8  00AC               	movwf	___awmod@divisor+1
  5435  04E9  120A  118A  209A  120A  118A  	fcall	_rand
  5436  04EE  1283               	bcf	3,5	;RP0=0, select bank0
  5437  04EF  1303               	bcf	3,6	;RP1=0, select bank0
  5438  04F0  0825               	movf	?_rand+1,w
  5439  04F1  00AE               	movwf	___awmod@dividend+1
  5440  04F2  0824               	movf	?_rand,w
  5441  04F3  00AD               	movwf	___awmod@dividend
  5442  04F4  120A  118A  2382  120A  118A  	fcall	___awmod
  5443  04F9  1283               	bcf	3,5	;RP0=0, select bank0
  5444  04FA  1303               	bcf	3,6	;RP1=0, select bank0
  5445  04FB  082B               	movf	?___awmod,w
  5446  04FC  00B2               	movwf	??_checkColission_D
  5447  04FD  0832               	movf	??_checkColission_D,w
  5448  04FE  00CA               	movwf	_con+4
  5449                           
  5450                           ;colisiones.c: 46:             break;
  5451  04FF  2D1B               	goto	l257
  5452  0500                     l2034:	
  5453                           
  5454                           ;colisiones.c: 48:     }
  5455  0500  3001               	movlw	1
  5456  0501  07BA               	addwf	checkColission_D@i,f
  5457  0502  1803               	skipnc
  5458  0503  0ABB               	incf	checkColission_D@i+1,f
  5459  0504  3000               	movlw	0
  5460  0505  07BB               	addwf	checkColission_D@i+1,f
  5461  0506                     l253:	
  5462  0506  0849               	movf	_con+3,w
  5463  0507  3E04               	addlw	4
  5464  0508  00B2               	movwf	??_checkColission_D
  5465  0509  3000               	movlw	0
  5466  050A  1803               	skipnc
  5467  050B  3001               	movlw	1
  5468  050C  00B3               	movwf	??_checkColission_D+1
  5469  050D  083B               	movf	checkColission_D@i+1,w
  5470  050E  3A80               	xorlw	128
  5471  050F  00B4               	movwf	??_checkColission_D+2
  5472  0510  0833               	movf	??_checkColission_D+1,w
  5473  0511  3A80               	xorlw	128
  5474  0512  0234               	subwf	??_checkColission_D+2,w
  5475  0513  1D03               	skipz
  5476  0514  2D17               	goto	u1465
  5477  0515  0832               	movf	??_checkColission_D,w
  5478  0516  023A               	subwf	checkColission_D@i,w
  5479  0517                     u1465:	
  5480  0517  1C03               	skipc
  5481  0518  2D1A               	goto	u1461
  5482  0519  2D1B               	goto	u1460
  5483  051A                     u1461:	
  5484  051A  2CB0               	goto	l2024
  5485  051B                     u1460:	
  5486  051B                     l257:	
  5487  051B  0008               	return
  5488  051C                     __end_of_checkColission_D:	
  5489                           
  5490                           	psect	text35
  5491  0F25                     __ptext35:	
  5492 ;; *************** function _checkBottom *****************
  5493 ;; Defined at:
  5494 ;;		line 17 in file "colisiones.c"
  5495 ;; Parameters:    Size  Location     Type
  5496 ;;		None
  5497 ;; Auto vars:     Size  Location     Type
  5498 ;;		None
  5499 ;; Return value:  Size  Location     Type
  5500 ;;                  1    wreg      void 
  5501 ;; Registers used:
  5502 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5503 ;; Tracked objects:
  5504 ;;		On entry : 0/0
  5505 ;;		On exit  : 0/0
  5506 ;;		Unchanged: 0/0
  5507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5508 ;;      Params:         0       0       0       0       0
  5509 ;;      Locals:         0       0       0       0       0
  5510 ;;      Temps:          0       1       0       0       0
  5511 ;;      Totals:         0       1       0       0       0
  5512 ;;Total ram usage:        1 bytes
  5513 ;; Hardware stack levels used:    1
  5514 ;; Hardware stack levels required when called:    3
  5515 ;; This function calls:
  5516 ;;		___awmod
  5517 ;;		_drawBground
  5518 ;;		_rand
  5519 ;; This function is called by:
  5520 ;;		_checkCount
  5521 ;; This function uses a non-reentrant model
  5522 ;;
  5523                           
  5524                           
  5525                           ;psect for function _checkBottom
  5526  0F25                     _checkBottom:	
  5527  0F25                     l2010:	
  5528                           ;incstack = 0
  5529                           ; Regs used in _checkBottom: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5530                           
  5531                           
  5532                           ;colisiones.c: 18:     if(con.ficha_Vpos==0){
  5533  0F25  1283               	bcf	3,5	;RP0=0, select bank0
  5534  0F26  1303               	bcf	3,6	;RP1=0, select bank0
  5535  0F27  0848               	movf	_con+2,w
  5536  0F28  1D03               	btfss	3,2
  5537  0F29  2F2B               	goto	u1441
  5538  0F2A  2F2C               	goto	u1440
  5539  0F2B                     u1441:	
  5540  0F2B  2F55               	goto	l246
  5541  0F2C                     u1440:	
  5542  0F2C                     l2012:	
  5543                           
  5544                           ;colisiones.c: 19:         drawBground();
  5545  0F2C  120A  158A  27BF  120A  158A  	fcall	_drawBground
  5546  0F31                     l2014:	
  5547                           
  5548                           ;colisiones.c: 20:         con.ficha_Vpos = 16;
  5549  0F31  3010               	movlw	16
  5550  0F32  1283               	bcf	3,5	;RP0=0, select bank0
  5551  0F33  1303               	bcf	3,6	;RP1=0, select bank0
  5552  0F34  00B2               	movwf	??_checkBottom
  5553  0F35  0832               	movf	??_checkBottom,w
  5554  0F36  00C8               	movwf	_con+2
  5555  0F37                     l2016:	
  5556                           
  5557                           ;colisiones.c: 21:         con.ficha_Hpos = 2;
  5558  0F37  3002               	movlw	2
  5559  0F38  00B2               	movwf	??_checkBottom
  5560  0F39  0832               	movf	??_checkBottom,w
  5561  0F3A  00C9               	movwf	_con+3
  5562  0F3B                     l2018:	
  5563                           
  5564                           ;colisiones.c: 22:         con.ficha_actual = rand() % 7;
  5565  0F3B  3007               	movlw	7
  5566  0F3C  00AB               	movwf	___awmod@divisor
  5567  0F3D  3000               	movlw	0
  5568  0F3E  00AC               	movwf	___awmod@divisor+1
  5569  0F3F  120A  118A  209A  120A  158A  	fcall	_rand
  5570  0F44  1283               	bcf	3,5	;RP0=0, select bank0
  5571  0F45  1303               	bcf	3,6	;RP1=0, select bank0
  5572  0F46  0825               	movf	?_rand+1,w
  5573  0F47  00AE               	movwf	___awmod@dividend+1
  5574  0F48  0824               	movf	?_rand,w
  5575  0F49  00AD               	movwf	___awmod@dividend
  5576  0F4A  120A  118A  2382  120A  158A  	fcall	___awmod
  5577  0F4F  1283               	bcf	3,5	;RP0=0, select bank0
  5578  0F50  1303               	bcf	3,6	;RP1=0, select bank0
  5579  0F51  082B               	movf	?___awmod,w
  5580  0F52  00B2               	movwf	??_checkBottom
  5581  0F53  0832               	movf	??_checkBottom,w
  5582  0F54  00CA               	movwf	_con+4
  5583  0F55                     l246:	
  5584  0F55  0008               	return
  5585  0F56                     __end_of_checkBottom:	
  5586                           
  5587                           	psect	text36
  5588  009A                     __ptext36:	
  5589 ;; *************** function _rand *****************
  5590 ;; Defined at:
  5591 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  5592 ;; Parameters:    Size  Location     Type
  5593 ;;		None
  5594 ;; Auto vars:     Size  Location     Type
  5595 ;;		None
  5596 ;; Return value:  Size  Location     Type
  5597 ;;                  2    4[BANK0 ] int 
  5598 ;; Registers used:
  5599 ;;		wreg, status,2, status,0, pclath, cstack
  5600 ;; Tracked objects:
  5601 ;;		On entry : 0/0
  5602 ;;		On exit  : 0/0
  5603 ;;		Unchanged: 0/0
  5604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5605 ;;      Params:         0       2       0       0       0
  5606 ;;      Locals:         0       0       0       0       0
  5607 ;;      Temps:          0       5       0       0       0
  5608 ;;      Totals:         0       7       0       0       0
  5609 ;;Total ram usage:        7 bytes
  5610 ;; Hardware stack levels used:    1
  5611 ;; Hardware stack levels required when called:    2
  5612 ;; This function calls:
  5613 ;;		___lmul
  5614 ;; This function is called by:
  5615 ;;		_main
  5616 ;;		_checkBottom
  5617 ;;		_checkColission_D
  5618 ;;		_perdio
  5619 ;; This function uses a non-reentrant model
  5620 ;;
  5621                           
  5622                           
  5623                           ;psect for function _rand
  5624  009A                     _rand:	
  5625  009A                     l1714:	
  5626                           ;incstack = 0
  5627                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  5628                           
  5629  009A  1283               	bcf	3,5	;RP0=0, select bank0
  5630  009B  1303               	bcf	3,6	;RP1=0, select bank0
  5631  009C  086B               	movf	_randx+3,w
  5632  009D  00F6               	movwf	___lmul@multiplier+3
  5633  009E  086A               	movf	_randx+2,w
  5634  009F  00F5               	movwf	___lmul@multiplier+2
  5635  00A0  0869               	movf	_randx+1,w
  5636  00A1  00F4               	movwf	___lmul@multiplier+1
  5637  00A2  0868               	movf	_randx,w
  5638  00A3  00F3               	movwf	___lmul@multiplier
  5639  00A4  3041               	movlw	65
  5640  00A5  00FA               	movwf	___lmul@multiplicand+3
  5641  00A6  30C6               	movlw	198
  5642  00A7  00F9               	movwf	___lmul@multiplicand+2
  5643  00A8  304E               	movlw	78
  5644  00A9  00F8               	movwf	___lmul@multiplicand+1
  5645  00AA  306D               	movlw	109
  5646  00AB  00F7               	movwf	___lmul@multiplicand
  5647  00AC  120A  118A  21FE  120A  118A  	fcall	___lmul
  5648  00B1  0876               	movf	?___lmul+3,w
  5649  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  5650  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  5651  00B4  00EB               	movwf	_randx+3
  5652  00B5  0875               	movf	?___lmul+2,w
  5653  00B6  00EA               	movwf	_randx+2
  5654  00B7  0874               	movf	?___lmul+1,w
  5655  00B8  00E9               	movwf	_randx+1
  5656  00B9  0873               	movf	?___lmul,w
  5657  00BA  00E8               	movwf	_randx
  5658  00BB                     l1716:	
  5659  00BB  3039               	movlw	57
  5660  00BC  07E8               	addwf	_randx,f
  5661  00BD  3030               	movlw	48
  5662  00BE  1803               	skipnc
  5663  00BF  3031               	movlw	49
  5664  00C0  07E9               	addwf	_randx+1,f
  5665  00C1  3000               	movlw	0
  5666  00C2  1803               	skipnc
  5667  00C3  3001               	movlw	1
  5668  00C4  07EA               	addwf	_randx+2,f
  5669  00C5  3000               	movlw	0
  5670  00C6  1803               	skipnc
  5671  00C7  3001               	movlw	1
  5672  00C8  07EB               	addwf	_randx+3,f
  5673  00C9                     l1718:	
  5674  00C9  0868               	movf	_randx,w
  5675  00CA  00A6               	movwf	??_rand
  5676  00CB  0869               	movf	_randx+1,w
  5677  00CC  00A7               	movwf	??_rand+1
  5678  00CD  086A               	movf	_randx+2,w
  5679  00CE  00A8               	movwf	??_rand+2
  5680  00CF  086B               	movf	_randx+3,w
  5681  00D0  00A9               	movwf	??_rand+3
  5682  00D1  3010               	movlw	16
  5683  00D2  00AA               	movwf	??_rand+4
  5684  00D3                     u955:	
  5685  00D3  0D29               	rlf	??_rand+3,w
  5686  00D4  0CA9               	rrf	??_rand+3,f
  5687  00D5  0CA8               	rrf	??_rand+2,f
  5688  00D6  0CA7               	rrf	??_rand+1,f
  5689  00D7  0CA6               	rrf	??_rand,f
  5690  00D8                     u950:	
  5691  00D8  0BAA               	decfsz	??_rand+4,f
  5692  00D9  28D3               	goto	u955
  5693  00DA  30FF               	movlw	255
  5694  00DB  0526               	andwf	??_rand,w
  5695  00DC  00A4               	movwf	?_rand
  5696  00DD  307F               	movlw	127
  5697  00DE  0527               	andwf	??_rand+1,w
  5698  00DF  00A5               	movwf	?_rand+1
  5699  00E0                     l928:	
  5700  00E0  0008               	return
  5701  00E1                     __end_of_rand:	
  5702                           
  5703                           	psect	text37
  5704  01FE                     __ptext37:	
  5705 ;; *************** function ___lmul *****************
  5706 ;; Defined at:
  5707 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  5708 ;; Parameters:    Size  Location     Type
  5709 ;;  multiplier      4    2[COMMON] unsigned long 
  5710 ;;  multiplicand    4    6[COMMON] unsigned long 
  5711 ;; Auto vars:     Size  Location     Type
  5712 ;;  product         4    0[BANK0 ] unsigned long 
  5713 ;; Return value:  Size  Location     Type
  5714 ;;                  4    2[COMMON] unsigned long 
  5715 ;; Registers used:
  5716 ;;		wreg, status,2, status,0
  5717 ;; Tracked objects:
  5718 ;;		On entry : 0/0
  5719 ;;		On exit  : 0/0
  5720 ;;		Unchanged: 0/0
  5721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5722 ;;      Params:         8       0       0       0       0
  5723 ;;      Locals:         0       4       0       0       0
  5724 ;;      Temps:          1       0       0       0       0
  5725 ;;      Totals:         9       4       0       0       0
  5726 ;;Total ram usage:       13 bytes
  5727 ;; Hardware stack levels used:    1
  5728 ;; Hardware stack levels required when called:    1
  5729 ;; This function calls:
  5730 ;;		Nothing
  5731 ;; This function is called by:
  5732 ;;		_rand
  5733 ;; This function uses a non-reentrant model
  5734 ;;
  5735                           
  5736                           
  5737                           ;psect for function ___lmul
  5738  01FE                     ___lmul:	
  5739  01FE                     l1700:	
  5740                           ;incstack = 0
  5741                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  5742                           
  5743  01FE  3000               	movlw	0
  5744  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  5745  0200  1303               	bcf	3,6	;RP1=0, select bank0
  5746  0201  00A3               	movwf	___lmul@product+3
  5747  0202  3000               	movlw	0
  5748  0203  00A2               	movwf	___lmul@product+2
  5749  0204  3000               	movlw	0
  5750  0205  00A1               	movwf	___lmul@product+1
  5751  0206  3000               	movlw	0
  5752  0207  00A0               	movwf	___lmul@product
  5753  0208                     l1702:	
  5754  0208  1C73               	btfss	___lmul@multiplier,0
  5755  0209  2A0B               	goto	u901
  5756  020A  2A0C               	goto	u900
  5757  020B                     u901:	
  5758  020B  2A25               	goto	l1706
  5759  020C                     u900:	
  5760  020C                     l1704:	
  5761  020C  0877               	movf	___lmul@multiplicand,w
  5762  020D  1283               	bcf	3,5	;RP0=0, select bank0
  5763  020E  1303               	bcf	3,6	;RP1=0, select bank0
  5764  020F  07A0               	addwf	___lmul@product,f
  5765  0210  0878               	movf	___lmul@multiplicand+1,w
  5766  0211  1103               	clrz
  5767  0212  1803               	skipnc
  5768  0213  3E01               	addlw	1
  5769  0214  1903               	skipnz
  5770  0215  2A17               	goto	u911
  5771  0216  07A1               	addwf	___lmul@product+1,f
  5772  0217                     u911:	
  5773  0217  0879               	movf	___lmul@multiplicand+2,w
  5774  0218  1103               	clrz
  5775  0219  1803               	skipnc
  5776  021A  3E01               	addlw	1
  5777  021B  1903               	skipnz
  5778  021C  2A1E               	goto	u912
  5779  021D  07A2               	addwf	___lmul@product+2,f
  5780  021E                     u912:	
  5781  021E  087A               	movf	___lmul@multiplicand+3,w
  5782  021F  1103               	clrz
  5783  0220  1803               	skipnc
  5784  0221  3E01               	addlw	1
  5785  0222  1903               	skipnz
  5786  0223  2A25               	goto	u913
  5787  0224  07A3               	addwf	___lmul@product+3,f
  5788  0225                     u913:	
  5789  0225                     l1706:	
  5790  0225  3001               	movlw	1
  5791  0226  00FB               	movwf	??___lmul
  5792  0227                     u925:	
  5793  0227  1003               	clrc
  5794  0228  0DF7               	rlf	___lmul@multiplicand,f
  5795  0229  0DF8               	rlf	___lmul@multiplicand+1,f
  5796  022A  0DF9               	rlf	___lmul@multiplicand+2,f
  5797  022B  0DFA               	rlf	___lmul@multiplicand+3,f
  5798  022C  0BFB               	decfsz	??___lmul,f
  5799  022D  2A27               	goto	u925
  5800  022E                     l1708:	
  5801  022E  3001               	movlw	1
  5802  022F                     u935:	
  5803  022F  1003               	clrc
  5804  0230  0CF6               	rrf	___lmul@multiplier+3,f
  5805  0231  0CF5               	rrf	___lmul@multiplier+2,f
  5806  0232  0CF4               	rrf	___lmul@multiplier+1,f
  5807  0233  0CF3               	rrf	___lmul@multiplier,f
  5808  0234  3EFF               	addlw	-1
  5809  0235  1D03               	skipz
  5810  0236  2A2F               	goto	u935
  5811  0237  0876               	movf	___lmul@multiplier+3,w
  5812  0238  0475               	iorwf	___lmul@multiplier+2,w
  5813  0239  0474               	iorwf	___lmul@multiplier+1,w
  5814  023A  0473               	iorwf	___lmul@multiplier,w
  5815  023B  1D03               	skipz
  5816  023C  2A3E               	goto	u941
  5817  023D  2A3F               	goto	u940
  5818  023E                     u941:	
  5819  023E  2A08               	goto	l1702
  5820  023F                     u940:	
  5821  023F                     l1710:	
  5822  023F  1283               	bcf	3,5	;RP0=0, select bank0
  5823  0240  1303               	bcf	3,6	;RP1=0, select bank0
  5824  0241  0823               	movf	___lmul@product+3,w
  5825  0242  00F6               	movwf	?___lmul+3
  5826  0243  0822               	movf	___lmul@product+2,w
  5827  0244  00F5               	movwf	?___lmul+2
  5828  0245  0821               	movf	___lmul@product+1,w
  5829  0246  00F4               	movwf	?___lmul+1
  5830  0247  0820               	movf	___lmul@product,w
  5831  0248  00F3               	movwf	?___lmul
  5832  0249                     l486:	
  5833  0249  0008               	return
  5834  024A                     __end_of___lmul:	
  5835                           
  5836                           	psect	text38
  5837  0FBF                     __ptext38:	
  5838 ;; *************** function _drawBground *****************
  5839 ;; Defined at:
  5840 ;;		line 46 in file "screen.c"
  5841 ;; Parameters:    Size  Location     Type
  5842 ;;		None
  5843 ;; Auto vars:     Size  Location     Type
  5844 ;;  i               2    0[BANK0 ] int 
  5845 ;; Return value:  Size  Location     Type
  5846 ;;                  1    wreg      void 
  5847 ;; Registers used:
  5848 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  5849 ;; Tracked objects:
  5850 ;;		On entry : 0/0
  5851 ;;		On exit  : 0/0
  5852 ;;		Unchanged: 0/0
  5853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5854 ;;      Params:         0       0       0       0       0
  5855 ;;      Locals:         0       2       0       0       0
  5856 ;;      Temps:          9       0       0       0       0
  5857 ;;      Totals:         9       2       0       0       0
  5858 ;;Total ram usage:       11 bytes
  5859 ;; Hardware stack levels used:    1
  5860 ;; Hardware stack levels required when called:    1
  5861 ;; This function calls:
  5862 ;;		Nothing
  5863 ;; This function is called by:
  5864 ;;		_checkBottom
  5865 ;;		_checkColission_D
  5866 ;; This function uses a non-reentrant model
  5867 ;;
  5868                           
  5869                           
  5870                           ;psect for function _drawBground
  5871  0FBF                     _drawBground:	
  5872  0FBF                     l1860:	
  5873                           ;incstack = 0
  5874                           ; Regs used in _drawBground: [wreg-fsr0h+status,2+status,0+btemp+1]
  5875                           
  5876                           
  5877                           ;screen.c: 47:     int i=0;
  5878  0FBF  1283               	bcf	3,5	;RP0=0, select bank0
  5879  0FC0  1303               	bcf	3,6	;RP1=0, select bank0
  5880  0FC1  01A0               	clrf	drawBground@i
  5881  0FC2  01A1               	clrf	drawBground@i+1
  5882                           
  5883                           ;screen.c: 48:     for(i=0; i<8; i++){
  5884  0FC3  01A0               	clrf	drawBground@i
  5885  0FC4  01A1               	clrf	drawBground@i+1
  5886  0FC5                     l1866:	
  5887                           
  5888                           ;screen.c: 49:         fondo[i] = fondo[i] | ficha[i];
  5889  0FC5  1283               	bcf	3,5	;RP0=0, select bank0
  5890  0FC6  1303               	bcf	3,6	;RP1=0, select bank0
  5891  0FC7  0820               	movf	drawBground@i,w
  5892  0FC8  00F3               	movwf	??_drawBground
  5893  0FC9  0773               	addwf	??_drawBground,w
  5894  0FCA  3E58               	addlw	(low (_ficha| 0))& (0+255)
  5895  0FCB  0084               	movwf	4
  5896  0FCC  1383               	bcf	3,7	;select IRP bank0
  5897  0FCD  0800               	movf	0,w
  5898  0FCE  00F4               	movwf	??_drawBground+1
  5899  0FCF  0A84               	incf	4,f
  5900  0FD0  0800               	movf	0,w
  5901  0FD1  00F5               	movwf	??_drawBground+2
  5902  0FD2  0820               	movf	drawBground@i,w
  5903  0FD3  00F6               	movwf	??_drawBground+3
  5904  0FD4  0776               	addwf	??_drawBground+3,w
  5905  0FD5  3EA0               	addlw	(low (_fondo| 0))& (0+255)
  5906  0FD6  0084               	movwf	4
  5907  0FD7  0800               	movf	0,w
  5908  0FD8  00F7               	movwf	??_drawBground+4
  5909  0FD9  0A84               	incf	4,f
  5910  0FDA  0800               	movf	0,w
  5911  0FDB  00F8               	movwf	??_drawBground+5
  5912  0FDC  0874               	movf	??_drawBground+1,w
  5913  0FDD  0477               	iorwf	??_drawBground+4,w
  5914  0FDE  00F9               	movwf	??_drawBground+6
  5915  0FDF  0875               	movf	??_drawBground+2,w
  5916  0FE0  0478               	iorwf	??_drawBground+5,w
  5917  0FE1  00FA               	movwf	??_drawBground+7
  5918  0FE2  0820               	movf	drawBground@i,w
  5919  0FE3  00FB               	movwf	??_drawBground+8
  5920  0FE4  077B               	addwf	??_drawBground+8,w
  5921  0FE5  3EA0               	addlw	(low (_fondo| 0))& (0+255)
  5922  0FE6  0084               	movwf	4
  5923  0FE7  0879               	movf	??_drawBground+6,w
  5924  0FE8  0080               	movwf	0
  5925  0FE9  0A84               	incf	4,f
  5926  0FEA  087A               	movf	??_drawBground+7,w
  5927  0FEB  0080               	movwf	0
  5928  0FEC                     l1868:	
  5929                           
  5930                           ;screen.c: 50:     }
  5931  0FEC  3001               	movlw	1
  5932  0FED  07A0               	addwf	drawBground@i,f
  5933  0FEE  1803               	skipnc
  5934  0FEF  0AA1               	incf	drawBground@i+1,f
  5935  0FF0  3000               	movlw	0
  5936  0FF1  07A1               	addwf	drawBground@i+1,f
  5937  0FF2                     l1870:	
  5938  0FF2  0821               	movf	drawBground@i+1,w
  5939  0FF3  3A80               	xorlw	128
  5940  0FF4  00FF               	movwf	btemp+1
  5941  0FF5  3080               	movlw	128
  5942  0FF6  027F               	subwf	btemp+1,w
  5943  0FF7  1D03               	skipz
  5944  0FF8  2FFB               	goto	u1225
  5945  0FF9  3008               	movlw	8
  5946  0FFA  0220               	subwf	drawBground@i,w
  5947  0FFB                     u1225:	
  5948  0FFB  1C03               	skipc
  5949  0FFC  2FFE               	goto	u1221
  5950  0FFD  2FFF               	goto	u1220
  5951  0FFE                     u1221:	
  5952  0FFE  2FC5               	goto	l1866
  5953  0FFF                     u1220:	
  5954  0FFF                     l223:	
  5955  0FFF  0008               	return
  5956  1000                     __end_of_drawBground:	
  5957                           
  5958                           	psect	text39
  5959  0382                     __ptext39:	
  5960 ;; *************** function ___awmod *****************
  5961 ;; Defined at:
  5962 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  5963 ;; Parameters:    Size  Location     Type
  5964 ;;  divisor         2   11[BANK0 ] int 
  5965 ;;  dividend        2   13[BANK0 ] int 
  5966 ;; Auto vars:     Size  Location     Type
  5967 ;;  sign            1   17[BANK0 ] unsigned char 
  5968 ;;  counter         1   16[BANK0 ] unsigned char 
  5969 ;; Return value:  Size  Location     Type
  5970 ;;                  2   11[BANK0 ] int 
  5971 ;; Registers used:
  5972 ;;		wreg, status,2, status,0
  5973 ;; Tracked objects:
  5974 ;;		On entry : 0/0
  5975 ;;		On exit  : 0/0
  5976 ;;		Unchanged: 0/0
  5977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5978 ;;      Params:         0       4       0       0       0
  5979 ;;      Locals:         0       2       0       0       0
  5980 ;;      Temps:          0       1       0       0       0
  5981 ;;      Totals:         0       7       0       0       0
  5982 ;;Total ram usage:        7 bytes
  5983 ;; Hardware stack levels used:    1
  5984 ;; Hardware stack levels required when called:    1
  5985 ;; This function calls:
  5986 ;;		Nothing
  5987 ;; This function is called by:
  5988 ;;		_main
  5989 ;;		_checkBottom
  5990 ;;		_checkColission_D
  5991 ;;		_perdio
  5992 ;; This function uses a non-reentrant model
  5993 ;;
  5994                           
  5995                           
  5996                           ;psect for function ___awmod
  5997  0382                     ___awmod:	
  5998  0382                     l1878:	
  5999                           ;incstack = 0
  6000                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6001                           
  6002  0382  1283               	bcf	3,5	;RP0=0, select bank0
  6003  0383  1303               	bcf	3,6	;RP1=0, select bank0
  6004  0384  01B1               	clrf	___awmod@sign
  6005  0385                     l1880:	
  6006  0385  1FAE               	btfss	___awmod@dividend+1,7
  6007  0386  2B88               	goto	u1291
  6008  0387  2B89               	goto	u1290
  6009  0388                     u1291:	
  6010  0388  2B90               	goto	l1886
  6011  0389                     u1290:	
  6012  0389                     l1882:	
  6013  0389  09AD               	comf	___awmod@dividend,f
  6014  038A  09AE               	comf	___awmod@dividend+1,f
  6015  038B  0AAD               	incf	___awmod@dividend,f
  6016  038C  1903               	skipnz
  6017  038D  0AAE               	incf	___awmod@dividend+1,f
  6018  038E                     l1884:	
  6019  038E  01B1               	clrf	___awmod@sign
  6020  038F  0AB1               	incf	___awmod@sign,f
  6021  0390                     l1886:	
  6022  0390  1FAC               	btfss	___awmod@divisor+1,7
  6023  0391  2B93               	goto	u1301
  6024  0392  2B94               	goto	u1300
  6025  0393                     u1301:	
  6026  0393  2B99               	goto	l1890
  6027  0394                     u1300:	
  6028  0394                     l1888:	
  6029  0394  09AB               	comf	___awmod@divisor,f
  6030  0395  09AC               	comf	___awmod@divisor+1,f
  6031  0396  0AAB               	incf	___awmod@divisor,f
  6032  0397  1903               	skipnz
  6033  0398  0AAC               	incf	___awmod@divisor+1,f
  6034  0399                     l1890:	
  6035  0399  082B               	movf	___awmod@divisor,w
  6036  039A  042C               	iorwf	___awmod@divisor+1,w
  6037  039B  1903               	btfsc	3,2
  6038  039C  2B9E               	goto	u1311
  6039  039D  2B9F               	goto	u1310
  6040  039E                     u1311:	
  6041  039E  2BCE               	goto	l1908
  6042  039F                     u1310:	
  6043  039F                     l1892:	
  6044  039F  01B0               	clrf	___awmod@counter
  6045  03A0  0AB0               	incf	___awmod@counter,f
  6046  03A1  2BAD               	goto	l1898
  6047  03A2                     l1894:	
  6048  03A2  3001               	movlw	1
  6049  03A3                     u1325:	
  6050  03A3  1003               	clrc
  6051  03A4  0DAB               	rlf	___awmod@divisor,f
  6052  03A5  0DAC               	rlf	___awmod@divisor+1,f
  6053  03A6  3EFF               	addlw	-1
  6054  03A7  1D03               	skipz
  6055  03A8  2BA3               	goto	u1325
  6056  03A9                     l1896:	
  6057  03A9  3001               	movlw	1
  6058  03AA  00AF               	movwf	??___awmod
  6059  03AB  082F               	movf	??___awmod,w
  6060  03AC  07B0               	addwf	___awmod@counter,f
  6061  03AD                     l1898:	
  6062  03AD  1FAC               	btfss	___awmod@divisor+1,7
  6063  03AE  2BB0               	goto	u1331
  6064  03AF  2BB1               	goto	u1330
  6065  03B0                     u1331:	
  6066  03B0  2BA2               	goto	l1894
  6067  03B1                     u1330:	
  6068  03B1                     l1900:	
  6069  03B1  082C               	movf	___awmod@divisor+1,w
  6070  03B2  022E               	subwf	___awmod@dividend+1,w
  6071  03B3  1D03               	skipz
  6072  03B4  2BB7               	goto	u1345
  6073  03B5  082B               	movf	___awmod@divisor,w
  6074  03B6  022D               	subwf	___awmod@dividend,w
  6075  03B7                     u1345:	
  6076  03B7  1C03               	skipc
  6077  03B8  2BBA               	goto	u1341
  6078  03B9  2BBB               	goto	u1340
  6079  03BA                     u1341:	
  6080  03BA  2BC1               	goto	l1904
  6081  03BB                     u1340:	
  6082  03BB                     l1902:	
  6083  03BB  082B               	movf	___awmod@divisor,w
  6084  03BC  02AD               	subwf	___awmod@dividend,f
  6085  03BD  082C               	movf	___awmod@divisor+1,w
  6086  03BE  1C03               	skipc
  6087  03BF  03AE               	decf	___awmod@dividend+1,f
  6088  03C0  02AE               	subwf	___awmod@dividend+1,f
  6089  03C1                     l1904:	
  6090  03C1  3001               	movlw	1
  6091  03C2                     u1355:	
  6092  03C2  1003               	clrc
  6093  03C3  0CAC               	rrf	___awmod@divisor+1,f
  6094  03C4  0CAB               	rrf	___awmod@divisor,f
  6095  03C5  3EFF               	addlw	-1
  6096  03C6  1D03               	skipz
  6097  03C7  2BC2               	goto	u1355
  6098  03C8                     l1906:	
  6099  03C8  3001               	movlw	1
  6100  03C9  02B0               	subwf	___awmod@counter,f
  6101  03CA  1D03               	btfss	3,2
  6102  03CB  2BCD               	goto	u1361
  6103  03CC  2BCE               	goto	u1360
  6104  03CD                     u1361:	
  6105  03CD  2BB1               	goto	l1900
  6106  03CE                     u1360:	
  6107  03CE                     l1908:	
  6108  03CE  0831               	movf	___awmod@sign,w
  6109  03CF  1903               	btfsc	3,2
  6110  03D0  2BD2               	goto	u1371
  6111  03D1  2BD3               	goto	u1370
  6112  03D2                     u1371:	
  6113  03D2  2BD8               	goto	l1912
  6114  03D3                     u1370:	
  6115  03D3                     l1910:	
  6116  03D3  09AD               	comf	___awmod@dividend,f
  6117  03D4  09AE               	comf	___awmod@dividend+1,f
  6118  03D5  0AAD               	incf	___awmod@dividend,f
  6119  03D6  1903               	skipnz
  6120  03D7  0AAE               	incf	___awmod@dividend+1,f
  6121  03D8                     l1912:	
  6122  03D8  082E               	movf	___awmod@dividend+1,w
  6123  03D9  00AC               	movwf	?___awmod+1
  6124  03DA  082D               	movf	___awmod@dividend,w
  6125  03DB  00AB               	movwf	?___awmod
  6126  03DC                     l638:	
  6127  03DC  0008               	return
  6128  03DD                     __end_of___awmod:	
  6129                           
  6130                           	psect	text40
  6131  0F56                     __ptext40:	
  6132 ;; *************** function _Timer0_ISR *****************
  6133 ;; Defined at:
  6134 ;;		line 163 in file "mainsource.c"
  6135 ;; Parameters:    Size  Location     Type
  6136 ;;		None
  6137 ;; Auto vars:     Size  Location     Type
  6138 ;;		None
  6139 ;; Return value:  Size  Location     Type
  6140 ;;                  1    wreg      void 
  6141 ;; Registers used:
  6142 ;;		wreg, status,2
  6143 ;; Tracked objects:
  6144 ;;		On entry : 0/0
  6145 ;;		On exit  : 0/0
  6146 ;;		Unchanged: 0/0
  6147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6148 ;;      Params:         0       0       0       0       0
  6149 ;;      Locals:         0       0       0       0       0
  6150 ;;      Temps:          2       0       0       0       0
  6151 ;;      Totals:         2       0       0       0       0
  6152 ;;Total ram usage:        2 bytes
  6153 ;; Hardware stack levels used:    1
  6154 ;; This function calls:
  6155 ;;		Nothing
  6156 ;; This function is called by:
  6157 ;;		Interrupt level 1
  6158 ;; This function uses a non-reentrant model
  6159 ;;
  6160                           
  6161                           
  6162                           ;psect for function _Timer0_ISR
  6163  0F56                     _Timer0_ISR:	
  6164  0F56                     i1l2328:	
  6165                           
  6166                           ;mainsource.c: 164:     if(INTCONbits.TMR0IF){
  6167  0F56  1D0B               	btfss	11,2	;volatile
  6168  0F57  2F59               	goto	u170_21
  6169  0F58  2F5A               	goto	u170_20
  6170  0F59                     u170_21:	
  6171  0F59  2F6D               	goto	i1l2336
  6172  0F5A                     u170_20:	
  6173  0F5A                     i1l2330:	
  6174                           
  6175                           ;mainsource.c: 165:         INTCONbits.TMR0IF=0;
  6176  0F5A  110B               	bcf	11,2	;volatile
  6177  0F5B                     i1l2332:	
  6178                           
  6179                           ;mainsource.c: 166:         timerCount ++;
  6180  0F5B  3001               	movlw	1
  6181  0F5C  1283               	bcf	3,5	;RP0=0, select bank0
  6182  0F5D  1303               	bcf	3,6	;RP1=0, select bank0
  6183  0F5E  07D4               	addwf	_timerCount,f
  6184  0F5F  3000               	movlw	0
  6185  0F60  1803               	skipnc
  6186  0F61  3001               	movlw	1
  6187  0F62  07D5               	addwf	_timerCount+1,f
  6188  0F63  3000               	movlw	0
  6189  0F64  1803               	skipnc
  6190  0F65  3001               	movlw	1
  6191  0F66  07D6               	addwf	_timerCount+2,f
  6192  0F67  3000               	movlw	0
  6193  0F68  1803               	skipnc
  6194  0F69  3001               	movlw	1
  6195  0F6A  07D7               	addwf	_timerCount+3,f
  6196  0F6B                     i1l2334:	
  6197                           
  6198                           ;mainsource.c: 167:         con.check_count = 1;
  6199  0F6B  01CD               	clrf	_con+7
  6200  0F6C  0ACD               	incf	_con+7,f
  6201  0F6D                     i1l2336:	
  6202                           
  6203                           ;mainsource.c: 170:     if(PORTBbits.RB5 == 0){
  6204  0F6D  1283               	bcf	3,5	;RP0=0, select bank0
  6205  0F6E  1303               	bcf	3,6	;RP1=0, select bank0
  6206  0F6F  1A86               	btfsc	6,5	;volatile
  6207  0F70  2F72               	goto	u171_21
  6208  0F71  2F73               	goto	u171_20
  6209  0F72                     u171_21:	
  6210  0F72  2F76               	goto	i1l2342
  6211  0F73                     u171_20:	
  6212  0F73                     i1l2338:	
  6213                           
  6214                           ;mainsource.c: 171:         con.derecha = 1;
  6215  0F73  01CB               	clrf	_con+5
  6216  0F74  0ACB               	incf	_con+5,f
  6217  0F75                     i1l2340:	
  6218                           
  6219                           ;mainsource.c: 172:         con.izquierda = 0;
  6220  0F75  01CC               	clrf	_con+6
  6221  0F76                     i1l2342:	
  6222                           
  6223                           ;mainsource.c: 174:     if(PORTBbits.RB4 == 0){
  6224  0F76  1A06               	btfsc	6,4	;volatile
  6225  0F77  2F79               	goto	u172_21
  6226  0F78  2F7A               	goto	u172_20
  6227  0F79                     u172_21:	
  6228  0F79  2F7D               	goto	i1l2348
  6229  0F7A                     u172_20:	
  6230  0F7A                     i1l2344:	
  6231                           
  6232                           ;mainsource.c: 175:         con.derecha = 0;
  6233  0F7A  01CB               	clrf	_con+5
  6234  0F7B                     i1l2346:	
  6235                           
  6236                           ;mainsource.c: 176:         con.izquierda = 1;
  6237  0F7B  01CC               	clrf	_con+6
  6238  0F7C  0ACC               	incf	_con+6,f
  6239  0F7D                     i1l2348:	
  6240                           
  6241                           ;mainsource.c: 178:     if(PORTBbits.RB3== 0){
  6242  0F7D  1986               	btfsc	6,3	;volatile
  6243  0F7E  2F80               	goto	u173_21
  6244  0F7F  2F81               	goto	u173_20
  6245  0F80                     u173_21:	
  6246  0F80  2F83               	goto	i1l155
  6247  0F81                     u173_20:	
  6248  0F81                     i1l2350:	
  6249                           
  6250                           ;mainsource.c: 179:         con.girar = 1;
  6251  0F81  01C6               	clrf	_con
  6252  0F82  0AC6               	incf	_con,f
  6253  0F83                     i1l155:	
  6254  0F83  0872               	movf	??_Timer0_ISR+1,w
  6255  0F84  008A               	movwf	10
  6256  0F85  0E71               	swapf	??_Timer0_ISR^(0+4294967168),w
  6257  0F86  0083               	movwf	3
  6258  0F87  0EFE               	swapf	btemp,f
  6259  0F88  0E7E               	swapf	btemp,w
  6260  0F89  0009               	retfie
  6261  0F8A                     __end_of_Timer0_ISR:	
  6262  007E                     btemp	set	126	;btemp
  6263  007E                     wtemp0	set	126
  6264                           
  6265                           	psect	intentry
  6266  0004                     __pintentry:	
  6267                           ;incstack = 0
  6268                           ; Regs used in _Timer0_ISR: [wreg+status,2]
  6269                           
  6270  0004                     interrupt_function:	
  6271  007E                     saved_w	set	btemp
  6272  0004  00FE               	movwf	btemp
  6273  0005  0E03               	swapf	3,w
  6274  0006  00F1               	movwf	??_Timer0_ISR
  6275  0007  080A               	movf	10,w
  6276  0008  00F2               	movwf	??_Timer0_ISR+1
  6277  0009  120A  158A  2F56   	ljmp	_Timer0_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         66
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13     11      11
    BANK0            80     42      80
    BANK1            80      0      60
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(1) Largest target is 16
		 -> fondo(BANK1[16]), ficha(BANK0[16]), 

    memset@p	PTR unsigned char  size(1) Largest target is 16
		 -> fondo(BANK1[16]), ficha(BANK0[16]), 

    sp__memset	PTR void  size(1) Largest target is 16
		 -> fondo(BANK1[16]), ficha(BANK0[16]), 

    updateScreen@screen	PTR unsigned int  size(1) Largest target is 16
		 -> pantalla(BANK1[16]), 


Critical Paths under _main in COMMON

    _updateScreen->_addToScreen
    _init_LCD->_entryModeSet
    _functionSet->_setData
    _entryModeSet->_setData
    _displayONOFF->_setData
    _clearDisplay->_setData
    _checkCount->_leerEntradas
    _checkCount->_sumaPuntos
    _leerEntradas->_checkColission_L
    _leerEntradas->_checkColission_R
    _drawFigure->_memset
    _checkColission_D->_drawBground
    _checkBottom->_drawBground
    _rand->___lmul

Critical Paths under _Timer0_ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_checkCount
    _updateScreen->_addToScreen
    _updateScreen->_setFilas
    _init_LCD->_functionSet
    _checkCount->_checkColission_D
    _perdio->___awmod
    _leerEntradas->_gire
    _checkColission_D->___awmod
    _checkBottom->___awmod
    _rand->___lmul
    ___awmod->_rand

Critical Paths under _Timer0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer0_ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     5      4   11084
                                             33 BANK0      9     5      4
                            ___awmod
                         _checkCount
                           _init_LCD
                         _init_pines
                         _init_timer
                               _rand
                              _srand
                       _updateScreen
 ---------------------------------------------------------------------------------
 (1) _updateScreen                                         7     7      0     590
                                              2 BANK0      7     7      0
                        _addToScreen
                           _setFilas
                    _shiftBitColumna
 ---------------------------------------------------------------------------------
 (2) _shiftBitColumna                                      2     2      0      22
                                              2 COMMON     2     2      0
                     _latchClock_Col
                     _latchClock_Fil
                     _shiftClock_Col
 ---------------------------------------------------------------------------------
 (3) _shiftClock_Col                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _latchClock_Fil                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _latchClock_Col                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setFilas                                            10     8      2     265
                                              2 COMMON     8     6      2
                                              0 BANK0      2     2      0
                     _shiftClock_Fil
 ---------------------------------------------------------------------------------
 (3) _shiftClock_Fil                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _addToScreen                                         11    11      0     113
                                              2 COMMON     9     9      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_pines                                           0     0      0       0
                     _init_pines_LCD
                     _init_pines_col
                     _init_pines_fil
                      _init_pines_in
 ---------------------------------------------------------------------------------
 (2) _init_pines_in                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_pines_fil                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_pines_col                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_pines_LCD                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_LCD                                            11    11      0    2334
                                              8 BANK0     11    11      0
                       _clearDisplay
                       _displayONOFF
                       _entryModeSet
                        _functionSet
 ---------------------------------------------------------------------------------
 (2) _functionSet                                         11     9      2     968
                                              5 COMMON     3     1      2
                                              0 BANK0      8     8      0
                            _clearRS
                            _clearRW
                            _setData
 ---------------------------------------------------------------------------------
 (2) _entryModeSet                                         6     5      1     366
                                              5 COMMON     6     5      1
                            _clearRS
                            _clearRW
                            _setData
 ---------------------------------------------------------------------------------
 (2) _displayONOFF                                         9     7      2     640
                                              5 COMMON     3     1      2
                                              0 BANK0      6     6      0
                            _clearRS
                            _clearRW
                            _setData
 ---------------------------------------------------------------------------------
 (2) _clearDisplay                                         2     2      0     176
                                              5 COMMON     2     2      0
                            _clearRS
                            _clearRW
                            _setData
 ---------------------------------------------------------------------------------
 (3) _setData                                              3     3      0     176
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _clearRW                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clearRS                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkCount                                           5     5      0    6912
                                             28 BANK0      5     5      0
                        _checkBottom
                   _checkColission_D
                         _drawFigure
                       _leerEntradas
                             _perdio
                         _sumaPuntos
 ---------------------------------------------------------------------------------
 (2) _sumaPuntos                                           9     9      0     184
                                              2 COMMON     9     9      0
 ---------------------------------------------------------------------------------
 (2) _perdio                                               5     5      0    1868
                                             18 BANK0      5     5      0
                            ___awmod
                             _memset
                               _rand
 ---------------------------------------------------------------------------------
 (2) _leerEntradas                                         1     1      0    1616
                                             10 COMMON     1     1      0
                   _checkColission_L
                   _checkColission_R
                         _checkRight
                         _drawFigure
                               _gire
 ---------------------------------------------------------------------------------
 (3) _gire                                                16    16      0     827
                                              2 COMMON     5     5      0
                                              0 BANK0     11    11      0
 ---------------------------------------------------------------------------------
 (3) _drawFigure                                           5     5      0     651
                                              0 BANK0      5     5      0
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               7     3      4     651
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) _checkRight                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _checkColission_R                                    10    10      0      69
                                              2 COMMON     8     8      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _checkColission_L                                    10    10      0      69
                                              2 COMMON     8     8      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _checkColission_D                                    10    10      0    1330
                                             18 BANK0     10    10      0
                            ___awmod
                        _drawBground
                               _rand
 ---------------------------------------------------------------------------------
 (2) _checkBottom                                          1     1      0    1261
                                             18 BANK0      1     1      0
                            ___awmod
                        _drawBground
                               _rand
 ---------------------------------------------------------------------------------
 (1) _rand                                                 7     5      2     244
                                              4 BANK0      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     244
                                              2 COMMON     9     1      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _drawBground                                         11    11      0     113
                                              2 COMMON     9     9      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     904
                                             11 BANK0      7     3      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Timer0_ISR                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awmod
     _rand (ARG)
       ___lmul
   _checkCount
     _checkBottom
       ___awmod
         _rand (ARG)
           ___lmul
       _drawBground
       _rand
         ___lmul
     _checkColission_D
       ___awmod
         _rand (ARG)
           ___lmul
       _drawBground
       _rand
         ___lmul
     _drawFigure
       _memset
     _leerEntradas
       _checkColission_L
       _checkColission_R
       _checkRight
       _drawFigure
         _memset
       _gire
     _perdio
       ___awmod
         _rand (ARG)
           ___lmul
       _memset
       _rand
         ___lmul
     _sumaPuntos
   _init_LCD
     _clearDisplay
       _clearRS
       _clearRW
       _setData
     _displayONOFF
       _clearRS
       _clearRW
       _setData
     _entryModeSet
       _clearRS
       _clearRW
       _setData
     _functionSet
       _clearRS
       _clearRW
       _setData
   _init_pines
     _init_pines_LCD
     _init_pines_col
     _init_pines_fil
     _init_pines_in
   _init_timer
   _rand
     ___lmul
   _srand
   _updateScreen
     _addToScreen
     _setFilas
       _shiftClock_Fil
     _shiftBitColumna
       _latchClock_Col
       _latchClock_Fil
       _shiftClock_Col

 _Timer0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               55      0       0       9        0.0%
BITBANK3            55      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      3C       7       75.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2A      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               D      B       B       1       84.6%
BITCOMMON            D      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      97      12        0.0%
ABS                  0      0      97       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri May 15 15:04:50 2020

                        pc 0002              functionSet@DL 0020                __CFG_CP$OFF 0000  
         _entryModeSet$749 0079              ?_displayONOFF 0076                         l42 0E16  
                       l51 0E6D                         l45 0F04                         l39 0E95  
                       l48 0E4C                         l57 0E5A               drawBground@i 0020  
                       fsr 0004           ??_init_pines_LCD 0073           ??_init_pines_col 0073  
         ??_init_pines_fil 0073                        l132 07D0                        l301 0127  
                      l213 043F                        l223 0FFF                        l136 02E2  
                      l160 0E22                        l250 0E3F                        l226 06B0  
                      l146 0331                        l218 0055                        l163 0E1C  
                      l260 008B                        l253 0506                        l246 0F55  
                      l270 0295                        l350 01FD                        l326 0592  
                      l263 0099                        l175 0E10                        l168 01B5  
                      l257 051B                        l329 0EAF                        l178 0014  
                      l186 0ECB                        l267 027F                        l371 0E03  
                      l339 0FBE                        l293 04A5                        l365 016E  
                      l377 0E07                        l386 0613                        l638 03DC  
                      l486 0249                        l920 0F24                        l925 0E33  
                      l928 00E0               __CFG_CPD$OFF 0000                        u900 020C  
                      u901 020B                        u911 0217                        u912 021E  
                      u913 0225                        u940 023F                        u941 023E  
                      u925 0227                        u950 00D8                        u935 022F  
                      u890 0F24                        u955 00D3                        u891 0F23  
                      u965 06CA                        u990 070F                        u974 06DE  
                      u991 070E                        u975 06DC                        u984 06F1  
                      u985 06EF                        u995 070B                        _con 0046  
                      fsr0 0004                        indf 0000               ___awmod@sign 0031  
             __CFG_FOSC$XT 0000            functionSet@data 0027               __CFG_LVP$OFF 0000  
                     l2000 02D2                       l2010 0F25                       l2012 0F2C  
                     l2020 04A6                       l2004 02DD                       l2100 0EC6  
                     l2014 0F31                       l2030 04E1                       l2022 04A6  
                     l2110 0042                       l2102 0015                       l2016 0F37  
                     l2032 04E5                       l2024 04B0                       l2120 0139  
                     l2200 0E51                       l2112 0048                       l2018 0F3B  
                     l2026 04D6                       l2034 0500                       l2050 0492  
                     l2042 0446                       l2130 0151                       l2122 013E  
                     l2114 012B                       l2210 0E58                       l2202 0E52  
                     l2028 04DB                       l2052 0498                       l2044 0457  
                     l2036 0440                       l2140 0168                       l2132 0155  
                     l2124 0143                       l2116 012F                       l2220 0521  
                     l2212 0E59                       l2204 0E53                       l2108 001B  
                     l2300 0432                       l2046 0471                       l2070 0101  
                     l2062 00E7                       l2054 00E1                       l2150 01CC  
                     l2142 01B9                       l2134 015A                       l2126 0149  
                     l2118 0134                       l2230 0538                       l2222 0521  
                     l2214 051C                       l2206 0E56                       l2310 0341  
                     l2302 0332                       l2048 0477                       l2072 0107  
                     l2056 00E3                       l2160 01E3                       l2152 01D1  
                     l2144 01BD                       l2136 015D                       l2128 014E  
                     l2240 0563                       l2232 0543                       l2224 0521  
                     l2216 0520                       l2208 0E57                       l2080 016F  
                     l2320 034E                       l2312 0341                       l2304 0337  
                     l2162 01F0                       l2154 01D7                       l2146 01C2  
                     l2170 0F8B                       l2138 0161                       l2250 0588  
                     l2242 056C                       l2234 054B                       l2226 0521  
                     l2218 0520                       l2090 01AC                       l2082 0175  
                     l2322 0357                       l2314 0344                       l2306 033C  
                     l1700 01FE                       l2076 0114                       l2068 00E9  
                     l2260 02F2                       l2164 01F6                       l2156 01DC  
                     l2148 01C7                       l2180 0FA1                       l2172 0F8F  
                     l2244 0574                       l2236 0553                       l2228 0530  
                     l2252 0E2B                       l2324 0373                       l2316 0348  
                     l2308 0341                       l1710 023F                       l1702 0208  
                     l2078 011A                       l2270 031D                       l2262 0305  
                     l2254 02E3                       l2166 0E96                       l2158 01DF  
                     l2182 0FA5                       l2174 0F94                       l2246 057C  
                     l2238 055B                       l2190 0E86                       l2086 0183  
                     l2094 0EB1                       l2326 0378                       l2318 034C  
                     l1704 020C                       l1800 0614                       l2272 0322  
                     l2264 030D                       l2256 02EA                       l2168 0EA0  
                     l2184 0FB1                       l2176 0F99                       l2248 0581  
                     l2192 0E8B                       l2088 01A7                       l2096 0EBC  
                     l2280 03E0                       l1706 0225                       l1714 009A  
                     l1810 0056                       l1802 0621                       l1722 06B1  
                     l2274 0327                       l2266 0312                       l2258 02ED  
                     l2186 0FB7                       l2178 0F9E                       l2194 0E90  
                     l2098 0EC1                       l2290 03F1                       l2282 03E5  
                     l1900 03B1                       l1708 022E                       l1716 00BB  
                     l1820 0085                       l1812 0056                       l1804 0647  
                     l1740 06C5                       l1724 06B7                       l2276 032C  
                     l2268 0318                       l2188 0E81                       l2196 0E4D  
                     l2292 0407                       l1910 03D3                       l1902 03BB  
                     l1718 00C9                       l1822 0098                       l1814 0060  
                     l1806 066A                       l1750 0725                       l1742 06FC  
                     l1734 06C1                       l1726 06BF                       l2198 0E50  
                     l2294 040E                       l2278 03E0                       l1912 03D8  
                     l1904 03C1                       l1840 0254                       l1816 0083  
                     l1832 0E3E                       l1808 068D                       l1760 0734  
                     l1744 0702                       l1728 06BF                       l1920 0EED  
                     l2296 0424                       l2288 03E9                       l1906 03C8  
                     l1842 0277                       l1826 0E34                       l1770 074D  
                     l1762 073B                       l1746 070F                       l1930 0EF2  
                     l1922 0EEE                       l2298 042A                       l1908 03CE  
                     l1860 0FBF                       l1836 024A                       l1828 0E3C  
                     l1692 0F06                       l1772 0753                       l1756 0729  
                     l1780 077D                       l1748 0717                       l1940 0EF7  
                     l1932 0EF3                       l1924 0EEF                       l1916 0EE8  
                     l1852 0E1D                       l1870 0FF2                       l1846 0279  
                     l1838 024A                       l1694 0F0B                       l1782 078C  
                     l1774 0760                       l1950 0EFE                       l1942 0EFA  
                     l1934 0EF4                       l1926 0EF0                       l1918 0EEC  
                     l1854 0E17                       l1880 0385                       l1848 0294  
                     l1696 0F12                       l1784 0794                       l1776 0768  
                     l1768 073D                       l1872 0E00                       l1960 0F03  
                     l1952 0EFF                       l1944 0EFB                       l1936 0EF5  
                     l1928 0EF1                       l1856 0E0C                       l1890 0399  
                     l1882 0389                       l1866 0FC5                       l1698 0F16  
                     l1794 07A3                       l1786 07A0                       l1778 0775  
                     l1970 029D                       l1874 0E04                       l1954 0F00  
                     l1946 0EFC                       l1938 0EF6                       l1962 0E40  
                     l1858 000F                       l1892 039F                       l1884 038E  
                     l1868 0FEC                       l1796 07BD                       l1788 07A1  
                     l1980 02AE                       l1972 029E                       l1876 0594  
                     l1956 0F01                       l1948 0EFD                       l1964 0E5B  
                     l1894 03A2                       l1886 0390                       l1878 0382  
                     l1798 07C3                       l1982 02AF                       l1974 02A3  
                     l1958 0F02                       l1966 0E11                       l1896 03A9  
                     l1888 0394                       l1968 0296                       l1898 03AD  
                     l1986 02C0                       l1994 02C7                       l1978 02A9  
                     l1996 02CC                       l1998 02D1                       u1000 0724  
                     u1001 0723                       u1010 0733                       u1011 0732  
                     u1020 073B                       u1021 073A                       u1005 0720  
                     u1030 0760                       u1031 075F                       u1200 0277  
                     u1104 063B                       u1040 0775                       u1201 0276  
                     u1105 0638                       u1041 0774                       u1210 0294  
                     u1050 078C                       u1211 0293                       u1115 064E  
                     u1051 078B                       u1035 075C                       u1300 0394  
                     u1220 0FFF                       u1124 065E                       u1060 0794  
                     u1301 0393                       u1221 0FFE                       u1125 065B  
                     u1061 0793                       u1045 0771                       u1310 039F  
                     u1311 039E                       u1215 0290                       u1135 0671  
                     u1055 0788                       u1144 0681                       u1080 07D0  
                     u1400 02BF                       u1225 0FFB                       u1145 067E  
                     u1081 07CF                       u1401 02BE                       u1330 03B1  
                     u1170 0083                       u1410 02CC                       u1331 03B0  
                     u1171 0082                       u1155 0694                       u1075 07AE  
                     u1411 02CB                       u1235 05AD                       u1340 03BB  
                     u1180 0098                       u1164 06A4                       u1420 02D1  
                     u1500 0114                       u1341 03BA                       u1325 03A3  
                     u1181 0097                       u1165 06A1                       u1085 07CC  
                     u1421 02D0                       u1501 0113                       u1245 05BF  
                     u1190 0E3C                       u1430 02DC                       u1510 0127  
                     u1191 0E3B                       u1095 062A                       u1431 02DB  
                     u1511 0126                       u1255 05D2                       u1360 03CE  
                     u1440 0F2C                       u1600 01DC                       u1520 0182  
                     u1361 03CD                       u1345 03B7                       u1441 0F2B  
                     u1185 0094                       u1505 0110                       u1265 05E3  
                     u1601 01DB                       u1521 0181                       u1370 03D3  
                     u1290 0389                       u1450 04D6                       u1610 01E9  
                     u1371 03D2                       u1355 03C2                       u1291 0388  
                     u1451 04D5                       u1515 0123                       u1275 05F5  
                     u1611 01E7                       u1460 051B                       u1380 029D  
                     u1620 01EA                       u1461 051A                       u1381 029C  
                     u1285 0605                       u1525 017E                       u1390 02AE  
                     u1470 0457                       u1630 0F9E                       u1550 0055  
                     u1534 018F                       u1391 02AD                       u1471 0456  
                     u1631 0F9D                       u1551 0054                       u1535 018C  
                     u1480 04A5                       u1640 0FAB                       u1560 013E  
                     u1544 019C                       u1465 0517                       u1481 04A4  
                     u1641 0FA9                       u1561 013D                       u1545 0199  
                     u1650 0FAC                       u1570 014E                       u1571 014D  
                     u1555 0051                       u1660 02EA                       u1580 015A  
                     u1485 04A1                       u1661 02E9                       u1581 0159  
                     u1494 00F9                       u1670 0305                       u1590 01CC  
                     u1495 00F6                       u1671 0304                       u1591 01CB  
                     u1807 055F                       u1680 03F1                       u1673 0301  
                     u1817 0570                       u1681 03F0                       u1690 043F  
                     u1827 0FB9                       u1691 043E                       u1837 01F8  
                     u1847 0EAA                       u1695 043B                       u1777 0529  
                     u1787 053E                       u1797 054F                       _TMR0 0001  
            ?_leerEntradas 0071               __CFG_WRT$OFF 0000                       _gire 06B1  
                     _main 0332                       _rand 009A                       btemp 007E  
            __CFG_BOREN$ON 0000                       start 000C       __end_of_clearDisplay 0EB0  
           ??_displayONOFF 0078         shiftBitColumna@bit 0074                      ?_gire 0071  
                    ?_main 0041                      ?_rand 0024              __CFG_WDTE$OFF 0000  
          __end_of___awmod 03DD                      i1l155 0F83       __size_of_checkBottom 0031  
          __end_of_clearRS 0E04            __end_of_clearRW 0E08        ___lmul@multiplicand 0077  
                    _ficha 0058                      _fondo 00A0                      _randx 0068  
             ?_functionSet 0076                      _srand 0E2B            __end_of_setData 0614  
                    gire@i 0029                      gire@j 0027                      gire@k 0020  
           ??_leerEntradas 007B                      pclath 000A                      status 0003  
                    wtemp0 007E            __initialization 07D1               __end_of_gire 07D1  
             __end_of_main 0382               __end_of_rand 00E1             _latchClock_Fil 0E1D  
           _latchClock_Col 0E0C    __size_of_shiftClock_Fil 0006    __size_of_shiftClock_Col 0006  
        checkColission_D@i 003A                     ??_gire 0073          checkColission_L@i 0020  
                   ??_main 0045          checkColission_R@i 0020                     ??_rand 0026  
            ?_entryModeSet 0076                     _ADCON1 009F                     ?_srand 0073  
                   i1l2330 0F5A                     i1l2340 0F75                     i1l2332 0F5B  
                   i1l2350 0F81                     i1l2342 0F76                     i1l2334 0F6B  
                   i1l2344 0F7A                     i1l2336 0F6D                     i1l2328 0F56  
                   i1l2346 0F7B                     i1l2338 0F73                     i1l2348 0F7D  
                   u170_20 0F5A                     u170_21 0F59                     u171_20 0F73  
                   u171_21 0F72                     u172_20 0F7A                     u172_21 0F79  
                   u173_20 0F81                     u173_21 0F80              displayONOFF@B 0077  
            displayONOFF@C 0076              displayONOFF@D 0020             __CFG_PWRTE$OFF 0000  
     __size_of_drawBground 0041                 _Timer0_ISR 0F56     __end_of_latchClock_Col 0E11  
   __end_of_latchClock_Fil 0E23           entryModeSet@data 007B                     ___lmul 01FE  
                ??___awmod 002F           __end_of_init_LCD 0593          ?_checkColission_D 0071  
        ?_checkColission_L 0071          ?_checkColission_R 0071                     _memset 0F05  
                   _perdio 0440                  ??_clearRS 0073                  ??_clearRW 0073  
          ___awmod@divisor 002B            ___awmod@counter 0030         ??_checkColission_D 0032  
       ??_checkColission_L 0073           __end_of_setFilas 01B6         ??_checkColission_R 0073  
             addToScreen@i 0020             ??_entryModeSet 0077     __size_of_init_pines_in 0006  
                ??_setData 0073                     saved_w 007E                     srand@x 0073  
     __end_of_displayONOFF 01FE    __end_of__initialization 07FC      __size_of_clearDisplay 001A  
            updateScreen@i 0027   __size_of_shiftBitColumna 001C         updateScreen@screen 0026  
          ?_latchClock_Col 0071            ?_latchClock_Fil 0071             __pcstackCOMMON 0071  
             __pidataBANK0 0E08               __pidataBANK1 0ECC              __end_of_srand 0E34  
     __end_of_leerEntradas 02E3             _OPTION_REGbits 0081                setData@data 0075  
             _clearDisplay 0E96                 _checkCount 02E3                    ??_srand 0075  
               _checkRight 0E34                 __pbssBANK0 0046                 __pbssBANK1 00A0  
     __size_of_functionSet 0047              ??_addToScreen 0073              _init_pines_in 0E11  
              ?_Timer0_ISR 0071                 __pmaintext 0332                    ?___lmul 0073  
               __pintentry 0004             _shiftClock_Fil 0E17             _shiftClock_Col 000F  
                  ?_memset 0073             ___lmul@product 0020                    ?_perdio 0071  
               _drawFigure 0614                  ?_init_LCD 0071             ?_init_pines_in 0071  
     __end_of_entryModeSet 0FBF                  ?_setFilas 0073     __end_of_shiftClock_Fil 0E1D  
   __end_of_shiftClock_Col 0015        __end_of_addToScreen 0056            __size_of___lmul 004C  
                  ___awmod 0382          ??_shiftBitColumna 0073              ??_checkBottom 0032  
               _init_pines 0E81                    _clearRS 0E00                    _clearRW 0E04  
               _init_timer 0E4D            __size_of_memset 0020            __size_of_perdio 0066  
                  __ptext1 03DD                    __ptext2 0EB0                    __ptext3 000F  
                  __ptext4 0E1D                    __ptext5 0E0C                    __ptext6 016F  
                  __ptext7 0E17                    __ptext8 0015                    __ptext9 0E2B  
                  _figuras 00C0           ___awmod@dividend 002D                    _setData 0593  
    __size_of_displayONOFF 0048        __size_of_Timer0_ISR 0034                    gire@aux 0023  
                  clrloop0 0E24    __size_of_init_pines_LCD 001D                ?_checkCount 0071  
              ?_checkRight 0071       end_of_initialization 07FC    __size_of_init_pines_col 0013  
  __size_of_init_pines_fil 000D                 ??_init_LCD 0028                    memset@c 0073  
                  memset@n 0075                    memset@p 0078                    perdio@i 0035  
               ??_setFilas 0075      __size_of_leerEntradas 004D              sumaPuntos@aux 0077  
          ?_shiftClock_Col 0071            ?_shiftClock_Fil 0071            _functionSet$762 0021  
          _functionSet$763 0023            _functionSet$764 0025                 _timerCount 0054  
             _displayONOFF 01B6                  _PORTAbits 0005                  _PORTBbits 0006  
                _PORTCbits 0007                  _PORTDbits 0008                  _PORTEbits 0009  
         displayONOFF@data 0025                ?_drawFigure 0071                  _TRISAbits 0085  
                _TRISBbits 0086        __end_of_checkBottom 0F56                  _TRISCbits 0087  
                _TRISDbits 0088                  _TRISEbits 0089               functionSet@F 0077  
             functionSet@N 0076  __size_of_checkColission_D 0076  __size_of_checkColission_L 004C  
__size_of_checkColission_R 0044            ??_init_pines_in 0073                 _sumaPuntos 00E1  
             _leerEntradas 0296              ??_drawBground 0073           ??_latchClock_Col 0073  
         ??_latchClock_Fil 0073                _addToScreen 0015              ?_updateScreen 0071  
           __end_of___lmul 024A        __size_of_checkCount 004F                ?_init_pines 0071  
      __size_of_checkRight 000C             entryModeSet@ID 0078                ?_init_timer 0071  
           entryModeSet@SH 0076             __end_of_memset 0F25             __end_of_perdio 04A6  
      start_initialization 07D1      __size_of_entryModeSet 0035             ??_updateScreen 0022  
             ??_Timer0_ISR 0071        __size_of_drawFigure 009D        __end_of_drawBground 1000  
                 ??___lmul 007B          setFilas@reg_value 0073                 init_fetch0 0E6E  
              __pdataBANK0 0068                __pdataBANK1 00C0                   ??_memset 0077  
                 ??_perdio 0032                sumaPuntos@i 0078                sumaPuntos@j 007A  
              _checkBottom 0F25               _entryModeSet 0F8A                  ___latbits 0002  
            __pcstackBANK0 0020         __end_of_Timer0_ISR 0F8A             _init_pines_LCD 0EE8  
            ??_functionSet 0078             _init_pines_fil 0E40             _init_pines_col 0E5B  
              ?_sumaPuntos 0071        __size_of_init_pines 0015            _shiftBitColumna 0EB0  
      __size_of_init_timer 000E           _displayONOFF$755 0021           _displayONOFF$756 0023  
        __size_of_init_LCD 0077          __size_of_setFilas 0047                   ?___awmod 002B  
                 ?_clearRS 0071                   ?_clearRW 0071                   ?_setData 0071  
   __end_of_init_pines_LCD 0F05     __end_of_init_pines_col 0E6E     __end_of_init_pines_fil 0E4D  
             ??_checkCount 003C           _checkColission_D 04A6           _checkColission_L 024A  
         _checkColission_R 0056               ??_checkRight 0073             __size_of_srand 0009  
        interrupt_function 0004                _drawBground 0FBF           ??_shiftClock_Col 0073  
         ??_shiftClock_Fil 0073                  clear_ram0 0E23        __end_of_functionSet 016F  
                gire@F1224 0050         __end_of_checkCount 0332        __size_of_sumaPuntos 0047  
       __end_of_checkRight 0E40               ??_drawFigure 0020       __end_of_updateScreen 0440  
          ?_init_pines_LCD 0071            ?_init_pines_col 0071            ?_init_pines_fil 0071  
  __end_of_shiftBitColumna 0ECC          ___lmul@multiplier 0073               ?_addToScreen 0071  
                init_LCD@N 002C                  init_LCD@S 002F                checkCount@j 003F  
       __end_of_drawFigure 06B1           __size_of___awmod 005B               ??_init_pines 0073  
             ??_init_timer 0073           __size_of_clearRS 0004           __size_of_clearRW 0004  
                setFilas@i 0020           __size_of_setData 0081              ?_clearDisplay 0071  
                 __ptext10 0E4D                   __ptext11 0E81                   __ptext20 0E96  
                 __ptext12 0E11                   __ptext21 0593                   __ptext13 0E40  
                 __ptext30 0F05                   __ptext22 0E04                   __ptext14 0E5B  
                 __ptext31 0E34                   __ptext23 0E00                   __ptext15 0EE8  
                 __ptext40 0F56                   __ptext32 0056                   __ptext24 02E3  
                 __ptext16 051C                   __ptext33 024A                   __ptext25 00E1  
                 __ptext17 0128                   __ptext34 04A6                   __ptext26 0440  
                 __ptext18 0F8A                   __ptext35 0F25                   __ptext27 0296  
                 __ptext19 01B6                   __ptext36 009A                   __ptext28 06B1  
                 __ptext37 01FE                   __ptext29 0614                   __ptext38 0FBF  
                 __ptext39 0382                _functionSet 0128                   _init_LCD 051C  
    __end_of_init_pines_in 0E17              __size_of_gire 0120              __size_of_main 0050  
            __size_of_rand 0047         __end_of_init_pines 0E96         __end_of_init_timer 0E5B  
                 _pantalla 00B0                   _setFilas 016F                   gire@mask 0022  
                 main@argc 0041                   main@argv 0043               ?_checkBottom 0071  
               _INTCONbits 000B             ??_clearDisplay 0076                   init_ram0 0E72  
                 memset@p1 0079           ?_shiftBitColumna 0071               ??_sumaPuntos 0073  
                 intlevel1 0000   __end_of_checkColission_D 051C   __end_of_checkColission_L 0296  
 __end_of_checkColission_R 009A    __size_of_latchClock_Col 0005    __size_of_latchClock_Fil 0006  
    __size_of_updateScreen 0063         __end_of_sumaPuntos 0128               ?_drawBground 0071  
     __size_of_addToScreen 0041               _updateScreen 03DD  
