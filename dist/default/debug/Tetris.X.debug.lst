

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat May 02 23:19:29 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.10
    41                           ; Generated 31/07/2019 GMT
    42                           ; 
    43                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F877A Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  000E                     	;# 
    90  000F                     	;# 
    91  0010                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0015                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  001D                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  0081                     	;# 
   110  0085                     	;# 
   111  0086                     	;# 
   112  0087                     	;# 
   113  0088                     	;# 
   114  0089                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0094                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009C                     	;# 
   185  009D                     	;# 
   186  009E                     	;# 
   187  009F                     	;# 
   188  010C                     	;# 
   189  010D                     	;# 
   190  010E                     	;# 
   191  010F                     	;# 
   192  018C                     	;# 
   193  018D                     	;# 
   194  0000                     	;# 
   195  0001                     	;# 
   196  0002                     	;# 
   197  0003                     	;# 
   198  0004                     	;# 
   199  0005                     	;# 
   200  0006                     	;# 
   201  0007                     	;# 
   202  0008                     	;# 
   203  0009                     	;# 
   204  000A                     	;# 
   205  000B                     	;# 
   206  000C                     	;# 
   207  000D                     	;# 
   208  000E                     	;# 
   209  000E                     	;# 
   210  000F                     	;# 
   211  0010                     	;# 
   212  0011                     	;# 
   213  0012                     	;# 
   214  0013                     	;# 
   215  0014                     	;# 
   216  0015                     	;# 
   217  0015                     	;# 
   218  0016                     	;# 
   219  0017                     	;# 
   220  0018                     	;# 
   221  0019                     	;# 
   222  001A                     	;# 
   223  001B                     	;# 
   224  001B                     	;# 
   225  001C                     	;# 
   226  001D                     	;# 
   227  001E                     	;# 
   228  001F                     	;# 
   229  0081                     	;# 
   230  0085                     	;# 
   231  0086                     	;# 
   232  0087                     	;# 
   233  0088                     	;# 
   234  0089                     	;# 
   235  008C                     	;# 
   236  008D                     	;# 
   237  008E                     	;# 
   238  0091                     	;# 
   239  0092                     	;# 
   240  0093                     	;# 
   241  0094                     	;# 
   242  0098                     	;# 
   243  0099                     	;# 
   244  009C                     	;# 
   245  009D                     	;# 
   246  009E                     	;# 
   247  009F                     	;# 
   248  010C                     	;# 
   249  010D                     	;# 
   250  010E                     	;# 
   251  010F                     	;# 
   252  018C                     	;# 
   253  018D                     	;# 
   254  0000                     	;# 
   255  0001                     	;# 
   256  0002                     	;# 
   257  0003                     	;# 
   258  0004                     	;# 
   259  0005                     	;# 
   260  0006                     	;# 
   261  0007                     	;# 
   262  0008                     	;# 
   263  0009                     	;# 
   264  000A                     	;# 
   265  000B                     	;# 
   266  000C                     	;# 
   267  000D                     	;# 
   268  000E                     	;# 
   269  000E                     	;# 
   270  000F                     	;# 
   271  0010                     	;# 
   272  0011                     	;# 
   273  0012                     	;# 
   274  0013                     	;# 
   275  0014                     	;# 
   276  0015                     	;# 
   277  0015                     	;# 
   278  0016                     	;# 
   279  0017                     	;# 
   280  0018                     	;# 
   281  0019                     	;# 
   282  001A                     	;# 
   283  001B                     	;# 
   284  001B                     	;# 
   285  001C                     	;# 
   286  001D                     	;# 
   287  001E                     	;# 
   288  001F                     	;# 
   289  0081                     	;# 
   290  0085                     	;# 
   291  0086                     	;# 
   292  0087                     	;# 
   293  0088                     	;# 
   294  0089                     	;# 
   295  008C                     	;# 
   296  008D                     	;# 
   297  008E                     	;# 
   298  0091                     	;# 
   299  0092                     	;# 
   300  0093                     	;# 
   301  0094                     	;# 
   302  0098                     	;# 
   303  0099                     	;# 
   304  009C                     	;# 
   305  009D                     	;# 
   306  009E                     	;# 
   307  009F                     	;# 
   308  010C                     	;# 
   309  010D                     	;# 
   310  010E                     	;# 
   311  010F                     	;# 
   312  018C                     	;# 
   313  018D                     	;# 
   314  0000                     	;# 
   315  0001                     	;# 
   316  0002                     	;# 
   317  0003                     	;# 
   318  0004                     	;# 
   319  0005                     	;# 
   320  0006                     	;# 
   321  0007                     	;# 
   322  0008                     	;# 
   323  0009                     	;# 
   324  000A                     	;# 
   325  000B                     	;# 
   326  000C                     	;# 
   327  000D                     	;# 
   328  000E                     	;# 
   329  000E                     	;# 
   330  000F                     	;# 
   331  0010                     	;# 
   332  0011                     	;# 
   333  0012                     	;# 
   334  0013                     	;# 
   335  0014                     	;# 
   336  0015                     	;# 
   337  0015                     	;# 
   338  0016                     	;# 
   339  0017                     	;# 
   340  0018                     	;# 
   341  0019                     	;# 
   342  001A                     	;# 
   343  001B                     	;# 
   344  001B                     	;# 
   345  001C                     	;# 
   346  001D                     	;# 
   347  001E                     	;# 
   348  001F                     	;# 
   349  0081                     	;# 
   350  0085                     	;# 
   351  0086                     	;# 
   352  0087                     	;# 
   353  0088                     	;# 
   354  0089                     	;# 
   355  008C                     	;# 
   356  008D                     	;# 
   357  008E                     	;# 
   358  0091                     	;# 
   359  0092                     	;# 
   360  0093                     	;# 
   361  0094                     	;# 
   362  0098                     	;# 
   363  0099                     	;# 
   364  009C                     	;# 
   365  009D                     	;# 
   366  009E                     	;# 
   367  009F                     	;# 
   368  010C                     	;# 
   369  010D                     	;# 
   370  010E                     	;# 
   371  010F                     	;# 
   372  018C                     	;# 
   373  018D                     	;# 
   374  0000                     	;# 
   375  0001                     	;# 
   376  0002                     	;# 
   377  0003                     	;# 
   378  0004                     	;# 
   379  0005                     	;# 
   380  0006                     	;# 
   381  0007                     	;# 
   382  0008                     	;# 
   383  0009                     	;# 
   384  000A                     	;# 
   385  000B                     	;# 
   386  000C                     	;# 
   387  000D                     	;# 
   388  000E                     	;# 
   389  000E                     	;# 
   390  000F                     	;# 
   391  0010                     	;# 
   392  0011                     	;# 
   393  0012                     	;# 
   394  0013                     	;# 
   395  0014                     	;# 
   396  0015                     	;# 
   397  0015                     	;# 
   398  0016                     	;# 
   399  0017                     	;# 
   400  0018                     	;# 
   401  0019                     	;# 
   402  001A                     	;# 
   403  001B                     	;# 
   404  001B                     	;# 
   405  001C                     	;# 
   406  001D                     	;# 
   407  001E                     	;# 
   408  001F                     	;# 
   409  0081                     	;# 
   410  0085                     	;# 
   411  0086                     	;# 
   412  0087                     	;# 
   413  0088                     	;# 
   414  0089                     	;# 
   415  008C                     	;# 
   416  008D                     	;# 
   417  008E                     	;# 
   418  0091                     	;# 
   419  0092                     	;# 
   420  0093                     	;# 
   421  0094                     	;# 
   422  0098                     	;# 
   423  0099                     	;# 
   424  009C                     	;# 
   425  009D                     	;# 
   426  009E                     	;# 
   427  009F                     	;# 
   428  010C                     	;# 
   429  010D                     	;# 
   430  010E                     	;# 
   431  010F                     	;# 
   432  018C                     	;# 
   433  018D                     	;# 
   434  0000                     	;# 
   435  0001                     	;# 
   436  0002                     	;# 
   437  0003                     	;# 
   438  0004                     	;# 
   439  0005                     	;# 
   440  0006                     	;# 
   441  0007                     	;# 
   442  0008                     	;# 
   443  0009                     	;# 
   444  000A                     	;# 
   445  000B                     	;# 
   446  000C                     	;# 
   447  000D                     	;# 
   448  000E                     	;# 
   449  000E                     	;# 
   450  000F                     	;# 
   451  0010                     	;# 
   452  0011                     	;# 
   453  0012                     	;# 
   454  0013                     	;# 
   455  0014                     	;# 
   456  0015                     	;# 
   457  0015                     	;# 
   458  0016                     	;# 
   459  0017                     	;# 
   460  0018                     	;# 
   461  0019                     	;# 
   462  001A                     	;# 
   463  001B                     	;# 
   464  001B                     	;# 
   465  001C                     	;# 
   466  001D                     	;# 
   467  001E                     	;# 
   468  001F                     	;# 
   469  0081                     	;# 
   470  0085                     	;# 
   471  0086                     	;# 
   472  0087                     	;# 
   473  0088                     	;# 
   474  0089                     	;# 
   475  008C                     	;# 
   476  008D                     	;# 
   477  008E                     	;# 
   478  0091                     	;# 
   479  0092                     	;# 
   480  0093                     	;# 
   481  0094                     	;# 
   482  0098                     	;# 
   483  0099                     	;# 
   484  009C                     	;# 
   485  009D                     	;# 
   486  009E                     	;# 
   487  009F                     	;# 
   488  010C                     	;# 
   489  010D                     	;# 
   490  010E                     	;# 
   491  010F                     	;# 
   492  018C                     	;# 
   493  018D                     	;# 
   494                           
   495                           	psect	idataBANK0
   496  0313                     __pidataBANK0:	
   497                           
   498                           ;initializer for _randx
   499  0313  3401               	retlw	1
   500  0314  3400               	retlw	0
   501  0315  3400               	retlw	0
   502  0316  3400               	retlw	0
   503                           
   504                           	psect	idataBANK1
   505  0454                     __pidataBANK1:	
   506                           
   507                           ;initializer for _figuras
   508  0454  3402               	retlw	2
   509  0455  3400               	retlw	0
   510  0456  3402               	retlw	2
   511  0457  3400               	retlw	0
   512  0458  3403               	retlw	3
   513  0459  3400               	retlw	0
   514  045A  3400               	retlw	0
   515  045B  3400               	retlw	0
   516  045C  3400               	retlw	0
   517  045D  3400               	retlw	0
   518  045E  3403               	retlw	3
   519  045F  3400               	retlw	0
   520  0460  3402               	retlw	2
   521  0461  3400               	retlw	0
   522  0462  3402               	retlw	2
   523  0463  3400               	retlw	0
   524  0464  3401               	retlw	1
   525  0465  3400               	retlw	0
   526  0466  3403               	retlw	3
   527  0467  3400               	retlw	0
   528  0468  3402               	retlw	2
   529  0469  3400               	retlw	0
   530  046A  3400               	retlw	0
   531  046B  3400               	retlw	0
   532  046C  3400               	retlw	0
   533  046D  3400               	retlw	0
   534  046E  3402               	retlw	2
   535  046F  3400               	retlw	0
   536  0470  3403               	retlw	3
   537  0471  3400               	retlw	0
   538  0472  3401               	retlw	1
   539  0473  3400               	retlw	0
   540  0474  3401               	retlw	1
   541  0475  3400               	retlw	0
   542  0476  3401               	retlw	1
   543  0477  3400               	retlw	0
   544  0478  3401               	retlw	1
   545  0479  3400               	retlw	0
   546  047A  3401               	retlw	1
   547  047B  3400               	retlw	0
   548  047C  3400               	retlw	0
   549  047D  3400               	retlw	0
   550  047E  3403               	retlw	3
   551  047F  3400               	retlw	0
   552  0480  3403               	retlw	3
   553  0481  3400               	retlw	0
   554  0482  3400               	retlw	0
   555  0483  3400               	retlw	0
   556  0001                     _TMR0	set	1
   557  000B                     _INTCONbits	set	11
   558  0008                     _PORTDbits	set	8
   559  0007                     _PORTCbits	set	7
   560  0006                     _PORTBbits	set	6
   561  0081                     _OPTION_REGbits	set	129
   562  0088                     _TRISDbits	set	136
   563  0087                     _TRISCbits	set	135
   564  0086                     _TRISBbits	set	134
   565                           
   566                           ; #config settings
   567  0000                     
   568                           	psect	cinit
   569  07D1                     start_initialization:	
   570  07D1                     __initialization:	
   571                           
   572                           ; Initialize objects allocated to BANK1
   573  07D1  1383               	bcf	3,7	;select IRP bank0
   574  07D2  30D0               	movlw	low (__pdataBANK1+48)
   575  07D3  00FD               	movwf	btemp+-1
   576  07D4  3004               	movlw	high __pidataBANK1
   577  07D5  00FE               	movwf	btemp
   578  07D6  3054               	movlw	low __pidataBANK1
   579  07D7  00FF               	movwf	btemp+1
   580  07D8  30A0               	movlw	low __pdataBANK1
   581  07D9  0084               	movwf	4
   582  07DA  120A  118A  238B  120A  118A  	fcall	init_ram0
   583                           
   584                           ; Initialize objects allocated to BANK0
   585  07DF  3064               	movlw	low (__pdataBANK0+4)
   586  07E0  00FD               	movwf	btemp+-1
   587  07E1  3003               	movlw	high __pidataBANK0
   588  07E2  00FE               	movwf	btemp
   589  07E3  3013               	movlw	low __pidataBANK0
   590  07E4  00FF               	movwf	btemp+1
   591  07E5  3060               	movlw	low __pdataBANK0
   592  07E6  0084               	movwf	4
   593  07E7  120A  118A  238B  120A  118A  	fcall	init_ram0
   594                           
   595                           ; Clear objects allocated to BANK1
   596  07EC  30D0               	movlw	low __pbssBANK1
   597  07ED  0084               	movwf	4
   598  07EE  30F0               	movlw	low (__pbssBANK1+32)
   599  07EF  120A  118A  2336  120A  118A  	fcall	clear_ram0
   600                           
   601                           ; Clear objects allocated to BANK0
   602  07F4  3045               	movlw	low __pbssBANK0
   603  07F5  0084               	movwf	4
   604  07F6  3060               	movlw	low (__pbssBANK0+27)
   605  07F7  120A  118A  2336  120A  118A  	fcall	clear_ram0
   606  07FC                     end_of_initialization:	
   607                           ;End of C runtime variable initialization code
   608                           
   609  07FC                     __end_of__initialization:	
   610  07FC  0183               	clrf	3
   611  07FD  120A  118A  2C25   	ljmp	_main	;jump to C main() function
   612                           
   613                           	psect	bssBANK0
   614  0045                     __pbssBANK0:	
   615  0045                     _fondo:	
   616  0045                     	ds	16
   617  0055                     _con:	
   618  0055                     	ds	9
   619  005E                     _timerCount:	
   620  005E                     	ds	2
   621                           
   622                           	psect	dataBANK0
   623  0060                     __pdataBANK0:	
   624  0060                     _randx:	
   625  0060                     	ds	4
   626                           
   627                           	psect	bssBANK1
   628  00D0                     __pbssBANK1:	
   629  00D0                     _ficha:	
   630  00D0                     	ds	16
   631  00E0                     _pantalla:	
   632  00E0                     	ds	16
   633                           
   634                           	psect	dataBANK1
   635  00A0                     __pdataBANK1:	
   636  00A0                     _figuras:	
   637  00A0                     	ds	48
   638                           
   639                           	psect	inittext
   640  0387                     init_fetch0:	
   641                           ;	Called with low address in FSR and high address in W
   642                           
   643  0387  087E               	movf	btemp,w
   644  0388  008A               	movwf	10
   645  0389  087F               	movf	btemp+1,w
   646  038A  0082               	movwf	2
   647  038B                     init_ram0:	
   648                           ;Called with:
   649                           ;	high address of idata address in btemp 
   650                           ;	low address of idata address in btemp+1 
   651                           ;	low address of data in FSR
   652                           ;	high address + 1 of data in btemp-1
   653                           
   654  038B  120A  118A  2387  120A  118A  	fcall	init_fetch0
   655  0390  0080               	movwf	0
   656  0391  0A84               	incf	4,f
   657  0392  0804               	movf	4,w
   658  0393  067D               	xorwf	btemp+-1,w
   659  0394  1903               	btfsc	3,2
   660  0395  3400               	retlw	0
   661  0396  0AFF               	incf	btemp+1,f
   662  0397  1903               	btfsc	3,2
   663  0398  0AFE               	incf	btemp,f
   664  0399  2B8B               	goto	init_ram0
   665                           
   666                           	psect	clrtext
   667  0336                     clear_ram0:	
   668                           ;	Called with FSR containing the base address, and
   669                           ;	W with the last address+1
   670                           
   671  0336  0064               	clrwdt	;clear the watchdog before getting into this loop
   672  0337                     clrloop0:	
   673  0337  0180               	clrf	0	;clear RAM location pointed to by FSR
   674  0338  0A84               	incf	4,f	;increment pointer
   675  0339  0604               	xorwf	4,w	;XOR with final address
   676  033A  1903               	btfsc	3,2	;have we reached the end yet?
   677  033B  3400               	retlw	0	;all done for this memory range, return
   678  033C  0604               	xorwf	4,w	;XOR again to restore value
   679  033D  2B37               	goto	clrloop0	;do the next byte
   680                           
   681                           	psect	cstackCOMMON
   682  0071                     __pcstackCOMMON:	
   683  0071                     ?_drawBground:	
   684  0071                     ?_checkCount:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0071                     ?_updateScreen:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0071                     ?_drawFigure:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0071                     ?_init_pines_in:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0071                     ?_init_pines_fil:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0071                     ?_init_pines_col:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0071                     ?_init_pines:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0071                     ?_init_interrupt:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0071                     ?_init_timer:	
   709                           ; 1 bytes @ 0x0
   710                           
   711  0071                     ?_Timer0_ISR:	
   712                           ; 1 bytes @ 0x0
   713                           
   714  0071                     ??_Timer0_ISR:	
   715                           ; 1 bytes @ 0x0
   716                           
   717  0071                     ?_latchClock_Fil:	
   718                           ; 1 bytes @ 0x0
   719                           
   720  0071                     ?_shiftClock_Fil:	
   721                           ; 1 bytes @ 0x0
   722                           
   723  0071                     ?_latchClock_Col:	
   724                           ; 1 bytes @ 0x0
   725                           
   726  0071                     ?_shiftClock_Col:	
   727                           ; 1 bytes @ 0x0
   728                           
   729  0071                     ?_shiftBitColumna:	
   730                           ; 1 bytes @ 0x0
   731                           
   732                           
   733                           ; 1 bytes @ 0x0
   734  0071                     	ds	2
   735  0073                     ??_drawBground:	
   736  0073                     ?_memset:	
   737                           ; 1 bytes @ 0x2
   738                           
   739  0073                     ??_init_pines_in:	
   740                           ; 1 bytes @ 0x2
   741                           
   742  0073                     ??_init_pines_fil:	
   743                           ; 1 bytes @ 0x2
   744                           
   745  0073                     ??_init_pines_col:	
   746                           ; 1 bytes @ 0x2
   747                           
   748  0073                     ??_init_pines:	
   749                           ; 1 bytes @ 0x2
   750                           
   751  0073                     ??_init_interrupt:	
   752                           ; 1 bytes @ 0x2
   753                           
   754  0073                     ??_init_timer:	
   755                           ; 1 bytes @ 0x2
   756                           
   757  0073                     ??_latchClock_Fil:	
   758                           ; 1 bytes @ 0x2
   759                           
   760  0073                     ??_shiftClock_Fil:	
   761                           ; 1 bytes @ 0x2
   762                           
   763  0073                     ?_setFilas:	
   764                           ; 1 bytes @ 0x2
   765                           
   766  0073                     ??_latchClock_Col:	
   767                           ; 1 bytes @ 0x2
   768                           
   769  0073                     ??_shiftClock_Col:	
   770                           ; 1 bytes @ 0x2
   771                           
   772  0073                     ??_shiftBitColumna:	
   773                           ; 1 bytes @ 0x2
   774                           
   775  0073                     ?___lmul:	
   776                           ; 1 bytes @ 0x2
   777                           
   778  0073                     setFilas@reg_value:	
   779                           ; 4 bytes @ 0x2
   780                           
   781  0073                     memset@c:	
   782                           ; 2 bytes @ 0x2
   783                           
   784  0073                     ___lmul@multiplier:	
   785                           ; 2 bytes @ 0x2
   786                           
   787                           
   788                           ; 4 bytes @ 0x2
   789  0073                     	ds	1
   790  0074                     shiftBitColumna@bit:	
   791                           
   792                           ; 1 bytes @ 0x3
   793  0074                     	ds	1
   794  0075                     ??_setFilas:	
   795  0075                     memset@n:	
   796                           ; 1 bytes @ 0x4
   797                           
   798                           
   799                           ; 2 bytes @ 0x4
   800  0075                     	ds	2
   801  0077                     ??_memset:	
   802  0077                     ___lmul@multiplicand:	
   803                           ; 1 bytes @ 0x6
   804                           
   805                           
   806                           ; 4 bytes @ 0x6
   807  0077                     	ds	1
   808  0078                     memset@p1:	
   809                           
   810                           ; 1 bytes @ 0x7
   811  0078                     	ds	1
   812  0079                     memset@p:	
   813                           
   814                           ; 1 bytes @ 0x8
   815  0079                     	ds	2
   816  007B                     ??___lmul:	
   817  007B                     updateScreen@screen:	
   818                           ; 1 bytes @ 0xA
   819                           
   820                           
   821                           ; 1 bytes @ 0xA
   822  007B                     	ds	1
   823                           
   824                           	psect	cstackBANK0
   825  0020                     __pcstackBANK0:	
   826  0020                     ??_drawFigure:	
   827  0020                     setFilas@i:	
   828                           ; 1 bytes @ 0x0
   829                           
   830  0020                     ___lmul@product:	
   831                           ; 2 bytes @ 0x0
   832                           
   833                           
   834                           ; 4 bytes @ 0x0
   835  0020                     	ds	2
   836  0022                     ??_updateScreen:	
   837                           
   838                           ; 1 bytes @ 0x2
   839  0022                     	ds	2
   840  0024                     ?_rand:	
   841                           
   842                           ; 2 bytes @ 0x4
   843  0024                     	ds	2
   844  0026                     ??_rand:	
   845                           
   846                           ; 1 bytes @ 0x6
   847  0026                     	ds	5
   848  002B                     ?___awmod:	
   849  002B                     ___awmod@divisor:	
   850                           ; 2 bytes @ 0xB
   851                           
   852                           
   853                           ; 2 bytes @ 0xB
   854  002B                     	ds	2
   855  002D                     ___awmod@dividend:	
   856                           
   857                           ; 2 bytes @ 0xD
   858  002D                     	ds	2
   859  002F                     ??___awmod:	
   860                           
   861                           ; 1 bytes @ 0xF
   862  002F                     	ds	1
   863  0030                     ___awmod@counter:	
   864                           
   865                           ; 1 bytes @ 0x10
   866  0030                     	ds	1
   867  0031                     ___awmod@sign:	
   868                           
   869                           ; 1 bytes @ 0x11
   870  0031                     	ds	1
   871  0032                     ??_checkCount:	
   872                           
   873                           ; 1 bytes @ 0x12
   874  0032                     	ds	9
   875  003B                     checkCount@condicion:	
   876                           
   877                           ; 1 bytes @ 0x1B
   878  003B                     	ds	1
   879  003C                     checkCount@j:	
   880                           
   881                           ; 2 bytes @ 0x1C
   882  003C                     	ds	2
   883  003E                     checkCount@i:	
   884                           
   885                           ; 2 bytes @ 0x1E
   886  003E                     	ds	2
   887  0040                     ?_main:	
   888  0040                     main@argc:	
   889                           ; 2 bytes @ 0x20
   890                           
   891                           
   892                           ; 2 bytes @ 0x20
   893  0040                     	ds	2
   894  0042                     main@argv:	
   895                           
   896                           ; 2 bytes @ 0x22
   897  0042                     	ds	2
   898  0044                     ??_main:	
   899                           
   900                           ; 1 bytes @ 0x24
   901  0044                     	ds	1
   902                           
   903                           	psect	maintext
   904  0425                     __pmaintext:	
   905 ;;
   906 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   907 ;;
   908 ;; *************** function _main *****************
   909 ;; Defined at:
   910 ;;		line 41 in file "mainsource.c"
   911 ;; Parameters:    Size  Location     Type
   912 ;;  argc            2   32[BANK0 ] int 
   913 ;;  argv            2   34[BANK0 ] PTR PTR unsigned char 
   914 ;; Auto vars:     Size  Location     Type
   915 ;;  j               2    0        int 
   916 ;;  i               2    0        int 
   917 ;; Return value:  Size  Location     Type
   918 ;;                  2   32[BANK0 ] int 
   919 ;; Registers used:
   920 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   921 ;; Tracked objects:
   922 ;;		On entry : B00/0
   923 ;;		On exit  : 0/0
   924 ;;		Unchanged: 0/0
   925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   926 ;;      Params:         0       4       0       0       0
   927 ;;      Locals:         0       4       0       0       0
   928 ;;      Temps:          0       1       0       0       0
   929 ;;      Totals:         0       9       0       0       0
   930 ;;Total ram usage:        9 bytes
   931 ;; Hardware stack levels required when called:    4
   932 ;; This function calls:
   933 ;;		_checkCount
   934 ;;		_drawBground
   935 ;;		_init_interrupt
   936 ;;		_init_pines
   937 ;;		_init_timer
   938 ;;		_updateScreen
   939 ;; This function is called by:
   940 ;;		Startup code after reset
   941 ;; This function uses a non-reentrant model
   942 ;;
   943                           
   944                           
   945                           ;psect for function _main
   946  0425                     _main:	
   947  0425                     l1291:	
   948                           ;incstack = 0
   949                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   950                           
   951                           
   952                           ;mainsource.c: 46:     init_pines();
   953  0425  120A  118A  2364  120A  118A  	fcall	_init_pines
   954                           
   955                           ;mainsource.c: 47:     init_interrupt();
   956  042A  120A  118A  232E  120A  118A  	fcall	_init_interrupt
   957                           
   958                           ;mainsource.c: 48:     init_timer();
   959  042F  120A  118A  2356  120A  118A  	fcall	_init_timer
   960  0434                     l1293:	
   961  0434                     l1295:	
   962  0434                     l1297:	
   963                           
   964                           ;mainsource.c: 50:     con.columna = 1;
   965  0434  1283               	bcf	3,5	;RP0=0, select bank0
   966  0435  1303               	bcf	3,6	;RP1=0, select bank0
   967  0436  01D5               	clrf	_con
   968  0437  0AD5               	incf	_con,f
   969  0438                     l1299:	
   970                           
   971                           ;mainsource.c: 51:     con.ficha_Vpos = 16;
   972  0438  3010               	movlw	16
   973  0439  00C4               	movwf	??_main
   974  043A  0844               	movf	??_main,w
   975  043B  00D8               	movwf	_con+3
   976  043C                     l1301:	
   977                           
   978                           ;mainsource.c: 52:     con.ficha_Hpos = 2;
   979  043C  3002               	movlw	2
   980  043D  00C4               	movwf	??_main
   981  043E  0844               	movf	??_main,w
   982  043F  00D9               	movwf	_con+4
   983  0440                     l1303:	
   984                           
   985                           ;mainsource.c: 54:     drawBground();
   986  0440  120A  118A  23D6  120A  118A  	fcall	_drawBground
   987  0445                     l1305:	
   988                           
   989                           ;mainsource.c: 57:         checkCount();
   990  0445  120A  118A  26C7  120A  118A  	fcall	_checkCount
   991  044A                     l1307:	
   992                           
   993                           ;mainsource.c: 73:         updateScreen(pantalla);
   994  044A  30E0               	movlw	(low (_pantalla| 0))& (0+255)
   995  044B  120A  118A  2512  120A  118A  	fcall	_updateScreen
   996  0450  2C45               	goto	l1305
   997  0451  120A  118A  280C   	ljmp	start
   998  0454                     __end_of_main:	
   999                           
  1000                           	psect	text1
  1001  0512                     __ptext1:	
  1002 ;; *************** function _updateScreen *****************
  1003 ;; Defined at:
  1004 ;;		line 12 in file "screen.c"
  1005 ;; Parameters:    Size  Location     Type
  1006 ;;  screen          1    wreg     PTR unsigned int 
  1007 ;;		 -> pantalla(16), 
  1008 ;; Auto vars:     Size  Location     Type
  1009 ;;  screen          1   10[COMMON] PTR unsigned int 
  1010 ;;		 -> pantalla(16), 
  1011 ;; Return value:  Size  Location     Type
  1012 ;;                  1    wreg      void 
  1013 ;; Registers used:
  1014 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1015 ;; Tracked objects:
  1016 ;;		On entry : 0/0
  1017 ;;		On exit  : 0/0
  1018 ;;		Unchanged: 0/0
  1019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1020 ;;      Params:         0       0       0       0       0
  1021 ;;      Locals:         1       0       0       0       0
  1022 ;;      Temps:          0       4       0       0       0
  1023 ;;      Totals:         1       4       0       0       0
  1024 ;;Total ram usage:        5 bytes
  1025 ;; Hardware stack levels used:    1
  1026 ;; Hardware stack levels required when called:    3
  1027 ;; This function calls:
  1028 ;;		_setFilas
  1029 ;;		_shiftBitColumna
  1030 ;; This function is called by:
  1031 ;;		_main
  1032 ;; This function uses a non-reentrant model
  1033 ;;
  1034                           
  1035                           
  1036                           ;psect for function _updateScreen
  1037  0512                     _updateScreen:	
  1038                           
  1039                           ;incstack = 0
  1040                           ; Regs used in _updateScreen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1041                           ;updateScreen@screen stored from wreg
  1042  0512  00FB               	movwf	updateScreen@screen
  1043  0513                     l1277:	
  1044                           
  1045                           ;screen.c: 13:     if(con.columna == 9){
  1046  0513  3009               	movlw	9
  1047  0514  1283               	bcf	3,5	;RP0=0, select bank0
  1048  0515  1303               	bcf	3,6	;RP1=0, select bank0
  1049  0516  0655               	xorwf	_con,w
  1050  0517  1D03               	btfss	3,2
  1051  0518  2D1A               	goto	u851
  1052  0519  2D1B               	goto	u850
  1053  051A                     u851:	
  1054  051A  2D3B               	goto	l1285
  1055  051B                     u850:	
  1056  051B                     l1279:	
  1057                           
  1058                           ;screen.c: 14:         con.columna = 1;
  1059  051B  01D5               	clrf	_con
  1060  051C  0AD5               	incf	_con,f
  1061  051D                     l1281:	
  1062                           
  1063                           ;screen.c: 15:         setFilas(~screen[con.columna-1]);
  1064  051D  0855               	movf	_con,w
  1065  051E  00A2               	movwf	??_updateScreen
  1066  051F  0722               	addwf	??_updateScreen,w
  1067  0520  077B               	addwf	updateScreen@screen,w
  1068  0521  00A3               	movwf	??_updateScreen+1
  1069  0522  0823               	movf	??_updateScreen+1,w
  1070  0523  3EFE               	addlw	-2
  1071  0524  0084               	movwf	4
  1072  0525  1383               	bcf	3,7	;select IRP bank0
  1073  0526  0800               	movf	0,w
  1074  0527  00A4               	movwf	??_updateScreen+2
  1075  0528  0A84               	incf	4,f
  1076  0529  0800               	movf	0,w
  1077  052A  00A5               	movwf	??_updateScreen+3
  1078  052B  0924               	comf	??_updateScreen+2,w
  1079  052C  00F3               	movwf	setFilas@reg_value
  1080  052D  0925               	comf	??_updateScreen+3,w
  1081  052E  00F4               	movwf	setFilas@reg_value+1
  1082  052F  120A  118A  24CB  120A  118A  	fcall	_setFilas
  1083  0534                     l1283:	
  1084                           
  1085                           ;screen.c: 16:         shiftBitColumna(1);
  1086  0534  3001               	movlw	1
  1087  0535  120A  118A  239A  120A  118A  	fcall	_shiftBitColumna
  1088                           
  1089                           ;screen.c: 17:     }
  1090  053A  2D5C               	goto	l154
  1091  053B                     l1285:	
  1092                           
  1093                           ;screen.c: 19:         con.columna++;
  1094  053B  3001               	movlw	1
  1095  053C  00A2               	movwf	??_updateScreen
  1096  053D  0822               	movf	??_updateScreen,w
  1097  053E  07D5               	addwf	_con,f
  1098  053F                     l1287:	
  1099                           
  1100                           ;screen.c: 20:         setFilas(~screen[con.columna-1]);
  1101  053F  0855               	movf	_con,w
  1102  0540  00A2               	movwf	??_updateScreen
  1103  0541  0722               	addwf	??_updateScreen,w
  1104  0542  077B               	addwf	updateScreen@screen,w
  1105  0543  00A3               	movwf	??_updateScreen+1
  1106  0544  0823               	movf	??_updateScreen+1,w
  1107  0545  3EFE               	addlw	-2
  1108  0546  0084               	movwf	4
  1109  0547  1383               	bcf	3,7	;select IRP bank0
  1110  0548  0800               	movf	0,w
  1111  0549  00A4               	movwf	??_updateScreen+2
  1112  054A  0A84               	incf	4,f
  1113  054B  0800               	movf	0,w
  1114  054C  00A5               	movwf	??_updateScreen+3
  1115  054D  0924               	comf	??_updateScreen+2,w
  1116  054E  00F3               	movwf	setFilas@reg_value
  1117  054F  0925               	comf	??_updateScreen+3,w
  1118  0550  00F4               	movwf	setFilas@reg_value+1
  1119  0551  120A  118A  24CB  120A  118A  	fcall	_setFilas
  1120  0556                     l1289:	
  1121                           
  1122                           ;screen.c: 21:         shiftBitColumna(0);
  1123  0556  3000               	movlw	0
  1124  0557  120A  118A  239A  120A  118A  	fcall	_shiftBitColumna
  1125  055C                     l154:	
  1126  055C  0008               	return
  1127  055D                     __end_of_updateScreen:	
  1128                           
  1129                           	psect	text2
  1130  039A                     __ptext2:	
  1131 ;; *************** function _shiftBitColumna *****************
  1132 ;; Defined at:
  1133 ;;		line 32 in file "columnas.c"
  1134 ;; Parameters:    Size  Location     Type
  1135 ;;  bit             1    wreg     unsigned char 
  1136 ;; Auto vars:     Size  Location     Type
  1137 ;;  bit             1    3[COMMON] unsigned char 
  1138 ;; Return value:  Size  Location     Type
  1139 ;;                  1    wreg      void 
  1140 ;; Registers used:
  1141 ;;		wreg, status,2, status,0, pclath, cstack
  1142 ;; Tracked objects:
  1143 ;;		On entry : 0/0
  1144 ;;		On exit  : 0/0
  1145 ;;		Unchanged: 0/0
  1146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1147 ;;      Params:         0       0       0       0       0
  1148 ;;      Locals:         1       0       0       0       0
  1149 ;;      Temps:          1       0       0       0       0
  1150 ;;      Totals:         2       0       0       0       0
  1151 ;;Total ram usage:        2 bytes
  1152 ;; Hardware stack levels used:    1
  1153 ;; Hardware stack levels required when called:    2
  1154 ;; This function calls:
  1155 ;;		_latchClock_Col
  1156 ;;		_latchClock_Fil
  1157 ;;		_shiftClock_Col
  1158 ;; This function is called by:
  1159 ;;		_updateScreen
  1160 ;; This function uses a non-reentrant model
  1161 ;;
  1162                           
  1163                           
  1164                           ;psect for function _shiftBitColumna
  1165  039A                     _shiftBitColumna:	
  1166                           
  1167                           ;incstack = 0
  1168                           ; Regs used in _shiftBitColumna: [wreg+status,2+status,0+pclath+cstack]
  1169                           ;shiftBitColumna@bit stored from wreg
  1170  039A  00F4               	movwf	shiftBitColumna@bit
  1171  039B                     l1147:	
  1172                           
  1173                           ;columnas.c: 33:     PORTDbits.RD4= bit & 0x01;
  1174  039B  0874               	movf	shiftBitColumna@bit,w
  1175  039C  3901               	andlw	1
  1176  039D  00F3               	movwf	??_shiftBitColumna
  1177  039E  0EF3               	swapf	??_shiftBitColumna,f
  1178  039F  1283               	bcf	3,5	;RP0=0, select bank0
  1179  03A0  1303               	bcf	3,6	;RP1=0, select bank0
  1180  03A1  0808               	movf	8,w	;volatile
  1181  03A2  0673               	xorwf	??_shiftBitColumna,w
  1182  03A3  39EF               	andlw	-17
  1183  03A4  0673               	xorwf	??_shiftBitColumna,w
  1184  03A5  0088               	movwf	8	;volatile
  1185  03A6                     l1149:	
  1186                           
  1187                           ;columnas.c: 34:     shiftClock_Col();
  1188  03A6  120A  118A  2328  120A  118A  	fcall	_shiftClock_Col
  1189  03AB                     l1151:	
  1190                           
  1191                           ;columnas.c: 35:     latchClock_Col();
  1192  03AB  120A  118A  2317  120A  118A  	fcall	_latchClock_Col
  1193  03B0                     l1153:	
  1194                           
  1195                           ;columnas.c: 36:     latchClock_Fil();
  1196  03B0  120A  118A  2322  120A  118A  	fcall	_latchClock_Fil
  1197  03B5                     l131:	
  1198  03B5  0008               	return
  1199  03B6                     __end_of_shiftBitColumna:	
  1200                           
  1201                           	psect	text3
  1202  0328                     __ptext3:	
  1203 ;; *************** function _shiftClock_Col *****************
  1204 ;; Defined at:
  1205 ;;		line 12 in file "columnas.c"
  1206 ;; Parameters:    Size  Location     Type
  1207 ;;		None
  1208 ;; Auto vars:     Size  Location     Type
  1209 ;;		None
  1210 ;; Return value:  Size  Location     Type
  1211 ;;                  1    wreg      void 
  1212 ;; Registers used:
  1213 ;;		None
  1214 ;; Tracked objects:
  1215 ;;		On entry : 0/0
  1216 ;;		On exit  : 0/0
  1217 ;;		Unchanged: 0/0
  1218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1219 ;;      Params:         0       0       0       0       0
  1220 ;;      Locals:         0       0       0       0       0
  1221 ;;      Temps:          0       0       0       0       0
  1222 ;;      Totals:         0       0       0       0       0
  1223 ;;Total ram usage:        0 bytes
  1224 ;; Hardware stack levels used:    1
  1225 ;; Hardware stack levels required when called:    1
  1226 ;; This function calls:
  1227 ;;		Nothing
  1228 ;; This function is called by:
  1229 ;;		_shiftBitColumna
  1230 ;;		_setColumnas
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234                           
  1235                           ;psect for function _shiftClock_Col
  1236  0328                     _shiftClock_Col:	
  1237  0328                     l1069:	
  1238                           ;incstack = 0
  1239                           ; Regs used in _shiftClock_Col: []
  1240                           
  1241                           
  1242                           ;columnas.c: 13:     PORTDbits.RD7 = 0;
  1243  0328  1283               	bcf	3,5	;RP0=0, select bank0
  1244  0329  1303               	bcf	3,6	;RP1=0, select bank0
  1245  032A  1388               	bcf	8,7	;volatile
  1246                           
  1247                           ;columnas.c: 14:     PORTDbits.RD7 = 1;
  1248  032B  1788               	bsf	8,7	;volatile
  1249                           
  1250                           ;columnas.c: 15:     PORTDbits.RD7 = 0;
  1251  032C  1388               	bcf	8,7	;volatile
  1252  032D                     l123:	
  1253  032D  0008               	return
  1254  032E                     __end_of_shiftClock_Col:	
  1255                           
  1256                           	psect	text4
  1257  0322                     __ptext4:	
  1258 ;; *************** function _latchClock_Fil *****************
  1259 ;; Defined at:
  1260 ;;		line 7 in file "filas.c"
  1261 ;; Parameters:    Size  Location     Type
  1262 ;;		None
  1263 ;; Auto vars:     Size  Location     Type
  1264 ;;		None
  1265 ;; Return value:  Size  Location     Type
  1266 ;;                  1    wreg      void 
  1267 ;; Registers used:
  1268 ;;		None
  1269 ;; Tracked objects:
  1270 ;;		On entry : 0/0
  1271 ;;		On exit  : 0/0
  1272 ;;		Unchanged: 0/0
  1273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1274 ;;      Params:         0       0       0       0       0
  1275 ;;      Locals:         0       0       0       0       0
  1276 ;;      Temps:          0       0       0       0       0
  1277 ;;      Totals:         0       0       0       0       0
  1278 ;;Total ram usage:        0 bytes
  1279 ;; Hardware stack levels used:    1
  1280 ;; Hardware stack levels required when called:    1
  1281 ;; This function calls:
  1282 ;;		Nothing
  1283 ;; This function is called by:
  1284 ;;		_shiftBitColumna
  1285 ;; This function uses a non-reentrant model
  1286 ;;
  1287                           
  1288                           
  1289                           ;psect for function _latchClock_Fil
  1290  0322                     _latchClock_Fil:	
  1291  0322                     l1063:	
  1292                           ;incstack = 0
  1293                           ; Regs used in _latchClock_Fil: []
  1294                           
  1295                           
  1296                           ;filas.c: 8:     PORTCbits.RC6 = 0;
  1297  0322  1283               	bcf	3,5	;RP0=0, select bank0
  1298  0323  1303               	bcf	3,6	;RP1=0, select bank0
  1299  0324  1307               	bcf	7,6	;volatile
  1300                           
  1301                           ;filas.c: 9:     PORTCbits.RC6 = 1;
  1302  0325  1707               	bsf	7,6	;volatile
  1303                           
  1304                           ;filas.c: 10:     PORTCbits.RC6 = 0;
  1305  0326  1307               	bcf	7,6	;volatile
  1306  0327                     l105:	
  1307  0327  0008               	return
  1308  0328                     __end_of_latchClock_Fil:	
  1309                           
  1310                           	psect	text5
  1311  0317                     __ptext5:	
  1312 ;; *************** function _latchClock_Col *****************
  1313 ;; Defined at:
  1314 ;;		line 7 in file "columnas.c"
  1315 ;; Parameters:    Size  Location     Type
  1316 ;;		None
  1317 ;; Auto vars:     Size  Location     Type
  1318 ;;		None
  1319 ;; Return value:  Size  Location     Type
  1320 ;;                  1    wreg      void 
  1321 ;; Registers used:
  1322 ;;		None
  1323 ;; Tracked objects:
  1324 ;;		On entry : 0/0
  1325 ;;		On exit  : 0/0
  1326 ;;		Unchanged: 0/0
  1327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1328 ;;      Params:         0       0       0       0       0
  1329 ;;      Locals:         0       0       0       0       0
  1330 ;;      Temps:          0       0       0       0       0
  1331 ;;      Totals:         0       0       0       0       0
  1332 ;;Total ram usage:        0 bytes
  1333 ;; Hardware stack levels used:    1
  1334 ;; Hardware stack levels required when called:    1
  1335 ;; This function calls:
  1336 ;;		Nothing
  1337 ;; This function is called by:
  1338 ;;		_shiftBitColumna
  1339 ;;		_setColumnas
  1340 ;; This function uses a non-reentrant model
  1341 ;;
  1342                           
  1343                           
  1344                           ;psect for function _latchClock_Col
  1345  0317                     _latchClock_Col:	
  1346  0317                     l1067:	
  1347                           ;incstack = 0
  1348                           ; Regs used in _latchClock_Col: []
  1349                           
  1350                           
  1351                           ;columnas.c: 8:     PORTDbits.RD6 = 1;
  1352  0317  1283               	bcf	3,5	;RP0=0, select bank0
  1353  0318  1303               	bcf	3,6	;RP1=0, select bank0
  1354  0319  1708               	bsf	8,6	;volatile
  1355                           
  1356                           ;columnas.c: 9:     PORTDbits.RD6 = 0;
  1357  031A  1308               	bcf	8,6	;volatile
  1358  031B                     l120:	
  1359  031B  0008               	return
  1360  031C                     __end_of_latchClock_Col:	
  1361                           
  1362                           	psect	text6
  1363  04CB                     __ptext6:	
  1364 ;; *************** function _setFilas *****************
  1365 ;; Defined at:
  1366 ;;		line 19 in file "filas.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;  reg_value       2    2[COMMON] unsigned int 
  1369 ;; Auto vars:     Size  Location     Type
  1370 ;;  i               2    0[BANK0 ] int 
  1371 ;; Return value:  Size  Location     Type
  1372 ;;                  1    wreg      void 
  1373 ;; Registers used:
  1374 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1375 ;; Tracked objects:
  1376 ;;		On entry : 0/0
  1377 ;;		On exit  : 0/0
  1378 ;;		Unchanged: 0/0
  1379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1380 ;;      Params:         2       0       0       0       0
  1381 ;;      Locals:         0       2       0       0       0
  1382 ;;      Temps:          6       0       0       0       0
  1383 ;;      Totals:         8       2       0       0       0
  1384 ;;Total ram usage:       10 bytes
  1385 ;; Hardware stack levels used:    1
  1386 ;; Hardware stack levels required when called:    2
  1387 ;; This function calls:
  1388 ;;		_shiftClock_Fil
  1389 ;; This function is called by:
  1390 ;;		_updateScreen
  1391 ;; This function uses a non-reentrant model
  1392 ;;
  1393                           
  1394                           
  1395                           ;psect for function _setFilas
  1396  04CB                     _setFilas:	
  1397  04CB                     l1133:	
  1398                           ;incstack = 0
  1399                           ; Regs used in _setFilas: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1400                           
  1401                           
  1402                           ;filas.c: 20:     int i = 0;
  1403  04CB  1283               	bcf	3,5	;RP0=0, select bank0
  1404  04CC  1303               	bcf	3,6	;RP1=0, select bank0
  1405  04CD  01A0               	clrf	setFilas@i
  1406  04CE  01A1               	clrf	setFilas@i+1
  1407                           
  1408                           ;filas.c: 21:     for(i=0;i<16;i++){
  1409  04CF  01A0               	clrf	setFilas@i
  1410  04D0  01A1               	clrf	setFilas@i+1
  1411  04D1                     l1135:	
  1412  04D1  0821               	movf	setFilas@i+1,w
  1413  04D2  3A80               	xorlw	128
  1414  04D3  00FF               	movwf	btemp+1
  1415  04D4  3080               	movlw	128
  1416  04D5  027F               	subwf	btemp+1,w
  1417  04D6  1D03               	skipz
  1418  04D7  2CDA               	goto	u665
  1419  04D8  3010               	movlw	16
  1420  04D9  0220               	subwf	setFilas@i,w
  1421  04DA                     u665:	
  1422  04DA  1C03               	skipc
  1423  04DB  2CDD               	goto	u661
  1424  04DC  2CDE               	goto	u660
  1425  04DD                     u661:	
  1426  04DD  2CDF               	goto	l1139
  1427  04DE                     u660:	
  1428  04DE  2D11               	goto	l113
  1429  04DF                     l1139:	
  1430                           
  1431                           ;filas.c: 22:         PORTCbits.RC4 = (reg_value & (1<<i) )>>i;
  1432  04DF  1283               	bcf	3,5	;RP0=0, select bank0
  1433  04E0  1303               	bcf	3,6	;RP1=0, select bank0
  1434  04E1  0A20               	incf	setFilas@i,w
  1435  04E2  00F5               	movwf	??_setFilas
  1436  04E3  3001               	movlw	1
  1437  04E4  00F6               	movwf	??_setFilas+1
  1438  04E5  3000               	movlw	0
  1439  04E6  00F7               	movwf	??_setFilas+2
  1440  04E7  2CEB               	goto	u674
  1441  04E8                     u675:	
  1442  04E8  1003               	clrc
  1443  04E9  0DF6               	rlf	??_setFilas+1,f
  1444  04EA  0DF7               	rlf	??_setFilas+2,f
  1445  04EB                     u674:	
  1446  04EB  0BF5               	decfsz	??_setFilas,f
  1447  04EC  2CE8               	goto	u675
  1448  04ED  0873               	movf	setFilas@reg_value,w
  1449  04EE  0576               	andwf	??_setFilas+1,w
  1450  04EF  00F8               	movwf	??_setFilas+3
  1451  04F0  0874               	movf	setFilas@reg_value+1,w
  1452  04F1  0577               	andwf	??_setFilas+2,w
  1453  04F2  00F9               	movwf	??_setFilas+4
  1454  04F3  0A20               	incf	setFilas@i,w
  1455  04F4  2CF8               	goto	u684
  1456  04F5                     u685:	
  1457  04F5  1003               	clrc
  1458  04F6  0CF9               	rrf	??_setFilas+4,f
  1459  04F7  0CF8               	rrf	??_setFilas+3,f
  1460  04F8                     u684:	
  1461  04F8  3EFF               	addlw	-1
  1462  04F9  1D03               	skipz
  1463  04FA  2CF5               	goto	u685
  1464  04FB  0878               	movf	??_setFilas+3,w
  1465  04FC  00FA               	movwf	??_setFilas+5
  1466  04FD  0EFA               	swapf	??_setFilas+5,f
  1467  04FE  0807               	movf	7,w	;volatile
  1468  04FF  067A               	xorwf	??_setFilas+5,w
  1469  0500  39EF               	andlw	-17
  1470  0501  067A               	xorwf	??_setFilas+5,w
  1471  0502  0087               	movwf	7	;volatile
  1472  0503                     l1141:	
  1473                           
  1474                           ;filas.c: 23:         shiftClock_Fil();
  1475  0503  120A  118A  231C  120A  118A  	fcall	_shiftClock_Fil
  1476  0508                     l1143:	
  1477                           
  1478                           ;filas.c: 24:     }
  1479  0508  3001               	movlw	1
  1480  0509  1283               	bcf	3,5	;RP0=0, select bank0
  1481  050A  1303               	bcf	3,6	;RP1=0, select bank0
  1482  050B  07A0               	addwf	setFilas@i,f
  1483  050C  1803               	skipnc
  1484  050D  0AA1               	incf	setFilas@i+1,f
  1485  050E  3000               	movlw	0
  1486  050F  07A1               	addwf	setFilas@i+1,f
  1487  0510  2CD1               	goto	l1135
  1488  0511                     l113:	
  1489  0511  0008               	return
  1490  0512                     __end_of_setFilas:	
  1491                           
  1492                           	psect	text7
  1493  031C                     __ptext7:	
  1494 ;; *************** function _shiftClock_Fil *****************
  1495 ;; Defined at:
  1496 ;;		line 13 in file "filas.c"
  1497 ;; Parameters:    Size  Location     Type
  1498 ;;		None
  1499 ;; Auto vars:     Size  Location     Type
  1500 ;;		None
  1501 ;; Return value:  Size  Location     Type
  1502 ;;                  1    wreg      void 
  1503 ;; Registers used:
  1504 ;;		None
  1505 ;; Tracked objects:
  1506 ;;		On entry : 0/0
  1507 ;;		On exit  : 0/0
  1508 ;;		Unchanged: 0/0
  1509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1510 ;;      Params:         0       0       0       0       0
  1511 ;;      Locals:         0       0       0       0       0
  1512 ;;      Temps:          0       0       0       0       0
  1513 ;;      Totals:         0       0       0       0       0
  1514 ;;Total ram usage:        0 bytes
  1515 ;; Hardware stack levels used:    1
  1516 ;; Hardware stack levels required when called:    1
  1517 ;; This function calls:
  1518 ;;		Nothing
  1519 ;; This function is called by:
  1520 ;;		_setFilas
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           
  1524                           
  1525                           ;psect for function _shiftClock_Fil
  1526  031C                     _shiftClock_Fil:	
  1527  031C                     l1065:	
  1528                           ;incstack = 0
  1529                           ; Regs used in _shiftClock_Fil: []
  1530                           
  1531                           
  1532                           ;filas.c: 14:     PORTCbits.RC7 = 0;
  1533  031C  1283               	bcf	3,5	;RP0=0, select bank0
  1534  031D  1303               	bcf	3,6	;RP1=0, select bank0
  1535  031E  1387               	bcf	7,7	;volatile
  1536                           
  1537                           ;filas.c: 15:     PORTCbits.RC7 = 1;
  1538  031F  1787               	bsf	7,7	;volatile
  1539                           
  1540                           ;filas.c: 16:     PORTCbits.RC7 = 0;
  1541  0320  1387               	bcf	7,7	;volatile
  1542  0321                     l108:	
  1543  0321  0008               	return
  1544  0322                     __end_of_shiftClock_Fil:	
  1545                           
  1546                           	psect	text8
  1547  0356                     __ptext8:	
  1548 ;; *************** function _init_timer *****************
  1549 ;; Defined at:
  1550 ;;		line 59 in file "init.c"
  1551 ;; Parameters:    Size  Location     Type
  1552 ;;		None
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;		None
  1555 ;; Return value:  Size  Location     Type
  1556 ;;                  1    wreg      void 
  1557 ;; Registers used:
  1558 ;;		status,2
  1559 ;; Tracked objects:
  1560 ;;		On entry : 0/0
  1561 ;;		On exit  : 0/0
  1562 ;;		Unchanged: 0/0
  1563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1564 ;;      Params:         0       0       0       0       0
  1565 ;;      Locals:         0       0       0       0       0
  1566 ;;      Temps:          0       0       0       0       0
  1567 ;;      Totals:         0       0       0       0       0
  1568 ;;Total ram usage:        0 bytes
  1569 ;; Hardware stack levels used:    1
  1570 ;; Hardware stack levels required when called:    1
  1571 ;; This function calls:
  1572 ;;		Nothing
  1573 ;; This function is called by:
  1574 ;;		_main
  1575 ;; This function uses a non-reentrant model
  1576 ;;
  1577                           
  1578                           
  1579                           ;psect for function _init_timer
  1580  0356                     _init_timer:	
  1581  0356                     l1197:	
  1582                           ;incstack = 0
  1583                           ; Regs used in _init_timer: [status,2]
  1584                           
  1585                           
  1586                           ;init.c: 61:     TMR0=0;
  1587  0356  1283               	bcf	3,5	;RP0=0, select bank0
  1588  0357  1303               	bcf	3,6	;RP1=0, select bank0
  1589  0358  0181               	clrf	1	;volatile
  1590  0359                     l1199:	
  1591                           
  1592                           ;init.c: 69:     INTCONbits.GIE = 1;
  1593  0359  178B               	bsf	11,7	;volatile
  1594  035A                     l1201:	
  1595                           
  1596                           ;init.c: 70:     INTCONbits.TMR0IE = 1;
  1597  035A  168B               	bsf	11,5	;volatile
  1598  035B                     l1203:	
  1599                           
  1600                           ;init.c: 71:     INTCONbits.TMR0IF = 0;
  1601  035B  110B               	bcf	11,2	;volatile
  1602  035C                     l1205:	
  1603                           
  1604                           ;init.c: 80:     OPTION_REGbits.PSA = 1;
  1605  035C  1683               	bsf	3,5	;RP0=1, select bank1
  1606  035D  1303               	bcf	3,6	;RP1=0, select bank1
  1607  035E  1581               	bsf	1,3	;volatile
  1608  035F                     l1207:	
  1609                           
  1610                           ;init.c: 81:     OPTION_REGbits.PS0 = 1;
  1611  035F  1401               	bsf	1,0	;volatile
  1612  0360                     l1209:	
  1613                           
  1614                           ;init.c: 82:     OPTION_REGbits.PS1 = 1;
  1615  0360  1481               	bsf	1,1	;volatile
  1616  0361                     l1211:	
  1617                           
  1618                           ;init.c: 83:     OPTION_REGbits.PS2 = 1;
  1619  0361  1501               	bsf	1,2	;volatile
  1620  0362                     l1213:	
  1621                           
  1622                           ;init.c: 84:     OPTION_REGbits.T0CS = 0;
  1623  0362  1281               	bcf	1,5	;volatile
  1624  0363                     l36:	
  1625  0363  0008               	return
  1626  0364                     __end_of_init_timer:	
  1627                           
  1628                           	psect	text9
  1629  0364                     __ptext9:	
  1630 ;; *************** function _init_pines *****************
  1631 ;; Defined at:
  1632 ;;		line 43 in file "init.c"
  1633 ;; Parameters:    Size  Location     Type
  1634 ;;		None
  1635 ;; Auto vars:     Size  Location     Type
  1636 ;;		None
  1637 ;; Return value:  Size  Location     Type
  1638 ;;                  1    wreg      void 
  1639 ;; Registers used:
  1640 ;;		status,2, status,0, pclath, cstack
  1641 ;; Tracked objects:
  1642 ;;		On entry : 0/0
  1643 ;;		On exit  : 0/0
  1644 ;;		Unchanged: 0/0
  1645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1646 ;;      Params:         0       0       0       0       0
  1647 ;;      Locals:         0       0       0       0       0
  1648 ;;      Temps:          0       0       0       0       0
  1649 ;;      Totals:         0       0       0       0       0
  1650 ;;Total ram usage:        0 bytes
  1651 ;; Hardware stack levels used:    1
  1652 ;; Hardware stack levels required when called:    2
  1653 ;; This function calls:
  1654 ;;		_init_pines_col
  1655 ;;		_init_pines_fil
  1656 ;;		_init_pines_in
  1657 ;; This function is called by:
  1658 ;;		_main
  1659 ;; This function uses a non-reentrant model
  1660 ;;
  1661                           
  1662                           
  1663                           ;psect for function _init_pines
  1664  0364                     _init_pines:	
  1665  0364                     l1193:	
  1666                           ;incstack = 0
  1667                           ; Regs used in _init_pines: [status,2+status,0+pclath+cstack]
  1668                           
  1669                           
  1670                           ;init.c: 45:     init_pines_fil();
  1671  0364  120A  118A  2349  120A  118A  	fcall	_init_pines_fil
  1672                           
  1673                           ;init.c: 46:     init_pines_col();
  1674  0369  120A  118A  2374  120A  118A  	fcall	_init_pines_col
  1675                           
  1676                           ;init.c: 47:     init_pines_in();
  1677  036E  120A  118A  233E  120A  118A  	fcall	_init_pines_in
  1678  0373                     l30:	
  1679  0373  0008               	return
  1680  0374                     __end_of_init_pines:	
  1681                           
  1682                           	psect	text10
  1683  033E                     __ptext10:	
  1684 ;; *************** function _init_pines_in *****************
  1685 ;; Defined at:
  1686 ;;		line 4 in file "init.c"
  1687 ;; Parameters:    Size  Location     Type
  1688 ;;		None
  1689 ;; Auto vars:     Size  Location     Type
  1690 ;;		None
  1691 ;; Return value:  Size  Location     Type
  1692 ;;                  1    wreg      void 
  1693 ;; Registers used:
  1694 ;;		None
  1695 ;; Tracked objects:
  1696 ;;		On entry : 0/0
  1697 ;;		On exit  : 0/0
  1698 ;;		Unchanged: 0/0
  1699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1700 ;;      Params:         0       0       0       0       0
  1701 ;;      Locals:         0       0       0       0       0
  1702 ;;      Temps:          0       0       0       0       0
  1703 ;;      Totals:         0       0       0       0       0
  1704 ;;Total ram usage:        0 bytes
  1705 ;; Hardware stack levels used:    1
  1706 ;; Hardware stack levels required when called:    1
  1707 ;; This function calls:
  1708 ;;		Nothing
  1709 ;; This function is called by:
  1710 ;;		_init_pines
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713                           
  1714                           
  1715                           ;psect for function _init_pines_in
  1716  033E                     _init_pines_in:	
  1717  033E                     l1093:	
  1718                           ;incstack = 0
  1719                           ; Regs used in _init_pines_in: []
  1720                           
  1721                           
  1722                           ;init.c: 6:     TRISBbits.TRISB5 = 1;
  1723  033E  1683               	bsf	3,5	;RP0=1, select bank1
  1724  033F  1303               	bcf	3,6	;RP1=0, select bank1
  1725  0340  1686               	bsf	6,5	;volatile
  1726                           
  1727                           ;init.c: 7:     TRISBbits.TRISB4 = 1;
  1728  0341  1606               	bsf	6,4	;volatile
  1729                           
  1730                           ;init.c: 9:     TRISBbits.TRISB6 = 0;
  1731  0342  1306               	bcf	6,6	;volatile
  1732                           
  1733                           ;init.c: 10:     TRISBbits.TRISB7 = 0;
  1734  0343  1386               	bcf	6,7	;volatile
  1735                           
  1736                           ;init.c: 12:     PORTBbits.RB6 = 0;
  1737  0344  1283               	bcf	3,5	;RP0=0, select bank0
  1738  0345  1303               	bcf	3,6	;RP1=0, select bank0
  1739  0346  1306               	bcf	6,6	;volatile
  1740                           
  1741                           ;init.c: 13:     PORTBbits.RB7 = 0;
  1742  0347  1386               	bcf	6,7	;volatile
  1743  0348                     l21:	
  1744  0348  0008               	return
  1745  0349                     __end_of_init_pines_in:	
  1746                           
  1747                           	psect	text11
  1748  0349                     __ptext11:	
  1749 ;; *************** function _init_pines_fil *****************
  1750 ;; Defined at:
  1751 ;;		line 16 in file "init.c"
  1752 ;; Parameters:    Size  Location     Type
  1753 ;;		None
  1754 ;; Auto vars:     Size  Location     Type
  1755 ;;		None
  1756 ;; Return value:  Size  Location     Type
  1757 ;;                  1    wreg      void 
  1758 ;; Registers used:
  1759 ;;		None
  1760 ;; Tracked objects:
  1761 ;;		On entry : 0/0
  1762 ;;		On exit  : 0/0
  1763 ;;		Unchanged: 0/0
  1764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1765 ;;      Params:         0       0       0       0       0
  1766 ;;      Locals:         0       0       0       0       0
  1767 ;;      Temps:          0       0       0       0       0
  1768 ;;      Totals:         0       0       0       0       0
  1769 ;;Total ram usage:        0 bytes
  1770 ;; Hardware stack levels used:    1
  1771 ;; Hardware stack levels required when called:    1
  1772 ;; This function calls:
  1773 ;;		Nothing
  1774 ;; This function is called by:
  1775 ;;		_init_pines
  1776 ;; This function uses a non-reentrant model
  1777 ;;
  1778                           
  1779                           
  1780                           ;psect for function _init_pines_fil
  1781  0349                     _init_pines_fil:	
  1782  0349                     l1095:	
  1783                           ;incstack = 0
  1784                           ; Regs used in _init_pines_fil: []
  1785                           
  1786                           
  1787                           ;init.c: 18:     TRISCbits.TRISC4 = 0;
  1788  0349  1683               	bsf	3,5	;RP0=1, select bank1
  1789  034A  1303               	bcf	3,6	;RP1=0, select bank1
  1790  034B  1207               	bcf	7,4	;volatile
  1791                           
  1792                           ;init.c: 19:     TRISCbits.TRISC5 = 0;
  1793  034C  1287               	bcf	7,5	;volatile
  1794                           
  1795                           ;init.c: 20:     TRISCbits.TRISC6 = 0;
  1796  034D  1307               	bcf	7,6	;volatile
  1797                           
  1798                           ;init.c: 21:     TRISCbits.TRISC7 = 0;
  1799  034E  1387               	bcf	7,7	;volatile
  1800                           
  1801                           ;init.c: 23:     PORTCbits.RC4 = 0;
  1802  034F  1283               	bcf	3,5	;RP0=0, select bank0
  1803  0350  1303               	bcf	3,6	;RP1=0, select bank0
  1804  0351  1207               	bcf	7,4	;volatile
  1805                           
  1806                           ;init.c: 24:     PORTCbits.RC5 = 0;
  1807  0352  1287               	bcf	7,5	;volatile
  1808                           
  1809                           ;init.c: 25:     PORTCbits.RC6 = 0;
  1810  0353  1307               	bcf	7,6	;volatile
  1811                           
  1812                           ;init.c: 26:     PORTCbits.RC7 = 0;
  1813  0354  1387               	bcf	7,7	;volatile
  1814  0355                     l24:	
  1815  0355  0008               	return
  1816  0356                     __end_of_init_pines_fil:	
  1817                           
  1818                           	psect	text12
  1819  0374                     __ptext12:	
  1820 ;; *************** function _init_pines_col *****************
  1821 ;; Defined at:
  1822 ;;		line 29 in file "init.c"
  1823 ;; Parameters:    Size  Location     Type
  1824 ;;		None
  1825 ;; Auto vars:     Size  Location     Type
  1826 ;;		None
  1827 ;; Return value:  Size  Location     Type
  1828 ;;                  1    wreg      void 
  1829 ;; Registers used:
  1830 ;;		None
  1831 ;; Tracked objects:
  1832 ;;		On entry : 0/0
  1833 ;;		On exit  : 0/0
  1834 ;;		Unchanged: 0/0
  1835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1836 ;;      Params:         0       0       0       0       0
  1837 ;;      Locals:         0       0       0       0       0
  1838 ;;      Temps:          0       0       0       0       0
  1839 ;;      Totals:         0       0       0       0       0
  1840 ;;Total ram usage:        0 bytes
  1841 ;; Hardware stack levels used:    1
  1842 ;; Hardware stack levels required when called:    1
  1843 ;; This function calls:
  1844 ;;		Nothing
  1845 ;; This function is called by:
  1846 ;;		_init_pines
  1847 ;; This function uses a non-reentrant model
  1848 ;;
  1849                           
  1850                           
  1851                           ;psect for function _init_pines_col
  1852  0374                     _init_pines_col:	
  1853  0374                     l1097:	
  1854                           ;incstack = 0
  1855                           ; Regs used in _init_pines_col: []
  1856                           
  1857                           
  1858                           ;init.c: 30:     TRISBbits.TRISB0 = 0;
  1859  0374  1683               	bsf	3,5	;RP0=1, select bank1
  1860  0375  1303               	bcf	3,6	;RP1=0, select bank1
  1861  0376  1006               	bcf	6,0	;volatile
  1862                           
  1863                           ;init.c: 31:     PORTBbits.RB0 = 0;
  1864  0377  1283               	bcf	3,5	;RP0=0, select bank0
  1865  0378  1303               	bcf	3,6	;RP1=0, select bank0
  1866  0379  1006               	bcf	6,0	;volatile
  1867                           
  1868                           ;init.c: 33:     TRISDbits.TRISD4 = 0;
  1869  037A  1683               	bsf	3,5	;RP0=1, select bank1
  1870  037B  1303               	bcf	3,6	;RP1=0, select bank1
  1871  037C  1208               	bcf	8,4	;volatile
  1872                           
  1873                           ;init.c: 34:     TRISDbits.TRISD5 = 0;
  1874  037D  1288               	bcf	8,5	;volatile
  1875                           
  1876                           ;init.c: 35:     TRISDbits.TRISD6 = 0;
  1877  037E  1308               	bcf	8,6	;volatile
  1878                           
  1879                           ;init.c: 36:     TRISDbits.TRISD7 = 0;
  1880  037F  1388               	bcf	8,7	;volatile
  1881                           
  1882                           ;init.c: 38:     PORTDbits.RD4 = 0;
  1883  0380  1283               	bcf	3,5	;RP0=0, select bank0
  1884  0381  1303               	bcf	3,6	;RP1=0, select bank0
  1885  0382  1208               	bcf	8,4	;volatile
  1886                           
  1887                           ;init.c: 39:     PORTDbits.RD5 = 0;
  1888  0383  1288               	bcf	8,5	;volatile
  1889                           
  1890                           ;init.c: 40:     PORTDbits.RD6 = 0;
  1891  0384  1308               	bcf	8,6	;volatile
  1892                           
  1893                           ;init.c: 41:     PORTDbits.RD7 = 0;
  1894  0385  1388               	bcf	8,7	;volatile
  1895  0386                     l27:	
  1896  0386  0008               	return
  1897  0387                     __end_of_init_pines_col:	
  1898                           
  1899                           	psect	text13
  1900  032E                     __ptext13:	
  1901 ;; *************** function _init_interrupt *****************
  1902 ;; Defined at:
  1903 ;;		line 50 in file "init.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;		None
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;		None
  1908 ;; Return value:  Size  Location     Type
  1909 ;;                  1    wreg      void 
  1910 ;; Registers used:
  1911 ;;		None
  1912 ;; Tracked objects:
  1913 ;;		On entry : 0/0
  1914 ;;		On exit  : 0/0
  1915 ;;		Unchanged: 0/0
  1916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1917 ;;      Params:         0       0       0       0       0
  1918 ;;      Locals:         0       0       0       0       0
  1919 ;;      Temps:          0       0       0       0       0
  1920 ;;      Totals:         0       0       0       0       0
  1921 ;;Total ram usage:        0 bytes
  1922 ;; Hardware stack levels used:    1
  1923 ;; Hardware stack levels required when called:    1
  1924 ;; This function calls:
  1925 ;;		Nothing
  1926 ;; This function is called by:
  1927 ;;		_main
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931                           
  1932                           ;psect for function _init_interrupt
  1933  032E                     _init_interrupt:	
  1934  032E                     l1195:	
  1935                           ;incstack = 0
  1936                           ; Regs used in _init_interrupt: []
  1937                           
  1938                           
  1939                           ;init.c: 51:     INTCONbits.GIE = 1;
  1940  032E  178B               	bsf	11,7	;volatile
  1941                           
  1942                           ;init.c: 52:     INTCONbits.PEIE = 1;
  1943  032F  170B               	bsf	11,6	;volatile
  1944                           
  1945                           ;init.c: 53:     INTCONbits.RBIE = 1;
  1946  0330  158B               	bsf	11,3	;volatile
  1947                           
  1948                           ;init.c: 54:     INTCONbits.RBIF = 0;
  1949  0331  100B               	bcf	11,0	;volatile
  1950                           
  1951                           ;init.c: 56:     OPTION_REGbits.nRBPU = 0;
  1952  0332  1683               	bsf	3,5	;RP0=1, select bank1
  1953  0333  1303               	bcf	3,6	;RP1=0, select bank1
  1954  0334  1381               	bcf	1,7	;volatile
  1955  0335                     l33:	
  1956  0335  0008               	return
  1957  0336                     __end_of_init_interrupt:	
  1958                           
  1959                           	psect	text14
  1960  03D6                     __ptext14:	
  1961 ;; *************** function _drawBground *****************
  1962 ;; Defined at:
  1963 ;;		line 25 in file "screen.c"
  1964 ;; Parameters:    Size  Location     Type
  1965 ;;		None
  1966 ;; Auto vars:     Size  Location     Type
  1967 ;;		None
  1968 ;; Return value:  Size  Location     Type
  1969 ;;                  1    wreg      void 
  1970 ;; Registers used:
  1971 ;;		wreg
  1972 ;; Tracked objects:
  1973 ;;		On entry : 0/0
  1974 ;;		On exit  : 0/0
  1975 ;;		Unchanged: 0/0
  1976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1977 ;;      Params:         0       0       0       0       0
  1978 ;;      Locals:         0       0       0       0       0
  1979 ;;      Temps:          0       0       0       0       0
  1980 ;;      Totals:         0       0       0       0       0
  1981 ;;Total ram usage:        0 bytes
  1982 ;; Hardware stack levels used:    1
  1983 ;; Hardware stack levels required when called:    1
  1984 ;; This function calls:
  1985 ;;		Nothing
  1986 ;; This function is called by:
  1987 ;;		_main
  1988 ;; This function uses a non-reentrant model
  1989 ;;
  1990                           
  1991                           
  1992                           ;psect for function _drawBground
  1993  03D6                     _drawBground:	
  1994  03D6                     l1215:	
  1995                           ;incstack = 0
  1996                           ; Regs used in _drawBground: [wreg]
  1997                           
  1998                           
  1999                           ;screen.c: 26:     fondo[0] = 0x0003;
  2000  03D6  3003               	movlw	3
  2001  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  2002  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  2003  03D9  00C5               	movwf	_fondo
  2004  03DA  3000               	movlw	0
  2005  03DB  00C6               	movwf	_fondo+1
  2006                           
  2007                           ;screen.c: 27:     fondo[1] = 0x0003;
  2008  03DC  3003               	movlw	3
  2009  03DD  00C7               	movwf	_fondo+2
  2010  03DE  3000               	movlw	0
  2011  03DF  00C8               	movwf	_fondo+3
  2012                           
  2013                           ;screen.c: 28:     fondo[2] = 0x0003;
  2014  03E0  3003               	movlw	3
  2015  03E1  00C9               	movwf	_fondo+4
  2016  03E2  3000               	movlw	0
  2017  03E3  00CA               	movwf	_fondo+5
  2018                           
  2019                           ;screen.c: 29:     fondo[3] = 0x0003;
  2020  03E4  3003               	movlw	3
  2021  03E5  00CB               	movwf	_fondo+6
  2022  03E6  3000               	movlw	0
  2023  03E7  00CC               	movwf	_fondo+7
  2024                           
  2025                           ;screen.c: 30:     fondo[4] = 0x0003;
  2026  03E8  3003               	movlw	3
  2027  03E9  00CD               	movwf	_fondo+8
  2028  03EA  3000               	movlw	0
  2029  03EB  00CE               	movwf	_fondo+9
  2030                           
  2031                           ;screen.c: 31:     fondo[5] = 0x0003;
  2032  03EC  3003               	movlw	3
  2033  03ED  00CF               	movwf	_fondo+10
  2034  03EE  3000               	movlw	0
  2035  03EF  00D0               	movwf	_fondo+11
  2036                           
  2037                           ;screen.c: 32:     fondo[6] = 0x0003;
  2038  03F0  3003               	movlw	3
  2039  03F1  00D1               	movwf	_fondo+12
  2040  03F2  3000               	movlw	0
  2041  03F3  00D2               	movwf	_fondo+13
  2042                           
  2043                           ;screen.c: 33:     fondo[7] = 0x0003;
  2044  03F4  3003               	movlw	3
  2045  03F5  00D3               	movwf	_fondo+14
  2046  03F6  3000               	movlw	0
  2047  03F7  00D4               	movwf	_fondo+15
  2048  03F8                     l157:	
  2049  03F8  0008               	return
  2050  03F9                     __end_of_drawBground:	
  2051                           
  2052                           	psect	text15
  2053  06C7                     __ptext15:	
  2054 ;; *************** function _checkCount *****************
  2055 ;; Defined at:
  2056 ;;		line 79 in file "mainsource.c"
  2057 ;; Parameters:    Size  Location     Type
  2058 ;;		None
  2059 ;; Auto vars:     Size  Location     Type
  2060 ;;  i               2   30[BANK0 ] int 
  2061 ;;  j               2   28[BANK0 ] int 
  2062 ;;  condicion       1   27[BANK0 ] unsigned char 
  2063 ;; Return value:  Size  Location     Type
  2064 ;;                  1    wreg      void 
  2065 ;; Registers used:
  2066 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2067 ;; Tracked objects:
  2068 ;;		On entry : 0/0
  2069 ;;		On exit  : 0/0
  2070 ;;		Unchanged: 0/0
  2071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2072 ;;      Params:         0       0       0       0       0
  2073 ;;      Locals:         0       5       0       0       0
  2074 ;;      Temps:          0       9       0       0       0
  2075 ;;      Totals:         0      14       0       0       0
  2076 ;;Total ram usage:       14 bytes
  2077 ;; Hardware stack levels used:    1
  2078 ;; Hardware stack levels required when called:    3
  2079 ;; This function calls:
  2080 ;;		___awmod
  2081 ;;		_drawFigure
  2082 ;;		_rand
  2083 ;; This function is called by:
  2084 ;;		_main
  2085 ;; This function uses a non-reentrant model
  2086 ;;
  2087                           
  2088                           
  2089                           ;psect for function _checkCount
  2090  06C7                     _checkCount:	
  2091  06C7                     l1217:	
  2092                           ;incstack = 0
  2093                           ; Regs used in _checkCount: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2094                           
  2095                           
  2096                           ;mainsource.c: 80:     if(con.check_count == 1){
  2097  06C7  1283               	bcf	3,5	;RP0=0, select bank0
  2098  06C8  1303               	bcf	3,6	;RP1=0, select bank0
  2099  06C9  035D               	decf	_con+8,w
  2100  06CA  1D03               	btfss	3,2
  2101  06CB  2ECD               	goto	u781
  2102  06CC  2ECE               	goto	u780
  2103  06CD                     u781:	
  2104  06CD  2FD0               	goto	l90
  2105  06CE                     u780:	
  2106  06CE                     l1219:	
  2107                           
  2108                           ;mainsource.c: 81:         if(timerCount >= 3906){
  2109  06CE  300F               	movlw	15
  2110  06CF  025F               	subwf	_timerCount+1,w
  2111  06D0  3042               	movlw	66
  2112  06D1  1903               	skipnz
  2113  06D2  025E               	subwf	_timerCount,w
  2114  06D3  1C03               	skipc
  2115  06D4  2ED6               	goto	u791
  2116  06D5  2ED7               	goto	u790
  2117  06D6                     u791:	
  2118  06D6  2FCD               	goto	l1275
  2119  06D7                     u790:	
  2120  06D7                     l1221:	
  2121                           
  2122                           ;mainsource.c: 82:             PORTBbits.RB0 = con.led;
  2123  06D7  0C57               	rrf	_con+2,w
  2124  06D8  1C03               	skipc
  2125  06D9  1006               	bcf	6,0	;volatile
  2126  06DA  1803               	skipnc
  2127  06DB  1406               	bsf	6,0	;volatile
  2128  06DC                     l1223:	
  2129                           
  2130                           ;mainsource.c: 83:             con.led= ~con.led;
  2131  06DC  0957               	comf	_con+2,w
  2132  06DD  00B2               	movwf	??_checkCount
  2133  06DE  0832               	movf	??_checkCount,w
  2134  06DF  00D7               	movwf	_con+2
  2135  06E0                     l1225:	
  2136                           
  2137                           ;mainsource.c: 84:             con.ficha_Vpos--;
  2138  06E0  3001               	movlw	1
  2139  06E1  02D8               	subwf	_con+3,f
  2140  06E2                     l1227:	
  2141                           
  2142                           ;mainsource.c: 85:             timerCount = 0;
  2143  06E2  01DE               	clrf	_timerCount
  2144  06E3  01DF               	clrf	_timerCount+1
  2145  06E4                     l1229:	
  2146                           
  2147                           ;mainsource.c: 86:             if(con.ficha_Vpos==0){
  2148  06E4  0858               	movf	_con+3,w
  2149  06E5  1D03               	btfss	3,2
  2150  06E6  2EE8               	goto	u801
  2151  06E7  2EE9               	goto	u800
  2152  06E8                     u801:	
  2153  06E8  2F07               	goto	l1235
  2154  06E9                     u800:	
  2155  06E9                     l1231:	
  2156                           
  2157                           ;mainsource.c: 87:                 con.ficha_Vpos = 16;
  2158  06E9  3010               	movlw	16
  2159  06EA  00B2               	movwf	??_checkCount
  2160  06EB  0832               	movf	??_checkCount,w
  2161  06EC  00D8               	movwf	_con+3
  2162  06ED                     l1233:	
  2163                           
  2164                           ;mainsource.c: 88:                 con.ficha_actual = rand() % 5;
  2165  06ED  3005               	movlw	5
  2166  06EE  00AB               	movwf	___awmod@divisor
  2167  06EF  3000               	movlw	0
  2168  06F0  00AC               	movwf	___awmod@divisor+1
  2169  06F1  120A  118A  2484  120A  118A  	fcall	_rand
  2170  06F6  1283               	bcf	3,5	;RP0=0, select bank0
  2171  06F7  1303               	bcf	3,6	;RP1=0, select bank0
  2172  06F8  0825               	movf	?_rand+1,w
  2173  06F9  00AE               	movwf	___awmod@dividend+1
  2174  06FA  0824               	movf	?_rand,w
  2175  06FB  00AD               	movwf	___awmod@dividend
  2176  06FC  120A  118A  25A9  120A  118A  	fcall	___awmod
  2177  0701  1283               	bcf	3,5	;RP0=0, select bank0
  2178  0702  1303               	bcf	3,6	;RP1=0, select bank0
  2179  0703  082B               	movf	?___awmod,w
  2180  0704  00B2               	movwf	??_checkCount
  2181  0705  0832               	movf	??_checkCount,w
  2182  0706  00DA               	movwf	_con+5
  2183  0707                     l1235:	
  2184                           
  2185                           ;mainsource.c: 91:             drawFigure();
  2186  0707  120A  118A  2604  120A  118A  	fcall	_drawFigure
  2187  070C                     l1237:	
  2188  070C                     l1239:	
  2189  070C                     l1241:	
  2190  070C                     l1243:	
  2191                           
  2192                           ;mainsource.c: 95:             for(i=0; i<8; i++){
  2193  070C  1283               	bcf	3,5	;RP0=0, select bank0
  2194  070D  1303               	bcf	3,6	;RP1=0, select bank0
  2195  070E  01BE               	clrf	checkCount@i
  2196  070F  01BF               	clrf	checkCount@i+1
  2197  0710                     l1249:	
  2198                           
  2199                           ;mainsource.c: 96:                 pantalla[i] = ficha[i] | fondo[i];
  2200  0710  1283               	bcf	3,5	;RP0=0, select bank0
  2201  0711  1303               	bcf	3,6	;RP1=0, select bank0
  2202  0712  083E               	movf	checkCount@i,w
  2203  0713  00B2               	movwf	??_checkCount
  2204  0714  0732               	addwf	??_checkCount,w
  2205  0715  3E45               	addlw	(low (_fondo| 0))& (0+255)
  2206  0716  0084               	movwf	4
  2207  0717  1383               	bcf	3,7	;select IRP bank0
  2208  0718  0800               	movf	0,w
  2209  0719  00B3               	movwf	??_checkCount+1
  2210  071A  0A84               	incf	4,f
  2211  071B  0800               	movf	0,w
  2212  071C  00B4               	movwf	??_checkCount+2
  2213  071D  083E               	movf	checkCount@i,w
  2214  071E  00B5               	movwf	??_checkCount+3
  2215  071F  0735               	addwf	??_checkCount+3,w
  2216  0720  3ED0               	addlw	(low (_ficha| 0))& (0+255)
  2217  0721  0084               	movwf	4
  2218  0722  0800               	movf	0,w
  2219  0723  00B6               	movwf	??_checkCount+4
  2220  0724  0A84               	incf	4,f
  2221  0725  0800               	movf	0,w
  2222  0726  00B7               	movwf	??_checkCount+5
  2223  0727  0833               	movf	??_checkCount+1,w
  2224  0728  0436               	iorwf	??_checkCount+4,w
  2225  0729  00B8               	movwf	??_checkCount+6
  2226  072A  0834               	movf	??_checkCount+2,w
  2227  072B  0437               	iorwf	??_checkCount+5,w
  2228  072C  00B9               	movwf	??_checkCount+7
  2229  072D  083E               	movf	checkCount@i,w
  2230  072E  00BA               	movwf	??_checkCount+8
  2231  072F  073A               	addwf	??_checkCount+8,w
  2232  0730  3EE0               	addlw	(low (_pantalla| 0))& (0+255)
  2233  0731  0084               	movwf	4
  2234  0732  0838               	movf	??_checkCount+6,w
  2235  0733  0080               	movwf	0
  2236  0734  0A84               	incf	4,f
  2237  0735  0839               	movf	??_checkCount+7,w
  2238  0736  0080               	movwf	0
  2239  0737                     l1251:	
  2240                           
  2241                           ;mainsource.c: 97:             }
  2242  0737  3001               	movlw	1
  2243  0738  07BE               	addwf	checkCount@i,f
  2244  0739  1803               	skipnc
  2245  073A  0ABF               	incf	checkCount@i+1,f
  2246  073B  3000               	movlw	0
  2247  073C  07BF               	addwf	checkCount@i+1,f
  2248  073D                     l1253:	
  2249  073D  083F               	movf	checkCount@i+1,w
  2250  073E  3A80               	xorlw	128
  2251  073F  00FF               	movwf	btemp+1
  2252  0740  3080               	movlw	128
  2253  0741  027F               	subwf	btemp+1,w
  2254  0742  1D03               	skipz
  2255  0743  2F46               	goto	u815
  2256  0744  3008               	movlw	8
  2257  0745  023E               	subwf	checkCount@i,w
  2258  0746                     u815:	
  2259  0746  1C03               	skipc
  2260  0747  2F49               	goto	u811
  2261  0748  2F4A               	goto	u810
  2262  0749                     u811:	
  2263  0749  2F10               	goto	l1249
  2264  074A                     u810:	
  2265  074A                     l1255:	
  2266                           
  2267                           ;mainsource.c: 99:             for(i=con.ficha_Hpos; i<(con.ficha_Hpos+3); i++){
  2268  074A  1283               	bcf	3,5	;RP0=0, select bank0
  2269  074B  1303               	bcf	3,6	;RP1=0, select bank0
  2270  074C  0859               	movf	_con+4,w
  2271  074D  00B2               	movwf	??_checkCount
  2272  074E  01B3               	clrf	??_checkCount+1
  2273  074F  0832               	movf	??_checkCount,w
  2274  0750  00BE               	movwf	checkCount@i
  2275  0751  0833               	movf	??_checkCount+1,w
  2276  0752  00BF               	movwf	checkCount@i+1
  2277  0753  2FB8               	goto	l84
  2278  0754                     l1257:	
  2279                           
  2280                           ;mainsource.c: 100:                 condicion = ficha[i]>>1 & fondo[i];
  2281  0754  1283               	bcf	3,5	;RP0=0, select bank0
  2282  0755  1303               	bcf	3,6	;RP1=0, select bank0
  2283  0756  083E               	movf	checkCount@i,w
  2284  0757  00B2               	movwf	??_checkCount
  2285  0758  0732               	addwf	??_checkCount,w
  2286  0759  3E45               	addlw	(low (_fondo| 0))& (0+255)
  2287  075A  0084               	movwf	4
  2288  075B  1383               	bcf	3,7	;select IRP bank0
  2289  075C  0800               	movf	0,w
  2290  075D  00B3               	movwf	??_checkCount+1
  2291  075E  083E               	movf	checkCount@i,w
  2292  075F  00B4               	movwf	??_checkCount+2
  2293  0760  0734               	addwf	??_checkCount+2,w
  2294  0761  3ED0               	addlw	(low (_ficha| 0))& (0+255)
  2295  0762  0084               	movwf	4
  2296  0763  0800               	movf	0,w
  2297  0764  00B5               	movwf	??_checkCount+3
  2298  0765  0A84               	incf	4,f
  2299  0766  0800               	movf	0,w
  2300  0767  00B6               	movwf	??_checkCount+4
  2301  0768  1003               	clrc
  2302  0769  0CB6               	rrf	??_checkCount+4,f
  2303  076A  0CB5               	rrf	??_checkCount+3,f
  2304  076B  0835               	movf	??_checkCount+3,w
  2305  076C  0533               	andwf	??_checkCount+1,w
  2306  076D  00B7               	movwf	??_checkCount+5
  2307  076E  0837               	movf	??_checkCount+5,w
  2308  076F  00BB               	movwf	checkCount@condicion
  2309  0770                     l1259:	
  2310                           
  2311                           ;mainsource.c: 101:                 if(condicion != 0){
  2312  0770  083B               	movf	checkCount@condicion,w
  2313  0771  1903               	btfsc	3,2
  2314  0772  2F74               	goto	u821
  2315  0773  2F75               	goto	u820
  2316  0774                     u821:	
  2317  0774  2FB2               	goto	l1273
  2318  0775                     u820:	
  2319  0775                     l1261:	
  2320                           
  2321                           ;mainsource.c: 102:                     for(j=0; j<8; j++){
  2322  0775  01BC               	clrf	checkCount@j
  2323  0776  01BD               	clrf	checkCount@j+1
  2324  0777                     l1267:	
  2325                           
  2326                           ;mainsource.c: 103:                         fondo[j] = fondo[j] | ficha[j];
  2327  0777  1283               	bcf	3,5	;RP0=0, select bank0
  2328  0778  1303               	bcf	3,6	;RP1=0, select bank0
  2329  0779  083C               	movf	checkCount@j,w
  2330  077A  00B2               	movwf	??_checkCount
  2331  077B  0732               	addwf	??_checkCount,w
  2332  077C  3ED0               	addlw	(low (_ficha| 0))& (0+255)
  2333  077D  0084               	movwf	4
  2334  077E  1383               	bcf	3,7	;select IRP bank1
  2335  077F  0800               	movf	0,w
  2336  0780  00B3               	movwf	??_checkCount+1
  2337  0781  0A84               	incf	4,f
  2338  0782  0800               	movf	0,w
  2339  0783  00B4               	movwf	??_checkCount+2
  2340  0784  083C               	movf	checkCount@j,w
  2341  0785  00B5               	movwf	??_checkCount+3
  2342  0786  0735               	addwf	??_checkCount+3,w
  2343  0787  3E45               	addlw	(low (_fondo| 0))& (0+255)
  2344  0788  0084               	movwf	4
  2345  0789  0800               	movf	0,w
  2346  078A  00B6               	movwf	??_checkCount+4
  2347  078B  0A84               	incf	4,f
  2348  078C  0800               	movf	0,w
  2349  078D  00B7               	movwf	??_checkCount+5
  2350  078E  0833               	movf	??_checkCount+1,w
  2351  078F  0436               	iorwf	??_checkCount+4,w
  2352  0790  00B8               	movwf	??_checkCount+6
  2353  0791  0834               	movf	??_checkCount+2,w
  2354  0792  0437               	iorwf	??_checkCount+5,w
  2355  0793  00B9               	movwf	??_checkCount+7
  2356  0794  083C               	movf	checkCount@j,w
  2357  0795  00BA               	movwf	??_checkCount+8
  2358  0796  073A               	addwf	??_checkCount+8,w
  2359  0797  3E45               	addlw	(low (_fondo| 0))& (0+255)
  2360  0798  0084               	movwf	4
  2361  0799  0838               	movf	??_checkCount+6,w
  2362  079A  0080               	movwf	0
  2363  079B  0A84               	incf	4,f
  2364  079C  0839               	movf	??_checkCount+7,w
  2365  079D  0080               	movwf	0
  2366  079E                     l1269:	
  2367                           
  2368                           ;mainsource.c: 104:                     }
  2369  079E  3001               	movlw	1
  2370  079F  07BC               	addwf	checkCount@j,f
  2371  07A0  1803               	skipnc
  2372  07A1  0ABD               	incf	checkCount@j+1,f
  2373  07A2  3000               	movlw	0
  2374  07A3  07BD               	addwf	checkCount@j+1,f
  2375  07A4                     l1271:	
  2376  07A4  083D               	movf	checkCount@j+1,w
  2377  07A5  3A80               	xorlw	128
  2378  07A6  00FF               	movwf	btemp+1
  2379  07A7  3080               	movlw	128
  2380  07A8  027F               	subwf	btemp+1,w
  2381  07A9  1D03               	skipz
  2382  07AA  2FAD               	goto	u835
  2383  07AB  3008               	movlw	8
  2384  07AC  023C               	subwf	checkCount@j,w
  2385  07AD                     u835:	
  2386  07AD  1C03               	skipc
  2387  07AE  2FB0               	goto	u831
  2388  07AF  2FB1               	goto	u830
  2389  07B0                     u831:	
  2390  07B0  2F77               	goto	l1267
  2391  07B1                     u830:	
  2392  07B1  2FCD               	goto	l1275
  2393  07B2                     l1273:	
  2394                           
  2395                           ;mainsource.c: 107:             }
  2396  07B2  3001               	movlw	1
  2397  07B3  07BE               	addwf	checkCount@i,f
  2398  07B4  1803               	skipnc
  2399  07B5  0ABF               	incf	checkCount@i+1,f
  2400  07B6  3000               	movlw	0
  2401  07B7  07BF               	addwf	checkCount@i+1,f
  2402  07B8                     l84:	
  2403  07B8  0859               	movf	_con+4,w
  2404  07B9  3E03               	addlw	3
  2405  07BA  00B2               	movwf	??_checkCount
  2406  07BB  3000               	movlw	0
  2407  07BC  1803               	skipnc
  2408  07BD  3001               	movlw	1
  2409  07BE  00B3               	movwf	??_checkCount+1
  2410  07BF  083F               	movf	checkCount@i+1,w
  2411  07C0  3A80               	xorlw	128
  2412  07C1  00B4               	movwf	??_checkCount+2
  2413  07C2  0833               	movf	??_checkCount+1,w
  2414  07C3  3A80               	xorlw	128
  2415  07C4  0234               	subwf	??_checkCount+2,w
  2416  07C5  1D03               	skipz
  2417  07C6  2FC9               	goto	u845
  2418  07C7  0832               	movf	??_checkCount,w
  2419  07C8  023E               	subwf	checkCount@i,w
  2420  07C9                     u845:	
  2421  07C9  1C03               	skipc
  2422  07CA  2FCC               	goto	u841
  2423  07CB  2FCD               	goto	u840
  2424  07CC                     u841:	
  2425  07CC  2F54               	goto	l1257
  2426  07CD                     u840:	
  2427  07CD                     l1275:	
  2428                           
  2429                           ;mainsource.c: 110:         con.check_count = 0;
  2430  07CD  1283               	bcf	3,5	;RP0=0, select bank0
  2431  07CE  1303               	bcf	3,6	;RP1=0, select bank0
  2432  07CF  01DD               	clrf	_con+8
  2433  07D0                     l90:	
  2434  07D0  0008               	return
  2435  07D1                     __end_of_checkCount:	
  2436                           
  2437                           	psect	text16
  2438  0484                     __ptext16:	
  2439 ;; *************** function _rand *****************
  2440 ;; Defined at:
  2441 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  2442 ;; Parameters:    Size  Location     Type
  2443 ;;		None
  2444 ;; Auto vars:     Size  Location     Type
  2445 ;;		None
  2446 ;; Return value:  Size  Location     Type
  2447 ;;                  2    4[BANK0 ] int 
  2448 ;; Registers used:
  2449 ;;		wreg, status,2, status,0, pclath, cstack
  2450 ;; Tracked objects:
  2451 ;;		On entry : 0/0
  2452 ;;		On exit  : 0/0
  2453 ;;		Unchanged: 0/0
  2454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2455 ;;      Params:         0       2       0       0       0
  2456 ;;      Locals:         0       0       0       0       0
  2457 ;;      Temps:          0       5       0       0       0
  2458 ;;      Totals:         0       7       0       0       0
  2459 ;;Total ram usage:        7 bytes
  2460 ;; Hardware stack levels used:    1
  2461 ;; Hardware stack levels required when called:    2
  2462 ;; This function calls:
  2463 ;;		___lmul
  2464 ;; This function is called by:
  2465 ;;		_checkCount
  2466 ;; This function uses a non-reentrant model
  2467 ;;
  2468                           
  2469                           
  2470                           ;psect for function _rand
  2471  0484                     _rand:	
  2472  0484                     l1099:	
  2473                           ;incstack = 0
  2474                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  2475                           
  2476  0484  1283               	bcf	3,5	;RP0=0, select bank0
  2477  0485  1303               	bcf	3,6	;RP1=0, select bank0
  2478  0486  0863               	movf	_randx+3,w
  2479  0487  00F6               	movwf	___lmul@multiplier+3
  2480  0488  0862               	movf	_randx+2,w
  2481  0489  00F5               	movwf	___lmul@multiplier+2
  2482  048A  0861               	movf	_randx+1,w
  2483  048B  00F4               	movwf	___lmul@multiplier+1
  2484  048C  0860               	movf	_randx,w
  2485  048D  00F3               	movwf	___lmul@multiplier
  2486  048E  3041               	movlw	65
  2487  048F  00FA               	movwf	___lmul@multiplicand+3
  2488  0490  30C6               	movlw	198
  2489  0491  00F9               	movwf	___lmul@multiplicand+2
  2490  0492  304E               	movlw	78
  2491  0493  00F8               	movwf	___lmul@multiplicand+1
  2492  0494  306D               	movlw	109
  2493  0495  00F7               	movwf	___lmul@multiplicand
  2494  0496  120A  118A  255D  120A  118A  	fcall	___lmul
  2495  049B  0876               	movf	?___lmul+3,w
  2496  049C  1283               	bcf	3,5	;RP0=0, select bank0
  2497  049D  1303               	bcf	3,6	;RP1=0, select bank0
  2498  049E  00E3               	movwf	_randx+3
  2499  049F  0875               	movf	?___lmul+2,w
  2500  04A0  00E2               	movwf	_randx+2
  2501  04A1  0874               	movf	?___lmul+1,w
  2502  04A2  00E1               	movwf	_randx+1
  2503  04A3  0873               	movf	?___lmul,w
  2504  04A4  00E0               	movwf	_randx
  2505  04A5                     l1101:	
  2506  04A5  3039               	movlw	57
  2507  04A6  07E0               	addwf	_randx,f
  2508  04A7  3030               	movlw	48
  2509  04A8  1803               	skipnc
  2510  04A9  3031               	movlw	49
  2511  04AA  07E1               	addwf	_randx+1,f
  2512  04AB  3000               	movlw	0
  2513  04AC  1803               	skipnc
  2514  04AD  3001               	movlw	1
  2515  04AE  07E2               	addwf	_randx+2,f
  2516  04AF  3000               	movlw	0
  2517  04B0  1803               	skipnc
  2518  04B1  3001               	movlw	1
  2519  04B2  07E3               	addwf	_randx+3,f
  2520  04B3                     l1103:	
  2521  04B3  0860               	movf	_randx,w
  2522  04B4  00A6               	movwf	??_rand
  2523  04B5  0861               	movf	_randx+1,w
  2524  04B6  00A7               	movwf	??_rand+1
  2525  04B7  0862               	movf	_randx+2,w
  2526  04B8  00A8               	movwf	??_rand+2
  2527  04B9  0863               	movf	_randx+3,w
  2528  04BA  00A9               	movwf	??_rand+3
  2529  04BB  3010               	movlw	16
  2530  04BC  00AA               	movwf	??_rand+4
  2531  04BD                     u535:	
  2532  04BD  0D29               	rlf	??_rand+3,w
  2533  04BE  0CA9               	rrf	??_rand+3,f
  2534  04BF  0CA8               	rrf	??_rand+2,f
  2535  04C0  0CA7               	rrf	??_rand+1,f
  2536  04C1  0CA6               	rrf	??_rand,f
  2537  04C2                     u530:	
  2538  04C2  0BAA               	decfsz	??_rand+4,f
  2539  04C3  2CBD               	goto	u535
  2540  04C4  30FF               	movlw	255
  2541  04C5  0526               	andwf	??_rand,w
  2542  04C6  00A4               	movwf	?_rand
  2543  04C7  307F               	movlw	127
  2544  04C8  0527               	andwf	??_rand+1,w
  2545  04C9  00A5               	movwf	?_rand+1
  2546  04CA                     l705:	
  2547  04CA  0008               	return
  2548  04CB                     __end_of_rand:	
  2549                           
  2550                           	psect	text17
  2551  055D                     __ptext17:	
  2552 ;; *************** function ___lmul *****************
  2553 ;; Defined at:
  2554 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  2555 ;; Parameters:    Size  Location     Type
  2556 ;;  multiplier      4    2[COMMON] unsigned long 
  2557 ;;  multiplicand    4    6[COMMON] unsigned long 
  2558 ;; Auto vars:     Size  Location     Type
  2559 ;;  product         4    0[BANK0 ] unsigned long 
  2560 ;; Return value:  Size  Location     Type
  2561 ;;                  4    2[COMMON] unsigned long 
  2562 ;; Registers used:
  2563 ;;		wreg, status,2, status,0
  2564 ;; Tracked objects:
  2565 ;;		On entry : 0/0
  2566 ;;		On exit  : 0/0
  2567 ;;		Unchanged: 0/0
  2568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2569 ;;      Params:         8       0       0       0       0
  2570 ;;      Locals:         0       4       0       0       0
  2571 ;;      Temps:          1       0       0       0       0
  2572 ;;      Totals:         9       4       0       0       0
  2573 ;;Total ram usage:       13 bytes
  2574 ;; Hardware stack levels used:    1
  2575 ;; Hardware stack levels required when called:    1
  2576 ;; This function calls:
  2577 ;;		Nothing
  2578 ;; This function is called by:
  2579 ;;		_rand
  2580 ;; This function uses a non-reentrant model
  2581 ;;
  2582                           
  2583                           
  2584                           ;psect for function ___lmul
  2585  055D                     ___lmul:	
  2586  055D                     l1079:	
  2587                           ;incstack = 0
  2588                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2589                           
  2590  055D  3000               	movlw	0
  2591  055E  1283               	bcf	3,5	;RP0=0, select bank0
  2592  055F  1303               	bcf	3,6	;RP1=0, select bank0
  2593  0560  00A3               	movwf	___lmul@product+3
  2594  0561  3000               	movlw	0
  2595  0562  00A2               	movwf	___lmul@product+2
  2596  0563  3000               	movlw	0
  2597  0564  00A1               	movwf	___lmul@product+1
  2598  0565  3000               	movlw	0
  2599  0566  00A0               	movwf	___lmul@product
  2600  0567                     l1081:	
  2601  0567  1C73               	btfss	___lmul@multiplier,0
  2602  0568  2D6A               	goto	u481
  2603  0569  2D6B               	goto	u480
  2604  056A                     u481:	
  2605  056A  2D84               	goto	l1085
  2606  056B                     u480:	
  2607  056B                     l1083:	
  2608  056B  0877               	movf	___lmul@multiplicand,w
  2609  056C  1283               	bcf	3,5	;RP0=0, select bank0
  2610  056D  1303               	bcf	3,6	;RP1=0, select bank0
  2611  056E  07A0               	addwf	___lmul@product,f
  2612  056F  0878               	movf	___lmul@multiplicand+1,w
  2613  0570  1103               	clrz
  2614  0571  1803               	skipnc
  2615  0572  3E01               	addlw	1
  2616  0573  1903               	skipnz
  2617  0574  2D76               	goto	u491
  2618  0575  07A1               	addwf	___lmul@product+1,f
  2619  0576                     u491:	
  2620  0576  0879               	movf	___lmul@multiplicand+2,w
  2621  0577  1103               	clrz
  2622  0578  1803               	skipnc
  2623  0579  3E01               	addlw	1
  2624  057A  1903               	skipnz
  2625  057B  2D7D               	goto	u492
  2626  057C  07A2               	addwf	___lmul@product+2,f
  2627  057D                     u492:	
  2628  057D  087A               	movf	___lmul@multiplicand+3,w
  2629  057E  1103               	clrz
  2630  057F  1803               	skipnc
  2631  0580  3E01               	addlw	1
  2632  0581  1903               	skipnz
  2633  0582  2D84               	goto	u493
  2634  0583  07A3               	addwf	___lmul@product+3,f
  2635  0584                     u493:	
  2636  0584                     l1085:	
  2637  0584  3001               	movlw	1
  2638  0585  00FB               	movwf	??___lmul
  2639  0586                     u505:	
  2640  0586  1003               	clrc
  2641  0587  0DF7               	rlf	___lmul@multiplicand,f
  2642  0588  0DF8               	rlf	___lmul@multiplicand+1,f
  2643  0589  0DF9               	rlf	___lmul@multiplicand+2,f
  2644  058A  0DFA               	rlf	___lmul@multiplicand+3,f
  2645  058B  0BFB               	decfsz	??___lmul,f
  2646  058C  2D86               	goto	u505
  2647  058D                     l1087:	
  2648  058D  3001               	movlw	1
  2649  058E                     u515:	
  2650  058E  1003               	clrc
  2651  058F  0CF6               	rrf	___lmul@multiplier+3,f
  2652  0590  0CF5               	rrf	___lmul@multiplier+2,f
  2653  0591  0CF4               	rrf	___lmul@multiplier+1,f
  2654  0592  0CF3               	rrf	___lmul@multiplier,f
  2655  0593  3EFF               	addlw	-1
  2656  0594  1D03               	skipz
  2657  0595  2D8E               	goto	u515
  2658  0596  0876               	movf	___lmul@multiplier+3,w
  2659  0597  0475               	iorwf	___lmul@multiplier+2,w
  2660  0598  0474               	iorwf	___lmul@multiplier+1,w
  2661  0599  0473               	iorwf	___lmul@multiplier,w
  2662  059A  1D03               	skipz
  2663  059B  2D9D               	goto	u521
  2664  059C  2D9E               	goto	u520
  2665  059D                     u521:	
  2666  059D  2D67               	goto	l1081
  2667  059E                     u520:	
  2668  059E                     l1089:	
  2669  059E  1283               	bcf	3,5	;RP0=0, select bank0
  2670  059F  1303               	bcf	3,6	;RP1=0, select bank0
  2671  05A0  0823               	movf	___lmul@product+3,w
  2672  05A1  00F6               	movwf	?___lmul+3
  2673  05A2  0822               	movf	___lmul@product+2,w
  2674  05A3  00F5               	movwf	?___lmul+2
  2675  05A4  0821               	movf	___lmul@product+1,w
  2676  05A5  00F4               	movwf	?___lmul+1
  2677  05A6  0820               	movf	___lmul@product,w
  2678  05A7  00F3               	movwf	?___lmul
  2679  05A8                     l263:	
  2680  05A8  0008               	return
  2681  05A9                     __end_of___lmul:	
  2682                           
  2683                           	psect	text18
  2684  0604                     __ptext18:	
  2685 ;; *************** function _drawFigure *****************
  2686 ;; Defined at:
  2687 ;;		line 36 in file "screen.c"
  2688 ;; Parameters:    Size  Location     Type
  2689 ;;		None
  2690 ;; Auto vars:     Size  Location     Type
  2691 ;;		None
  2692 ;; Return value:  Size  Location     Type
  2693 ;;                  1    wreg      void 
  2694 ;; Registers used:
  2695 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2696 ;; Tracked objects:
  2697 ;;		On entry : 0/0
  2698 ;;		On exit  : 0/0
  2699 ;;		Unchanged: 0/0
  2700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2701 ;;      Params:         0       0       0       0       0
  2702 ;;      Locals:         0       0       0       0       0
  2703 ;;      Temps:          0       5       0       0       0
  2704 ;;      Totals:         0       5       0       0       0
  2705 ;;Total ram usage:        5 bytes
  2706 ;; Hardware stack levels used:    1
  2707 ;; Hardware stack levels required when called:    2
  2708 ;; This function calls:
  2709 ;;		_memset
  2710 ;; This function is called by:
  2711 ;;		_checkCount
  2712 ;; This function uses a non-reentrant model
  2713 ;;
  2714                           
  2715                           
  2716                           ;psect for function _drawFigure
  2717  0604                     _drawFigure:	
  2718  0604                     l1107:	
  2719                           ;incstack = 0
  2720                           ; Regs used in _drawFigure: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2721                           
  2722                           
  2723                           ;screen.c: 37:     memset(ficha, 0, sizeof(ficha));
  2724  0604  3000               	movlw	0
  2725  0605  00F3               	movwf	memset@c
  2726  0606  00F4               	movwf	memset@c+1
  2727  0607  3010               	movlw	16
  2728  0608  00F5               	movwf	memset@n
  2729  0609  3000               	movlw	0
  2730  060A  00F6               	movwf	memset@n+1
  2731  060B  30D0               	movlw	(low (_ficha| 0))& (0+255)
  2732  060C  120A  118A  23B6  120A  118A  	fcall	_memset
  2733  0611                     l1109:	
  2734                           
  2735                           ;screen.c: 38:     if(con.derecha == 1 && con.ficha_Hpos<4){
  2736  0611  1283               	bcf	3,5	;RP0=0, select bank0
  2737  0612  1303               	bcf	3,6	;RP1=0, select bank0
  2738  0613  035B               	decf	_con+6,w
  2739  0614  1D03               	btfss	3,2
  2740  0615  2E17               	goto	u541
  2741  0616  2E18               	goto	u540
  2742  0617                     u541:	
  2743  0617  2E24               	goto	l1117
  2744  0618                     u540:	
  2745  0618                     l1111:	
  2746  0618  3004               	movlw	4
  2747  0619  0259               	subwf	_con+4,w
  2748  061A  1803               	skipnc
  2749  061B  2E1D               	goto	u551
  2750  061C  2E1E               	goto	u550
  2751  061D                     u551:	
  2752  061D  2E24               	goto	l1117
  2753  061E                     u550:	
  2754  061E                     l1113:	
  2755                           
  2756                           ;screen.c: 39:         con.ficha_Hpos++;
  2757  061E  3001               	movlw	1
  2758  061F  00A0               	movwf	??_drawFigure
  2759  0620  0820               	movf	??_drawFigure,w
  2760  0621  07D9               	addwf	_con+4,f
  2761  0622                     l1115:	
  2762                           
  2763                           ;screen.c: 40:         con.derecha = 0;
  2764  0622  01DB               	clrf	_con+6
  2765                           
  2766                           ;screen.c: 41:     }else if (con.izquierda == 1 && con.ficha_Hpos>0){
  2767  0623  2E31               	goto	l1125
  2768  0624                     l1117:	
  2769  0624  035C               	decf	_con+7,w
  2770  0625  1D03               	btfss	3,2
  2771  0626  2E28               	goto	u561
  2772  0627  2E29               	goto	u560
  2773  0628                     u561:	
  2774  0628  2E31               	goto	l1125
  2775  0629                     u560:	
  2776  0629                     l1119:	
  2777  0629  0859               	movf	_con+4,w
  2778  062A  1903               	btfsc	3,2
  2779  062B  2E2D               	goto	u571
  2780  062C  2E2E               	goto	u570
  2781  062D                     u571:	
  2782  062D  2E31               	goto	l1125
  2783  062E                     u570:	
  2784  062E                     l1121:	
  2785                           
  2786                           ;screen.c: 42:         con.ficha_Hpos--;
  2787  062E  3001               	movlw	1
  2788  062F  02D9               	subwf	_con+4,f
  2789  0630                     l1123:	
  2790                           
  2791                           ;screen.c: 43:         con.izquierda = 0;
  2792  0630  01DC               	clrf	_con+7
  2793  0631                     l1125:	
  2794                           
  2795                           ;screen.c: 46:     ficha[con.ficha_Hpos ] = figuras[con.ficha_actual][0] << (con.ficha_V
      +                          pos -1);
  2796  0631  0858               	movf	_con+3,w
  2797  0632  3EFF               	addlw	-1
  2798  0633  00A0               	movwf	??_drawFigure
  2799  0634  0AA0               	incf	??_drawFigure,f
  2800  0635  085A               	movf	_con+5,w
  2801  0636  00A1               	movwf	??_drawFigure+1
  2802  0637  3002               	movlw	2
  2803  0638                     u585:	
  2804  0638  1003               	clrc
  2805  0639  0DA1               	rlf	??_drawFigure+1,f
  2806  063A  3EFF               	addlw	-1
  2807  063B  1D03               	skipz
  2808  063C  2E38               	goto	u585
  2809  063D  1003               	clrc
  2810  063E  0D21               	rlf	??_drawFigure+1,w
  2811  063F  3EA0               	addlw	(low (_figuras| 0))& (0+255)
  2812  0640  0084               	movwf	4
  2813  0641  1383               	bcf	3,7	;select IRP bank1
  2814  0642  0800               	movf	0,w
  2815  0643  00A2               	movwf	??_drawFigure+2
  2816  0644  0A84               	incf	4,f
  2817  0645  0800               	movf	0,w
  2818  0646  00A3               	movwf	??_drawFigure+3
  2819  0647  2E4B               	goto	u594
  2820  0648                     u595:	
  2821  0648  1003               	clrc
  2822  0649  0DA2               	rlf	??_drawFigure+2,f
  2823  064A  0DA3               	rlf	??_drawFigure+3,f
  2824  064B                     u594:	
  2825  064B  0BA0               	decfsz	??_drawFigure,f
  2826  064C  2E48               	goto	u595
  2827  064D  0859               	movf	_con+4,w
  2828  064E  00A4               	movwf	??_drawFigure+4
  2829  064F  0724               	addwf	??_drawFigure+4,w
  2830  0650  3ED0               	addlw	(low (_ficha| 0))& (0+255)
  2831  0651  0084               	movwf	4
  2832  0652  0822               	movf	??_drawFigure+2,w
  2833  0653  0080               	movwf	0
  2834  0654  0A84               	incf	4,f
  2835  0655  0823               	movf	??_drawFigure+3,w
  2836  0656  0080               	movwf	0
  2837  0657                     l1127:	
  2838                           
  2839                           ;screen.c: 47:     ficha[con.ficha_Hpos +1] = figuras[con.ficha_actual][1] << (con.ficha
      +                          _Vpos -1);
  2840  0657  0858               	movf	_con+3,w
  2841  0658  3EFF               	addlw	-1
  2842  0659  00A0               	movwf	??_drawFigure
  2843  065A  0AA0               	incf	??_drawFigure,f
  2844  065B  085A               	movf	_con+5,w
  2845  065C  00A1               	movwf	??_drawFigure+1
  2846  065D  3002               	movlw	2
  2847  065E                     u605:	
  2848  065E  1003               	clrc
  2849  065F  0DA1               	rlf	??_drawFigure+1,f
  2850  0660  3EFF               	addlw	-1
  2851  0661  1D03               	skipz
  2852  0662  2E5E               	goto	u605
  2853  0663  1003               	clrc
  2854  0664  0D21               	rlf	??_drawFigure+1,w
  2855  0665  3EA2               	addlw	(low ((_figuras| 0+2)))& (0+255)
  2856  0666  0084               	movwf	4
  2857  0667  0800               	movf	0,w
  2858  0668  00A2               	movwf	??_drawFigure+2
  2859  0669  0A84               	incf	4,f
  2860  066A  0800               	movf	0,w
  2861  066B  00A3               	movwf	??_drawFigure+3
  2862  066C  2E70               	goto	u614
  2863  066D                     u615:	
  2864  066D  1003               	clrc
  2865  066E  0DA2               	rlf	??_drawFigure+2,f
  2866  066F  0DA3               	rlf	??_drawFigure+3,f
  2867  0670                     u614:	
  2868  0670  0BA0               	decfsz	??_drawFigure,f
  2869  0671  2E6D               	goto	u615
  2870  0672  0859               	movf	_con+4,w
  2871  0673  00A4               	movwf	??_drawFigure+4
  2872  0674  0724               	addwf	??_drawFigure+4,w
  2873  0675  3ED2               	addlw	(low ((_ficha| 0+2)))& (0+255)
  2874  0676  0084               	movwf	4
  2875  0677  0822               	movf	??_drawFigure+2,w
  2876  0678  0080               	movwf	0
  2877  0679  0A84               	incf	4,f
  2878  067A  0823               	movf	??_drawFigure+3,w
  2879  067B  0080               	movwf	0
  2880  067C                     l1129:	
  2881                           
  2882                           ;screen.c: 48:     ficha[con.ficha_Hpos +2] = figuras[con.ficha_actual][2] << (con.ficha
      +                          _Vpos -1);
  2883  067C  0858               	movf	_con+3,w
  2884  067D  3EFF               	addlw	-1
  2885  067E  00A0               	movwf	??_drawFigure
  2886  067F  0AA0               	incf	??_drawFigure,f
  2887  0680  085A               	movf	_con+5,w
  2888  0681  00A1               	movwf	??_drawFigure+1
  2889  0682  3002               	movlw	2
  2890  0683                     u625:	
  2891  0683  1003               	clrc
  2892  0684  0DA1               	rlf	??_drawFigure+1,f
  2893  0685  3EFF               	addlw	-1
  2894  0686  1D03               	skipz
  2895  0687  2E83               	goto	u625
  2896  0688  1003               	clrc
  2897  0689  0D21               	rlf	??_drawFigure+1,w
  2898  068A  3EA4               	addlw	(low ((_figuras| 0+4)))& (0+255)
  2899  068B  0084               	movwf	4
  2900  068C  0800               	movf	0,w
  2901  068D  00A2               	movwf	??_drawFigure+2
  2902  068E  0A84               	incf	4,f
  2903  068F  0800               	movf	0,w
  2904  0690  00A3               	movwf	??_drawFigure+3
  2905  0691  2E95               	goto	u634
  2906  0692                     u635:	
  2907  0692  1003               	clrc
  2908  0693  0DA2               	rlf	??_drawFigure+2,f
  2909  0694  0DA3               	rlf	??_drawFigure+3,f
  2910  0695                     u634:	
  2911  0695  0BA0               	decfsz	??_drawFigure,f
  2912  0696  2E92               	goto	u635
  2913  0697  0859               	movf	_con+4,w
  2914  0698  00A4               	movwf	??_drawFigure+4
  2915  0699  0724               	addwf	??_drawFigure+4,w
  2916  069A  3ED4               	addlw	(low ((_ficha| 0+4)))& (0+255)
  2917  069B  0084               	movwf	4
  2918  069C  0822               	movf	??_drawFigure+2,w
  2919  069D  0080               	movwf	0
  2920  069E  0A84               	incf	4,f
  2921  069F  0823               	movf	??_drawFigure+3,w
  2922  06A0  0080               	movwf	0
  2923  06A1                     l1131:	
  2924                           
  2925                           ;screen.c: 49:     ficha[con.ficha_Hpos +3] = figuras[con.ficha_actual][3] << (con.ficha
      +                          _Vpos -1);
  2926  06A1  0858               	movf	_con+3,w
  2927  06A2  3EFF               	addlw	-1
  2928  06A3  00A0               	movwf	??_drawFigure
  2929  06A4  0AA0               	incf	??_drawFigure,f
  2930  06A5  085A               	movf	_con+5,w
  2931  06A6  00A1               	movwf	??_drawFigure+1
  2932  06A7  3002               	movlw	2
  2933  06A8                     u645:	
  2934  06A8  1003               	clrc
  2935  06A9  0DA1               	rlf	??_drawFigure+1,f
  2936  06AA  3EFF               	addlw	-1
  2937  06AB  1D03               	skipz
  2938  06AC  2EA8               	goto	u645
  2939  06AD  1003               	clrc
  2940  06AE  0D21               	rlf	??_drawFigure+1,w
  2941  06AF  3EA6               	addlw	(low ((_figuras| 0+6)))& (0+255)
  2942  06B0  0084               	movwf	4
  2943  06B1  0800               	movf	0,w
  2944  06B2  00A2               	movwf	??_drawFigure+2
  2945  06B3  0A84               	incf	4,f
  2946  06B4  0800               	movf	0,w
  2947  06B5  00A3               	movwf	??_drawFigure+3
  2948  06B6  2EBA               	goto	u654
  2949  06B7                     u655:	
  2950  06B7  1003               	clrc
  2951  06B8  0DA2               	rlf	??_drawFigure+2,f
  2952  06B9  0DA3               	rlf	??_drawFigure+3,f
  2953  06BA                     u654:	
  2954  06BA  0BA0               	decfsz	??_drawFigure,f
  2955  06BB  2EB7               	goto	u655
  2956  06BC  0859               	movf	_con+4,w
  2957  06BD  00A4               	movwf	??_drawFigure+4
  2958  06BE  0724               	addwf	??_drawFigure+4,w
  2959  06BF  3ED6               	addlw	(low ((_ficha| 0+6)))& (0+255)
  2960  06C0  0084               	movwf	4
  2961  06C1  0822               	movf	??_drawFigure+2,w
  2962  06C2  0080               	movwf	0
  2963  06C3  0A84               	incf	4,f
  2964  06C4  0823               	movf	??_drawFigure+3,w
  2965  06C5  0080               	movwf	0
  2966  06C6                     l163:	
  2967  06C6  0008               	return
  2968  06C7                     __end_of_drawFigure:	
  2969                           
  2970                           	psect	text19
  2971  03B6                     __ptext19:	
  2972 ;; *************** function _memset *****************
  2973 ;; Defined at:
  2974 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\memset.c"
  2975 ;; Parameters:    Size  Location     Type
  2976 ;;  p1              1    wreg     PTR void 
  2977 ;;		 -> ficha(16), 
  2978 ;;  c               2    2[COMMON] int 
  2979 ;;  n               2    4[COMMON] unsigned int 
  2980 ;; Auto vars:     Size  Location     Type
  2981 ;;  p1              1    7[COMMON] PTR void 
  2982 ;;		 -> ficha(16), 
  2983 ;;  p               1    8[COMMON] PTR unsigned char 
  2984 ;;		 -> ficha(16), 
  2985 ;; Return value:  Size  Location     Type
  2986 ;;                  1    wreg      PTR void 
  2987 ;; Registers used:
  2988 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2989 ;; Tracked objects:
  2990 ;;		On entry : 0/0
  2991 ;;		On exit  : 0/0
  2992 ;;		Unchanged: 0/0
  2993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2994 ;;      Params:         4       0       0       0       0
  2995 ;;      Locals:         2       0       0       0       0
  2996 ;;      Temps:          1       0       0       0       0
  2997 ;;      Totals:         7       0       0       0       0
  2998 ;;Total ram usage:        7 bytes
  2999 ;; Hardware stack levels used:    1
  3000 ;; Hardware stack levels required when called:    1
  3001 ;; This function calls:
  3002 ;;		Nothing
  3003 ;; This function is called by:
  3004 ;;		_drawFigure
  3005 ;; This function uses a non-reentrant model
  3006 ;;
  3007                           
  3008                           
  3009                           ;psect for function _memset
  3010  03B6                     _memset:	
  3011                           
  3012                           ;incstack = 0
  3013                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0]
  3014                           ;memset@p1 stored from wreg
  3015  03B6  00F8               	movwf	memset@p1
  3016  03B7                     l1071:	
  3017  03B7  0878               	movf	memset@p1,w
  3018  03B8  00F7               	movwf	??_memset
  3019  03B9  0877               	movf	??_memset,w
  3020  03BA  00F9               	movwf	memset@p
  3021  03BB  2BC7               	goto	l1077
  3022  03BC                     l1073:	
  3023  03BC  0873               	movf	memset@c,w
  3024  03BD  00F7               	movwf	??_memset
  3025  03BE  0879               	movf	memset@p,w
  3026  03BF  0084               	movwf	4
  3027  03C0  0877               	movf	??_memset,w
  3028  03C1  1383               	bcf	3,7	;select IRP bank0
  3029  03C2  0080               	movwf	0
  3030  03C3                     l1075:	
  3031  03C3  3001               	movlw	1
  3032  03C4  00F7               	movwf	??_memset
  3033  03C5  0877               	movf	??_memset,w
  3034  03C6  07F9               	addwf	memset@p,f
  3035  03C7                     l1077:	
  3036  03C7  3001               	movlw	1
  3037  03C8  02F5               	subwf	memset@n,f
  3038  03C9  3000               	movlw	0
  3039  03CA  1C03               	skipc
  3040  03CB  03F6               	decf	memset@n+1,f
  3041  03CC  02F6               	subwf	memset@n+1,f
  3042  03CD  0A75               	incf	memset@n,w
  3043  03CE  1D03               	skipz
  3044  03CF  2BD4               	goto	u471
  3045  03D0  0A76               	incf	memset@n+1,w
  3046  03D1  1D03               	btfss	3,2
  3047  03D2  2BD4               	goto	u471
  3048  03D3  2BD5               	goto	u470
  3049  03D4                     u471:	
  3050  03D4  2BBC               	goto	l1073
  3051  03D5                     u470:	
  3052  03D5                     l697:	
  3053  03D5  0008               	return
  3054  03D6                     __end_of_memset:	
  3055                           
  3056                           	psect	text20
  3057  05A9                     __ptext20:	
  3058 ;; *************** function ___awmod *****************
  3059 ;; Defined at:
  3060 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  3061 ;; Parameters:    Size  Location     Type
  3062 ;;  divisor         2   11[BANK0 ] int 
  3063 ;;  dividend        2   13[BANK0 ] int 
  3064 ;; Auto vars:     Size  Location     Type
  3065 ;;  sign            1   17[BANK0 ] unsigned char 
  3066 ;;  counter         1   16[BANK0 ] unsigned char 
  3067 ;; Return value:  Size  Location     Type
  3068 ;;                  2   11[BANK0 ] int 
  3069 ;; Registers used:
  3070 ;;		wreg, status,2, status,0
  3071 ;; Tracked objects:
  3072 ;;		On entry : 0/0
  3073 ;;		On exit  : 0/0
  3074 ;;		Unchanged: 0/0
  3075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3076 ;;      Params:         0       4       0       0       0
  3077 ;;      Locals:         0       2       0       0       0
  3078 ;;      Temps:          0       1       0       0       0
  3079 ;;      Totals:         0       7       0       0       0
  3080 ;;Total ram usage:        7 bytes
  3081 ;; Hardware stack levels used:    1
  3082 ;; Hardware stack levels required when called:    1
  3083 ;; This function calls:
  3084 ;;		Nothing
  3085 ;; This function is called by:
  3086 ;;		_checkCount
  3087 ;; This function uses a non-reentrant model
  3088 ;;
  3089                           
  3090                           
  3091                           ;psect for function ___awmod
  3092  05A9                     ___awmod:	
  3093  05A9                     l1155:	
  3094                           ;incstack = 0
  3095                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3096                           
  3097  05A9  1283               	bcf	3,5	;RP0=0, select bank0
  3098  05AA  1303               	bcf	3,6	;RP1=0, select bank0
  3099  05AB  01B1               	clrf	___awmod@sign
  3100  05AC                     l1157:	
  3101  05AC  1FAE               	btfss	___awmod@dividend+1,7
  3102  05AD  2DAF               	goto	u691
  3103  05AE  2DB0               	goto	u690
  3104  05AF                     u691:	
  3105  05AF  2DB7               	goto	l1163
  3106  05B0                     u690:	
  3107  05B0                     l1159:	
  3108  05B0  09AD               	comf	___awmod@dividend,f
  3109  05B1  09AE               	comf	___awmod@dividend+1,f
  3110  05B2  0AAD               	incf	___awmod@dividend,f
  3111  05B3  1903               	skipnz
  3112  05B4  0AAE               	incf	___awmod@dividend+1,f
  3113  05B5                     l1161:	
  3114  05B5  01B1               	clrf	___awmod@sign
  3115  05B6  0AB1               	incf	___awmod@sign,f
  3116  05B7                     l1163:	
  3117  05B7  1FAC               	btfss	___awmod@divisor+1,7
  3118  05B8  2DBA               	goto	u701
  3119  05B9  2DBB               	goto	u700
  3120  05BA                     u701:	
  3121  05BA  2DC0               	goto	l1167
  3122  05BB                     u700:	
  3123  05BB                     l1165:	
  3124  05BB  09AB               	comf	___awmod@divisor,f
  3125  05BC  09AC               	comf	___awmod@divisor+1,f
  3126  05BD  0AAB               	incf	___awmod@divisor,f
  3127  05BE  1903               	skipnz
  3128  05BF  0AAC               	incf	___awmod@divisor+1,f
  3129  05C0                     l1167:	
  3130  05C0  082B               	movf	___awmod@divisor,w
  3131  05C1  042C               	iorwf	___awmod@divisor+1,w
  3132  05C2  1903               	btfsc	3,2
  3133  05C3  2DC5               	goto	u711
  3134  05C4  2DC6               	goto	u710
  3135  05C5                     u711:	
  3136  05C5  2DF5               	goto	l1185
  3137  05C6                     u710:	
  3138  05C6                     l1169:	
  3139  05C6  01B0               	clrf	___awmod@counter
  3140  05C7  0AB0               	incf	___awmod@counter,f
  3141  05C8  2DD4               	goto	l1175
  3142  05C9                     l1171:	
  3143  05C9  3001               	movlw	1
  3144  05CA                     u725:	
  3145  05CA  1003               	clrc
  3146  05CB  0DAB               	rlf	___awmod@divisor,f
  3147  05CC  0DAC               	rlf	___awmod@divisor+1,f
  3148  05CD  3EFF               	addlw	-1
  3149  05CE  1D03               	skipz
  3150  05CF  2DCA               	goto	u725
  3151  05D0                     l1173:	
  3152  05D0  3001               	movlw	1
  3153  05D1  00AF               	movwf	??___awmod
  3154  05D2  082F               	movf	??___awmod,w
  3155  05D3  07B0               	addwf	___awmod@counter,f
  3156  05D4                     l1175:	
  3157  05D4  1FAC               	btfss	___awmod@divisor+1,7
  3158  05D5  2DD7               	goto	u731
  3159  05D6  2DD8               	goto	u730
  3160  05D7                     u731:	
  3161  05D7  2DC9               	goto	l1171
  3162  05D8                     u730:	
  3163  05D8                     l1177:	
  3164  05D8  082C               	movf	___awmod@divisor+1,w
  3165  05D9  022E               	subwf	___awmod@dividend+1,w
  3166  05DA  1D03               	skipz
  3167  05DB  2DDE               	goto	u745
  3168  05DC  082B               	movf	___awmod@divisor,w
  3169  05DD  022D               	subwf	___awmod@dividend,w
  3170  05DE                     u745:	
  3171  05DE  1C03               	skipc
  3172  05DF  2DE1               	goto	u741
  3173  05E0  2DE2               	goto	u740
  3174  05E1                     u741:	
  3175  05E1  2DE8               	goto	l1181
  3176  05E2                     u740:	
  3177  05E2                     l1179:	
  3178  05E2  082B               	movf	___awmod@divisor,w
  3179  05E3  02AD               	subwf	___awmod@dividend,f
  3180  05E4  082C               	movf	___awmod@divisor+1,w
  3181  05E5  1C03               	skipc
  3182  05E6  03AE               	decf	___awmod@dividend+1,f
  3183  05E7  02AE               	subwf	___awmod@dividend+1,f
  3184  05E8                     l1181:	
  3185  05E8  3001               	movlw	1
  3186  05E9                     u755:	
  3187  05E9  1003               	clrc
  3188  05EA  0CAC               	rrf	___awmod@divisor+1,f
  3189  05EB  0CAB               	rrf	___awmod@divisor,f
  3190  05EC  3EFF               	addlw	-1
  3191  05ED  1D03               	skipz
  3192  05EE  2DE9               	goto	u755
  3193  05EF                     l1183:	
  3194  05EF  3001               	movlw	1
  3195  05F0  02B0               	subwf	___awmod@counter,f
  3196  05F1  1D03               	btfss	3,2
  3197  05F2  2DF4               	goto	u761
  3198  05F3  2DF5               	goto	u760
  3199  05F4                     u761:	
  3200  05F4  2DD8               	goto	l1177
  3201  05F5                     u760:	
  3202  05F5                     l1185:	
  3203  05F5  0831               	movf	___awmod@sign,w
  3204  05F6  1903               	btfsc	3,2
  3205  05F7  2DF9               	goto	u771
  3206  05F8  2DFA               	goto	u770
  3207  05F9                     u771:	
  3208  05F9  2DFF               	goto	l1189
  3209  05FA                     u770:	
  3210  05FA                     l1187:	
  3211  05FA  09AD               	comf	___awmod@dividend,f
  3212  05FB  09AE               	comf	___awmod@dividend+1,f
  3213  05FC  0AAD               	incf	___awmod@dividend,f
  3214  05FD  1903               	skipnz
  3215  05FE  0AAE               	incf	___awmod@dividend+1,f
  3216  05FF                     l1189:	
  3217  05FF  082E               	movf	___awmod@dividend+1,w
  3218  0600  00AC               	movwf	?___awmod+1
  3219  0601  082D               	movf	___awmod@dividend,w
  3220  0602  00AB               	movwf	?___awmod
  3221  0603                     l415:	
  3222  0603  0008               	return
  3223  0604                     __end_of___awmod:	
  3224                           
  3225                           	psect	text21
  3226  03F9                     __ptext21:	
  3227 ;; *************** function _Timer0_ISR *****************
  3228 ;; Defined at:
  3229 ;;		line 113 in file "mainsource.c"
  3230 ;; Parameters:    Size  Location     Type
  3231 ;;		None
  3232 ;; Auto vars:     Size  Location     Type
  3233 ;;		None
  3234 ;; Return value:  Size  Location     Type
  3235 ;;                  1    wreg      void 
  3236 ;; Registers used:
  3237 ;;		wreg, status,2
  3238 ;; Tracked objects:
  3239 ;;		On entry : 0/0
  3240 ;;		On exit  : 0/0
  3241 ;;		Unchanged: 0/0
  3242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3243 ;;      Params:         0       0       0       0       0
  3244 ;;      Locals:         0       0       0       0       0
  3245 ;;      Temps:          2       0       0       0       0
  3246 ;;      Totals:         2       0       0       0       0
  3247 ;;Total ram usage:        2 bytes
  3248 ;; Hardware stack levels used:    1
  3249 ;; This function calls:
  3250 ;;		Nothing
  3251 ;; This function is called by:
  3252 ;;		Interrupt level 1
  3253 ;; This function uses a non-reentrant model
  3254 ;;
  3255                           
  3256                           
  3257                           ;psect for function _Timer0_ISR
  3258  03F9                     _Timer0_ISR:	
  3259  03F9                     i1l1309:	
  3260                           
  3261                           ;mainsource.c: 115:     if(INTCONbits.TMR0IF){
  3262  03F9  1D0B               	btfss	11,2	;volatile
  3263  03FA  2BFC               	goto	u86_21
  3264  03FB  2BFD               	goto	u86_20
  3265  03FC                     u86_21:	
  3266  03FC  2C09               	goto	i1l95
  3267  03FD                     u86_20:	
  3268  03FD                     i1l1311:	
  3269                           
  3270                           ;mainsource.c: 116:         INTCONbits.TMR0IF=0;
  3271  03FD  110B               	bcf	11,2	;volatile
  3272  03FE                     i1l1313:	
  3273                           
  3274                           ;mainsource.c: 117:         timerCount ++;
  3275  03FE  3001               	movlw	1
  3276  03FF  1283               	bcf	3,5	;RP0=0, select bank0
  3277  0400  1303               	bcf	3,6	;RP1=0, select bank0
  3278  0401  07DE               	addwf	_timerCount,f
  3279  0402  1803               	skipnc
  3280  0403  0ADF               	incf	_timerCount+1,f
  3281  0404  3000               	movlw	0
  3282  0405  07DF               	addwf	_timerCount+1,f
  3283  0406                     i1l1315:	
  3284                           
  3285                           ;mainsource.c: 118:         con.check_count = 1;
  3286  0406  01DD               	clrf	_con+8
  3287  0407  0ADD               	incf	_con+8,f
  3288                           
  3289                           ;mainsource.c: 119:     }
  3290  0408  2C1E               	goto	i1l100
  3291  0409                     i1l95:	
  3292                           ;mainsource.c: 120:     else if(INTCONbits.RBIF){
  3293                           
  3294  0409  1C0B               	btfss	11,0	;volatile
  3295  040A  2C0C               	goto	u87_21
  3296  040B  2C0D               	goto	u87_20
  3297  040C                     u87_21:	
  3298  040C  2C1E               	goto	i1l100
  3299  040D                     u87_20:	
  3300  040D                     i1l1317:	
  3301                           
  3302                           ;mainsource.c: 121:         if(PORTBbits.RB5 == 0){
  3303  040D  1283               	bcf	3,5	;RP0=0, select bank0
  3304  040E  1303               	bcf	3,6	;RP1=0, select bank0
  3305  040F  1A86               	btfsc	6,5	;volatile
  3306  0410  2C12               	goto	u88_21
  3307  0411  2C13               	goto	u88_20
  3308  0412                     u88_21:	
  3309  0412  2C16               	goto	i1l1323
  3310  0413                     u88_20:	
  3311  0413                     i1l1319:	
  3312                           
  3313                           ;mainsource.c: 122:             con.derecha = 1;
  3314  0413  01DB               	clrf	_con+6
  3315  0414  0ADB               	incf	_con+6,f
  3316  0415                     i1l1321:	
  3317                           
  3318                           ;mainsource.c: 123:             con.izquierda = 0;
  3319  0415  01DC               	clrf	_con+7
  3320  0416                     i1l1323:	
  3321                           
  3322                           ;mainsource.c: 125:         if(PORTBbits.RB4 == 0){
  3323  0416  1A06               	btfsc	6,4	;volatile
  3324  0417  2C19               	goto	u89_21
  3325  0418  2C1A               	goto	u89_20
  3326  0419                     u89_21:	
  3327  0419  2C1D               	goto	i1l1329
  3328  041A                     u89_20:	
  3329  041A                     i1l1325:	
  3330                           
  3331                           ;mainsource.c: 126:             con.derecha = 0;
  3332  041A  01DB               	clrf	_con+6
  3333  041B                     i1l1327:	
  3334                           
  3335                           ;mainsource.c: 127:             con.izquierda = 1;
  3336  041B  01DC               	clrf	_con+7
  3337  041C  0ADC               	incf	_con+7,f
  3338  041D                     i1l1329:	
  3339                           
  3340                           ;mainsource.c: 129:         INTCONbits.RBIF=0;
  3341  041D  100B               	bcf	11,0	;volatile
  3342  041E                     i1l100:	
  3343  041E  0872               	movf	??_Timer0_ISR+1,w
  3344  041F  008A               	movwf	10
  3345  0420  0E71               	swapf	??_Timer0_ISR^(0+4294967168),w
  3346  0421  0083               	movwf	3
  3347  0422  0EFE               	swapf	btemp,f
  3348  0423  0E7E               	swapf	btemp,w
  3349  0424  0009               	retfie
  3350  0425                     __end_of_Timer0_ISR:	
  3351  007E                     btemp	set	126	;btemp
  3352  007E                     wtemp0	set	126
  3353                           
  3354                           	psect	intentry
  3355  0004                     __pintentry:	
  3356                           ;incstack = 0
  3357                           ; Regs used in _Timer0_ISR: [wreg+status,2]
  3358                           
  3359  0004                     interrupt_function:	
  3360  007E                     saved_w	set	btemp
  3361  0004  00FE               	movwf	btemp
  3362  0005  0E03               	swapf	3,w
  3363  0006  00F1               	movwf	??_Timer0_ISR
  3364  0007  080A               	movf	10,w
  3365  0008  00F2               	movwf	??_Timer0_ISR+1
  3366  0009  120A  118A  2BF9   	ljmp	_Timer0_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        52
    BSS         59
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13     11      11
    BANK0            80     41      72
    BANK1            80      0      80
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(1) Largest target is 16
		 -> ficha(BANK1[16]), 

    memset@p	PTR unsigned char  size(1) Largest target is 16
		 -> ficha(BANK1[16]), 

    sp__memset	PTR void  size(1) Largest target is 16
		 -> ficha(BANK1[16]), 

    updateScreen@screen	PTR unsigned int  size(1) Largest target is 16
		 -> pantalla(BANK1[16]), 


Critical Paths under _main in COMMON

    _main->_updateScreen
    _updateScreen->_setFilas
    _rand->___lmul
    _drawFigure->_memset

Critical Paths under _Timer0_ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_checkCount
    _updateScreen->_setFilas
    _checkCount->___awmod
    _rand->___lmul
    ___awmod->_rand

Critical Paths under _Timer0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer0_ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     5      4    1657
                                             32 BANK0      9     5      4
                         _checkCount
                        _drawBground
                     _init_interrupt
                         _init_pines
                         _init_timer
                       _updateScreen
 ---------------------------------------------------------------------------------
 (1) _updateScreen                                         5     5      0     364
                                             10 COMMON     1     1      0
                                              2 BANK0      4     4      0
                           _setFilas
                    _shiftBitColumna
 ---------------------------------------------------------------------------------
 (2) _shiftBitColumna                                      2     2      0      22
                                              2 COMMON     2     2      0
                     _latchClock_Col
                     _latchClock_Fil
                     _shiftClock_Col
 ---------------------------------------------------------------------------------
 (3) _shiftClock_Col                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _latchClock_Fil                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _latchClock_Col                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setFilas                                            10     8      2     265
                                              2 COMMON     8     6      2
                                              0 BANK0      2     2      0
                     _shiftClock_Fil
 ---------------------------------------------------------------------------------
 (3) _shiftClock_Fil                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_timer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_pines                                           0     0      0       0
                     _init_pines_col
                     _init_pines_fil
                      _init_pines_in
 ---------------------------------------------------------------------------------
 (2) _init_pines_in                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_pines_fil                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_pines_col                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_interrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _drawBground                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkCount                                          14    14      0    1291
                                             18 BANK0     14    14      0
                            ___awmod
                         _drawFigure
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 7     5      2     244
                                              4 BANK0      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8     244
                                              2 COMMON     9     1      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _drawFigure                                           5     5      0     281
                                              0 BANK0      5     5      0
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               7     3      4     281
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                             11 BANK0      7     3      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Timer0_ISR                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _checkCount
     ___awmod
       _rand (ARG)
         ___lmul
     _drawFigure
       _memset
     _rand
       ___lmul
   _drawBground
   _init_interrupt
   _init_pines
     _init_pines_col
     _init_pines_fil
     _init_pines_in
   _init_timer
   _updateScreen
     _setFilas
       _shiftClock_Fil
     _shiftBitColumna
       _latchClock_Col
       _latchClock_Fil
       _shiftClock_Col

 _Timer0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               55      0       0       9        0.0%
BITBANK3            55      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      50       7      100.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     29      48       5       90.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               D      B       B       1       84.6%
BITCOMMON            D      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      A3      12        0.0%
ABS                  0      0      A3       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat May 02 23:19:29 2020

                       pc 0002               __CFG_CP$OFF 0000          ??_init_interrupt 0073  
                      l21 0348                        l30 0373                        l24 0355  
                      l33 0335                        l27 0386                        l36 0363  
                      l90 07D0                        l84 07B8                        fsr 0004  
        ??_init_pines_col 0073          ??_init_pines_fil 0073                       l120 031B  
                     l113 0511                       l105 0327                       l123 032D  
                     l131 03B5                       l108 0321                       l154 055C  
                     l163 06C6                       l157 03F8                       l415 0603  
                     l263 05A8                       l705 04CA                       l697 03D5  
                     u520 059E                       u521 059D                       u505 0586  
                     u530 04C2              __CFG_CPD$OFF 0000                       u515 058E  
                     u700 05BB                       u540 0618                       u701 05BA  
                     u605 065E                       u541 0617                       u710 05C6  
                     u470 03D5                       u614 0670                       u550 061E  
                     u711 05C5                       u471 03D4                       u615 066D  
                     u551 061D                       u535 04BD                       u560 0629  
                     u480 056B                       u800 06E9                       u625 0683  
                     u561 0628                       u481 056A                       u801 06E8  
                     u730 05D8                       u634 0695                       u570 062E  
                     u810 074A                       u731 05D7                       u635 0692  
                     u571 062D                       u491 0576                       u811 0749  
                     u740 05E2                       u492 057D                       u820 0775  
                     u660 04DE                       u741 05E1                       u725 05CA  
                     u645 06A8                       u493 0584                       u821 0774  
                     u661 04DD                       u654 06BA                       u830 07B1  
                     u655 06B7                       u831 07B0                       u815 0746  
                     u760 05F5                       u840 07CD                       u761 05F4  
                     u745 05DE                       u585 0638                       u841 07CC  
                     u665 04DA                       u770 05FA                       u690 05B0  
                     u594 064B                       u674 04EB                       u850 051B  
                     u771 05F9                       u755 05E9                       u691 05AF  
                     u595 0648                       u835 07AD                       u675 04E8  
                     u851 051A                       u780 06CE                       u684 04F8  
                     u845 07C9                       u781 06CD                       u685 04F5  
                     u790 06D7                       u791 06D6                       _con 0055  
                     fsr0 0004                       indf 0000              ___awmod@sign 0031  
            __CFG_FOSC$XT 0000              __CFG_LVP$OFF 0000                      l1101 04A5  
                    l1111 0618                      l1103 04B3                      l1121 062E  
                    l1113 061E                      l1201 035A                      l1131 06A1  
                    l1123 0630                      l1115 0622                      l1107 0604  
                    l1211 0361                      l1203 035B                      l1125 0631  
                    l1117 0624                      l1109 0611                      l1221 06D7  
                    l1213 0362                      l1205 035C                      l1141 0503  
                    l1133 04CB                      l1301 043C                      l1071 03B7  
                    l1127 0657                      l1119 0629                      l1231 06E9  
                    l1223 06DC                      l1215 03D6                      l1207 035F  
                    l1143 0508                      l1135 04D1                      l1063 0322  
                    l1151 03AB                      l1303 0440                      l1161 05B5  
                    l1073 03BC                      l1129 067C                      l1081 0567  
                    l1241 070C                      l1233 06ED                      l1225 06E0  
                    l1217 06C7                      l1209 0360                      l1065 031C  
                    l1153 03B0                      l1305 0445                      l1171 05C9  
                    l1163 05B7                      l1155 05A9                      l1075 03C3  
                    l1083 056B                      l1251 0737                      l1243 070C  
                    l1235 0707                      l1227 06E2                      l1219 06CE  
                    l1139 04DF                      l1067 0317                      l1147 039B  
                    l1307 044A                      l1181 05E8                      l1173 05D0  
                    l1165 05BB                      l1157 05AC                      l1077 03C7  
                    l1085 0584                      l1261 0775                      l1253 073D  
                    l1237 070C                      l1229 06E4                      l1093 033E  
                    l1069 0328                      l1149 03A6                      l1183 05EF  
                    l1175 05D4                      l1167 05C0                      l1159 05B0  
                    l1087 058D                      l1079 055D                      l1271 07A4  
                    l1255 074A                      l1239 070C                      l1095 0349  
                    l1177 05D8                      l1169 05C6                      l1185 05F5  
                    l1089 059E                      l1273 07B2                      l1257 0754  
                    l1249 0710                      l1097 0374                      l1193 0364  
                    l1281 051D                      l1187 05FA                      l1179 05E2  
                    l1099 0484                      l1267 0777                      l1259 0770  
                    l1275 07CD                      l1195 032E                      l1283 0534  
                    l1291 0425                      l1189 05FF                      l1269 079E  
                    l1197 0356                      l1285 053B                      l1277 0513  
                    l1293 0434                      l1199 0359                      l1287 053F  
                    l1279 051B                      l1295 0434                      l1289 0556  
                    l1297 0434                      l1299 0438                      i1l95 0409  
                    _TMR0 0001              __CFG_WRT$OFF 0000                      _main 0425  
                    _rand 0484                      btemp 007E             __CFG_BOREN$ON 0000  
                    start 000C        shiftBitColumna@bit 0074                     ?_main 0040  
                   ?_rand 0024             __CFG_WDTE$OFF 0000           __end_of___awmod 0604  
                   i1l100 041E                     u86_20 03FD                     u86_21 03FC  
                   u87_20 040D                     u87_21 040C                     u88_20 0413  
                   u88_21 0412                     u89_20 041A                     u89_21 0419  
     ___lmul@multiplicand 0077                     _ficha 00D0                     _fondo 0045  
                   _randx 0060                     pclath 000A                     status 0003  
                   wtemp0 007E           __initialization 07D1              __end_of_main 0454  
            __end_of_rand 04CB            _latchClock_Fil 0322            _latchClock_Col 0317  
 __size_of_shiftClock_Fil 0006   __size_of_shiftClock_Col 0006                    ??_main 0044  
                  ??_rand 0026                    i1l1311 03FD                    i1l1321 0415  
                  i1l1313 03FE                    i1l1323 0416                    i1l1315 0406  
                  i1l1325 041A                    i1l1317 040D                    i1l1309 03F9  
                  i1l1327 041B                    i1l1319 0413                    i1l1329 041D  
          __CFG_PWRTE$OFF 0000      __size_of_drawBground 0023                _Timer0_ISR 03F9  
  __end_of_latchClock_Col 031C    __end_of_latchClock_Fil 0328                    ___lmul 055D  
               ??___awmod 002F                    _memset 03B6           ___awmod@divisor 002B  
         ___awmod@counter 0030          __end_of_setFilas 0512    __size_of_init_pines_in 000B  
                  saved_w 007E   __end_of__initialization 07FC  __size_of_shiftBitColumna 001C  
      updateScreen@screen 007B           ?_latchClock_Col 0071           ?_latchClock_Fil 0071  
          __pcstackCOMMON 0071              __pidataBANK0 0313              __pidataBANK1 0454  
          _OPTION_REGbits 0081                _checkCount 06C7                __pbssBANK0 0045  
              __pbssBANK1 00D0             _init_pines_in 033E               ?_Timer0_ISR 0071  
              __pmaintext 0425                   ?___lmul 0073                __pintentry 0004  
          _shiftClock_Fil 031C            _shiftClock_Col 0328                   ?_memset 0073  
          ___lmul@product 0020                _drawFigure 0604            ?_init_pines_in 0071  
               ?_setFilas 0073    __end_of_shiftClock_Fil 0322    __end_of_shiftClock_Col 032E  
         __size_of___lmul 004C                   ___awmod 05A9         ??_shiftBitColumna 0073  
              _init_pines 0364                _init_timer 0356           __size_of_memset 0020  
                 __ptext1 0512                   __ptext2 039A                   __ptext3 0328  
                 __ptext4 0322                   __ptext5 0317                   __ptext6 04CB  
                 __ptext7 031C                   __ptext8 0356                   __ptext9 0364  
                 _figuras 00A0          ___awmod@dividend 002D       __size_of_Timer0_ISR 002C  
 __size_of_init_interrupt 0008                   clrloop0 0337               ?_checkCount 0071  
    end_of_initialization 07FC   __size_of_init_pines_col 0013   __size_of_init_pines_fil 000D  
                 memset@c 0073                   memset@n 0075                   memset@p 0079  
              ??_setFilas 0075           ?_shiftClock_Col 0071           ?_shiftClock_Fil 0071  
              _timerCount 005E                 _PORTBbits 0006                 _PORTCbits 0007  
               _PORTDbits 0008               ?_drawFigure 0071                 _TRISBbits 0086  
               _TRISCbits 0087                 _TRISDbits 0088           ??_init_pines_in 0073  
           ??_drawBground 0073          ??_latchClock_Col 0073          ??_latchClock_Fil 0073  
           ?_updateScreen 0071            __end_of___lmul 05A9       __size_of_checkCount 010A  
             ?_init_pines 0071               ?_init_timer 0071            __end_of_memset 03D6  
     start_initialization 07D1            ??_updateScreen 0022              ??_Timer0_ISR 0071  
     __size_of_drawFigure 00C3       __end_of_drawBground 03F9                  ??___lmul 007B  
       setFilas@reg_value 0073                init_fetch0 0387               __pdataBANK0 0060  
             __pdataBANK1 00A0                  ??_memset 0077                 ___latbits 0002  
           __pcstackBANK0 0020            _init_interrupt 032E        __end_of_Timer0_ISR 0425  
          _init_pines_fil 0349            _init_pines_col 0374       __size_of_init_pines 0010  
         _shiftBitColumna 039A       __size_of_init_timer 000E         __size_of_setFilas 0047  
                ?___awmod 002B    __end_of_init_interrupt 0336    __end_of_init_pines_col 0387  
  __end_of_init_pines_fil 0356              ??_checkCount 0032         interrupt_function 0004  
             _drawBground 03D6          ??_shiftClock_Col 0073          ??_shiftClock_Fil 0073  
               clear_ram0 0336        __end_of_checkCount 07D1           ?_init_interrupt 0071  
            ??_drawFigure 0020      __end_of_updateScreen 055D           ?_init_pines_col 0071  
         ?_init_pines_fil 0071   __end_of_shiftBitColumna 03B6         ___lmul@multiplier 0073  
             checkCount@i 003E               checkCount@j 003C        __end_of_drawFigure 06C7  
        __size_of___awmod 005B              ??_init_pines 0073              ??_init_timer 0073  
               setFilas@i 0020                  __ptext10 033E                  __ptext11 0349  
                __ptext20 05A9                  __ptext12 0374                  __ptext21 03F9  
                __ptext13 032E                  __ptext14 03D6                  __ptext15 06C7  
                __ptext16 0484                  __ptext17 055D                  __ptext18 0604  
                __ptext19 03B6     __end_of_init_pines_in 0349             __size_of_main 002F  
           __size_of_rand 0047        __end_of_init_pines 0374        __end_of_init_timer 0364  
                _pantalla 00E0                  _setFilas 04CB                  main@argc 0040  
                main@argv 0042                _INTCONbits 000B                  init_ram0 038B  
                memset@p1 0078          ?_shiftBitColumna 0071                  intlevel1 0000  
 __size_of_latchClock_Col 0005   __size_of_latchClock_Fil 0006     __size_of_updateScreen 004B  
     checkCount@condicion 003B              ?_drawBground 0071              _updateScreen 0512  
