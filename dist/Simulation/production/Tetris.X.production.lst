

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat May 02 16:23:31 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.10
    41                           ; Generated 31/07/2019 GMT
    42                           ; 
    43                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F877A Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  000E                     	;# 
    90  000F                     	;# 
    91  0010                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0015                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  001D                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  0081                     	;# 
   110  0085                     	;# 
   111  0086                     	;# 
   112  0087                     	;# 
   113  0088                     	;# 
   114  0089                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0094                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009C                     	;# 
   185  009D                     	;# 
   186  009E                     	;# 
   187  009F                     	;# 
   188  010C                     	;# 
   189  010D                     	;# 
   190  010E                     	;# 
   191  010F                     	;# 
   192  018C                     	;# 
   193  018D                     	;# 
   194  0000                     	;# 
   195  0001                     	;# 
   196  0002                     	;# 
   197  0003                     	;# 
   198  0004                     	;# 
   199  0005                     	;# 
   200  0006                     	;# 
   201  0007                     	;# 
   202  0008                     	;# 
   203  0009                     	;# 
   204  000A                     	;# 
   205  000B                     	;# 
   206  000C                     	;# 
   207  000D                     	;# 
   208  000E                     	;# 
   209  000E                     	;# 
   210  000F                     	;# 
   211  0010                     	;# 
   212  0011                     	;# 
   213  0012                     	;# 
   214  0013                     	;# 
   215  0014                     	;# 
   216  0015                     	;# 
   217  0015                     	;# 
   218  0016                     	;# 
   219  0017                     	;# 
   220  0018                     	;# 
   221  0019                     	;# 
   222  001A                     	;# 
   223  001B                     	;# 
   224  001B                     	;# 
   225  001C                     	;# 
   226  001D                     	;# 
   227  001E                     	;# 
   228  001F                     	;# 
   229  0081                     	;# 
   230  0085                     	;# 
   231  0086                     	;# 
   232  0087                     	;# 
   233  0088                     	;# 
   234  0089                     	;# 
   235  008C                     	;# 
   236  008D                     	;# 
   237  008E                     	;# 
   238  0091                     	;# 
   239  0092                     	;# 
   240  0093                     	;# 
   241  0094                     	;# 
   242  0098                     	;# 
   243  0099                     	;# 
   244  009C                     	;# 
   245  009D                     	;# 
   246  009E                     	;# 
   247  009F                     	;# 
   248  010C                     	;# 
   249  010D                     	;# 
   250  010E                     	;# 
   251  010F                     	;# 
   252  018C                     	;# 
   253  018D                     	;# 
   254  0000                     	;# 
   255  0001                     	;# 
   256  0002                     	;# 
   257  0003                     	;# 
   258  0004                     	;# 
   259  0005                     	;# 
   260  0006                     	;# 
   261  0007                     	;# 
   262  0008                     	;# 
   263  0009                     	;# 
   264  000A                     	;# 
   265  000B                     	;# 
   266  000C                     	;# 
   267  000D                     	;# 
   268  000E                     	;# 
   269  000E                     	;# 
   270  000F                     	;# 
   271  0010                     	;# 
   272  0011                     	;# 
   273  0012                     	;# 
   274  0013                     	;# 
   275  0014                     	;# 
   276  0015                     	;# 
   277  0015                     	;# 
   278  0016                     	;# 
   279  0017                     	;# 
   280  0018                     	;# 
   281  0019                     	;# 
   282  001A                     	;# 
   283  001B                     	;# 
   284  001B                     	;# 
   285  001C                     	;# 
   286  001D                     	;# 
   287  001E                     	;# 
   288  001F                     	;# 
   289  0081                     	;# 
   290  0085                     	;# 
   291  0086                     	;# 
   292  0087                     	;# 
   293  0088                     	;# 
   294  0089                     	;# 
   295  008C                     	;# 
   296  008D                     	;# 
   297  008E                     	;# 
   298  0091                     	;# 
   299  0092                     	;# 
   300  0093                     	;# 
   301  0094                     	;# 
   302  0098                     	;# 
   303  0099                     	;# 
   304  009C                     	;# 
   305  009D                     	;# 
   306  009E                     	;# 
   307  009F                     	;# 
   308  010C                     	;# 
   309  010D                     	;# 
   310  010E                     	;# 
   311  010F                     	;# 
   312  018C                     	;# 
   313  018D                     	;# 
   314  0000                     	;# 
   315  0001                     	;# 
   316  0002                     	;# 
   317  0003                     	;# 
   318  0004                     	;# 
   319  0005                     	;# 
   320  0006                     	;# 
   321  0007                     	;# 
   322  0008                     	;# 
   323  0009                     	;# 
   324  000A                     	;# 
   325  000B                     	;# 
   326  000C                     	;# 
   327  000D                     	;# 
   328  000E                     	;# 
   329  000E                     	;# 
   330  000F                     	;# 
   331  0010                     	;# 
   332  0011                     	;# 
   333  0012                     	;# 
   334  0013                     	;# 
   335  0014                     	;# 
   336  0015                     	;# 
   337  0015                     	;# 
   338  0016                     	;# 
   339  0017                     	;# 
   340  0018                     	;# 
   341  0019                     	;# 
   342  001A                     	;# 
   343  001B                     	;# 
   344  001B                     	;# 
   345  001C                     	;# 
   346  001D                     	;# 
   347  001E                     	;# 
   348  001F                     	;# 
   349  0081                     	;# 
   350  0085                     	;# 
   351  0086                     	;# 
   352  0087                     	;# 
   353  0088                     	;# 
   354  0089                     	;# 
   355  008C                     	;# 
   356  008D                     	;# 
   357  008E                     	;# 
   358  0091                     	;# 
   359  0092                     	;# 
   360  0093                     	;# 
   361  0094                     	;# 
   362  0098                     	;# 
   363  0099                     	;# 
   364  009C                     	;# 
   365  009D                     	;# 
   366  009E                     	;# 
   367  009F                     	;# 
   368  010C                     	;# 
   369  010D                     	;# 
   370  010E                     	;# 
   371  010F                     	;# 
   372  018C                     	;# 
   373  018D                     	;# 
   374  0000                     	;# 
   375  0001                     	;# 
   376  0002                     	;# 
   377  0003                     	;# 
   378  0004                     	;# 
   379  0005                     	;# 
   380  0006                     	;# 
   381  0007                     	;# 
   382  0008                     	;# 
   383  0009                     	;# 
   384  000A                     	;# 
   385  000B                     	;# 
   386  000C                     	;# 
   387  000D                     	;# 
   388  000E                     	;# 
   389  000E                     	;# 
   390  000F                     	;# 
   391  0010                     	;# 
   392  0011                     	;# 
   393  0012                     	;# 
   394  0013                     	;# 
   395  0014                     	;# 
   396  0015                     	;# 
   397  0015                     	;# 
   398  0016                     	;# 
   399  0017                     	;# 
   400  0018                     	;# 
   401  0019                     	;# 
   402  001A                     	;# 
   403  001B                     	;# 
   404  001B                     	;# 
   405  001C                     	;# 
   406  001D                     	;# 
   407  001E                     	;# 
   408  001F                     	;# 
   409  0081                     	;# 
   410  0085                     	;# 
   411  0086                     	;# 
   412  0087                     	;# 
   413  0088                     	;# 
   414  0089                     	;# 
   415  008C                     	;# 
   416  008D                     	;# 
   417  008E                     	;# 
   418  0091                     	;# 
   419  0092                     	;# 
   420  0093                     	;# 
   421  0094                     	;# 
   422  0098                     	;# 
   423  0099                     	;# 
   424  009C                     	;# 
   425  009D                     	;# 
   426  009E                     	;# 
   427  009F                     	;# 
   428  010C                     	;# 
   429  010D                     	;# 
   430  010E                     	;# 
   431  010F                     	;# 
   432  018C                     	;# 
   433  018D                     	;# 
   434  0000                     	;# 
   435  0001                     	;# 
   436  0002                     	;# 
   437  0003                     	;# 
   438  0004                     	;# 
   439  0005                     	;# 
   440  0006                     	;# 
   441  0007                     	;# 
   442  0008                     	;# 
   443  0009                     	;# 
   444  000A                     	;# 
   445  000B                     	;# 
   446  000C                     	;# 
   447  000D                     	;# 
   448  000E                     	;# 
   449  000E                     	;# 
   450  000F                     	;# 
   451  0010                     	;# 
   452  0011                     	;# 
   453  0012                     	;# 
   454  0013                     	;# 
   455  0014                     	;# 
   456  0015                     	;# 
   457  0015                     	;# 
   458  0016                     	;# 
   459  0017                     	;# 
   460  0018                     	;# 
   461  0019                     	;# 
   462  001A                     	;# 
   463  001B                     	;# 
   464  001B                     	;# 
   465  001C                     	;# 
   466  001D                     	;# 
   467  001E                     	;# 
   468  001F                     	;# 
   469  0081                     	;# 
   470  0085                     	;# 
   471  0086                     	;# 
   472  0087                     	;# 
   473  0088                     	;# 
   474  0089                     	;# 
   475  008C                     	;# 
   476  008D                     	;# 
   477  008E                     	;# 
   478  0091                     	;# 
   479  0092                     	;# 
   480  0093                     	;# 
   481  0094                     	;# 
   482  0098                     	;# 
   483  0099                     	;# 
   484  009C                     	;# 
   485  009D                     	;# 
   486  009E                     	;# 
   487  009F                     	;# 
   488  010C                     	;# 
   489  010D                     	;# 
   490  010E                     	;# 
   491  010F                     	;# 
   492  018C                     	;# 
   493  018D                     	;# 
   494                           
   495                           	psect	idataBANK0
   496  046F                     __pidataBANK0:	
   497                           
   498                           ;initializer for _randx
   499  046F  3401               	retlw	1
   500  0470  3400               	retlw	0
   501  0471  3400               	retlw	0
   502  0472  3400               	retlw	0
   503                           
   504                           	psect	idataBANK1
   505  0337                     __pidataBANK1:	
   506                           
   507                           ;initializer for _figuras
   508  0337  3402               	retlw	2
   509  0338  3400               	retlw	0
   510  0339  3402               	retlw	2
   511  033A  3400               	retlw	0
   512  033B  3403               	retlw	3
   513  033C  3400               	retlw	0
   514  033D  3400               	retlw	0
   515  033E  3400               	retlw	0
   516  033F  3400               	retlw	0
   517  0340  3400               	retlw	0
   518  0341  3403               	retlw	3
   519  0342  3400               	retlw	0
   520  0343  3402               	retlw	2
   521  0344  3400               	retlw	0
   522  0345  3402               	retlw	2
   523  0346  3400               	retlw	0
   524  0347  3401               	retlw	1
   525  0348  3400               	retlw	0
   526  0349  3403               	retlw	3
   527  034A  3400               	retlw	0
   528  034B  3402               	retlw	2
   529  034C  3400               	retlw	0
   530  034D  3400               	retlw	0
   531  034E  3400               	retlw	0
   532  034F  3400               	retlw	0
   533  0350  3400               	retlw	0
   534  0351  3402               	retlw	2
   535  0352  3400               	retlw	0
   536  0353  3403               	retlw	3
   537  0354  3400               	retlw	0
   538  0355  3401               	retlw	1
   539  0356  3400               	retlw	0
   540  0357  3401               	retlw	1
   541  0358  3400               	retlw	0
   542  0359  3401               	retlw	1
   543  035A  3400               	retlw	0
   544  035B  3401               	retlw	1
   545  035C  3400               	retlw	0
   546  035D  3401               	retlw	1
   547  035E  3400               	retlw	0
   548  035F  3400               	retlw	0
   549  0360  3400               	retlw	0
   550  0361  3403               	retlw	3
   551  0362  3400               	retlw	0
   552  0363  3403               	retlw	3
   553  0364  3400               	retlw	0
   554  0365  3400               	retlw	0
   555  0366  3400               	retlw	0
   556  0001                     _TMR0	set	1
   557  000B                     _INTCONbits	set	11
   558  0008                     _PORTDbits	set	8
   559  0007                     _PORTCbits	set	7
   560  0006                     _PORTBbits	set	6
   561  0081                     _OPTION_REGbits	set	129
   562  0088                     _TRISDbits	set	136
   563  0087                     _TRISCbits	set	135
   564  0086                     _TRISBbits	set	134
   565                           
   566                           ; #config settings
   567  0000                     
   568                           	psect	cinit
   569  000F                     start_initialization:	
   570  000F                     __initialization:	
   571                           
   572                           ; Initialize objects allocated to BANK1
   573  000F  1383               	bcf	3,7	;select IRP bank0
   574  0010  30D0               	movlw	low (__pdataBANK1+48)
   575  0011  00FD               	movwf	btemp+-1
   576  0012  3003               	movlw	high __pidataBANK1
   577  0013  00FE               	movwf	btemp
   578  0014  3037               	movlw	low __pidataBANK1
   579  0015  00FF               	movwf	btemp+1
   580  0016  30A0               	movlw	low __pdataBANK1
   581  0017  0084               	movwf	4
   582  0018  120A  118A  23F0  120A  118A  	fcall	init_ram0
   583                           
   584                           ; Initialize objects allocated to BANK0
   585  001D  3070               	movlw	low (__pdataBANK0+4)
   586  001E  00FD               	movwf	btemp+-1
   587  001F  3004               	movlw	high __pidataBANK0
   588  0020  00FE               	movwf	btemp
   589  0021  306F               	movlw	low __pidataBANK0
   590  0022  00FF               	movwf	btemp+1
   591  0023  306C               	movlw	low __pdataBANK0
   592  0024  0084               	movwf	4
   593  0025  120A  118A  23F0  120A  118A  	fcall	init_ram0
   594                           
   595                           ; Clear objects allocated to BANK1
   596  002A  30D0               	movlw	low __pbssBANK1
   597  002B  0084               	movwf	4
   598  002C  30E0               	movlw	low (__pbssBANK1+16)
   599  002D  120A  118A  2448  120A  118A  	fcall	clear_ram0
   600                           
   601                           ; Clear objects allocated to BANK0
   602  0032  3020               	movlw	low __pbssBANK0
   603  0033  0084               	movwf	4
   604  0034  304B               	movlw	low (__pbssBANK0+43)
   605  0035  120A  118A  2448  120A  118A  	fcall	clear_ram0
   606  003A                     end_of_initialization:	
   607                           ;End of C runtime variable initialization code
   608                           
   609  003A                     __end_of__initialization:	
   610  003A  0183               	clrf	3
   611  003B  120A  118A  2901   	ljmp	_main	;jump to C main() function
   612                           
   613                           	psect	bssBANK0
   614  0020                     __pbssBANK0:	
   615  0020                     _fondo:	
   616  0020                     	ds	16
   617  0030                     _con:	
   618  0030                     	ds	9
   619  0039                     _timerCount:	
   620  0039                     	ds	2
   621  003B                     _ficha:	
   622  003B                     	ds	16
   623                           
   624                           	psect	dataBANK0
   625  006C                     __pdataBANK0:	
   626  006C                     _randx:	
   627  006C                     	ds	4
   628                           
   629                           	psect	bssBANK1
   630  00D0                     __pbssBANK1:	
   631  00D0                     _pantalla:	
   632  00D0                     	ds	16
   633                           
   634                           	psect	dataBANK1
   635  00A0                     __pdataBANK1:	
   636  00A0                     _figuras:	
   637  00A0                     	ds	48
   638                           
   639                           	psect	inittext
   640  03EC                     init_fetch0:	
   641                           ;	Called with low address in FSR and high address in W
   642                           
   643  03EC  087E               	movf	btemp,w
   644  03ED  008A               	movwf	10
   645  03EE  087F               	movf	btemp+1,w
   646  03EF  0082               	movwf	2
   647  03F0                     init_ram0:	
   648                           ;Called with:
   649                           ;	high address of idata address in btemp 
   650                           ;	low address of idata address in btemp+1 
   651                           ;	low address of data in FSR
   652                           ;	high address + 1 of data in btemp-1
   653                           
   654  03F0  120A  118A  23EC  120A  118A  	fcall	init_fetch0
   655  03F5  0080               	movwf	0
   656  03F6  0A84               	incf	4,f
   657  03F7  0804               	movf	4,w
   658  03F8  067D               	xorwf	btemp+-1,w
   659  03F9  1903               	btfsc	3,2
   660  03FA  3400               	retlw	0
   661  03FB  0AFF               	incf	btemp+1,f
   662  03FC  1903               	btfsc	3,2
   663  03FD  0AFE               	incf	btemp,f
   664  03FE  2BF0               	goto	init_ram0
   665                           
   666                           	psect	clrtext
   667  0448                     clear_ram0:	
   668                           ;	Called with FSR containing the base address, and
   669                           ;	W with the last address+1
   670                           
   671  0448  0064               	clrwdt	;clear the watchdog before getting into this loop
   672  0449                     clrloop0:	
   673  0449  0180               	clrf	0	;clear RAM location pointed to by FSR
   674  044A  0A84               	incf	4,f	;increment pointer
   675  044B  0604               	xorwf	4,w	;XOR with final address
   676  044C  1903               	btfsc	3,2	;have we reached the end yet?
   677  044D  3400               	retlw	0	;all done for this memory range, return
   678  044E  0604               	xorwf	4,w	;XOR again to restore value
   679  044F  2C49               	goto	clrloop0	;do the next byte
   680                           
   681                           	psect	cstackCOMMON
   682  0070                     __pcstackCOMMON:	
   683  0070                     ?_drawBground:	
   684  0070                     ?_checkCount:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0070                     ?_drawFigure:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0070                     ?_updateScreen:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0070                     ?_init_pines_in:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0070                     ?_init_pines_fil:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0070                     ?_init_pines_col:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0070                     ?_init_pines:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0070                     ?_init_interrupt:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0070                     ?_init_timer:	
   709                           ; 1 bytes @ 0x0
   710                           
   711  0070                     ?_Timer0_ISR:	
   712                           ; 1 bytes @ 0x0
   713                           
   714  0070                     ??_Timer0_ISR:	
   715                           ; 1 bytes @ 0x0
   716                           
   717  0070                     ?_latchClock_Fil:	
   718                           ; 1 bytes @ 0x0
   719                           
   720  0070                     ?_shiftClock_Fil:	
   721                           ; 1 bytes @ 0x0
   722                           
   723  0070                     ?_latchClock_Col:	
   724                           ; 1 bytes @ 0x0
   725                           
   726  0070                     ?_shiftClock_Col:	
   727                           ; 1 bytes @ 0x0
   728                           
   729  0070                     ?_shiftBitColumna:	
   730                           ; 1 bytes @ 0x0
   731                           
   732                           
   733                           ; 1 bytes @ 0x0
   734  0070                     	ds	2
   735  0072                     ??_drawBground:	
   736  0072                     ?_memset:	
   737                           ; 1 bytes @ 0x2
   738                           
   739  0072                     ??_init_pines_in:	
   740                           ; 1 bytes @ 0x2
   741                           
   742  0072                     ??_init_pines_fil:	
   743                           ; 1 bytes @ 0x2
   744                           
   745  0072                     ??_init_pines_col:	
   746                           ; 1 bytes @ 0x2
   747                           
   748  0072                     ??_init_pines:	
   749                           ; 1 bytes @ 0x2
   750                           
   751  0072                     ??_init_interrupt:	
   752                           ; 1 bytes @ 0x2
   753                           
   754  0072                     ??_init_timer:	
   755                           ; 1 bytes @ 0x2
   756                           
   757  0072                     ??_latchClock_Fil:	
   758                           ; 1 bytes @ 0x2
   759                           
   760  0072                     ??_shiftClock_Fil:	
   761                           ; 1 bytes @ 0x2
   762                           
   763  0072                     ?_setFilas:	
   764                           ; 1 bytes @ 0x2
   765                           
   766  0072                     ??_latchClock_Col:	
   767                           ; 1 bytes @ 0x2
   768                           
   769  0072                     ??_shiftClock_Col:	
   770                           ; 1 bytes @ 0x2
   771                           
   772  0072                     ??_shiftBitColumna:	
   773                           ; 1 bytes @ 0x2
   774                           
   775  0072                     ?___lmul:	
   776                           ; 1 bytes @ 0x2
   777                           
   778  0072                     setFilas@reg_value:	
   779                           ; 4 bytes @ 0x2
   780                           
   781  0072                     memset@c:	
   782                           ; 2 bytes @ 0x2
   783                           
   784  0072                     ___lmul@multiplier:	
   785                           ; 2 bytes @ 0x2
   786                           
   787                           
   788                           ; 4 bytes @ 0x2
   789  0072                     	ds	1
   790  0073                     shiftBitColumna@bit:	
   791                           
   792                           ; 1 bytes @ 0x3
   793  0073                     	ds	1
   794  0074                     ??_setFilas:	
   795  0074                     memset@n:	
   796                           ; 1 bytes @ 0x4
   797                           
   798                           
   799                           ; 2 bytes @ 0x4
   800  0074                     	ds	2
   801  0076                     ??_memset:	
   802  0076                     ___lmul@multiplicand:	
   803                           ; 1 bytes @ 0x6
   804                           
   805                           
   806                           ; 4 bytes @ 0x6
   807  0076                     	ds	1
   808  0077                     memset@p1:	
   809                           
   810                           ; 1 bytes @ 0x7
   811  0077                     	ds	1
   812  0078                     memset@p:	
   813                           
   814                           ; 1 bytes @ 0x8
   815  0078                     	ds	2
   816  007A                     ??___lmul:	
   817  007A                     setFilas@i:	
   818                           ; 1 bytes @ 0xA
   819                           
   820                           
   821                           ; 2 bytes @ 0xA
   822  007A                     	ds	1
   823  007B                     ??___awmod:	
   824                           
   825                           ; 1 bytes @ 0xB
   826  007B                     	ds	1
   827                           
   828                           	psect	cstackBANK0
   829  004B                     __pcstackBANK0:	
   830  004B                     ??_drawFigure:	
   831  004B                     ??_updateScreen:	
   832                           ; 1 bytes @ 0x0
   833                           
   834  004B                     ___lmul@product:	
   835                           ; 1 bytes @ 0x0
   836                           
   837                           
   838                           ; 4 bytes @ 0x0
   839  004B                     	ds	4
   840  004F                     ?_rand:	
   841  004F                     updateScreen@screen:	
   842                           ; 2 bytes @ 0x4
   843                           
   844                           
   845                           ; 1 bytes @ 0x4
   846  004F                     	ds	2
   847  0051                     ??_rand:	
   848                           
   849                           ; 1 bytes @ 0x6
   850  0051                     	ds	5
   851  0056                     ?___awmod:	
   852  0056                     ___awmod@divisor:	
   853                           ; 2 bytes @ 0xB
   854                           
   855                           
   856                           ; 2 bytes @ 0xB
   857  0056                     	ds	2
   858  0058                     ___awmod@dividend:	
   859                           
   860                           ; 2 bytes @ 0xD
   861  0058                     	ds	2
   862  005A                     ___awmod@counter:	
   863                           
   864                           ; 1 bytes @ 0xF
   865  005A                     	ds	1
   866  005B                     ___awmod@sign:	
   867                           
   868                           ; 1 bytes @ 0x10
   869  005B                     	ds	1
   870  005C                     ??_checkCount:	
   871                           
   872                           ; 1 bytes @ 0x11
   873  005C                     	ds	1
   874  005D                     ?_main:	
   875  005D                     main@argc:	
   876                           ; 2 bytes @ 0x12
   877                           
   878                           
   879                           ; 2 bytes @ 0x12
   880  005D                     	ds	2
   881  005F                     main@argv:	
   882                           
   883                           ; 2 bytes @ 0x14
   884  005F                     	ds	2
   885  0061                     ??_main:	
   886                           
   887                           ; 1 bytes @ 0x16
   888  0061                     	ds	9
   889  006A                     main@i:	
   890                           
   891                           ; 2 bytes @ 0x1F
   892  006A                     	ds	2
   893                           
   894                           	psect	maintext
   895  0101                     __pmaintext:	
   896 ;;
   897 ;;Main: autosize = 0, tempsize = 9, incstack = 0, save=0
   898 ;;
   899 ;; *************** function _main *****************
   900 ;; Defined at:
   901 ;;		line 41 in file "mainsource.c"
   902 ;; Parameters:    Size  Location     Type
   903 ;;  argc            2   18[BANK0 ] int 
   904 ;;  argv            2   20[BANK0 ] PTR PTR unsigned char 
   905 ;; Auto vars:     Size  Location     Type
   906 ;;  i               2   31[BANK0 ] int 
   907 ;; Return value:  Size  Location     Type
   908 ;;                  2   18[BANK0 ] int 
   909 ;; Registers used:
   910 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   911 ;; Tracked objects:
   912 ;;		On entry : B00/0
   913 ;;		On exit  : 0/0
   914 ;;		Unchanged: 0/0
   915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   916 ;;      Params:         0       4       0       0       0
   917 ;;      Locals:         0       2       0       0       0
   918 ;;      Temps:          0       9       0       0       0
   919 ;;      Totals:         0      15       0       0       0
   920 ;;Total ram usage:       15 bytes
   921 ;; Hardware stack levels required when called:    4
   922 ;; This function calls:
   923 ;;		_checkCount
   924 ;;		_drawBground
   925 ;;		_drawFigure
   926 ;;		_init_interrupt
   927 ;;		_init_pines
   928 ;;		_init_timer
   929 ;;		_updateScreen
   930 ;; This function is called by:
   931 ;;		Startup code after reset
   932 ;; This function uses a non-reentrant model
   933 ;;
   934                           
   935                           
   936                           ;psect for function _main
   937  0101                     _main:	
   938  0101                     l1213:	
   939                           ;incstack = 0
   940                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   941                           
   942                           
   943                           ;mainsource.c: 46:     init_pines();
   944  0101  120A  118A  2412  120A  118A  	fcall	_init_pines
   945                           
   946                           ;mainsource.c: 47:     init_interrupt();
   947  0106  120A  118A  2450  120A  118A  	fcall	_init_interrupt
   948                           
   949                           ;mainsource.c: 48:     init_timer();
   950  010B  120A  118A  2422  120A  118A  	fcall	_init_timer
   951  0110                     l1215:	
   952  0110                     l1217:	
   953                           
   954                           ;mainsource.c: 50:     con.columna = 1;
   955  0110  1283               	bcf	3,5	;RP0=0, select bank0
   956  0111  1303               	bcf	3,6	;RP1=0, select bank0
   957  0112  01B0               	clrf	_con
   958  0113  0AB0               	incf	_con,f
   959  0114                     l1219:	
   960                           
   961                           ;mainsource.c: 51:     con.ficha_Vpos = 16;
   962  0114  3010               	movlw	16
   963  0115  00E1               	movwf	??_main
   964  0116  0861               	movf	??_main,w
   965  0117  00B3               	movwf	_con+3
   966  0118                     l1221:	
   967                           
   968                           ;mainsource.c: 52:     con.ficha_Hpos = 2;
   969  0118  3002               	movlw	2
   970  0119  00E1               	movwf	??_main
   971  011A  0861               	movf	??_main,w
   972  011B  00B4               	movwf	_con+4
   973  011C                     l1223:	
   974                           
   975                           ;mainsource.c: 54:     drawBground();
   976  011C  120A  118A  238D  120A  118A  	fcall	_drawBground
   977  0121                     l1225:	
   978                           
   979                           ;mainsource.c: 57:         checkCount();
   980  0121  120A  118A  2265  120A  118A  	fcall	_checkCount
   981  0126                     l1227:	
   982                           
   983                           ;mainsource.c: 58:         drawFigure();
   984  0126  120A  118A  203E  120A  118A  	fcall	_drawFigure
   985  012B                     l1229:	
   986                           
   987                           ;mainsource.c: 59:         for(i=0; i<8; i++){
   988  012B  1283               	bcf	3,5	;RP0=0, select bank0
   989  012C  1303               	bcf	3,6	;RP1=0, select bank0
   990  012D  01EA               	clrf	main@i
   991  012E  01EB               	clrf	main@i+1
   992  012F                     l1235:	
   993                           
   994                           ;mainsource.c: 60:             pantalla[i] = ficha[i] | fondo[i];
   995  012F  1283               	bcf	3,5	;RP0=0, select bank0
   996  0130  1303               	bcf	3,6	;RP1=0, select bank0
   997  0131  086A               	movf	main@i,w
   998  0132  00E1               	movwf	??_main
   999  0133  0761               	addwf	??_main,w
  1000  0134  3E20               	addlw	(low (_fondo| 0))& (0+255)
  1001  0135  0084               	movwf	4
  1002  0136  1383               	bcf	3,7	;select IRP bank0
  1003  0137  0800               	movf	0,w
  1004  0138  00E2               	movwf	??_main+1
  1005  0139  0A84               	incf	4,f
  1006  013A  0800               	movf	0,w
  1007  013B  00E3               	movwf	??_main+2
  1008  013C  086A               	movf	main@i,w
  1009  013D  00E4               	movwf	??_main+3
  1010  013E  0764               	addwf	??_main+3,w
  1011  013F  3E3B               	addlw	(low (_ficha| 0))& (0+255)
  1012  0140  0084               	movwf	4
  1013  0141  0800               	movf	0,w
  1014  0142  00E5               	movwf	??_main+4
  1015  0143  0A84               	incf	4,f
  1016  0144  0800               	movf	0,w
  1017  0145  00E6               	movwf	??_main+5
  1018  0146  0862               	movf	??_main+1,w
  1019  0147  0465               	iorwf	??_main+4,w
  1020  0148  00E7               	movwf	??_main+6
  1021  0149  0863               	movf	??_main+2,w
  1022  014A  0466               	iorwf	??_main+5,w
  1023  014B  00E8               	movwf	??_main+7
  1024  014C  086A               	movf	main@i,w
  1025  014D  00E9               	movwf	??_main+8
  1026  014E  0769               	addwf	??_main+8,w
  1027  014F  3ED0               	addlw	(low (_pantalla| 0))& (0+255)
  1028  0150  0084               	movwf	4
  1029  0151  0867               	movf	??_main+6,w
  1030  0152  0080               	movwf	0
  1031  0153  0A84               	incf	4,f
  1032  0154  0868               	movf	??_main+7,w
  1033  0155  0080               	movwf	0
  1034  0156                     l1237:	
  1035                           
  1036                           ;mainsource.c: 61:         }
  1037  0156  3001               	movlw	1
  1038  0157  07EA               	addwf	main@i,f
  1039  0158  1803               	skipnc
  1040  0159  0AEB               	incf	main@i+1,f
  1041  015A  3000               	movlw	0
  1042  015B  07EB               	addwf	main@i+1,f
  1043  015C                     l1239:	
  1044  015C  086B               	movf	main@i+1,w
  1045  015D  3A80               	xorlw	128
  1046  015E  00FF               	movwf	btemp+1
  1047  015F  3080               	movlw	128
  1048  0160  027F               	subwf	btemp+1,w
  1049  0161  1D03               	skipz
  1050  0162  2965               	goto	u795
  1051  0163  3008               	movlw	8
  1052  0164  026A               	subwf	main@i,w
  1053  0165                     u795:	
  1054  0165  1C03               	skipc
  1055  0166  2968               	goto	u791
  1056  0167  2969               	goto	u790
  1057  0168                     u791:	
  1058  0168  292F               	goto	l1235
  1059  0169                     u790:	
  1060  0169                     l1241:	
  1061                           
  1062                           ;mainsource.c: 63:         updateScreen(pantalla);
  1063  0169  30D0               	movlw	(low (_pantalla| 0))& (0+255)
  1064  016A  120A  118A  221A  120A  118A  	fcall	_updateScreen
  1065  016F  2921               	goto	l1225
  1066  0170  120A  118A  280C   	ljmp	start
  1067  0173                     __end_of_main:	
  1068                           
  1069                           	psect	text1
  1070  021A                     __ptext1:	
  1071 ;; *************** function _updateScreen *****************
  1072 ;; Defined at:
  1073 ;;		line 12 in file "screen.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;  screen          1    wreg     PTR unsigned int 
  1076 ;;		 -> pantalla(16), 
  1077 ;; Auto vars:     Size  Location     Type
  1078 ;;  screen          1    4[BANK0 ] PTR unsigned int 
  1079 ;;		 -> pantalla(16), 
  1080 ;; Return value:  Size  Location     Type
  1081 ;;                  1    wreg      void 
  1082 ;; Registers used:
  1083 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1084 ;; Tracked objects:
  1085 ;;		On entry : 0/0
  1086 ;;		On exit  : 0/0
  1087 ;;		Unchanged: 0/0
  1088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1089 ;;      Params:         0       0       0       0       0
  1090 ;;      Locals:         0       1       0       0       0
  1091 ;;      Temps:          0       4       0       0       0
  1092 ;;      Totals:         0       5       0       0       0
  1093 ;;Total ram usage:        5 bytes
  1094 ;; Hardware stack levels used:    1
  1095 ;; Hardware stack levels required when called:    3
  1096 ;; This function calls:
  1097 ;;		_setFilas
  1098 ;;		_shiftBitColumna
  1099 ;; This function is called by:
  1100 ;;		_main
  1101 ;; This function uses a non-reentrant model
  1102 ;;
  1103                           
  1104                           
  1105                           ;psect for function _updateScreen
  1106  021A                     _updateScreen:	
  1107                           
  1108                           ;incstack = 0
  1109                           ; Regs used in _updateScreen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1110                           ;updateScreen@screen stored from wreg
  1111  021A  1283               	bcf	3,5	;RP0=0, select bank0
  1112  021B  1303               	bcf	3,6	;RP1=0, select bank0
  1113  021C  00CF               	movwf	updateScreen@screen
  1114  021D                     l1199:	
  1115                           
  1116                           ;screen.c: 13:     if(con.columna == 9){
  1117  021D  3009               	movlw	9
  1118  021E  0630               	xorwf	_con,w
  1119  021F  1D03               	btfss	3,2
  1120  0220  2A22               	goto	u781
  1121  0221  2A23               	goto	u780
  1122  0222                     u781:	
  1123  0222  2A43               	goto	l1207
  1124  0223                     u780:	
  1125  0223                     l1201:	
  1126                           
  1127                           ;screen.c: 14:         con.columna = 1;
  1128  0223  01B0               	clrf	_con
  1129  0224  0AB0               	incf	_con,f
  1130  0225                     l1203:	
  1131                           
  1132                           ;screen.c: 15:         setFilas(~screen[con.columna-1]);
  1133  0225  0830               	movf	_con,w
  1134  0226  00CB               	movwf	??_updateScreen
  1135  0227  074B               	addwf	??_updateScreen,w
  1136  0228  074F               	addwf	updateScreen@screen,w
  1137  0229  00CC               	movwf	??_updateScreen+1
  1138  022A  084C               	movf	??_updateScreen+1,w
  1139  022B  3EFE               	addlw	-2
  1140  022C  0084               	movwf	4
  1141  022D  1383               	bcf	3,7	;select IRP bank0
  1142  022E  0800               	movf	0,w
  1143  022F  00CD               	movwf	??_updateScreen+2
  1144  0230  0A84               	incf	4,f
  1145  0231  0800               	movf	0,w
  1146  0232  00CE               	movwf	??_updateScreen+3
  1147  0233  094D               	comf	??_updateScreen+2,w
  1148  0234  00F2               	movwf	setFilas@reg_value
  1149  0235  094E               	comf	??_updateScreen+3,w
  1150  0236  00F3               	movwf	setFilas@reg_value+1
  1151  0237  120A  118A  22F4  120A  118A  	fcall	_setFilas
  1152  023C                     l1205:	
  1153                           
  1154                           ;screen.c: 16:         shiftBitColumna(1);
  1155  023C  3001               	movlw	1
  1156  023D  120A  118A  23D0  120A  118A  	fcall	_shiftBitColumna
  1157                           
  1158                           ;screen.c: 17:     }
  1159  0242  2A64               	goto	l148
  1160  0243                     l1207:	
  1161                           
  1162                           ;screen.c: 19:         con.columna++;
  1163  0243  3001               	movlw	1
  1164  0244  00CB               	movwf	??_updateScreen
  1165  0245  084B               	movf	??_updateScreen,w
  1166  0246  07B0               	addwf	_con,f
  1167  0247                     l1209:	
  1168                           
  1169                           ;screen.c: 20:         setFilas(~screen[con.columna-1]);
  1170  0247  0830               	movf	_con,w
  1171  0248  00CB               	movwf	??_updateScreen
  1172  0249  074B               	addwf	??_updateScreen,w
  1173  024A  074F               	addwf	updateScreen@screen,w
  1174  024B  00CC               	movwf	??_updateScreen+1
  1175  024C  084C               	movf	??_updateScreen+1,w
  1176  024D  3EFE               	addlw	-2
  1177  024E  0084               	movwf	4
  1178  024F  1383               	bcf	3,7	;select IRP bank0
  1179  0250  0800               	movf	0,w
  1180  0251  00CD               	movwf	??_updateScreen+2
  1181  0252  0A84               	incf	4,f
  1182  0253  0800               	movf	0,w
  1183  0254  00CE               	movwf	??_updateScreen+3
  1184  0255  094D               	comf	??_updateScreen+2,w
  1185  0256  00F2               	movwf	setFilas@reg_value
  1186  0257  094E               	comf	??_updateScreen+3,w
  1187  0258  00F3               	movwf	setFilas@reg_value+1
  1188  0259  120A  118A  22F4  120A  118A  	fcall	_setFilas
  1189  025E                     l1211:	
  1190                           
  1191                           ;screen.c: 21:         shiftBitColumna(0);
  1192  025E  3000               	movlw	0
  1193  025F  120A  118A  23D0  120A  118A  	fcall	_shiftBitColumna
  1194  0264                     l148:	
  1195  0264  0008               	return
  1196  0265                     __end_of_updateScreen:	
  1197                           
  1198                           	psect	text2
  1199  03D0                     __ptext2:	
  1200 ;; *************** function _shiftBitColumna *****************
  1201 ;; Defined at:
  1202 ;;		line 32 in file "columnas.c"
  1203 ;; Parameters:    Size  Location     Type
  1204 ;;  bit             1    wreg     unsigned char 
  1205 ;; Auto vars:     Size  Location     Type
  1206 ;;  bit             1    3[COMMON] unsigned char 
  1207 ;; Return value:  Size  Location     Type
  1208 ;;                  1    wreg      void 
  1209 ;; Registers used:
  1210 ;;		wreg, status,2, status,0, pclath, cstack
  1211 ;; Tracked objects:
  1212 ;;		On entry : 0/0
  1213 ;;		On exit  : 0/0
  1214 ;;		Unchanged: 0/0
  1215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1216 ;;      Params:         0       0       0       0       0
  1217 ;;      Locals:         1       0       0       0       0
  1218 ;;      Temps:          1       0       0       0       0
  1219 ;;      Totals:         2       0       0       0       0
  1220 ;;Total ram usage:        2 bytes
  1221 ;; Hardware stack levels used:    1
  1222 ;; Hardware stack levels required when called:    2
  1223 ;; This function calls:
  1224 ;;		_latchClock_Col
  1225 ;;		_latchClock_Fil
  1226 ;;		_shiftClock_Col
  1227 ;; This function is called by:
  1228 ;;		_updateScreen
  1229 ;; This function uses a non-reentrant model
  1230 ;;
  1231                           
  1232                           
  1233                           ;psect for function _shiftBitColumna
  1234  03D0                     _shiftBitColumna:	
  1235                           
  1236                           ;incstack = 0
  1237                           ; Regs used in _shiftBitColumna: [wreg+status,2+status,0+pclath+cstack]
  1238                           ;shiftBitColumna@bit stored from wreg
  1239  03D0  00F3               	movwf	shiftBitColumna@bit
  1240  03D1                     l1075:	
  1241                           
  1242                           ;columnas.c: 33:     PORTDbits.RD4= bit & 0x01;
  1243  03D1  0873               	movf	shiftBitColumna@bit,w
  1244  03D2  3901               	andlw	1
  1245  03D3  00F2               	movwf	??_shiftBitColumna
  1246  03D4  0EF2               	swapf	??_shiftBitColumna,f
  1247  03D5  1283               	bcf	3,5	;RP0=0, select bank0
  1248  03D6  1303               	bcf	3,6	;RP1=0, select bank0
  1249  03D7  0808               	movf	8,w	;volatile
  1250  03D8  0672               	xorwf	??_shiftBitColumna,w
  1251  03D9  39EF               	andlw	-17
  1252  03DA  0672               	xorwf	??_shiftBitColumna,w
  1253  03DB  0088               	movwf	8	;volatile
  1254  03DC                     l1077:	
  1255                           
  1256                           ;columnas.c: 34:     shiftClock_Col();
  1257  03DC  120A  118A  2458  120A  118A  	fcall	_shiftClock_Col
  1258  03E1                     l1079:	
  1259                           
  1260                           ;columnas.c: 35:     latchClock_Col();
  1261  03E1  120A  118A  246A  120A  118A  	fcall	_latchClock_Col
  1262  03E6                     l1081:	
  1263                           
  1264                           ;columnas.c: 36:     latchClock_Fil();
  1265  03E6  120A  118A  245E  120A  118A  	fcall	_latchClock_Fil
  1266  03EB                     l125:	
  1267  03EB  0008               	return
  1268  03EC                     __end_of_shiftBitColumna:	
  1269                           
  1270                           	psect	text3
  1271  0458                     __ptext3:	
  1272 ;; *************** function _shiftClock_Col *****************
  1273 ;; Defined at:
  1274 ;;		line 12 in file "columnas.c"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;		None
  1277 ;; Auto vars:     Size  Location     Type
  1278 ;;		None
  1279 ;; Return value:  Size  Location     Type
  1280 ;;                  1    wreg      void 
  1281 ;; Registers used:
  1282 ;;		None
  1283 ;; Tracked objects:
  1284 ;;		On entry : 0/0
  1285 ;;		On exit  : 0/0
  1286 ;;		Unchanged: 0/0
  1287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1288 ;;      Params:         0       0       0       0       0
  1289 ;;      Locals:         0       0       0       0       0
  1290 ;;      Temps:          0       0       0       0       0
  1291 ;;      Totals:         0       0       0       0       0
  1292 ;;Total ram usage:        0 bytes
  1293 ;; Hardware stack levels used:    1
  1294 ;; Hardware stack levels required when called:    1
  1295 ;; This function calls:
  1296 ;;		Nothing
  1297 ;; This function is called by:
  1298 ;;		_shiftBitColumna
  1299 ;;		_setColumnas
  1300 ;; This function uses a non-reentrant model
  1301 ;;
  1302                           
  1303                           
  1304                           ;psect for function _shiftClock_Col
  1305  0458                     _shiftClock_Col:	
  1306  0458                     l1031:	
  1307                           ;incstack = 0
  1308                           ; Regs used in _shiftClock_Col: []
  1309                           
  1310                           
  1311                           ;columnas.c: 13:     PORTDbits.RD7 = 0;
  1312  0458  1283               	bcf	3,5	;RP0=0, select bank0
  1313  0459  1303               	bcf	3,6	;RP1=0, select bank0
  1314  045A  1388               	bcf	8,7	;volatile
  1315                           
  1316                           ;columnas.c: 14:     PORTDbits.RD7 = 1;
  1317  045B  1788               	bsf	8,7	;volatile
  1318                           
  1319                           ;columnas.c: 15:     PORTDbits.RD7 = 0;
  1320  045C  1388               	bcf	8,7	;volatile
  1321  045D                     l117:	
  1322  045D  0008               	return
  1323  045E                     __end_of_shiftClock_Col:	
  1324                           
  1325                           	psect	text4
  1326  045E                     __ptext4:	
  1327 ;; *************** function _latchClock_Fil *****************
  1328 ;; Defined at:
  1329 ;;		line 7 in file "filas.c"
  1330 ;; Parameters:    Size  Location     Type
  1331 ;;		None
  1332 ;; Auto vars:     Size  Location     Type
  1333 ;;		None
  1334 ;; Return value:  Size  Location     Type
  1335 ;;                  1    wreg      void 
  1336 ;; Registers used:
  1337 ;;		None
  1338 ;; Tracked objects:
  1339 ;;		On entry : 0/0
  1340 ;;		On exit  : 0/0
  1341 ;;		Unchanged: 0/0
  1342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1343 ;;      Params:         0       0       0       0       0
  1344 ;;      Locals:         0       0       0       0       0
  1345 ;;      Temps:          0       0       0       0       0
  1346 ;;      Totals:         0       0       0       0       0
  1347 ;;Total ram usage:        0 bytes
  1348 ;; Hardware stack levels used:    1
  1349 ;; Hardware stack levels required when called:    1
  1350 ;; This function calls:
  1351 ;;		Nothing
  1352 ;; This function is called by:
  1353 ;;		_shiftBitColumna
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357                           
  1358                           ;psect for function _latchClock_Fil
  1359  045E                     _latchClock_Fil:	
  1360  045E                     l1025:	
  1361                           ;incstack = 0
  1362                           ; Regs used in _latchClock_Fil: []
  1363                           
  1364                           
  1365                           ;filas.c: 8:     PORTCbits.RC6 = 0;
  1366  045E  1283               	bcf	3,5	;RP0=0, select bank0
  1367  045F  1303               	bcf	3,6	;RP1=0, select bank0
  1368  0460  1307               	bcf	7,6	;volatile
  1369                           
  1370                           ;filas.c: 9:     PORTCbits.RC6 = 1;
  1371  0461  1707               	bsf	7,6	;volatile
  1372                           
  1373                           ;filas.c: 10:     PORTCbits.RC6 = 0;
  1374  0462  1307               	bcf	7,6	;volatile
  1375  0463                     l99:	
  1376  0463  0008               	return
  1377  0464                     __end_of_latchClock_Fil:	
  1378                           
  1379                           	psect	text5
  1380  046A                     __ptext5:	
  1381 ;; *************** function _latchClock_Col *****************
  1382 ;; Defined at:
  1383 ;;		line 7 in file "columnas.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;		None
  1386 ;; Auto vars:     Size  Location     Type
  1387 ;;		None
  1388 ;; Return value:  Size  Location     Type
  1389 ;;                  1    wreg      void 
  1390 ;; Registers used:
  1391 ;;		None
  1392 ;; Tracked objects:
  1393 ;;		On entry : 0/0
  1394 ;;		On exit  : 0/0
  1395 ;;		Unchanged: 0/0
  1396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1397 ;;      Params:         0       0       0       0       0
  1398 ;;      Locals:         0       0       0       0       0
  1399 ;;      Temps:          0       0       0       0       0
  1400 ;;      Totals:         0       0       0       0       0
  1401 ;;Total ram usage:        0 bytes
  1402 ;; Hardware stack levels used:    1
  1403 ;; Hardware stack levels required when called:    1
  1404 ;; This function calls:
  1405 ;;		Nothing
  1406 ;; This function is called by:
  1407 ;;		_shiftBitColumna
  1408 ;;		_setColumnas
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412                           
  1413                           ;psect for function _latchClock_Col
  1414  046A                     _latchClock_Col:	
  1415  046A                     l1029:	
  1416                           ;incstack = 0
  1417                           ; Regs used in _latchClock_Col: []
  1418                           
  1419                           
  1420                           ;columnas.c: 8:     PORTDbits.RD6 = 1;
  1421  046A  1283               	bcf	3,5	;RP0=0, select bank0
  1422  046B  1303               	bcf	3,6	;RP1=0, select bank0
  1423  046C  1708               	bsf	8,6	;volatile
  1424                           
  1425                           ;columnas.c: 9:     PORTDbits.RD6 = 0;
  1426  046D  1308               	bcf	8,6	;volatile
  1427  046E                     l114:	
  1428  046E  0008               	return
  1429  046F                     __end_of_latchClock_Col:	
  1430                           
  1431                           	psect	text6
  1432  02F4                     __ptext6:	
  1433 ;; *************** function _setFilas *****************
  1434 ;; Defined at:
  1435 ;;		line 19 in file "filas.c"
  1436 ;; Parameters:    Size  Location     Type
  1437 ;;  reg_value       2    2[COMMON] unsigned int 
  1438 ;; Auto vars:     Size  Location     Type
  1439 ;;  i               2   10[COMMON] int 
  1440 ;; Return value:  Size  Location     Type
  1441 ;;                  1    wreg      void 
  1442 ;; Registers used:
  1443 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1444 ;; Tracked objects:
  1445 ;;		On entry : 0/0
  1446 ;;		On exit  : 0/0
  1447 ;;		Unchanged: 0/0
  1448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1449 ;;      Params:         2       0       0       0       0
  1450 ;;      Locals:         2       0       0       0       0
  1451 ;;      Temps:          6       0       0       0       0
  1452 ;;      Totals:        10       0       0       0       0
  1453 ;;Total ram usage:       10 bytes
  1454 ;; Hardware stack levels used:    1
  1455 ;; Hardware stack levels required when called:    2
  1456 ;; This function calls:
  1457 ;;		_shiftClock_Fil
  1458 ;; This function is called by:
  1459 ;;		_updateScreen
  1460 ;; This function uses a non-reentrant model
  1461 ;;
  1462                           
  1463                           
  1464                           ;psect for function _setFilas
  1465  02F4                     _setFilas:	
  1466  02F4                     l1061:	
  1467                           ;incstack = 0
  1468                           ; Regs used in _setFilas: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1469                           
  1470                           
  1471                           ;filas.c: 20:     int i = 0;
  1472  02F4  01FA               	clrf	setFilas@i
  1473  02F5  01FB               	clrf	setFilas@i+1
  1474                           
  1475                           ;filas.c: 21:     for(i=0;i<16;i++){
  1476  02F6  01FA               	clrf	setFilas@i
  1477  02F7  01FB               	clrf	setFilas@i+1
  1478  02F8                     l1063:	
  1479  02F8  087B               	movf	setFilas@i+1,w
  1480  02F9  3A80               	xorlw	128
  1481  02FA  00FF               	movwf	btemp+1
  1482  02FB  3080               	movlw	128
  1483  02FC  027F               	subwf	btemp+1,w
  1484  02FD  1D03               	skipz
  1485  02FE  2B01               	goto	u505
  1486  02FF  3010               	movlw	16
  1487  0300  027A               	subwf	setFilas@i,w
  1488  0301                     u505:	
  1489  0301  1C03               	skipc
  1490  0302  2B04               	goto	u501
  1491  0303  2B05               	goto	u500
  1492  0304                     u501:	
  1493  0304  2B06               	goto	l1067
  1494  0305                     u500:	
  1495  0305  2B36               	goto	l107
  1496  0306                     l1067:	
  1497                           
  1498                           ;filas.c: 22:         PORTCbits.RC4 = (reg_value & (1<<i) )>>i;
  1499  0306  0A7A               	incf	setFilas@i,w
  1500  0307  00F4               	movwf	??_setFilas
  1501  0308  3001               	movlw	1
  1502  0309  00F5               	movwf	??_setFilas+1
  1503  030A  3000               	movlw	0
  1504  030B  00F6               	movwf	??_setFilas+2
  1505  030C  2B10               	goto	u514
  1506  030D                     u515:	
  1507  030D  1003               	clrc
  1508  030E  0DF5               	rlf	??_setFilas+1,f
  1509  030F  0DF6               	rlf	??_setFilas+2,f
  1510  0310                     u514:	
  1511  0310  0BF4               	decfsz	??_setFilas,f
  1512  0311  2B0D               	goto	u515
  1513  0312  0872               	movf	setFilas@reg_value,w
  1514  0313  0575               	andwf	??_setFilas+1,w
  1515  0314  00F7               	movwf	??_setFilas+3
  1516  0315  0873               	movf	setFilas@reg_value+1,w
  1517  0316  0576               	andwf	??_setFilas+2,w
  1518  0317  00F8               	movwf	??_setFilas+4
  1519  0318  0A7A               	incf	setFilas@i,w
  1520  0319  2B1D               	goto	u524
  1521  031A                     u525:	
  1522  031A  1003               	clrc
  1523  031B  0CF8               	rrf	??_setFilas+4,f
  1524  031C  0CF7               	rrf	??_setFilas+3,f
  1525  031D                     u524:	
  1526  031D  3EFF               	addlw	-1
  1527  031E  1D03               	skipz
  1528  031F  2B1A               	goto	u525
  1529  0320  0877               	movf	??_setFilas+3,w
  1530  0321  00F9               	movwf	??_setFilas+5
  1531  0322  0EF9               	swapf	??_setFilas+5,f
  1532  0323  1283               	bcf	3,5	;RP0=0, select bank0
  1533  0324  1303               	bcf	3,6	;RP1=0, select bank0
  1534  0325  0807               	movf	7,w	;volatile
  1535  0326  0679               	xorwf	??_setFilas+5,w
  1536  0327  39EF               	andlw	-17
  1537  0328  0679               	xorwf	??_setFilas+5,w
  1538  0329  0087               	movwf	7	;volatile
  1539  032A                     l1069:	
  1540                           
  1541                           ;filas.c: 23:         shiftClock_Fil();
  1542  032A  120A  118A  2464  120A  118A  	fcall	_shiftClock_Fil
  1543  032F                     l1071:	
  1544                           
  1545                           ;filas.c: 24:     }
  1546  032F  3001               	movlw	1
  1547  0330  07FA               	addwf	setFilas@i,f
  1548  0331  1803               	skipnc
  1549  0332  0AFB               	incf	setFilas@i+1,f
  1550  0333  3000               	movlw	0
  1551  0334  07FB               	addwf	setFilas@i+1,f
  1552  0335  2AF8               	goto	l1063
  1553  0336                     l107:	
  1554  0336  0008               	return
  1555  0337                     __end_of_setFilas:	
  1556                           
  1557                           	psect	text7
  1558  0464                     __ptext7:	
  1559 ;; *************** function _shiftClock_Fil *****************
  1560 ;; Defined at:
  1561 ;;		line 13 in file "filas.c"
  1562 ;; Parameters:    Size  Location     Type
  1563 ;;		None
  1564 ;; Auto vars:     Size  Location     Type
  1565 ;;		None
  1566 ;; Return value:  Size  Location     Type
  1567 ;;                  1    wreg      void 
  1568 ;; Registers used:
  1569 ;;		None
  1570 ;; Tracked objects:
  1571 ;;		On entry : 0/0
  1572 ;;		On exit  : 0/0
  1573 ;;		Unchanged: 0/0
  1574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1575 ;;      Params:         0       0       0       0       0
  1576 ;;      Locals:         0       0       0       0       0
  1577 ;;      Temps:          0       0       0       0       0
  1578 ;;      Totals:         0       0       0       0       0
  1579 ;;Total ram usage:        0 bytes
  1580 ;; Hardware stack levels used:    1
  1581 ;; Hardware stack levels required when called:    1
  1582 ;; This function calls:
  1583 ;;		Nothing
  1584 ;; This function is called by:
  1585 ;;		_setFilas
  1586 ;; This function uses a non-reentrant model
  1587 ;;
  1588                           
  1589                           
  1590                           ;psect for function _shiftClock_Fil
  1591  0464                     _shiftClock_Fil:	
  1592  0464                     l1027:	
  1593                           ;incstack = 0
  1594                           ; Regs used in _shiftClock_Fil: []
  1595                           
  1596                           
  1597                           ;filas.c: 14:     PORTCbits.RC7 = 0;
  1598  0464  1283               	bcf	3,5	;RP0=0, select bank0
  1599  0465  1303               	bcf	3,6	;RP1=0, select bank0
  1600  0466  1387               	bcf	7,7	;volatile
  1601                           
  1602                           ;filas.c: 15:     PORTCbits.RC7 = 1;
  1603  0467  1787               	bsf	7,7	;volatile
  1604                           
  1605                           ;filas.c: 16:     PORTCbits.RC7 = 0;
  1606  0468  1387               	bcf	7,7	;volatile
  1607  0469                     l102:	
  1608  0469  0008               	return
  1609  046A                     __end_of_shiftClock_Fil:	
  1610                           
  1611                           	psect	text8
  1612  0422                     __ptext8:	
  1613 ;; *************** function _init_timer *****************
  1614 ;; Defined at:
  1615 ;;		line 59 in file "init.c"
  1616 ;; Parameters:    Size  Location     Type
  1617 ;;		None
  1618 ;; Auto vars:     Size  Location     Type
  1619 ;;		None
  1620 ;; Return value:  Size  Location     Type
  1621 ;;                  1    wreg      void 
  1622 ;; Registers used:
  1623 ;;		status,2
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1629 ;;      Params:         0       0       0       0       0
  1630 ;;      Locals:         0       0       0       0       0
  1631 ;;      Temps:          0       0       0       0       0
  1632 ;;      Totals:         0       0       0       0       0
  1633 ;;Total ram usage:        0 bytes
  1634 ;; Hardware stack levels used:    1
  1635 ;; Hardware stack levels required when called:    1
  1636 ;; This function calls:
  1637 ;;		Nothing
  1638 ;; This function is called by:
  1639 ;;		_main
  1640 ;; This function uses a non-reentrant model
  1641 ;;
  1642                           
  1643                           
  1644                           ;psect for function _init_timer
  1645  0422                     _init_timer:	
  1646  0422                     l1133:	
  1647                           ;incstack = 0
  1648                           ; Regs used in _init_timer: [status,2]
  1649                           
  1650                           
  1651                           ;init.c: 61:     TMR0=0;
  1652  0422  1283               	bcf	3,5	;RP0=0, select bank0
  1653  0423  1303               	bcf	3,6	;RP1=0, select bank0
  1654  0424  0181               	clrf	1	;volatile
  1655  0425                     l1135:	
  1656                           
  1657                           ;init.c: 69:     INTCONbits.GIE = 1;
  1658  0425  178B               	bsf	11,7	;volatile
  1659  0426                     l1137:	
  1660                           
  1661                           ;init.c: 70:     INTCONbits.TMR0IE = 1;
  1662  0426  168B               	bsf	11,5	;volatile
  1663  0427                     l1139:	
  1664                           
  1665                           ;init.c: 71:     INTCONbits.TMR0IF = 0;
  1666  0427  110B               	bcf	11,2	;volatile
  1667  0428                     l1141:	
  1668                           
  1669                           ;init.c: 80:     OPTION_REGbits.PSA = 1;
  1670  0428  1683               	bsf	3,5	;RP0=1, select bank1
  1671  0429  1303               	bcf	3,6	;RP1=0, select bank1
  1672  042A  1581               	bsf	1,3	;volatile
  1673  042B                     l1143:	
  1674                           
  1675                           ;init.c: 81:     OPTION_REGbits.PS0 = 1;
  1676  042B  1401               	bsf	1,0	;volatile
  1677  042C                     l1145:	
  1678                           
  1679                           ;init.c: 82:     OPTION_REGbits.PS1 = 1;
  1680  042C  1481               	bsf	1,1	;volatile
  1681  042D                     l1147:	
  1682                           
  1683                           ;init.c: 83:     OPTION_REGbits.PS2 = 1;
  1684  042D  1501               	bsf	1,2	;volatile
  1685  042E                     l1149:	
  1686                           
  1687                           ;init.c: 84:     OPTION_REGbits.T0CS = 0;
  1688  042E  1281               	bcf	1,5	;volatile
  1689  042F                     l36:	
  1690  042F  0008               	return
  1691  0430                     __end_of_init_timer:	
  1692                           
  1693                           	psect	text9
  1694  0412                     __ptext9:	
  1695 ;; *************** function _init_pines *****************
  1696 ;; Defined at:
  1697 ;;		line 43 in file "init.c"
  1698 ;; Parameters:    Size  Location     Type
  1699 ;;		None
  1700 ;; Auto vars:     Size  Location     Type
  1701 ;;		None
  1702 ;; Return value:  Size  Location     Type
  1703 ;;                  1    wreg      void 
  1704 ;; Registers used:
  1705 ;;		status,2, status,0, pclath, cstack
  1706 ;; Tracked objects:
  1707 ;;		On entry : 0/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1711 ;;      Params:         0       0       0       0       0
  1712 ;;      Locals:         0       0       0       0       0
  1713 ;;      Temps:          0       0       0       0       0
  1714 ;;      Totals:         0       0       0       0       0
  1715 ;;Total ram usage:        0 bytes
  1716 ;; Hardware stack levels used:    1
  1717 ;; Hardware stack levels required when called:    2
  1718 ;; This function calls:
  1719 ;;		_init_pines_col
  1720 ;;		_init_pines_fil
  1721 ;;		_init_pines_in
  1722 ;; This function is called by:
  1723 ;;		_main
  1724 ;; This function uses a non-reentrant model
  1725 ;;
  1726                           
  1727                           
  1728                           ;psect for function _init_pines
  1729  0412                     _init_pines:	
  1730  0412                     l1129:	
  1731                           ;incstack = 0
  1732                           ; Regs used in _init_pines: [status,2+status,0+pclath+cstack]
  1733                           
  1734                           
  1735                           ;init.c: 45:     init_pines_fil();
  1736  0412  120A  118A  2430  120A  118A  	fcall	_init_pines_fil
  1737                           
  1738                           ;init.c: 46:     init_pines_col();
  1739  0417  120A  118A  23FF  120A  118A  	fcall	_init_pines_col
  1740                           
  1741                           ;init.c: 47:     init_pines_in();
  1742  041C  120A  118A  243D  120A  118A  	fcall	_init_pines_in
  1743  0421                     l30:	
  1744  0421  0008               	return
  1745  0422                     __end_of_init_pines:	
  1746                           
  1747                           	psect	text10
  1748  043D                     __ptext10:	
  1749 ;; *************** function _init_pines_in *****************
  1750 ;; Defined at:
  1751 ;;		line 4 in file "init.c"
  1752 ;; Parameters:    Size  Location     Type
  1753 ;;		None
  1754 ;; Auto vars:     Size  Location     Type
  1755 ;;		None
  1756 ;; Return value:  Size  Location     Type
  1757 ;;                  1    wreg      void 
  1758 ;; Registers used:
  1759 ;;		None
  1760 ;; Tracked objects:
  1761 ;;		On entry : 0/0
  1762 ;;		On exit  : 0/0
  1763 ;;		Unchanged: 0/0
  1764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1765 ;;      Params:         0       0       0       0       0
  1766 ;;      Locals:         0       0       0       0       0
  1767 ;;      Temps:          0       0       0       0       0
  1768 ;;      Totals:         0       0       0       0       0
  1769 ;;Total ram usage:        0 bytes
  1770 ;; Hardware stack levels used:    1
  1771 ;; Hardware stack levels required when called:    1
  1772 ;; This function calls:
  1773 ;;		Nothing
  1774 ;; This function is called by:
  1775 ;;		_init_pines
  1776 ;; This function uses a non-reentrant model
  1777 ;;
  1778                           
  1779                           
  1780                           ;psect for function _init_pines_in
  1781  043D                     _init_pines_in:	
  1782  043D                     l1047:	
  1783                           ;incstack = 0
  1784                           ; Regs used in _init_pines_in: []
  1785                           
  1786                           
  1787                           ;init.c: 6:     TRISBbits.TRISB5 = 1;
  1788  043D  1683               	bsf	3,5	;RP0=1, select bank1
  1789  043E  1303               	bcf	3,6	;RP1=0, select bank1
  1790  043F  1686               	bsf	6,5	;volatile
  1791                           
  1792                           ;init.c: 7:     TRISBbits.TRISB4 = 1;
  1793  0440  1606               	bsf	6,4	;volatile
  1794                           
  1795                           ;init.c: 9:     TRISBbits.TRISB6 = 0;
  1796  0441  1306               	bcf	6,6	;volatile
  1797                           
  1798                           ;init.c: 10:     TRISBbits.TRISB7 = 0;
  1799  0442  1386               	bcf	6,7	;volatile
  1800                           
  1801                           ;init.c: 12:     PORTBbits.RB6 = 0;
  1802  0443  1283               	bcf	3,5	;RP0=0, select bank0
  1803  0444  1303               	bcf	3,6	;RP1=0, select bank0
  1804  0445  1306               	bcf	6,6	;volatile
  1805                           
  1806                           ;init.c: 13:     PORTBbits.RB7 = 0;
  1807  0446  1386               	bcf	6,7	;volatile
  1808  0447                     l21:	
  1809  0447  0008               	return
  1810  0448                     __end_of_init_pines_in:	
  1811                           
  1812                           	psect	text11
  1813  0430                     __ptext11:	
  1814 ;; *************** function _init_pines_fil *****************
  1815 ;; Defined at:
  1816 ;;		line 16 in file "init.c"
  1817 ;; Parameters:    Size  Location     Type
  1818 ;;		None
  1819 ;; Auto vars:     Size  Location     Type
  1820 ;;		None
  1821 ;; Return value:  Size  Location     Type
  1822 ;;                  1    wreg      void 
  1823 ;; Registers used:
  1824 ;;		None
  1825 ;; Tracked objects:
  1826 ;;		On entry : 0/0
  1827 ;;		On exit  : 0/0
  1828 ;;		Unchanged: 0/0
  1829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1830 ;;      Params:         0       0       0       0       0
  1831 ;;      Locals:         0       0       0       0       0
  1832 ;;      Temps:          0       0       0       0       0
  1833 ;;      Totals:         0       0       0       0       0
  1834 ;;Total ram usage:        0 bytes
  1835 ;; Hardware stack levels used:    1
  1836 ;; Hardware stack levels required when called:    1
  1837 ;; This function calls:
  1838 ;;		Nothing
  1839 ;; This function is called by:
  1840 ;;		_init_pines
  1841 ;; This function uses a non-reentrant model
  1842 ;;
  1843                           
  1844                           
  1845                           ;psect for function _init_pines_fil
  1846  0430                     _init_pines_fil:	
  1847  0430                     l1049:	
  1848                           ;incstack = 0
  1849                           ; Regs used in _init_pines_fil: []
  1850                           
  1851                           
  1852                           ;init.c: 18:     TRISCbits.TRISC4 = 0;
  1853  0430  1683               	bsf	3,5	;RP0=1, select bank1
  1854  0431  1303               	bcf	3,6	;RP1=0, select bank1
  1855  0432  1207               	bcf	7,4	;volatile
  1856                           
  1857                           ;init.c: 19:     TRISCbits.TRISC5 = 0;
  1858  0433  1287               	bcf	7,5	;volatile
  1859                           
  1860                           ;init.c: 20:     TRISCbits.TRISC6 = 0;
  1861  0434  1307               	bcf	7,6	;volatile
  1862                           
  1863                           ;init.c: 21:     TRISCbits.TRISC7 = 0;
  1864  0435  1387               	bcf	7,7	;volatile
  1865                           
  1866                           ;init.c: 23:     PORTCbits.RC4 = 0;
  1867  0436  1283               	bcf	3,5	;RP0=0, select bank0
  1868  0437  1303               	bcf	3,6	;RP1=0, select bank0
  1869  0438  1207               	bcf	7,4	;volatile
  1870                           
  1871                           ;init.c: 24:     PORTCbits.RC5 = 0;
  1872  0439  1287               	bcf	7,5	;volatile
  1873                           
  1874                           ;init.c: 25:     PORTCbits.RC6 = 0;
  1875  043A  1307               	bcf	7,6	;volatile
  1876                           
  1877                           ;init.c: 26:     PORTCbits.RC7 = 0;
  1878  043B  1387               	bcf	7,7	;volatile
  1879  043C                     l24:	
  1880  043C  0008               	return
  1881  043D                     __end_of_init_pines_fil:	
  1882                           
  1883                           	psect	text12
  1884  03FF                     __ptext12:	
  1885 ;; *************** function _init_pines_col *****************
  1886 ;; Defined at:
  1887 ;;		line 29 in file "init.c"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;		None
  1890 ;; Auto vars:     Size  Location     Type
  1891 ;;		None
  1892 ;; Return value:  Size  Location     Type
  1893 ;;                  1    wreg      void 
  1894 ;; Registers used:
  1895 ;;		None
  1896 ;; Tracked objects:
  1897 ;;		On entry : 0/0
  1898 ;;		On exit  : 0/0
  1899 ;;		Unchanged: 0/0
  1900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1901 ;;      Params:         0       0       0       0       0
  1902 ;;      Locals:         0       0       0       0       0
  1903 ;;      Temps:          0       0       0       0       0
  1904 ;;      Totals:         0       0       0       0       0
  1905 ;;Total ram usage:        0 bytes
  1906 ;; Hardware stack levels used:    1
  1907 ;; Hardware stack levels required when called:    1
  1908 ;; This function calls:
  1909 ;;		Nothing
  1910 ;; This function is called by:
  1911 ;;		_init_pines
  1912 ;; This function uses a non-reentrant model
  1913 ;;
  1914                           
  1915                           
  1916                           ;psect for function _init_pines_col
  1917  03FF                     _init_pines_col:	
  1918  03FF                     l1051:	
  1919                           ;incstack = 0
  1920                           ; Regs used in _init_pines_col: []
  1921                           
  1922                           
  1923                           ;init.c: 30:     TRISBbits.TRISB0 = 0;
  1924  03FF  1683               	bsf	3,5	;RP0=1, select bank1
  1925  0400  1303               	bcf	3,6	;RP1=0, select bank1
  1926  0401  1006               	bcf	6,0	;volatile
  1927                           
  1928                           ;init.c: 31:     PORTBbits.RB0 = 0;
  1929  0402  1283               	bcf	3,5	;RP0=0, select bank0
  1930  0403  1303               	bcf	3,6	;RP1=0, select bank0
  1931  0404  1006               	bcf	6,0	;volatile
  1932                           
  1933                           ;init.c: 33:     TRISDbits.TRISD4 = 0;
  1934  0405  1683               	bsf	3,5	;RP0=1, select bank1
  1935  0406  1303               	bcf	3,6	;RP1=0, select bank1
  1936  0407  1208               	bcf	8,4	;volatile
  1937                           
  1938                           ;init.c: 34:     TRISDbits.TRISD5 = 0;
  1939  0408  1288               	bcf	8,5	;volatile
  1940                           
  1941                           ;init.c: 35:     TRISDbits.TRISD6 = 0;
  1942  0409  1308               	bcf	8,6	;volatile
  1943                           
  1944                           ;init.c: 36:     TRISDbits.TRISD7 = 0;
  1945  040A  1388               	bcf	8,7	;volatile
  1946                           
  1947                           ;init.c: 38:     PORTDbits.RD4 = 0;
  1948  040B  1283               	bcf	3,5	;RP0=0, select bank0
  1949  040C  1303               	bcf	3,6	;RP1=0, select bank0
  1950  040D  1208               	bcf	8,4	;volatile
  1951                           
  1952                           ;init.c: 39:     PORTDbits.RD5 = 0;
  1953  040E  1288               	bcf	8,5	;volatile
  1954                           
  1955                           ;init.c: 40:     PORTDbits.RD6 = 0;
  1956  040F  1308               	bcf	8,6	;volatile
  1957                           
  1958                           ;init.c: 41:     PORTDbits.RD7 = 0;
  1959  0410  1388               	bcf	8,7	;volatile
  1960  0411                     l27:	
  1961  0411  0008               	return
  1962  0412                     __end_of_init_pines_col:	
  1963                           
  1964                           	psect	text13
  1965  0450                     __ptext13:	
  1966 ;; *************** function _init_interrupt *****************
  1967 ;; Defined at:
  1968 ;;		line 50 in file "init.c"
  1969 ;; Parameters:    Size  Location     Type
  1970 ;;		None
  1971 ;; Auto vars:     Size  Location     Type
  1972 ;;		None
  1973 ;; Return value:  Size  Location     Type
  1974 ;;                  1    wreg      void 
  1975 ;; Registers used:
  1976 ;;		None
  1977 ;; Tracked objects:
  1978 ;;		On entry : 0/0
  1979 ;;		On exit  : 0/0
  1980 ;;		Unchanged: 0/0
  1981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1982 ;;      Params:         0       0       0       0       0
  1983 ;;      Locals:         0       0       0       0       0
  1984 ;;      Temps:          0       0       0       0       0
  1985 ;;      Totals:         0       0       0       0       0
  1986 ;;Total ram usage:        0 bytes
  1987 ;; Hardware stack levels used:    1
  1988 ;; Hardware stack levels required when called:    1
  1989 ;; This function calls:
  1990 ;;		Nothing
  1991 ;; This function is called by:
  1992 ;;		_main
  1993 ;; This function uses a non-reentrant model
  1994 ;;
  1995                           
  1996                           
  1997                           ;psect for function _init_interrupt
  1998  0450                     _init_interrupt:	
  1999  0450                     l1131:	
  2000                           ;incstack = 0
  2001                           ; Regs used in _init_interrupt: []
  2002                           
  2003                           
  2004                           ;init.c: 51:     INTCONbits.GIE = 1;
  2005  0450  178B               	bsf	11,7	;volatile
  2006                           
  2007                           ;init.c: 52:     INTCONbits.PEIE = 1;
  2008  0451  170B               	bsf	11,6	;volatile
  2009                           
  2010                           ;init.c: 53:     INTCONbits.RBIE = 1;
  2011  0452  158B               	bsf	11,3	;volatile
  2012                           
  2013                           ;init.c: 54:     INTCONbits.RBIF = 0;
  2014  0453  100B               	bcf	11,0	;volatile
  2015                           
  2016                           ;init.c: 56:     OPTION_REGbits.nRBPU = 0;
  2017  0454  1683               	bsf	3,5	;RP0=1, select bank1
  2018  0455  1303               	bcf	3,6	;RP1=0, select bank1
  2019  0456  1381               	bcf	1,7	;volatile
  2020  0457                     l33:	
  2021  0457  0008               	return
  2022  0458                     __end_of_init_interrupt:	
  2023                           
  2024                           	psect	text14
  2025  003E                     __ptext14:	
  2026 ;; *************** function _drawFigure *****************
  2027 ;; Defined at:
  2028 ;;		line 36 in file "screen.c"
  2029 ;; Parameters:    Size  Location     Type
  2030 ;;		None
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;		None
  2033 ;; Return value:  Size  Location     Type
  2034 ;;                  1    wreg      void 
  2035 ;; Registers used:
  2036 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2037 ;; Tracked objects:
  2038 ;;		On entry : 0/0
  2039 ;;		On exit  : 0/0
  2040 ;;		Unchanged: 0/0
  2041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2042 ;;      Params:         0       0       0       0       0
  2043 ;;      Locals:         0       0       0       0       0
  2044 ;;      Temps:          0       5       0       0       0
  2045 ;;      Totals:         0       5       0       0       0
  2046 ;;Total ram usage:        5 bytes
  2047 ;; Hardware stack levels used:    1
  2048 ;; Hardware stack levels required when called:    2
  2049 ;; This function calls:
  2050 ;;		_memset
  2051 ;; This function is called by:
  2052 ;;		_main
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           
  2056                           
  2057                           ;psect for function _drawFigure
  2058  003E                     _drawFigure:	
  2059  003E                     l1173:	
  2060                           ;incstack = 0
  2061                           ; Regs used in _drawFigure: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2062                           
  2063                           
  2064                           ;screen.c: 37:     memset(ficha, 0, sizeof(ficha));
  2065  003E  3000               	movlw	0
  2066  003F  00F2               	movwf	memset@c
  2067  0040  00F3               	movwf	memset@c+1
  2068  0041  3010               	movlw	16
  2069  0042  00F4               	movwf	memset@n
  2070  0043  3000               	movlw	0
  2071  0044  00F5               	movwf	memset@n+1
  2072  0045  303B               	movlw	(low (_ficha| 0))& (0+255)
  2073  0046  120A  118A  23B0  120A  118A  	fcall	_memset
  2074  004B                     l1175:	
  2075                           
  2076                           ;screen.c: 38:     if(con.derecha == 1 && con.ficha_Hpos<4){
  2077  004B  1283               	bcf	3,5	;RP0=0, select bank0
  2078  004C  1303               	bcf	3,6	;RP1=0, select bank0
  2079  004D  0336               	decf	_con+6,w
  2080  004E  1D03               	btfss	3,2
  2081  004F  2851               	goto	u661
  2082  0050  2852               	goto	u660
  2083  0051                     u661:	
  2084  0051  285E               	goto	l1183
  2085  0052                     u660:	
  2086  0052                     l1177:	
  2087  0052  3004               	movlw	4
  2088  0053  0234               	subwf	_con+4,w
  2089  0054  1803               	skipnc
  2090  0055  2857               	goto	u671
  2091  0056  2858               	goto	u670
  2092  0057                     u671:	
  2093  0057  285E               	goto	l1183
  2094  0058                     u670:	
  2095  0058                     l1179:	
  2096                           
  2097                           ;screen.c: 39:         con.ficha_Hpos++;
  2098  0058  3001               	movlw	1
  2099  0059  00CB               	movwf	??_drawFigure
  2100  005A  084B               	movf	??_drawFigure,w
  2101  005B  07B4               	addwf	_con+4,f
  2102  005C                     l1181:	
  2103                           
  2104                           ;screen.c: 40:         con.derecha = 0;
  2105  005C  01B6               	clrf	_con+6
  2106                           
  2107                           ;screen.c: 41:     }else if (con.izquierda == 1 && con.ficha_Hpos>0){
  2108  005D  286B               	goto	l1191
  2109  005E                     l1183:	
  2110  005E  0337               	decf	_con+7,w
  2111  005F  1D03               	btfss	3,2
  2112  0060  2862               	goto	u681
  2113  0061  2863               	goto	u680
  2114  0062                     u681:	
  2115  0062  286B               	goto	l1191
  2116  0063                     u680:	
  2117  0063                     l1185:	
  2118  0063  0834               	movf	_con+4,w
  2119  0064  1903               	btfsc	3,2
  2120  0065  2867               	goto	u691
  2121  0066  2868               	goto	u690
  2122  0067                     u691:	
  2123  0067  286B               	goto	l1191
  2124  0068                     u690:	
  2125  0068                     l1187:	
  2126                           
  2127                           ;screen.c: 42:         con.ficha_Hpos--;
  2128  0068  3001               	movlw	1
  2129  0069  02B4               	subwf	_con+4,f
  2130  006A                     l1189:	
  2131                           
  2132                           ;screen.c: 43:         con.izquierda = 0;
  2133  006A  01B7               	clrf	_con+7
  2134  006B                     l1191:	
  2135                           
  2136                           ;screen.c: 45:     ficha[con.ficha_Hpos ] = figuras[con.ficha_actual][0] << (con.ficha_V
      +                          pos -1);
  2137  006B  0833               	movf	_con+3,w
  2138  006C  3EFF               	addlw	-1
  2139  006D  00CB               	movwf	??_drawFigure
  2140  006E  0ACB               	incf	??_drawFigure,f
  2141  006F  0835               	movf	_con+5,w
  2142  0070  00CC               	movwf	??_drawFigure+1
  2143  0071  3002               	movlw	2
  2144  0072                     u705:	
  2145  0072  1003               	clrc
  2146  0073  0DCC               	rlf	??_drawFigure+1,f
  2147  0074  3EFF               	addlw	-1
  2148  0075  1D03               	skipz
  2149  0076  2872               	goto	u705
  2150  0077  1003               	clrc
  2151  0078  0D4C               	rlf	??_drawFigure+1,w
  2152  0079  3EA0               	addlw	(low (_figuras| 0))& (0+255)
  2153  007A  0084               	movwf	4
  2154  007B  1383               	bcf	3,7	;select IRP bank1
  2155  007C  0800               	movf	0,w
  2156  007D  00CD               	movwf	??_drawFigure+2
  2157  007E  0A84               	incf	4,f
  2158  007F  0800               	movf	0,w
  2159  0080  00CE               	movwf	??_drawFigure+3
  2160  0081  2885               	goto	u714
  2161  0082                     u715:	
  2162  0082  1003               	clrc
  2163  0083  0DCD               	rlf	??_drawFigure+2,f
  2164  0084  0DCE               	rlf	??_drawFigure+3,f
  2165  0085                     u714:	
  2166  0085  0BCB               	decfsz	??_drawFigure,f
  2167  0086  2882               	goto	u715
  2168  0087  0834               	movf	_con+4,w
  2169  0088  00CF               	movwf	??_drawFigure+4
  2170  0089  074F               	addwf	??_drawFigure+4,w
  2171  008A  3E3B               	addlw	(low (_ficha| 0))& (0+255)
  2172  008B  0084               	movwf	4
  2173  008C  084D               	movf	??_drawFigure+2,w
  2174  008D  0080               	movwf	0
  2175  008E  0A84               	incf	4,f
  2176  008F  084E               	movf	??_drawFigure+3,w
  2177  0090  0080               	movwf	0
  2178  0091                     l1193:	
  2179                           
  2180                           ;screen.c: 46:     ficha[con.ficha_Hpos +1] = figuras[con.ficha_actual][1] << (con.ficha
      +                          _Vpos -1);
  2181  0091  0833               	movf	_con+3,w
  2182  0092  3EFF               	addlw	-1
  2183  0093  00CB               	movwf	??_drawFigure
  2184  0094  0ACB               	incf	??_drawFigure,f
  2185  0095  0835               	movf	_con+5,w
  2186  0096  00CC               	movwf	??_drawFigure+1
  2187  0097  3002               	movlw	2
  2188  0098                     u725:	
  2189  0098  1003               	clrc
  2190  0099  0DCC               	rlf	??_drawFigure+1,f
  2191  009A  3EFF               	addlw	-1
  2192  009B  1D03               	skipz
  2193  009C  2898               	goto	u725
  2194  009D  1003               	clrc
  2195  009E  0D4C               	rlf	??_drawFigure+1,w
  2196  009F  3EA2               	addlw	(low ((_figuras| 0+2)))& (0+255)
  2197  00A0  0084               	movwf	4
  2198  00A1  0800               	movf	0,w
  2199  00A2  00CD               	movwf	??_drawFigure+2
  2200  00A3  0A84               	incf	4,f
  2201  00A4  0800               	movf	0,w
  2202  00A5  00CE               	movwf	??_drawFigure+3
  2203  00A6  28AA               	goto	u734
  2204  00A7                     u735:	
  2205  00A7  1003               	clrc
  2206  00A8  0DCD               	rlf	??_drawFigure+2,f
  2207  00A9  0DCE               	rlf	??_drawFigure+3,f
  2208  00AA                     u734:	
  2209  00AA  0BCB               	decfsz	??_drawFigure,f
  2210  00AB  28A7               	goto	u735
  2211  00AC  0834               	movf	_con+4,w
  2212  00AD  00CF               	movwf	??_drawFigure+4
  2213  00AE  074F               	addwf	??_drawFigure+4,w
  2214  00AF  3E3D               	addlw	(low ((_ficha| 0+2)))& (0+255)
  2215  00B0  0084               	movwf	4
  2216  00B1  084D               	movf	??_drawFigure+2,w
  2217  00B2  0080               	movwf	0
  2218  00B3  0A84               	incf	4,f
  2219  00B4  084E               	movf	??_drawFigure+3,w
  2220  00B5  0080               	movwf	0
  2221  00B6                     l1195:	
  2222                           
  2223                           ;screen.c: 47:     ficha[con.ficha_Hpos +2] = figuras[con.ficha_actual][2] << (con.ficha
      +                          _Vpos -1);
  2224  00B6  0833               	movf	_con+3,w
  2225  00B7  3EFF               	addlw	-1
  2226  00B8  00CB               	movwf	??_drawFigure
  2227  00B9  0ACB               	incf	??_drawFigure,f
  2228  00BA  0835               	movf	_con+5,w
  2229  00BB  00CC               	movwf	??_drawFigure+1
  2230  00BC  3002               	movlw	2
  2231  00BD                     u745:	
  2232  00BD  1003               	clrc
  2233  00BE  0DCC               	rlf	??_drawFigure+1,f
  2234  00BF  3EFF               	addlw	-1
  2235  00C0  1D03               	skipz
  2236  00C1  28BD               	goto	u745
  2237  00C2  1003               	clrc
  2238  00C3  0D4C               	rlf	??_drawFigure+1,w
  2239  00C4  3EA4               	addlw	(low ((_figuras| 0+4)))& (0+255)
  2240  00C5  0084               	movwf	4
  2241  00C6  0800               	movf	0,w
  2242  00C7  00CD               	movwf	??_drawFigure+2
  2243  00C8  0A84               	incf	4,f
  2244  00C9  0800               	movf	0,w
  2245  00CA  00CE               	movwf	??_drawFigure+3
  2246  00CB  28CF               	goto	u754
  2247  00CC                     u755:	
  2248  00CC  1003               	clrc
  2249  00CD  0DCD               	rlf	??_drawFigure+2,f
  2250  00CE  0DCE               	rlf	??_drawFigure+3,f
  2251  00CF                     u754:	
  2252  00CF  0BCB               	decfsz	??_drawFigure,f
  2253  00D0  28CC               	goto	u755
  2254  00D1  0834               	movf	_con+4,w
  2255  00D2  00CF               	movwf	??_drawFigure+4
  2256  00D3  074F               	addwf	??_drawFigure+4,w
  2257  00D4  3E3F               	addlw	(low ((_ficha| 0+4)))& (0+255)
  2258  00D5  0084               	movwf	4
  2259  00D6  084D               	movf	??_drawFigure+2,w
  2260  00D7  0080               	movwf	0
  2261  00D8  0A84               	incf	4,f
  2262  00D9  084E               	movf	??_drawFigure+3,w
  2263  00DA  0080               	movwf	0
  2264  00DB                     l1197:	
  2265                           
  2266                           ;screen.c: 48:     ficha[con.ficha_Hpos +3] = figuras[con.ficha_actual][3] << (con.ficha
      +                          _Vpos -1);
  2267  00DB  0833               	movf	_con+3,w
  2268  00DC  3EFF               	addlw	-1
  2269  00DD  00CB               	movwf	??_drawFigure
  2270  00DE  0ACB               	incf	??_drawFigure,f
  2271  00DF  0835               	movf	_con+5,w
  2272  00E0  00CC               	movwf	??_drawFigure+1
  2273  00E1  3002               	movlw	2
  2274  00E2                     u765:	
  2275  00E2  1003               	clrc
  2276  00E3  0DCC               	rlf	??_drawFigure+1,f
  2277  00E4  3EFF               	addlw	-1
  2278  00E5  1D03               	skipz
  2279  00E6  28E2               	goto	u765
  2280  00E7  1003               	clrc
  2281  00E8  0D4C               	rlf	??_drawFigure+1,w
  2282  00E9  3EA6               	addlw	(low ((_figuras| 0+6)))& (0+255)
  2283  00EA  0084               	movwf	4
  2284  00EB  0800               	movf	0,w
  2285  00EC  00CD               	movwf	??_drawFigure+2
  2286  00ED  0A84               	incf	4,f
  2287  00EE  0800               	movf	0,w
  2288  00EF  00CE               	movwf	??_drawFigure+3
  2289  00F0  28F4               	goto	u774
  2290  00F1                     u775:	
  2291  00F1  1003               	clrc
  2292  00F2  0DCD               	rlf	??_drawFigure+2,f
  2293  00F3  0DCE               	rlf	??_drawFigure+3,f
  2294  00F4                     u774:	
  2295  00F4  0BCB               	decfsz	??_drawFigure,f
  2296  00F5  28F1               	goto	u775
  2297  00F6  0834               	movf	_con+4,w
  2298  00F7  00CF               	movwf	??_drawFigure+4
  2299  00F8  074F               	addwf	??_drawFigure+4,w
  2300  00F9  3E41               	addlw	(low ((_ficha| 0+6)))& (0+255)
  2301  00FA  0084               	movwf	4
  2302  00FB  084D               	movf	??_drawFigure+2,w
  2303  00FC  0080               	movwf	0
  2304  00FD  0A84               	incf	4,f
  2305  00FE  084E               	movf	??_drawFigure+3,w
  2306  00FF  0080               	movwf	0
  2307  0100                     l157:	
  2308  0100  0008               	return
  2309  0101                     __end_of_drawFigure:	
  2310                           
  2311                           	psect	text15
  2312  03B0                     __ptext15:	
  2313 ;; *************** function _memset *****************
  2314 ;; Defined at:
  2315 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\memset.c"
  2316 ;; Parameters:    Size  Location     Type
  2317 ;;  p1              1    wreg     PTR void 
  2318 ;;		 -> ficha(16), 
  2319 ;;  c               2    2[COMMON] int 
  2320 ;;  n               2    4[COMMON] unsigned int 
  2321 ;; Auto vars:     Size  Location     Type
  2322 ;;  p1              1    7[COMMON] PTR void 
  2323 ;;		 -> ficha(16), 
  2324 ;;  p               1    8[COMMON] PTR unsigned char 
  2325 ;;		 -> ficha(16), 
  2326 ;; Return value:  Size  Location     Type
  2327 ;;                  1    wreg      PTR void 
  2328 ;; Registers used:
  2329 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2330 ;; Tracked objects:
  2331 ;;		On entry : 0/0
  2332 ;;		On exit  : 0/0
  2333 ;;		Unchanged: 0/0
  2334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2335 ;;      Params:         4       0       0       0       0
  2336 ;;      Locals:         2       0       0       0       0
  2337 ;;      Temps:          1       0       0       0       0
  2338 ;;      Totals:         7       0       0       0       0
  2339 ;;Total ram usage:        7 bytes
  2340 ;; Hardware stack levels used:    1
  2341 ;; Hardware stack levels required when called:    1
  2342 ;; This function calls:
  2343 ;;		Nothing
  2344 ;; This function is called by:
  2345 ;;		_drawFigure
  2346 ;; This function uses a non-reentrant model
  2347 ;;
  2348                           
  2349                           
  2350                           ;psect for function _memset
  2351  03B0                     _memset:	
  2352                           
  2353                           ;incstack = 0
  2354                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0]
  2355                           ;memset@p1 stored from wreg
  2356  03B0  00F7               	movwf	memset@p1
  2357  03B1                     l1083:	
  2358  03B1  0877               	movf	memset@p1,w
  2359  03B2  00F6               	movwf	??_memset
  2360  03B3  0876               	movf	??_memset,w
  2361  03B4  00F8               	movwf	memset@p
  2362  03B5  2BC1               	goto	l1089
  2363  03B6                     l1085:	
  2364  03B6  0872               	movf	memset@c,w
  2365  03B7  00F6               	movwf	??_memset
  2366  03B8  0878               	movf	memset@p,w
  2367  03B9  0084               	movwf	4
  2368  03BA  0876               	movf	??_memset,w
  2369  03BB  1383               	bcf	3,7	;select IRP bank0
  2370  03BC  0080               	movwf	0
  2371  03BD                     l1087:	
  2372  03BD  3001               	movlw	1
  2373  03BE  00F6               	movwf	??_memset
  2374  03BF  0876               	movf	??_memset,w
  2375  03C0  07F8               	addwf	memset@p,f
  2376  03C1                     l1089:	
  2377  03C1  3001               	movlw	1
  2378  03C2  02F4               	subwf	memset@n,f
  2379  03C3  3000               	movlw	0
  2380  03C4  1C03               	skipc
  2381  03C5  03F5               	decf	memset@n+1,f
  2382  03C6  02F5               	subwf	memset@n+1,f
  2383  03C7  0A74               	incf	memset@n,w
  2384  03C8  1D03               	skipz
  2385  03C9  2BCE               	goto	u531
  2386  03CA  0A75               	incf	memset@n+1,w
  2387  03CB  1D03               	btfss	3,2
  2388  03CC  2BCE               	goto	u531
  2389  03CD  2BCF               	goto	u530
  2390  03CE                     u531:	
  2391  03CE  2BB6               	goto	l1085
  2392  03CF                     u530:	
  2393  03CF                     l691:	
  2394  03CF  0008               	return
  2395  03D0                     __end_of_memset:	
  2396                           
  2397                           	psect	text16
  2398  038D                     __ptext16:	
  2399 ;; *************** function _drawBground *****************
  2400 ;; Defined at:
  2401 ;;		line 25 in file "screen.c"
  2402 ;; Parameters:    Size  Location     Type
  2403 ;;		None
  2404 ;; Auto vars:     Size  Location     Type
  2405 ;;		None
  2406 ;; Return value:  Size  Location     Type
  2407 ;;                  1    wreg      void 
  2408 ;; Registers used:
  2409 ;;		wreg
  2410 ;; Tracked objects:
  2411 ;;		On entry : 0/0
  2412 ;;		On exit  : 0/0
  2413 ;;		Unchanged: 0/0
  2414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2415 ;;      Params:         0       0       0       0       0
  2416 ;;      Locals:         0       0       0       0       0
  2417 ;;      Temps:          0       0       0       0       0
  2418 ;;      Totals:         0       0       0       0       0
  2419 ;;Total ram usage:        0 bytes
  2420 ;; Hardware stack levels used:    1
  2421 ;; Hardware stack levels required when called:    1
  2422 ;; This function calls:
  2423 ;;		Nothing
  2424 ;; This function is called by:
  2425 ;;		_main
  2426 ;; This function uses a non-reentrant model
  2427 ;;
  2428                           
  2429                           
  2430                           ;psect for function _drawBground
  2431  038D                     _drawBground:	
  2432  038D                     l1151:	
  2433                           ;incstack = 0
  2434                           ; Regs used in _drawBground: [wreg]
  2435                           
  2436                           
  2437                           ;screen.c: 26:     fondo[0] = 0x0003;
  2438  038D  3003               	movlw	3
  2439  038E  1283               	bcf	3,5	;RP0=0, select bank0
  2440  038F  1303               	bcf	3,6	;RP1=0, select bank0
  2441  0390  00A0               	movwf	_fondo
  2442  0391  3000               	movlw	0
  2443  0392  00A1               	movwf	_fondo+1
  2444                           
  2445                           ;screen.c: 27:     fondo[1] = 0x0003;
  2446  0393  3003               	movlw	3
  2447  0394  00A2               	movwf	_fondo+2
  2448  0395  3000               	movlw	0
  2449  0396  00A3               	movwf	_fondo+3
  2450                           
  2451                           ;screen.c: 28:     fondo[2] = 0x0003;
  2452  0397  3003               	movlw	3
  2453  0398  00A4               	movwf	_fondo+4
  2454  0399  3000               	movlw	0
  2455  039A  00A5               	movwf	_fondo+5
  2456                           
  2457                           ;screen.c: 29:     fondo[3] = 0x0003;
  2458  039B  3003               	movlw	3
  2459  039C  00A6               	movwf	_fondo+6
  2460  039D  3000               	movlw	0
  2461  039E  00A7               	movwf	_fondo+7
  2462                           
  2463                           ;screen.c: 30:     fondo[4] = 0x0003;
  2464  039F  3003               	movlw	3
  2465  03A0  00A8               	movwf	_fondo+8
  2466  03A1  3000               	movlw	0
  2467  03A2  00A9               	movwf	_fondo+9
  2468                           
  2469                           ;screen.c: 31:     fondo[5] = 0x0003;
  2470  03A3  3003               	movlw	3
  2471  03A4  00AA               	movwf	_fondo+10
  2472  03A5  3000               	movlw	0
  2473  03A6  00AB               	movwf	_fondo+11
  2474                           
  2475                           ;screen.c: 32:     fondo[6] = 0x0003;
  2476  03A7  3003               	movlw	3
  2477  03A8  00AC               	movwf	_fondo+12
  2478  03A9  3000               	movlw	0
  2479  03AA  00AD               	movwf	_fondo+13
  2480                           
  2481                           ;screen.c: 33:     fondo[7] = 0x0003;
  2482  03AB  3003               	movlw	3
  2483  03AC  00AE               	movwf	_fondo+14
  2484  03AD  3000               	movlw	0
  2485  03AE  00AF               	movwf	_fondo+15
  2486  03AF                     l151:	
  2487  03AF  0008               	return
  2488  03B0                     __end_of_drawBground:	
  2489                           
  2490                           	psect	text17
  2491  0265                     __ptext17:	
  2492 ;; *************** function _checkCount *****************
  2493 ;; Defined at:
  2494 ;;		line 69 in file "mainsource.c"
  2495 ;; Parameters:    Size  Location     Type
  2496 ;;		None
  2497 ;; Auto vars:     Size  Location     Type
  2498 ;;		None
  2499 ;; Return value:  Size  Location     Type
  2500 ;;                  1    wreg      void 
  2501 ;; Registers used:
  2502 ;;		wreg, status,2, status,0, pclath, cstack
  2503 ;; Tracked objects:
  2504 ;;		On entry : 0/0
  2505 ;;		On exit  : 0/0
  2506 ;;		Unchanged: 0/0
  2507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2508 ;;      Params:         0       0       0       0       0
  2509 ;;      Locals:         0       0       0       0       0
  2510 ;;      Temps:          0       1       0       0       0
  2511 ;;      Totals:         0       1       0       0       0
  2512 ;;Total ram usage:        1 bytes
  2513 ;; Hardware stack levels used:    1
  2514 ;; Hardware stack levels required when called:    3
  2515 ;; This function calls:
  2516 ;;		___awmod
  2517 ;;		_rand
  2518 ;; This function is called by:
  2519 ;;		_main
  2520 ;; This function uses a non-reentrant model
  2521 ;;
  2522                           
  2523                           
  2524                           ;psect for function _checkCount
  2525  0265                     _checkCount:	
  2526  0265                     l1153:	
  2527                           ;incstack = 0
  2528                           ; Regs used in _checkCount: [wreg+status,2+status,0+pclath+cstack]
  2529                           
  2530                           
  2531                           ;mainsource.c: 70:     if(con.check_count == 1){
  2532  0265  1283               	bcf	3,5	;RP0=0, select bank0
  2533  0266  1303               	bcf	3,6	;RP1=0, select bank0
  2534  0267  0338               	decf	_con+8,w
  2535  0268  1D03               	btfss	3,2
  2536  0269  2A6B               	goto	u631
  2537  026A  2A6C               	goto	u630
  2538  026B                     u631:	
  2539  026B  2AAC               	goto	l84
  2540  026C                     u630:	
  2541  026C                     l1155:	
  2542                           
  2543                           ;mainsource.c: 71:         timerCount ++;
  2544  026C  3001               	movlw	1
  2545  026D  07B9               	addwf	_timerCount,f
  2546  026E  1803               	skipnc
  2547  026F  0ABA               	incf	_timerCount+1,f
  2548  0270  3000               	movlw	0
  2549  0271  07BA               	addwf	_timerCount+1,f
  2550                           
  2551                           ;mainsource.c: 72:         if(timerCount >= 3906){
  2552  0272  300F               	movlw	15
  2553  0273  023A               	subwf	_timerCount+1,w
  2554  0274  3042               	movlw	66
  2555  0275  1903               	skipnz
  2556  0276  0239               	subwf	_timerCount,w
  2557  0277  1C03               	skipc
  2558  0278  2A7A               	goto	u641
  2559  0279  2A7B               	goto	u640
  2560  027A                     u641:	
  2561  027A  2AAB               	goto	l1171
  2562  027B                     u640:	
  2563  027B                     l1157:	
  2564                           
  2565                           ;mainsource.c: 73:             PORTBbits.RB0 = con.led;
  2566  027B  0C32               	rrf	_con+2,w
  2567  027C  1C03               	skipc
  2568  027D  1006               	bcf	6,0	;volatile
  2569  027E  1803               	skipnc
  2570  027F  1406               	bsf	6,0	;volatile
  2571  0280                     l1159:	
  2572                           
  2573                           ;mainsource.c: 74:             con.led= ~con.led;
  2574  0280  0932               	comf	_con+2,w
  2575  0281  00DC               	movwf	??_checkCount
  2576  0282  085C               	movf	??_checkCount,w
  2577  0283  00B2               	movwf	_con+2
  2578  0284                     l1161:	
  2579                           
  2580                           ;mainsource.c: 75:             con.ficha_Vpos--;
  2581  0284  3001               	movlw	1
  2582  0285  02B3               	subwf	_con+3,f
  2583  0286                     l1163:	
  2584                           
  2585                           ;mainsource.c: 76:             timerCount = 0;
  2586  0286  01B9               	clrf	_timerCount
  2587  0287  01BA               	clrf	_timerCount+1
  2588  0288                     l1165:	
  2589                           
  2590                           ;mainsource.c: 77:             if(con.ficha_Vpos==0){
  2591  0288  0833               	movf	_con+3,w
  2592  0289  1D03               	btfss	3,2
  2593  028A  2A8C               	goto	u651
  2594  028B  2A8D               	goto	u650
  2595  028C                     u651:	
  2596  028C  2AAB               	goto	l1171
  2597  028D                     u650:	
  2598  028D                     l1167:	
  2599                           
  2600                           ;mainsource.c: 78:                 con.ficha_Vpos = 16;
  2601  028D  3010               	movlw	16
  2602  028E  00DC               	movwf	??_checkCount
  2603  028F  085C               	movf	??_checkCount,w
  2604  0290  00B3               	movwf	_con+3
  2605  0291                     l1169:	
  2606                           
  2607                           ;mainsource.c: 79:                 con.ficha_actual = rand() % 5;
  2608  0291  3005               	movlw	5
  2609  0292  00D6               	movwf	___awmod@divisor
  2610  0293  3000               	movlw	0
  2611  0294  00D7               	movwf	___awmod@divisor+1
  2612  0295  120A  118A  22AD  120A  118A  	fcall	_rand
  2613  029A  1283               	bcf	3,5	;RP0=0, select bank0
  2614  029B  1303               	bcf	3,6	;RP1=0, select bank0
  2615  029C  0850               	movf	?_rand+1,w
  2616  029D  00D9               	movwf	___awmod@dividend+1
  2617  029E  084F               	movf	?_rand,w
  2618  029F  00D8               	movwf	___awmod@dividend
  2619  02A0  120A  118A  2173  120A  118A  	fcall	___awmod
  2620  02A5  1283               	bcf	3,5	;RP0=0, select bank0
  2621  02A6  1303               	bcf	3,6	;RP1=0, select bank0
  2622  02A7  0856               	movf	?___awmod,w
  2623  02A8  00DC               	movwf	??_checkCount
  2624  02A9  085C               	movf	??_checkCount,w
  2625  02AA  00B5               	movwf	_con+5
  2626  02AB                     l1171:	
  2627                           
  2628                           ;mainsource.c: 82:         con.check_count = 0;
  2629  02AB  01B8               	clrf	_con+8
  2630  02AC                     l84:	
  2631  02AC  0008               	return
  2632  02AD                     __end_of_checkCount:	
  2633                           
  2634                           	psect	text18
  2635  02AD                     __ptext18:	
  2636 ;; *************** function _rand *****************
  2637 ;; Defined at:
  2638 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  2639 ;; Parameters:    Size  Location     Type
  2640 ;;		None
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;		None
  2643 ;; Return value:  Size  Location     Type
  2644 ;;                  2    4[BANK0 ] int 
  2645 ;; Registers used:
  2646 ;;		wreg, status,2, status,0, pclath, cstack
  2647 ;; Tracked objects:
  2648 ;;		On entry : 0/0
  2649 ;;		On exit  : 0/0
  2650 ;;		Unchanged: 0/0
  2651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2652 ;;      Params:         0       2       0       0       0
  2653 ;;      Locals:         0       0       0       0       0
  2654 ;;      Temps:          0       5       0       0       0
  2655 ;;      Totals:         0       7       0       0       0
  2656 ;;Total ram usage:        7 bytes
  2657 ;; Hardware stack levels used:    1
  2658 ;; Hardware stack levels required when called:    2
  2659 ;; This function calls:
  2660 ;;		___lmul
  2661 ;; This function is called by:
  2662 ;;		_checkCount
  2663 ;; This function uses a non-reentrant model
  2664 ;;
  2665                           
  2666                           
  2667                           ;psect for function _rand
  2668  02AD                     _rand:	
  2669  02AD                     l1053:	
  2670                           ;incstack = 0
  2671                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  2672                           
  2673  02AD  1283               	bcf	3,5	;RP0=0, select bank0
  2674  02AE  1303               	bcf	3,6	;RP1=0, select bank0
  2675  02AF  086F               	movf	_randx+3,w
  2676  02B0  00F5               	movwf	___lmul@multiplier+3
  2677  02B1  086E               	movf	_randx+2,w
  2678  02B2  00F4               	movwf	___lmul@multiplier+2
  2679  02B3  086D               	movf	_randx+1,w
  2680  02B4  00F3               	movwf	___lmul@multiplier+1
  2681  02B5  086C               	movf	_randx,w
  2682  02B6  00F2               	movwf	___lmul@multiplier
  2683  02B7  3041               	movlw	65
  2684  02B8  00F9               	movwf	___lmul@multiplicand+3
  2685  02B9  30C6               	movlw	198
  2686  02BA  00F8               	movwf	___lmul@multiplicand+2
  2687  02BB  304E               	movlw	78
  2688  02BC  00F7               	movwf	___lmul@multiplicand+1
  2689  02BD  306D               	movlw	109
  2690  02BE  00F6               	movwf	___lmul@multiplicand
  2691  02BF  120A  118A  21CE  120A  118A  	fcall	___lmul
  2692  02C4  0875               	movf	?___lmul+3,w
  2693  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  2694  02C6  1303               	bcf	3,6	;RP1=0, select bank0
  2695  02C7  00EF               	movwf	_randx+3
  2696  02C8  0874               	movf	?___lmul+2,w
  2697  02C9  00EE               	movwf	_randx+2
  2698  02CA  0873               	movf	?___lmul+1,w
  2699  02CB  00ED               	movwf	_randx+1
  2700  02CC  0872               	movf	?___lmul,w
  2701  02CD  00EC               	movwf	_randx
  2702  02CE                     l1055:	
  2703  02CE  3039               	movlw	57
  2704  02CF  07EC               	addwf	_randx,f
  2705  02D0  3030               	movlw	48
  2706  02D1  1803               	skipnc
  2707  02D2  3031               	movlw	49
  2708  02D3  07ED               	addwf	_randx+1,f
  2709  02D4  3000               	movlw	0
  2710  02D5  1803               	skipnc
  2711  02D6  3001               	movlw	1
  2712  02D7  07EE               	addwf	_randx+2,f
  2713  02D8  3000               	movlw	0
  2714  02D9  1803               	skipnc
  2715  02DA  3001               	movlw	1
  2716  02DB  07EF               	addwf	_randx+3,f
  2717  02DC                     l1057:	
  2718  02DC  086C               	movf	_randx,w
  2719  02DD  00D1               	movwf	??_rand
  2720  02DE  086D               	movf	_randx+1,w
  2721  02DF  00D2               	movwf	??_rand+1
  2722  02E0  086E               	movf	_randx+2,w
  2723  02E1  00D3               	movwf	??_rand+2
  2724  02E2  086F               	movf	_randx+3,w
  2725  02E3  00D4               	movwf	??_rand+3
  2726  02E4  3010               	movlw	16
  2727  02E5  00D5               	movwf	??_rand+4
  2728  02E6                     u495:	
  2729  02E6  0D54               	rlf	??_rand+3,w
  2730  02E7  0CD4               	rrf	??_rand+3,f
  2731  02E8  0CD3               	rrf	??_rand+2,f
  2732  02E9  0CD2               	rrf	??_rand+1,f
  2733  02EA  0CD1               	rrf	??_rand,f
  2734  02EB                     u490:	
  2735  02EB  0BD5               	decfsz	??_rand+4,f
  2736  02EC  2AE6               	goto	u495
  2737  02ED  30FF               	movlw	255
  2738  02EE  0551               	andwf	??_rand,w
  2739  02EF  00CF               	movwf	?_rand
  2740  02F0  307F               	movlw	127
  2741  02F1  0552               	andwf	??_rand+1,w
  2742  02F2  00D0               	movwf	?_rand+1
  2743  02F3                     l699:	
  2744  02F3  0008               	return
  2745  02F4                     __end_of_rand:	
  2746                           
  2747                           	psect	text19
  2748  01CE                     __ptext19:	
  2749 ;; *************** function ___lmul *****************
  2750 ;; Defined at:
  2751 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  2752 ;; Parameters:    Size  Location     Type
  2753 ;;  multiplier      4    2[COMMON] unsigned long 
  2754 ;;  multiplicand    4    6[COMMON] unsigned long 
  2755 ;; Auto vars:     Size  Location     Type
  2756 ;;  product         4    0[BANK0 ] unsigned long 
  2757 ;; Return value:  Size  Location     Type
  2758 ;;                  4    2[COMMON] unsigned long 
  2759 ;; Registers used:
  2760 ;;		wreg, status,2, status,0
  2761 ;; Tracked objects:
  2762 ;;		On entry : 0/0
  2763 ;;		On exit  : 0/0
  2764 ;;		Unchanged: 0/0
  2765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2766 ;;      Params:         8       0       0       0       0
  2767 ;;      Locals:         0       4       0       0       0
  2768 ;;      Temps:          1       0       0       0       0
  2769 ;;      Totals:         9       4       0       0       0
  2770 ;;Total ram usage:       13 bytes
  2771 ;; Hardware stack levels used:    1
  2772 ;; Hardware stack levels required when called:    1
  2773 ;; This function calls:
  2774 ;;		Nothing
  2775 ;; This function is called by:
  2776 ;;		_rand
  2777 ;; This function uses a non-reentrant model
  2778 ;;
  2779                           
  2780                           
  2781                           ;psect for function ___lmul
  2782  01CE                     ___lmul:	
  2783  01CE                     l1033:	
  2784                           ;incstack = 0
  2785                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2786                           
  2787  01CE  3000               	movlw	0
  2788  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  2789  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  2790  01D1  00CE               	movwf	___lmul@product+3
  2791  01D2  3000               	movlw	0
  2792  01D3  00CD               	movwf	___lmul@product+2
  2793  01D4  3000               	movlw	0
  2794  01D5  00CC               	movwf	___lmul@product+1
  2795  01D6  3000               	movlw	0
  2796  01D7  00CB               	movwf	___lmul@product
  2797  01D8                     l1035:	
  2798  01D8  1C72               	btfss	___lmul@multiplier,0
  2799  01D9  29DB               	goto	u441
  2800  01DA  29DC               	goto	u440
  2801  01DB                     u441:	
  2802  01DB  29F5               	goto	l1039
  2803  01DC                     u440:	
  2804  01DC                     l1037:	
  2805  01DC  0876               	movf	___lmul@multiplicand,w
  2806  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  2807  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  2808  01DF  07CB               	addwf	___lmul@product,f
  2809  01E0  0877               	movf	___lmul@multiplicand+1,w
  2810  01E1  1103               	clrz
  2811  01E2  1803               	skipnc
  2812  01E3  3E01               	addlw	1
  2813  01E4  1903               	skipnz
  2814  01E5  29E7               	goto	u451
  2815  01E6  07CC               	addwf	___lmul@product+1,f
  2816  01E7                     u451:	
  2817  01E7  0878               	movf	___lmul@multiplicand+2,w
  2818  01E8  1103               	clrz
  2819  01E9  1803               	skipnc
  2820  01EA  3E01               	addlw	1
  2821  01EB  1903               	skipnz
  2822  01EC  29EE               	goto	u452
  2823  01ED  07CD               	addwf	___lmul@product+2,f
  2824  01EE                     u452:	
  2825  01EE  0879               	movf	___lmul@multiplicand+3,w
  2826  01EF  1103               	clrz
  2827  01F0  1803               	skipnc
  2828  01F1  3E01               	addlw	1
  2829  01F2  1903               	skipnz
  2830  01F3  29F5               	goto	u453
  2831  01F4  07CE               	addwf	___lmul@product+3,f
  2832  01F5                     u453:	
  2833  01F5                     l1039:	
  2834  01F5  3001               	movlw	1
  2835  01F6  00FA               	movwf	??___lmul
  2836  01F7                     u465:	
  2837  01F7  1003               	clrc
  2838  01F8  0DF6               	rlf	___lmul@multiplicand,f
  2839  01F9  0DF7               	rlf	___lmul@multiplicand+1,f
  2840  01FA  0DF8               	rlf	___lmul@multiplicand+2,f
  2841  01FB  0DF9               	rlf	___lmul@multiplicand+3,f
  2842  01FC  0BFA               	decfsz	??___lmul,f
  2843  01FD  29F7               	goto	u465
  2844  01FE                     l1041:	
  2845  01FE  3001               	movlw	1
  2846  01FF                     u475:	
  2847  01FF  1003               	clrc
  2848  0200  0CF5               	rrf	___lmul@multiplier+3,f
  2849  0201  0CF4               	rrf	___lmul@multiplier+2,f
  2850  0202  0CF3               	rrf	___lmul@multiplier+1,f
  2851  0203  0CF2               	rrf	___lmul@multiplier,f
  2852  0204  3EFF               	addlw	-1
  2853  0205  1D03               	skipz
  2854  0206  29FF               	goto	u475
  2855  0207  0875               	movf	___lmul@multiplier+3,w
  2856  0208  0474               	iorwf	___lmul@multiplier+2,w
  2857  0209  0473               	iorwf	___lmul@multiplier+1,w
  2858  020A  0472               	iorwf	___lmul@multiplier,w
  2859  020B  1D03               	skipz
  2860  020C  2A0E               	goto	u481
  2861  020D  2A0F               	goto	u480
  2862  020E                     u481:	
  2863  020E  29D8               	goto	l1035
  2864  020F                     u480:	
  2865  020F                     l1043:	
  2866  020F  1283               	bcf	3,5	;RP0=0, select bank0
  2867  0210  1303               	bcf	3,6	;RP1=0, select bank0
  2868  0211  084E               	movf	___lmul@product+3,w
  2869  0212  00F5               	movwf	?___lmul+3
  2870  0213  084D               	movf	___lmul@product+2,w
  2871  0214  00F4               	movwf	?___lmul+2
  2872  0215  084C               	movf	___lmul@product+1,w
  2873  0216  00F3               	movwf	?___lmul+1
  2874  0217  084B               	movf	___lmul@product,w
  2875  0218  00F2               	movwf	?___lmul
  2876  0219                     l257:	
  2877  0219  0008               	return
  2878  021A                     __end_of___lmul:	
  2879                           
  2880                           	psect	text20
  2881  0173                     __ptext20:	
  2882 ;; *************** function ___awmod *****************
  2883 ;; Defined at:
  2884 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  2885 ;; Parameters:    Size  Location     Type
  2886 ;;  divisor         2   11[BANK0 ] int 
  2887 ;;  dividend        2   13[BANK0 ] int 
  2888 ;; Auto vars:     Size  Location     Type
  2889 ;;  sign            1   16[BANK0 ] unsigned char 
  2890 ;;  counter         1   15[BANK0 ] unsigned char 
  2891 ;; Return value:  Size  Location     Type
  2892 ;;                  2   11[BANK0 ] int 
  2893 ;; Registers used:
  2894 ;;		wreg, status,2, status,0
  2895 ;; Tracked objects:
  2896 ;;		On entry : 0/0
  2897 ;;		On exit  : 0/0
  2898 ;;		Unchanged: 0/0
  2899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2900 ;;      Params:         0       4       0       0       0
  2901 ;;      Locals:         0       2       0       0       0
  2902 ;;      Temps:          1       0       0       0       0
  2903 ;;      Totals:         1       6       0       0       0
  2904 ;;Total ram usage:        7 bytes
  2905 ;; Hardware stack levels used:    1
  2906 ;; Hardware stack levels required when called:    1
  2907 ;; This function calls:
  2908 ;;		Nothing
  2909 ;; This function is called by:
  2910 ;;		_checkCount
  2911 ;; This function uses a non-reentrant model
  2912 ;;
  2913                           
  2914                           
  2915                           ;psect for function ___awmod
  2916  0173                     ___awmod:	
  2917  0173                     l1091:	
  2918                           ;incstack = 0
  2919                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2920                           
  2921  0173  1283               	bcf	3,5	;RP0=0, select bank0
  2922  0174  1303               	bcf	3,6	;RP1=0, select bank0
  2923  0175  01DB               	clrf	___awmod@sign
  2924  0176                     l1093:	
  2925  0176  1FD9               	btfss	___awmod@dividend+1,7
  2926  0177  2979               	goto	u541
  2927  0178  297A               	goto	u540
  2928  0179                     u541:	
  2929  0179  2981               	goto	l1099
  2930  017A                     u540:	
  2931  017A                     l1095:	
  2932  017A  09D8               	comf	___awmod@dividend,f
  2933  017B  09D9               	comf	___awmod@dividend+1,f
  2934  017C  0AD8               	incf	___awmod@dividend,f
  2935  017D  1903               	skipnz
  2936  017E  0AD9               	incf	___awmod@dividend+1,f
  2937  017F                     l1097:	
  2938  017F  01DB               	clrf	___awmod@sign
  2939  0180  0ADB               	incf	___awmod@sign,f
  2940  0181                     l1099:	
  2941  0181  1FD7               	btfss	___awmod@divisor+1,7
  2942  0182  2984               	goto	u551
  2943  0183  2985               	goto	u550
  2944  0184                     u551:	
  2945  0184  298A               	goto	l1103
  2946  0185                     u550:	
  2947  0185                     l1101:	
  2948  0185  09D6               	comf	___awmod@divisor,f
  2949  0186  09D7               	comf	___awmod@divisor+1,f
  2950  0187  0AD6               	incf	___awmod@divisor,f
  2951  0188  1903               	skipnz
  2952  0189  0AD7               	incf	___awmod@divisor+1,f
  2953  018A                     l1103:	
  2954  018A  0856               	movf	___awmod@divisor,w
  2955  018B  0457               	iorwf	___awmod@divisor+1,w
  2956  018C  1903               	btfsc	3,2
  2957  018D  298F               	goto	u561
  2958  018E  2990               	goto	u560
  2959  018F                     u561:	
  2960  018F  29BF               	goto	l1121
  2961  0190                     u560:	
  2962  0190                     l1105:	
  2963  0190  01DA               	clrf	___awmod@counter
  2964  0191  0ADA               	incf	___awmod@counter,f
  2965  0192  299E               	goto	l1111
  2966  0193                     l1107:	
  2967  0193  3001               	movlw	1
  2968  0194                     u575:	
  2969  0194  1003               	clrc
  2970  0195  0DD6               	rlf	___awmod@divisor,f
  2971  0196  0DD7               	rlf	___awmod@divisor+1,f
  2972  0197  3EFF               	addlw	-1
  2973  0198  1D03               	skipz
  2974  0199  2994               	goto	u575
  2975  019A                     l1109:	
  2976  019A  3001               	movlw	1
  2977  019B  00FB               	movwf	??___awmod
  2978  019C  087B               	movf	??___awmod,w
  2979  019D  07DA               	addwf	___awmod@counter,f
  2980  019E                     l1111:	
  2981  019E  1FD7               	btfss	___awmod@divisor+1,7
  2982  019F  29A1               	goto	u581
  2983  01A0  29A2               	goto	u580
  2984  01A1                     u581:	
  2985  01A1  2993               	goto	l1107
  2986  01A2                     u580:	
  2987  01A2                     l1113:	
  2988  01A2  0857               	movf	___awmod@divisor+1,w
  2989  01A3  0259               	subwf	___awmod@dividend+1,w
  2990  01A4  1D03               	skipz
  2991  01A5  29A8               	goto	u595
  2992  01A6  0856               	movf	___awmod@divisor,w
  2993  01A7  0258               	subwf	___awmod@dividend,w
  2994  01A8                     u595:	
  2995  01A8  1C03               	skipc
  2996  01A9  29AB               	goto	u591
  2997  01AA  29AC               	goto	u590
  2998  01AB                     u591:	
  2999  01AB  29B2               	goto	l1117
  3000  01AC                     u590:	
  3001  01AC                     l1115:	
  3002  01AC  0856               	movf	___awmod@divisor,w
  3003  01AD  02D8               	subwf	___awmod@dividend,f
  3004  01AE  0857               	movf	___awmod@divisor+1,w
  3005  01AF  1C03               	skipc
  3006  01B0  03D9               	decf	___awmod@dividend+1,f
  3007  01B1  02D9               	subwf	___awmod@dividend+1,f
  3008  01B2                     l1117:	
  3009  01B2  3001               	movlw	1
  3010  01B3                     u605:	
  3011  01B3  1003               	clrc
  3012  01B4  0CD7               	rrf	___awmod@divisor+1,f
  3013  01B5  0CD6               	rrf	___awmod@divisor,f
  3014  01B6  3EFF               	addlw	-1
  3015  01B7  1D03               	skipz
  3016  01B8  29B3               	goto	u605
  3017  01B9                     l1119:	
  3018  01B9  3001               	movlw	1
  3019  01BA  02DA               	subwf	___awmod@counter,f
  3020  01BB  1D03               	btfss	3,2
  3021  01BC  29BE               	goto	u611
  3022  01BD  29BF               	goto	u610
  3023  01BE                     u611:	
  3024  01BE  29A2               	goto	l1113
  3025  01BF                     u610:	
  3026  01BF                     l1121:	
  3027  01BF  085B               	movf	___awmod@sign,w
  3028  01C0  1903               	btfsc	3,2
  3029  01C1  29C3               	goto	u621
  3030  01C2  29C4               	goto	u620
  3031  01C3                     u621:	
  3032  01C3  29C9               	goto	l1125
  3033  01C4                     u620:	
  3034  01C4                     l1123:	
  3035  01C4  09D8               	comf	___awmod@dividend,f
  3036  01C5  09D9               	comf	___awmod@dividend+1,f
  3037  01C6  0AD8               	incf	___awmod@dividend,f
  3038  01C7  1903               	skipnz
  3039  01C8  0AD9               	incf	___awmod@dividend+1,f
  3040  01C9                     l1125:	
  3041  01C9  0859               	movf	___awmod@dividend+1,w
  3042  01CA  00D7               	movwf	?___awmod+1
  3043  01CB  0858               	movf	___awmod@dividend,w
  3044  01CC  00D6               	movwf	?___awmod
  3045  01CD                     l409:	
  3046  01CD  0008               	return
  3047  01CE                     __end_of___awmod:	
  3048                           
  3049                           	psect	text21
  3050  0367                     __ptext21:	
  3051 ;; *************** function _Timer0_ISR *****************
  3052 ;; Defined at:
  3053 ;;		line 85 in file "mainsource.c"
  3054 ;; Parameters:    Size  Location     Type
  3055 ;;		None
  3056 ;; Auto vars:     Size  Location     Type
  3057 ;;		None
  3058 ;; Return value:  Size  Location     Type
  3059 ;;                  1    wreg      void 
  3060 ;; Registers used:
  3061 ;;		status,2
  3062 ;; Tracked objects:
  3063 ;;		On entry : 0/0
  3064 ;;		On exit  : 0/0
  3065 ;;		Unchanged: 0/0
  3066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3067 ;;      Params:         0       0       0       0       0
  3068 ;;      Locals:         0       0       0       0       0
  3069 ;;      Temps:          2       0       0       0       0
  3070 ;;      Totals:         2       0       0       0       0
  3071 ;;Total ram usage:        2 bytes
  3072 ;; Hardware stack levels used:    1
  3073 ;; This function calls:
  3074 ;;		Nothing
  3075 ;; This function is called by:
  3076 ;;		Interrupt level 1
  3077 ;; This function uses a non-reentrant model
  3078 ;;
  3079                           
  3080                           
  3081                           ;psect for function _Timer0_ISR
  3082  0367                     _Timer0_ISR:	
  3083  0367                     i1l1243:	
  3084                           
  3085                           ;mainsource.c: 87:     if(INTCONbits.TMR0IF){
  3086  0367  1D0B               	btfss	11,2	;volatile
  3087  0368  2B6A               	goto	u80_21
  3088  0369  2B6B               	goto	u80_20
  3089  036A                     u80_21:	
  3090  036A  2B71               	goto	i1l89
  3091  036B                     u80_20:	
  3092  036B                     i1l1245:	
  3093                           
  3094                           ;mainsource.c: 88:         INTCONbits.TMR0IF=0;
  3095  036B  110B               	bcf	11,2	;volatile
  3096                           
  3097                           ;mainsource.c: 89:         con.check_count = 1;
  3098  036C  1283               	bcf	3,5	;RP0=0, select bank0
  3099  036D  1303               	bcf	3,6	;RP1=0, select bank0
  3100  036E  01B8               	clrf	_con+8
  3101  036F  0AB8               	incf	_con+8,f
  3102                           
  3103                           ;mainsource.c: 90:     }
  3104  0370  2B86               	goto	i1l94
  3105  0371                     i1l89:	
  3106                           ;mainsource.c: 91:     else if(INTCONbits.RBIF){
  3107                           
  3108  0371  1C0B               	btfss	11,0	;volatile
  3109  0372  2B74               	goto	u81_21
  3110  0373  2B75               	goto	u81_20
  3111  0374                     u81_21:	
  3112  0374  2B86               	goto	i1l94
  3113  0375                     u81_20:	
  3114  0375                     i1l1247:	
  3115                           
  3116                           ;mainsource.c: 92:         if(PORTBbits.RB5 == 0){
  3117  0375  1283               	bcf	3,5	;RP0=0, select bank0
  3118  0376  1303               	bcf	3,6	;RP1=0, select bank0
  3119  0377  1A86               	btfsc	6,5	;volatile
  3120  0378  2B7A               	goto	u82_21
  3121  0379  2B7B               	goto	u82_20
  3122  037A                     u82_21:	
  3123  037A  2B7E               	goto	i1l1253
  3124  037B                     u82_20:	
  3125  037B                     i1l1249:	
  3126                           
  3127                           ;mainsource.c: 93:             con.derecha = 1;
  3128  037B  01B6               	clrf	_con+6
  3129  037C  0AB6               	incf	_con+6,f
  3130  037D                     i1l1251:	
  3131                           
  3132                           ;mainsource.c: 94:             con.izquierda = 0;
  3133  037D  01B7               	clrf	_con+7
  3134  037E                     i1l1253:	
  3135                           
  3136                           ;mainsource.c: 96:         if(PORTBbits.RB4 == 0){
  3137  037E  1A06               	btfsc	6,4	;volatile
  3138  037F  2B81               	goto	u83_21
  3139  0380  2B82               	goto	u83_20
  3140  0381                     u83_21:	
  3141  0381  2B85               	goto	i1l1259
  3142  0382                     u83_20:	
  3143  0382                     i1l1255:	
  3144                           
  3145                           ;mainsource.c: 97:             con.derecha = 0;
  3146  0382  01B6               	clrf	_con+6
  3147  0383                     i1l1257:	
  3148                           
  3149                           ;mainsource.c: 98:             con.izquierda = 1;
  3150  0383  01B7               	clrf	_con+7
  3151  0384  0AB7               	incf	_con+7,f
  3152  0385                     i1l1259:	
  3153                           
  3154                           ;mainsource.c: 100:         INTCONbits.RBIF=0;
  3155  0385  100B               	bcf	11,0	;volatile
  3156  0386                     i1l94:	
  3157  0386  0871               	movf	??_Timer0_ISR+1,w
  3158  0387  008A               	movwf	10
  3159  0388  0E70               	swapf	??_Timer0_ISR^(0+4294967168),w
  3160  0389  0083               	movwf	3
  3161  038A  0EFE               	swapf	btemp,f
  3162  038B  0E7E               	swapf	btemp,w
  3163  038C  0009               	retfie
  3164  038D                     __end_of_Timer0_ISR:	
  3165  007E                     btemp	set	126	;btemp
  3166  007E                     wtemp0	set	126
  3167                           
  3168                           	psect	intentry
  3169  0004                     __pintentry:	
  3170                           ;incstack = 0
  3171                           ; Regs used in _Timer0_ISR: [status,2]
  3172                           
  3173  0004                     interrupt_function:	
  3174  007E                     saved_w	set	btemp
  3175  0004  00FE               	movwf	btemp
  3176  0005  0E03               	swapf	3,w
  3177  0006  00F0               	movwf	??_Timer0_ISR
  3178  0007  080A               	movf	10,w
  3179  0008  00F1               	movwf	??_Timer0_ISR+1
  3180  0009  120A  118A  2B67   	ljmp	_Timer0_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        52
    BSS         59
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     33      80
    BANK1            80      0      64
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(1) Largest target is 16
		 -> ficha(BANK0[16]), 

    memset@p	PTR unsigned char  size(1) Largest target is 16
		 -> ficha(BANK0[16]), 

    sp__memset	PTR void  size(1) Largest target is 16
		 -> ficha(BANK0[16]), 

    updateScreen@screen	PTR unsigned int  size(1) Largest target is 16
		 -> pantalla(BANK1[16]), 


Critical Paths under _main in COMMON

    _updateScreen->_setFilas
    _drawFigure->_memset
    _checkCount->___awmod
    _rand->___lmul

Critical Paths under _Timer0_ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_checkCount
    _checkCount->___awmod
    _rand->___lmul
    ___awmod->_rand

Critical Paths under _Timer0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer0_ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    11      4    1450
                                             18 BANK0     15    11      4
                         _checkCount
                        _drawBground
                         _drawFigure
                     _init_interrupt
                         _init_pines
                         _init_timer
                       _updateScreen
 ---------------------------------------------------------------------------------
 (1) _updateScreen                                         5     5      0     364
                                              0 BANK0      5     5      0
                           _setFilas
                    _shiftBitColumna
 ---------------------------------------------------------------------------------
 (2) _shiftBitColumna                                      2     2      0      22
                                              2 COMMON     2     2      0
                     _latchClock_Col
                     _latchClock_Fil
                     _shiftClock_Col
 ---------------------------------------------------------------------------------
 (3) _shiftClock_Col                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _latchClock_Fil                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _latchClock_Col                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setFilas                                            10     8      2     265
                                              2 COMMON    10     8      2
                     _shiftClock_Fil
 ---------------------------------------------------------------------------------
 (3) _shiftClock_Fil                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_timer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_pines                                           0     0      0       0
                     _init_pines_col
                     _init_pines_fil
                      _init_pines_in
 ---------------------------------------------------------------------------------
 (2) _init_pines_in                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_pines_fil                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_pines_col                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_interrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _drawFigure                                           5     5      0     281
                                              0 BANK0      5     5      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               7     3      4     281
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _drawBground                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkCount                                           1     1      0     692
                                             17 BANK0      1     1      0
                            ___awmod
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 7     5      2     244
                                              4 BANK0      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8     244
                                              2 COMMON     9     1      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                             11 COMMON     1     1      0
                                             11 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Timer0_ISR                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _checkCount
     ___awmod
       _rand (ARG)
         ___lmul
     _rand
       ___lmul
   _drawBground
   _drawFigure
     _memset
   _init_interrupt
   _init_pines
     _init_pines_col
     _init_pines_fil
     _init_pines_in
   _init_timer
   _updateScreen
     _setFilas
       _shiftClock_Fil
     _shiftBitColumna
       _latchClock_Col
       _latchClock_Fil
       _shiftClock_Col

 _Timer0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      40       7       80.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     21      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      9C      12        0.0%
ABS                  0      0      9C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat May 02 16:23:31 2020

                       pc 0002               __CFG_CP$OFF 0000          ??_init_interrupt 0072  
                      l21 0447                        l30 0421                        l24 043C  
                      l33 0457                        l27 0411                        l36 042F  
                      l84 02AC                        l99 0463                        fsr 0004  
        ??_init_pines_col 0072          ??_init_pines_fil 0072                       l102 0469  
                     l114 046E                       l107 0336                       l117 045D  
                     l125 03EB                       l151 03AF                       l148 0264  
                     l157 0100                       l409 01CD                       l257 0219  
                     l691 03CF                       l699 02F3                       u500 0305  
                     u501 0304                       u440 01DC                       u441 01DB  
                     u505 0301                       u610 01BF                       u530 03CF  
                     u514 0310              __CFG_CPD$OFF 0000                       u611 01BE  
                     u451 01E7                       u531 03CE                       u515 030D  
                     u620 01C4                       u540 017A                       u452 01EE  
                     u524 031D                       u621 01C3                       u605 01B3  
                     u541 0179                       u453 01F5                       u525 031A  
                     u550 0185                       u630 026C                       u551 0184  
                     u631 026B                       u560 0190                       u480 020F  
                     u640 027B                       u561 018F                       u481 020E  
                     u465 01F7                       u641 027A                       u705 0072  
                     u490 02EB                       u650 028D                       u714 0085  
                     u475 01FF                       u651 028C                       u715 0082  
                     u580 01A2                       u660 0052                       u581 01A1  
                     u725 0098                       u661 0051                       u590 01AC  
                     u734 00AA                       u670 0058                       u591 01AB  
                     u575 0194                       u495 02E6                       u735 00A7  
                     u671 0057                       u680 0063                       u745 00BD  
                     u681 0062                       u754 00CF                       u690 0068  
                     u595 01A8                       u755 00CC                       u691 0067  
                     u780 0223                       u765 00E2                       u781 0222  
                     u774 00F4                       u790 0169                       u775 00F1  
                     u791 0168                       u795 0165                       _con 0030  
                     fsr0 0004                       indf 0000              ___awmod@sign 005B  
            __CFG_FOSC$XT 0000              __CFG_LVP$OFF 0000                      l1101 0185  
                    l1111 019E                      l1103 018A                      l1031 0458  
                    l1113 01A2                      l1105 0190                      l1121 01BF  
                    l1041 01FE                      l1033 01CE                      l1025 045E  
                    l1201 0223                      l1123 01C4                      l1115 01AC  
                    l1107 0193                      l1043 020F                      l1035 01D8  
                    l1131 0450                      l1051 03FF                      l1027 0464  
                    l1211 025E                      l1203 0225                      l1125 01C9  
                    l1117 01B2                      l1109 019A                      l1037 01DC  
                    l1053 02AD                      l1141 0428                      l1133 0422  
                    l1061 02F4                      l1029 046A                      l1205 023C  
                    l1221 0118                      l1213 0101                      l1119 01B9  
                    l1039 01F5                      l1055 02CE                      l1151 038D  
                    l1047 043D                      l1143 042B                      l1135 0425  
                    l1071 032F                      l1063 02F8                      l1207 0243  
                    l1223 011C                      l1215 0110                      l1057 02DC  
                    l1161 0284                      l1153 0265                      l1049 0430  
                    l1129 0412                      l1145 042C                      l1137 0426  
                    l1081 03E6                      l1209 0247                      l1241 0169  
                    l1225 0121                      l1217 0110                      l1091 0173  
                    l1163 0286                      l1171 02AB                      l1155 026C  
                    l1083 03B1                      l1147 042D                      l1139 0427  
                    l1067 0306                      l1075 03D1                      l1235 012F  
                    l1227 0126                      l1219 0114                      l1093 0176  
                    l1165 0288                      l1157 027B                      l1085 03B6  
                    l1181 005C                      l1173 003E                      l1149 042E  
                    l1069 032A                      l1077 03DC                      l1237 0156  
                    l1229 012B                      l1095 017A                      l1167 028D  
                    l1159 0280                      l1087 03BD                      l1191 006B  
                    l1183 005E                      l1175 004B                      l1079 03E1  
                    l1239 015C                      l1097 017F                      l1169 0291  
                    l1089 03C1                      l1193 0091                      l1185 0063  
                    l1177 0052                      l1099 0181                      l1195 00B6  
                    l1187 0068                      l1179 0058                      l1197 00DB  
                    l1189 006A                      l1199 021D                      i1l94 0386  
                    i1l89 0371                      _TMR0 0001              __CFG_WRT$OFF 0000  
                    _main 0101                      _rand 02AD                      btemp 007E  
           __CFG_BOREN$ON 0000                      start 000C        shiftBitColumna@bit 0073  
                   ?_main 005D                     ?_rand 004F             __CFG_WDTE$OFF 0000  
         __end_of___awmod 01CE                     u80_20 036B                     u80_21 036A  
                   u81_20 0375                     u81_21 0374                     u82_20 037B  
                   u82_21 037A                     u83_20 0382                     u83_21 0381  
     ___lmul@multiplicand 0076                     _ficha 003B                     _fondo 0020  
                   _randx 006C                     main@i 006A                     pclath 000A  
                   status 0003                     wtemp0 007E           __initialization 000F  
            __end_of_main 0173              __end_of_rand 02F4            _latchClock_Fil 045E  
          _latchClock_Col 046A   __size_of_shiftClock_Fil 0006   __size_of_shiftClock_Col 0006  
                  ??_main 0061                    ??_rand 0051                    i1l1251 037D  
                  i1l1243 0367                    i1l1253 037E                    i1l1245 036B  
                  i1l1255 0382                    i1l1247 0375                    i1l1257 0383  
                  i1l1249 037B                    i1l1259 0385            __CFG_PWRTE$OFF 0000  
    __size_of_drawBground 0023                _Timer0_ISR 0367    __end_of_latchClock_Col 046F  
  __end_of_latchClock_Fil 0464                    ___lmul 01CE                 ??___awmod 007B  
                  _memset 03B0           ___awmod@divisor 0056           ___awmod@counter 005A  
        __end_of_setFilas 0337    __size_of_init_pines_in 000B                    saved_w 007E  
 __end_of__initialization 003A  __size_of_shiftBitColumna 001C        updateScreen@screen 004F  
         ?_latchClock_Col 0070           ?_latchClock_Fil 0070            __pcstackCOMMON 0070  
            __pidataBANK0 046F              __pidataBANK1 0337            _OPTION_REGbits 0081  
              _checkCount 0265                __pbssBANK0 0020                __pbssBANK1 00D0  
           _init_pines_in 043D               ?_Timer0_ISR 0070                __pmaintext 0101  
                 ?___lmul 0072                __pintentry 0004            _shiftClock_Fil 0464  
          _shiftClock_Col 0458                   ?_memset 0072            ___lmul@product 004B  
              _drawFigure 003E            ?_init_pines_in 0070                 ?_setFilas 0072  
  __end_of_shiftClock_Fil 046A    __end_of_shiftClock_Col 045E           __size_of___lmul 004C  
                 ___awmod 0173         ??_shiftBitColumna 0072                _init_pines 0412  
              _init_timer 0422           __size_of_memset 0020                   __ptext1 021A  
                 __ptext2 03D0                   __ptext3 0458                   __ptext4 045E  
                 __ptext5 046A                   __ptext6 02F4                   __ptext7 0464  
                 __ptext8 0422                   __ptext9 0412                   _figuras 00A0  
        ___awmod@dividend 0058       __size_of_Timer0_ISR 0026   __size_of_init_interrupt 0008  
                 clrloop0 0449               ?_checkCount 0070      end_of_initialization 003A  
 __size_of_init_pines_col 0013   __size_of_init_pines_fil 000D                   memset@c 0072  
                 memset@n 0074                   memset@p 0078                ??_setFilas 0074  
         ?_shiftClock_Col 0070           ?_shiftClock_Fil 0070                _timerCount 0039  
               _PORTBbits 0006                 _PORTCbits 0007                 _PORTDbits 0008  
             ?_drawFigure 0070                 _TRISBbits 0086                 _TRISCbits 0087  
               _TRISDbits 0088           ??_init_pines_in 0072             ??_drawBground 0072  
        ??_latchClock_Col 0072          ??_latchClock_Fil 0072             ?_updateScreen 0070  
          __end_of___lmul 021A       __size_of_checkCount 0048               ?_init_pines 0070  
             ?_init_timer 0070            __end_of_memset 03D0       start_initialization 000F  
          ??_updateScreen 004B              ??_Timer0_ISR 0070       __size_of_drawFigure 00C3  
     __end_of_drawBground 03B0                  ??___lmul 007A         setFilas@reg_value 0072  
              init_fetch0 03EC               __pdataBANK0 006C               __pdataBANK1 00A0  
                ??_memset 0076                 ___latbits 0002             __pcstackBANK0 004B  
          _init_interrupt 0450        __end_of_Timer0_ISR 038D            _init_pines_fil 0430  
          _init_pines_col 03FF       __size_of_init_pines 0010           _shiftBitColumna 03D0  
     __size_of_init_timer 000E         __size_of_setFilas 0043                  ?___awmod 0056  
  __end_of_init_interrupt 0458    __end_of_init_pines_col 0412    __end_of_init_pines_fil 043D  
            ??_checkCount 005C         interrupt_function 0004               _drawBground 038D  
        ??_shiftClock_Col 0072          ??_shiftClock_Fil 0072                 clear_ram0 0448  
      __end_of_checkCount 02AD           ?_init_interrupt 0070              ??_drawFigure 004B  
    __end_of_updateScreen 0265           ?_init_pines_col 0070           ?_init_pines_fil 0070  
 __end_of_shiftBitColumna 03EC         ___lmul@multiplier 0072        __end_of_drawFigure 0101  
        __size_of___awmod 005B              ??_init_pines 0072              ??_init_timer 0072  
               setFilas@i 007A                  __ptext10 043D                  __ptext11 0430  
                __ptext20 0173                  __ptext12 03FF                  __ptext21 0367  
                __ptext13 0450                  __ptext14 003E                  __ptext15 03B0  
                __ptext16 038D                  __ptext17 0265                  __ptext18 02AD  
                __ptext19 01CE     __end_of_init_pines_in 0448             __size_of_main 0072  
           __size_of_rand 0047        __end_of_init_pines 0422        __end_of_init_timer 0430  
                _pantalla 00D0                  _setFilas 02F4                  main@argc 005D  
                main@argv 005F                _INTCONbits 000B                  init_ram0 03F0  
                memset@p1 0077          ?_shiftBitColumna 0070                  intlevel1 0000  
 __size_of_latchClock_Col 0005   __size_of_latchClock_Fil 0006     __size_of_updateScreen 004B  
            ?_drawBground 0070              _updateScreen 021A  
